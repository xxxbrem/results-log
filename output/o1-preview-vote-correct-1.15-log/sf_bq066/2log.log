2025-01-16 06:16:53 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:18:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:18:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:18:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:18:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:18:19 - snowflake.connector.connection - INFO - closed
2025-01-16 06:18:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:18:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:18:56 - root - INFO - The error message you're encountering indicates that the SQL session does not know which database to use for your query. This happens when a default database isn't set for the session, and the table reference isn't fully qualified with the database name.

To resolve this issue, you have two options:

---

### **Option 1: Specify the Database in Your Query**

Modify your SQL query to include the database name in the fully qualified table name. Based on the table structure provided, your database name is `"SDOH"`. So your query should be:

```sql
SELECT DISTINCT "Year"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

---

### **Option 2: Set the Default Database for Your Session**

Before running your query, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT DISTINCT "Year"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

---

### **Explanation**

The error occurs because the SQL session does not have a current database specified. The session doesn't know where to find the `"SDOH_CDC_WONDER_NATALITY"` schema and the `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"` table without knowing the database context.

By either fully qualifying your table name with the database, schema, and table (as in Option 1), or by setting the default database for your session (as in Option 2), the SQL engine can locate the table and execute your query successfully.

---

### **Additional Information**

In the previous queries I provided, I inadvertently omitted the database name in the fully qualified table names. Here's how you can adjust the queries to include the database name:

1. **List Available Years in Natality Data:**

   ```sql
   SELECT DISTINCT "Year"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
   ```

2. **Check Values of Maternal Morbidity Indicator:**

   ```sql
   SELECT DISTINCT "Maternal_Morbidity_YN"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
   ```

3. **Total Births Without Maternal Morbidity per County for 2016:**

   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

   *(Continue adjusting the rest of the queries in a similar manner by adding the database name at the beginning.)*

---

### **Summary**

- **Option 1:** Include the database name `"SDOH"` in your query to fully qualify the table name.
- **Option 2:** Use the `USE DATABASE` command to set `"SDOH"` as your current database for the session.

By addressing the error in this way, you should be able to execute your queries successfully and continue with your analysis.

---

**Note:** Always ensure that your SQL queries include the necessary context for the database engine to execute them properly. When working with multiple databases or when a session does not have a default database set, it's essential to fully qualify your table names with the database and schema.

If you have any more questions or need further assistance, feel free to ask!
2025-01-16 06:18:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:18:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:18:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:18:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 574
2025-01-16 06:18:57 - snowflake.connector.connection - INFO - closed
2025-01-16 06:18:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:18:57 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
01089,82
04013,411
06019,50
06059,289
06061,55
06075,119
06081,62
06083,45
06085,348
06097,66
08013,41
08031,171
08035,68
12086,141
12105,54
12127,37
13121,101
13135,62
15003,217
17031,1193
17097,107
17119,51
17167,49
17201,64
17999,424
18089,65
21067,44
21111,90
21999,365
22033,117
22071,70
24013,75
26081,60
26163,273
26999,319
29999,450
34007,100
34025,69
36005,160
39025,71
45999,154
48027,34
49057,54
30999,149
48187,13
24027,61
24510,129
25021,123
34011,59
34013,85
34023,103
34039,95
36001,82
36067,134
42003,334
42045,133
53033,561
55079,225
42101,328
40109,137
53011,92
46103,10
37097,31
27137,61
04027,64
12011,85
17043,158
22051,85
24999,68
25005,55
27037,86
32003,225
36013,52
39089,34
45079,55
48113,740
48121,61
53061,120
42071,245
12057,102
32031,64
53063,119
24031,152
08001,76
12099,115
13067,111
18057,49
29095,136
33015,45
34005,52
34031,95
34035,50
35013,160
36065,44
36999,403
37081,202
37999,383
38999,144
41067,126
42089,37
48141,126
48157,37
48999,657
49005,34
53067,49
55133,51
01073,50
25009,75
17019,45
49049,184
13089,66
12103,72
12095,96
34017,123
47999,273
08999,133
24033,148
25025,188
42107,105
36061,315
51999,252
34027,79
39061,315
20091,53
37133,58
06111,127
06067,235
06071,651
06013,252
02020,86
50007,52
05999,225
41047,70
26115,11
37089,11
26005,12
49053,13
12019,14
53015,16
09011,22
24015,23
01081,26
12111,28
39155,30
28999,230
36085,37
48439,245
02999,132
05007,53
36103,809
39035,351
06073,743
36059,290
35001,234
42007,67
33011,74
34021,66
06029,87
39095,92
39999,492
42133,54
09009,131
45007,64
09003,94
27123,141
20177,11
47009,12
18095,14
53057,15
13151,15
17099,16
18035,16
26147,16
13021,17
42095,20
29097,22
05119,23
55127,26
13073,26
26049,31
13185,35
11001,71
23031,28
23005,38
01125,43
18039,48
10005,48
12031,144
23999,59
34001,34
40143,62
40999,244
48029,186
48201,291
49999,103
06037,1105
39017,107
36055,231
36119,93
41005,64
47037,89
51087,37
36091,54
01097,76
08059,67
25013,63
19103,42
36071,41
25027,225
22999,194
12999,86
46999,122
53053,134
24005,112
29183,78
53005,145
56999,107
06001,267
34003,97
42129,67
41051,175
20999,229
27163,53
42069,11
13097,17
12109,18
37049,18
41043,22
42077,24
34015,48
34029,94
37183,120
48215,216
53035,37
55059,44
36063,86
10003,189
08005,121
38017,105
18003,68
45051,45
26125,188
16999,187
36029,448
49035,339
06095,64
17089,64
26161,72
04999,58
10001,53
37021,37
44007,139
45045,89
12101,64
01999,243
26099,161
27053,239
48085,74
16001,70
04019,197
55999,361
08041,83
36047,405
25023,91
31055,160
20173,85
36081,427
31109,100
39113,61
39049,476
39165,70
42999,478
45019,85
22063,34
18097,200
18999,396
19153,132
37067,80
12001,10
12053,10
37035,10
37155,10
51177,11
13045,11
12113,12
25003,12
42021,13
47163,13
06017,14
25999,14
37159,14
45083,14
12061,14
55117,14
23011,14
29071,15
30063,15
39023,15
35045,15
48355,15
18019,15
12005,15
04003,16
24017,16
41017,16
55063,16
28033,16
17091,16
12073,16
04025,17
37001,17
39003,17
39169,17
39029,17
48451,17
12085,18
12069,18
08101,19
37025,19
48257,19
48329,19
09013,20
13059,20
22103,20
28049,20
34041,20
54003,20
36111,20
06041,20
44003,20
15001,20
36089,20
04017,21
06055,21
06087,21
16055,21
23001,21
48381,21
16019,21
47125,21
45003,22
12033,23
17037,24
17115,24
24025,24
06099,24
18081,25
37019,25
39057,25
13063,25
26093,26
36045,26
01101,27
39099,27
39133,27
35043,28
42125,28
37057,28
36069,28
06113,29
13245,29
12115,30
22017,30
28047,31
48167,31
06023,31
48041,31
42079,32
54039,32
42085,32
19163,32
55139,32
05131,32
48339,33
37051,33
29019,33
39045,35
55009,35
08069,35
45091,36
05143,36
29077,38
29510,39
12021,40
36093,40
39041,40
17163,40
42055,40
13215,43
32999,43
36027,43
29099,43
04021,47
48309,47
48491,47
37129,47
37063,48
53077,48
47093,48
53999,264
35999,157
29189,166
09001,108
17197,158
48453,114
12097,10
42013,10
55073,10
12083,11
34037,15
26021,15
08077,16
12009,16
28059,16
39007,16
42081,16
01117,17
26017,17
35049,18
37085,19
45077,19
42001,20
27139,21
48039,21
25015,21
48423,22
09007,22
19113,23
37151,24
48375,24
18163,25
26139,25
41029,25
06107,27
42027,28
42075,28
26065,28
36007,31
30111,32
47165,36
26025,12
27171,23
48245,23
06007,25
09015,25
39103,32
48061,33
55087,36
27003,36
26121,38
45035,27
50999,69
17143,60
29047,60
31999,237
48303,116
42091,316
24003,55
21117,56
39173,34
55025,153
06999,137
33999,69
54999,213
41999,188
39093,57
47157,93
51153,49
19999,413
31153,49
26075,11
39139,12
51700,13
17093,14
20045,14
33017,15
47189,16
51041,17
12117,17
42043,17
06079,19
18127,19
37135,20
37101,21
48091,21
04005,22
55131,23
09005,23
24037,24
51107,24
48209,24
48139,26
12081,27
18063,27
55039,27
27145,27
36109,28
17179,29
18157,30
19193,30
26145,30
27109,30
34019,30
06047,31
46099,32
42041,33
42049,36
42017,36
41039,38
36083,40
55105,43
47149,43
06077,48
06065,223
06039,84
13999,455
26077,51
37119,195
27999,367
25017,217
49011,115
06053,75
53073,10
13077,11
44009,13
17111,18
22105,19
23019,19
13051,21
48441,22
19013,23
12091,24
34999,24
17161,26
0110

2025-01-16 06:18:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:18:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:18:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:18:58 - snowflake.connector.connection - INFO - closed
2025-01-16 06:18:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:19:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:19:38 - root - INFO - I'm sorry to hear you're still encountering the error:

```
Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a current database set, and your query doesn't fully qualify the table name with the database name. Let's address this step by step.

---

### **Understanding the Issue**

In your query:

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

- **Database Name:** Missing (should be `"SDOH"`)
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

The SQL engine requires the database name to locate the table unless a default database is set for the session.

---

### **Solution Options**

**Option 1: Include the Database Name in Your Query**

Modify your query to include the database name:

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

**Explanation:**

- **Fully Qualified Table Name:** `"SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`
  - **"SDOH"** is the database name.
  - **"SDOH_CDC_WONDER_NATALITY"** is the schema name.
  - **"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"** is the table name.

**Option 2: Set the Default Database for Your Session**

Before running your query, set the current database to `"SDOH"`:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

---

### **Why This Error Occurs**

The SQL session doesn't know which database to use because it's not specified in your query or set as the default for the session. By default, some SQL environments require you to either:

- Specify the database in your queries.
- Set a default database for your session.

---

### **Next Steps**

1. **Try Option 1:**

   - Update your query by adding the database name.

   ```sql
   SELECT DISTINCT "Maternal_Morbidity_YN"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
   ```

2. **If Option 1 Doesn't Work, Try Option 2:**

   - Set the default database before running your query.

   ```sql
   USE DATABASE "SDOH";

   SELECT DISTINCT "Maternal_Morbidity_YN"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
   ```

---

### **Additional Tips**

- **Ensure Correct Quotation Marks:**
  - Use double quotes `"` for identifiers if needed by your SQL dialect.
  - Be consistent with quotation marks to avoid syntax errors.

- **Check Database and Schema Names:**
  - Verify that `"SDOH"` is indeed your database name and that it exists.
  - Confirm that `"SDOH_CDC_WONDER_NATALITY"` is the correct schema name.

- **Case Sensitivity:**
  - SQL identifiers can be case-sensitive depending on the database. Use the exact case as provided.

---

### **Example Execution**

**Using Fully Qualified Table Name:**

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

**Using Default Database:**

```sql
USE DATABASE "SDOH";

SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
```

---

### **Conclusion**

By ensuring that your query includes the database name or by setting the default database for your session, you should be able to resolve the error and execute your query successfully.

If you continue to experience issues or have any more questions, please let me know, and I'll be happy to assist further.
2025-01-16 06:19:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:19:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:19:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:19:39 - snowflake.connector.connection - INFO - closed
2025-01-16 06:19:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:20:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:20:41 - root - INFO - The error message you're encountering:

```
000008 (0A000): 01b9be7b-0004-7b0e-0001-11c300c9fa46: Actual statement count 2 did not match the desired statement count 1.
```

indicates that the SQL execution environment expects exactly **one statement**, but it detected **two statements** in your input.

This can occur when:

- **Multiple Statements in One Execution:** You're trying to execute more than one SQL statement in a single execution, but the SQL environment allows only one statement per execution.

- **Unintended Statement Separation:** There might be unintended characters (like semicolons `;` or newlines) causing the parser to interpret your input as multiple statements.

---

### **Understanding the Issue**

In your case, you might have:

- **Used `USE DATABASE` and the `SELECT` query together in one execution block.**
  
  For example:

  ```sql
  USE DATABASE "SDOH";

  SELECT DISTINCT "Maternal_Morbidity_YN"
  FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
  ```

  This is **two statements**, and in an environment that requires **one statement per execution**, this would cause the error.

- **Multiple Semicolons in a Single Line:**

  If you concatenated the commands:

  ```sql
  USE DATABASE "SDOH"; SELECT DISTINCT "Maternal_Morbidity_YN" FROM ...
  ```

  The semicolon `;` separates them into two statements.

---

### **Solutions**

#### **Option 1: Execute One Statement at a Time**

If your SQL environment only permits one statement per execution, you need to execute each statement separately.

1. **First Statement: Set the Database**

   ```sql
   USE DATABASE "SDOH"
   ```

   Execute this statement alone.

2. **Second Statement: Run Your Query**

   ```sql
   SELECT DISTINCT "Maternal_Morbidity_YN"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   ```

   Execute this after setting the database. Ensure there are no semicolons or additional statements in the same execution block.

#### **Option 2: Fully Qualify the Table Name with the Database Name**

If you're unable to execute `USE DATABASE`, you can include the database name in your query to fully qualify the table name.

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

**Explanation:**

- **"SDOH"** is the database name.
- **"SDOH_CDC_WONDER_NATALITY"** is the schema name.
- **"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"** is the table name.

By fully qualifying the table name, you eliminate the need to set the database separately.

---

### **Steps to Resolve the Error**

1. **Remove Any `USE DATABASE` Commands from Your Query**

   Ensure your query contains only the `SELECT` statement.

2. **Check for Extra Semicolons or Statements**

   Make sure there are no extra semicolons `;` that might indicate the end of one statement and the start of another.

3. **Execute the Query Alone**

   Run only the `SELECT` query in your execution window or command.

   ```sql
   SELECT DISTINCT "Maternal_Morbidity_YN"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   ```

4. **Verify Database and Schema Names**

   Ensure that the database and schema names are correctly specified. They are case-sensitive in some environments.

5. **Check for Permissions**

   Confirm that you have the necessary permissions to access the database, schema, and table.

---

### **Example Execution**

**Single Statement Query:**

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

**Notes:**

- **No `USE DATABASE` Command:** Removed to ensure only one statement is being executed.
- **Fully Qualified Table Name:** Includes the database name to specify the exact location of the table.

---

### **Additional Tips**

- **Avoid Multiple Statements Per Execution**

  - If your environment does not support multiple statements in a single execution, always separate them.
  - Do not concatenate commands with semicolons.

- **Check Your SQL Client Settings**

  - Some SQL clients have settings that allow or disallow multiple statements per execution.
  - You may need to adjust these settings if possible.

- **Test with a Simple Query**

  - Try running a simple query that selects from a known table to ensure that your environment is set up correctly.

---

### **Summary**

- **Error Cause:** You're executing multiple SQL statements where only one is allowed.
- **Solution:** Run only one statement per execution. Fully qualify your table names if you cannot set the database.
- **Action Steps:**

  1. Remove any additional statements like `USE DATABASE`.
  2. Ensure your query is a single, standalone `SELECT` statement.
  3. Fully qualify the table name with the database and schema.

---

### **Final Query to Run**

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

**This should resolve the error and return the distinct values of `Maternal_Morbidity_YN` from your table.**

---

If you continue to experience issues, please let me know any additional error messages or behaviors you're encountering, and I'll be happy to help troubleshoot further.
2025-01-16 06:20:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:20:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:20:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:20:42 - snowflake.connector.connection - INFO - closed
2025-01-16 06:20:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:21:17 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:21:17 - root - INFO - I understand that you're still experiencing the error:

```
000008 (0A000): Actual statement count 2 did not match the desired statement count 1.
```

This error occurs when the SQL execution environment expects **one statement**, but it's detecting **multiple statements** in your input.

Additionally, I notice that your query is missing the database name in the table reference, which can cause issues if a default database isn't set.

---

### **Identifying the Issues**

1. **Multiple Statements Detected:**
   - **Cause:** Multiple SQL statements in a single execution, which is not allowed in your environment.
   - **Example:** Including a `USE DATABASE` command along with a `SELECT` query in one execution block.

2. **Missing Database Name in Table Reference:**
   - Without specifying the database, the SQL engine doesn't know where to find the table unless a default database is set.

---

### **Solution Steps**

#### **Step 1: Use a Single Statement**

Ensure that you're executing only **one SQL statement** at a time. Your input should be only the `SELECT` query without any additional commands or semicolons.

#### **Step 2: Fully Qualify the Table Name with the Database Name**

Since your session may not have a default database set, include the database name in your table reference.

**Revised Query:**

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

#### **Step 3: Ensure No Extra Statements or Characters**

- **No `USE DATABASE` Command:** Remove any database selection commands.
- **No Semicolons (`;`):** Do not include semicolons that might indicate the end of one statement and the start of another.
- **No Extra Lines or Hidden Characters:** Make sure there are no hidden characters, especially if copying from another source.

#### **Step 4: Verify Your SQL Environment Settings**

Check if your SQL client or environment has any specific requirements:

- **Statement Delimiters:** Some environments use specific delimiters to separate statements.
- **Batch Execution:** Ensure you're not inadvertently sending multiple statements in one batch.

---

### **Putting It All Together**

**Final Query to Execute:**

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

**Notes:**

- **Single Statement:** Only the `SELECT` query is executed.
- **Fully Qualified Table Name:** Includes the database, schema, and table.
- **No Semicolons or Extra Commands:** Ensures the SQL engine interprets it as one statement.

---

### **Example Execution**

**Copy and Paste the Query as-is:**

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

Run this query in your SQL client or execution environment.

---

### **Additional Tips**

1. **Verify Database and Schema Names:**

   - Confirm that `"SDOH"` is the correct database name.
   - Ensure that you have access permissions to the database.

2. **Check for Hidden Characters:**

   - If copying the query from a document or email, hidden characters may be included.
   - Paste the query into a plain text editor first to remove any formatting.

3. **Use Appropriate Quotation Marks:**

   - Use double quotes `"` around identifiers if required by your SQL dialect.
   - Use single quotes `'` around string literals only.

4. **Avoid Mixing Commands:**

   - Do not mix DDL/DML commands (`USE DATABASE`, `SELECT`, `INSERT`) in a single execution if your environment doesn't support it.

---

### **Troubleshooting if Error Persists**

If you still encounter errors:

- **Provide the Exact Error Message:**

  - Sometimes the error message can give specific clues.

- **Test with a Simple Query:**

  - Try running a basic query:

    ```sql
    SELECT 1
    ```

  - If this fails, there might be a broader issue with the SQL environment.

- **Check Execution Environment Configurations:**

  - Some SQL clients require specific settings to run queries.

- **Consult Documentation or Support:**

  - Your SQL environment might have specific requirements or limitations.

---

### **Conclusion**

By updating your query to include the database name and ensuring that only one statement is executed, you should be able to resolve the error.

**Please try running the revised query and let me know if you continue to experience any issues. I'm here to help!**
2025-01-16 06:21:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:21:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:21:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:21:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 06:21:18 - snowflake.connector.connection - INFO - closed
2025-01-16 06:21:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:21:19 - root - INFO - SQL:
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
Results:
Maternal_Morbidity_YN
1
0
9

2025-01-16 06:21:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:21:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:21:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:21:20 - snowflake.connector.connection - INFO - closed
2025-01-16 06:21:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:21:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:21:57 - root - INFO - I see that you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't fully specify the database name in the table reference. As a result, the SQL engine doesn't know where to find the table you're querying.

---

### **Understanding the Issue**

In your query:

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

- **Database Name**: Missing
- **Schema Name**: `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name**: `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

Without specifying the database, the SQL engine cannot locate the table unless a default database is set.

---

### **Solution**

#### **Option 1: Include the Database Name in Your Query**

Modify your query to include the database name (`"SDOH"`) to fully qualify the table name:

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

**Explanation:**

- **Fully Qualified Table Name**: `"SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`
  - `"SDOH"` is the **database name**.
  - `"SDOH_CDC_WONDER_NATALITY"` is the **schema name**.
  - `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"` is the **table name**.

By including the database name, you tell the SQL engine exactly where to find your table.

#### **Option 2: Set the Default Database for Your Session**

If your SQL environment allows, you can set the default database for your session:

1. **First**, set the default database:

   ```sql
   USE DATABASE "SDOH";
   ```

2. **Then**, run your query without the database name:

   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

**Note:** If your SQL client does not support executing multiple statements at once, you need to execute the `USE DATABASE` command separately from your `SELECT` query.

---

### **Why This Works**

In your previous attempt, you successfully retrieved results when you included the database name:

```sql
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
```

Similarly, by including the database name in your current query, the SQL engine will be able to locate the table and execute your query without errors.

---

### **Example of the Corrected Query**

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

---

### **Additional Tips**

- **Consistency in Quoting**: Ensure you're using double quotes `"` around your identifiers if your SQL dialect requires it. This is particularly important if your identifiers are case-sensitive or contain special characters.

- **Single Statement Execution**: If your SQL environment only allows one statement per execution, avoid including multiple statements (like `USE DATABASE` and `SELECT`) in a single execution block.

- **Check for Hidden Characters**: When copying queries, ensure there are no hidden characters or extra semicolons `;` that might cause the SQL engine to interpret your input as multiple statements.

- **Permissions**: Ensure you have the necessary permissions to access the database, schema, and table.

---

### **Conclusion**

By fully qualifying your table name with the database, schema, and table, you provide the SQL engine with the complete path it needs to locate your data. This should resolve the error and allow your query to execute successfully.

**Feel free to let me know if you have any other questions or need further assistance!**
2025-01-16 06:21:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:21:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:21:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:21:58 - snowflake.connector.connection - INFO - closed
2025-01-16 06:21:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:22:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:22:54 - root - INFO - It appears you're still encountering the error because your query is missing the **database name** in the table reference. The error message indicates that the SQL session does not have a current database set, and without specifying the database, it cannot locate the table.

---

### **Issue Details**

**Your Input SQL:**

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

- **Missing Database Name:** The table reference lacks the database name (`"SDOH"`).
- **Error Message:**

  ```
  Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
  ```

---

### **Solution**

#### **Option 1: Include the Database Name in Your Query**

Modify your query to **fully qualify the table name** by including the database name:

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

**Explanation:**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`
- **Fully Qualified Table Name:**

  ```sql
  "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  ```

By including the database name, you tell the SQL engine exactly where to find your table, which resolves the error.

---

#### **Option 2: Set the Default Database for Your Session**

If your SQL environment allows setting a default database, you can use the `USE DATABASE` command:

1. **Set the Default Database:**

   ```sql
   USE DATABASE "SDOH";
   ```

2. **Run Your Query Without Specifying the Database:**

   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

**Important Notes:**

- If your SQL client does not support executing multiple statements at once, you need to execute the `USE DATABASE` command separately from your `SELECT` query.
- Some SQL environments do not permit executing `USE DATABASE` in the same execution block as other queries.

---

### **Why This Works**

- **Error Cause:** The SQL engine cannot locate the table because it doesn't know which database to look in.
- **Solution:** By specifying the database, you provide a complete path to the table, allowing the SQL engine to find it.

---

### **Action Steps**

1. **Modify Your Query to Include the Database Name:**

   Copy and paste the corrected query:

   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

2. **Ensure No Additional Statements Are Included:**

   - Do not include `USE DATABASE` in the same execution if your environment disallows multiple statements.
   - Avoid extra semicolons `;` or unintended characters that might split your query into multiple statements.

3. **Run the Query:**

   Execute the modified query in your SQL client.

---

### **Additional Tips**

- **Consistency in Quoting:**

  - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
  - Ensure there are no mismatched or missing quotes.

- **Avoid Mixing Commands:**

  - If your environment doesn't support multiple statements per execution, don't combine `USE DATABASE` with your `SELECT` query.

- **Check Permissions:**

  - Confirm that you have the necessary permissions to access the `"SDOH"` database and the specified schema and table.

- **Validate Names:**

  - Ensure that `"SDOH"`, `"SDOH_CDC_WONDER_NATALITY"`, and `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"` are correctly spelled and capitalized, as some SQL environments are case-sensitive.

---

### **Summary**

- **Problem:** The SQL engine cannot perform the `SELECT` because it doesn't know which database to use.
- **Solution:** Include the database name in the table reference or set the default database for your session.
- **Recommended Action:** Modify your query to include the database name as shown above.

---

### **Example Execution**

**Corrected Query:**

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

When you execute this query with the database name included, it should run successfully, and you should receive the results without the error.

---

**If you continue to experience issues, please let me know, and I'll be happy to assist further!**
2025-01-16 06:22:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:22:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:22:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:22:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 574
2025-01-16 06:22:56 - snowflake.connector.connection - INFO - closed
2025-01-16 06:22:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:22:56 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
01089,82
04013,411
06019,50
06059,289
06061,55
06075,119
06081,62
06083,45
06085,348
06097,66
08013,41
08031,171
08035,68
12086,141
12105,54
12127,37
13121,101
13135,62
15003,217
17031,1193
17097,107
17119,51
17167,49
17201,64
17999,424
18089,65
21067,44
21111,90
21999,365
22033,117
22071,70
24013,75
26081,60
26163,273
26999,319
29999,450
34007,100
34025,69
36005,160
39025,71
45999,154
48027,34
49057,54
30999,149
48187,13
24027,61
24510,129
25021,123
34011,59
34013,85
34023,103
34039,95
36001,82
36067,134
42003,334
42045,133
53033,561
55079,225
42101,328
40109,137
53011,92
46103,10
37097,31
27137,61
04027,64
12011,85
17043,158
22051,85
24999,68
25005,55
27037,86
32003,225
36013,52
39089,34
45079,55
48113,740
48121,61
53061,120
42071,245
12057,102
32031,64
53063,119
24031,152
08001,76
12099,115
13067,111
18057,49
29095,136
33015,45
34005,52
34031,95
34035,50
35013,160
36065,44
36999,403
37081,202
37999,383
38999,144
41067,126
42089,37
48141,126
48157,37
48999,657
49005,34
53067,49
55133,51
01073,50
25009,75
17019,45
49049,184
13089,66
12103,72
12095,96
34017,123
47999,273
08999,133
24033,148
25025,188
42107,105
36061,315
51999,252
34027,79
39061,315
20091,53
37133,58
06111,127
06067,235
06071,651
06013,252
02020,86
50007,52
05999,225
41047,70
26115,11
37089,11
26005,12
49053,13
12019,14
53015,16
09011,22
24015,23
01081,26
12111,28
39155,30
28999,230
36085,37
48439,245
02999,132
05007,53
36103,809
39035,351
06073,743
36059,290
35001,234
42007,67
33011,74
34021,66
06029,87
39095,92
39999,492
42133,54
09009,131
45007,64
09003,94
27123,141
20177,11
47009,12
18095,14
53057,15
13151,15
17099,16
18035,16
26147,16
13021,17
42095,20
29097,22
05119,23
55127,26
13073,26
26049,31
13185,35
11001,71
23031,28
23005,38
01125,43
18039,48
10005,48
12031,144
23999,59
34001,34
40143,62
40999,244
48029,186
48201,291
49999,103
06037,1105
39017,107
36055,231
36119,93
41005,64
47037,89
51087,37
36091,54
01097,76
08059,67
25013,63
19103,42
36071,41
25027,225
22999,194
12999,86
46999,122
53053,134
24005,112
29183,78
53005,145
56999,107
06001,267
34003,97
42129,67
41051,175
20999,229
27163,53
42069,11
13097,17
12109,18
37049,18
41043,22
42077,24
34015,48
34029,94
37183,120
48215,216
53035,37
55059,44
36063,86
10003,189
08005,121
38017,105
18003,68
45051,45
26125,188
16999,187
36029,448
49035,339
06095,64
17089,64
26161,72
04999,58
10001,53
37021,37
44007,139
45045,89
12101,64
01999,243
26099,161
27053,239
48085,74
16001,70
04019,197
55999,361
08041,83
36047,405
25023,91
31055,160
20173,85
36081,427
31109,100
39113,61
39049,476
39165,70
42999,478
45019,85
22063,34
18097,200
18999,396
19153,132
37067,80
12001,10
12053,10
37035,10
37155,10
51177,11
13045,11
12113,12
25003,12
42021,13
47163,13
06017,14
25999,14
37159,14
45083,14
12061,14
55117,14
23011,14
29071,15
30063,15
39023,15
35045,15
48355,15
18019,15
12005,15
04003,16
24017,16
41017,16
55063,16
28033,16
17091,16
12073,16
04025,17
37001,17
39003,17
39169,17
39029,17
48451,17
12085,18
12069,18
08101,19
37025,19
48257,19
48329,19
09013,20
13059,20
22103,20
28049,20
34041,20
54003,20
36111,20
06041,20
44003,20
15001,20
36089,20
04017,21
06055,21
06087,21
16055,21
23001,21
48381,21
16019,21
47125,21
45003,22
12033,23
17037,24
17115,24
24025,24
06099,24
18081,25
37019,25
39057,25
13063,25
26093,26
36045,26
01101,27
39099,27
39133,27
35043,28
42125,28
37057,28
36069,28
06113,29
13245,29
12115,30
22017,30
28047,31
48167,31
06023,31
48041,31
42079,32
54039,32
42085,32
19163,32
55139,32
05131,32
48339,33
37051,33
29019,33
39045,35
55009,35
08069,35
45091,36
05143,36
29077,38
29510,39
12021,40
36093,40
39041,40
17163,40
42055,40
13215,43
32999,43
36027,43
29099,43
04021,47
48309,47
48491,47
37129,47
37063,48
53077,48
47093,48
53999,264
35999,157
29189,166
09001,108
17197,158
48453,114
12097,10
42013,10
55073,10
12083,11
34037,15
26021,15
08077,16
12009,16
28059,16
39007,16
42081,16
01117,17
26017,17
35049,18
37085,19
45077,19
42001,20
27139,21
48039,21
25015,21
48423,22
09007,22
19113,23
37151,24
48375,24
18163,25
26139,25
41029,25
06107,27
42027,28
42075,28
26065,28
36007,31
30111,32
47165,36
26025,12
27171,23
48245,23
06007,25
09015,25
39103,32
48061,33
55087,36
27003,36
26121,38
45035,27
50999,69
17143,60
29047,60
31999,237
48303,116
42091,316
24003,55
21117,56
39173,34
55025,153
06999,137
33999,69
54999,213
41999,188
39093,57
47157,93
51153,49
19999,413
31153,49
26075,11
39139,12
51700,13
17093,14
20045,14
33017,15
47189,16
51041,17
12117,17
42043,17
06079,19
18127,19
37135,20
37101,21
48091,21
04005,22
55131,23
09005,23
24037,24
51107,24
48209,24
48139,26
12081,27
18063,27
55039,27
27145,27
36109,28
17179,29
18157,30
19193,30
26145,30
27109,30
34019,30
06047,31
46099,32
42041,33
42049,36
42017,36
41039,38
36083,40
55105,43
47149,43
06077,48
06065,223
06039,84
13999,455
26077,51
37119,195
27999,367
25017,217
49011,115
06053,75
53073,10
13077,11
44009,13
17111,18
22105,19
23019,19
13051,21
48441,22
19013,23
12091,24
34999,24
17161,26
0110

2025-01-16 06:22:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:22:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:22:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:22:57 - snowflake.connector.connection - INFO - closed
2025-01-16 06:22:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:23:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:23:42 - root - INFO - I understand that you're still encountering the error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query does not include the **database name** in the table reference. As a result, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

To resolve this error, please modify your query to **fully qualify the table name** by including the **database name** (`"SDOH"`). Here's the corrected query:

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2017-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

**Please copy and paste this corrected query into your SQL client and run it as is.**

---

### **Explanation**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`
- **Fully Qualified Table Name:** 

  ```sql
  "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  ```

By including the database name in your query, you provide the SQL engine with the full path to the table, allowing it to locate the table and execute your query successfully.

---

### **Why the Error Occurs**

When the SQL session doesn't have a current database set, and you don't specify the database in your query, the SQL engine doesn't know where to find your table. This results in the error message advising you to either set the current database or use a fully qualified name.

---

### **Important Notes**

- **Ensure the Database Name is Included:** In your previous attempts, the queries didn't include the database name, which is necessary when the session doesn't have a default database set.
  
- **Single Statement Execution:** If your SQL environment doesn't allow multiple statements per execution (e.g., `USE DATABASE` and `SELECT` in the same command), you need to include the database name in your query.

---

### **Steps to Resolve the Error**

1. **Copy the Corrected Query:**

   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2017-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

2. **Paste the Query into Your SQL Client:**

   - Ensure there are no extra characters or spaces.
   - Do not include any additional commands or statements.

3. **Execute the Query:**

   - Run the query as a single statement.
   - The SQL engine should now be able to locate the table and execute the query without errors.

---

### **Additional Tips**

- **Consistency in Quoting:**

  - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
  - Ensure that all identifiers are correctly quoted and that there's no mismatch in quotation marks.

- **Avoid Mixing Commands:**

  - Do not include `USE DATABASE` or other commands in the same execution block if your environment doesn't support it.
  - If you need to set the default database, do so in a separate execution or configuration setting.

- **Check for Hidden Characters:**

  - If copying the query from a document or email, paste it into a plain text editor first to remove any formatting or hidden characters before copying it into your SQL client.

---

### **Summary**

By including the database name in your query, you provide the SQL engine with the necessary information to locate your table. This should resolve the error and allow your query to execute successfully.

---

### **Example Execution**

**Corrected Query:**

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2017-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

**Please use this exact query for your execution.**

---

**If you have any further questions or continue to experience issues, please let me know, and I'll be happy to assist you further!**
2025-01-16 06:23:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:23:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:23:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:23:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 582
2025-01-16 06:23:44 - snowflake.connector.connection - INFO - closed
2025-01-16 06:23:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:23:44 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2017-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
02999,121
04013,443
04021,55
04999,69
06001,297
06013,231
06029,76
06039,78
06061,75
06067,257
06085,384
06111,152
08005,144
08031,224
10003,173
12021,46
12086,151
12103,64
13135,89
15003,121
17999,388
18039,45
22033,129
22051,98
24013,97
25025,224
26099,151
27037,53
34017,92
34025,49
34031,80
34039,74
39035,379
39999,539
45999,184
48041,44
48215,250
54999,202
41039,44
37133,64
55079,237
24027,54
02020,64
05999,236
08013,42
12999,96
13067,70
23005,46
24510,108
26161,61
26163,265
28047,41
28999,251
35013,260
36001,98
37081,92
40109,119
34021,57
42107,124
25017,275
22071,101
45019,98
35001,114
30999,132
06053,72
06097,78
10001,59
17031,1154
17043,150
17143,61
17167,61
19153,121
21111,117
24999,54
34003,110
36005,157
37021,52
39093,76
40143,81
32031,55
06075,115
09009,113
12031,119
17197,135
18089,96
21999,332
22999,177
24033,153
29019,34
29077,34
34001,57
34007,75
34013,85
36067,116
39099,34
42003,315
48061,34
48141,110
48201,299
48999,685
49057,65
53005,134
53011,108
53061,101
55009,41
04019,238
17019,44
42011,127
51999,304
17097,123
35999,166
25005,46
53033,534
27123,149
31153,37
31109,87
47999,313
47149,69
47037,228
36059,289
18057,44
06095,66
49049,174
41067,146
21067,51
39061,319
41999,170
42017,41
48121,82
33011,101
12095,80
50007,71
45045,74
28049,11
09011,15
06055,16
18127,17
05125,17
26005,18
24015,22
26065,23
13185,25
36999,383
53035,44
53999,239
42055,34
06999,149
06065,230
13089,75
39165,66
48439,238
10005,41
12099,114
25009,103
37999,382
37129,55
34023,87
06059,316
42101,405
53053,153
36061,253
26081,139
01003,41
39025,75
05007,52
25023,85
36029,494
12001,10
13151,10
35043,10
17091,14
47009,16
42051,18
26115,18
01125,18
15001,20
13073,22
17099,22
47187,22
42007,23
42075,23
55127,23
34011,36
49035,328
27137,67
06007,19
23031,30
37135,34
51059,49
51087,70
53063,105
36091,45
19103,64
25013,66
32003,282
48029,204
56999,97
17089,63
24025,50
06071,626
01097,58
29047,54
42091,365
36047,323
31055,135
39095,68
48113,476
17113,44
26999,367
29999,597
36119,112
37119,198
38017,122
06037,1190
06083,88
42129,56
48453,157
39017,129
42071,236
46103,10
48251,14
13223,15
04003,16
39155,17
12019,17
36013,23
12011,81
16001,82
16999,143
36085,51
45051,41
48491,44
55025,142
20091,51
47157,143
36063,86
06081,59
24031,165
11001,129
33015,46
01089,63
19999,401
49999,105
37183,138
18097,159
27999,403
51107,44
39045,54
06073,859
37067,70
09001,125
41047,103
49011,107
39113,71
42079,41
42999,545
17201,75
34027,51
41051,212
34029,99
29183,82
46999,123
01999,259
18999,438
41005,65
12101,55
39049,554
45015,44
20999,243
08059,78
08999,144
36055,242
37063,49
39041,54
20173,69
27109,44
42045,129
08035,64
08041,73
36103,912
44007,157
23011,10
45041,10
13059,11
13153,11
35045,11
37147,11
53057,11
09015,11
17115,12
37019,12
42081,12
16019,12
12109,12
12069,13
25015,13
40031,13
53015,13
25999,13
47163,13
06041,14
37085,14
48257,14
12113,14
18035,14
33013,14
51013,14
20177,14
55131,15
29071,16
48209,16
55117,16
28033,16
36111,16
04015,16
22105,16
24017,17
06087,18
12009,18
20209,18
39003,18
40017,18
48441,18
18019,18
04025,19
06023,19
13097,19
54039,19
22103,19
05131,19
19193,19
36069,20
20045,20
54003,20
12111,20
18063,20
17037,21
19013,21
06107,21
12005,21
55063,22
41017,22
45077,22
12073,22
42085,23
34019,23
42041,24
01069,24
37049,25
19113,25
16055,25
01073,26
13215,26
39169,26
45083,26
48187,26
26093,27
36045,28
12115,29
04017,29
49053,29
12127,30
18081,30
42095,30
26049,30
39023,31
29097,32
08101,32
06077,33
37051,33
37097,33
06113,33
36027,35
29510,36
05143,38
17163,38
45091,38
47125,38
32999,38
36083,39
48309,39
13245,39
42125,40
13117,40
39089,43
23999,47
47093,48
45079,48
48339,48
04027,78
27053,236
13999,438
38999,133
29189,120
25021,160
45013,10
09007,11
01015,12
36007,12
42013,14
12097,15
28059,16
44003,16
51179,17
48139,17
37151,18
01081,20
35049,20
13063,21
26017,21
29099,21
01117,22
09013,22
19163,23
39133,23
24043,23
12061,23
37001,24
39057,24
48329,24
41029,24
01101,25
34037,25
30111,25
39007,26
13021,27
42027,27
49005,27
48039,28
48167,28
39151,30
22063,32
26139,32
48451,32
36089,33
17119,36
36093,38
48375,38
12105,38
53077,38
51153,38
16027,39
47165,39
37025,39
27163,40
12071,48
26025,17
08077,17
27171,17
45035,20
51550,21
27139,23
24021,25
39103,27
48245,33
55087,35
53067,40
27003,47
13121,105
36071,58
40999,306
26145,42
55133,62
24005,130
12057,133
39153,82
41043,23
42077,27
42049,45
48085,91
25027,221
08001,85
48157,72
21117,53
42029,75
55999,376
36081,410
26125,230
51810,50
50999,107
47065,79
17093,10
37155,11
12085,13
42021,13
42069,13
18095,14
34041,14
26147,15
23001,16
39029,16
01055,18
51700,18
06099,18
06017,19
30063,19
39139,19
12117,20
42043,20
06079,20
48381,20
26121,21
47189,21
51710,23
37159,24
13051,25
37057,26
06047,27
12081,28
45003,29
18163,29
18157,30
55105,30
04005,30
24037,30
12033,31
26077,31
17179,32
33017,32
27145,33
12091,33
21015,35
46099,35
05119,36
42133,36
55139,38
34015,43
08069,47
24003,58
09003,120
08123,65
45007,56
18003,77
18091,13

2025-01-16 06:23:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:23:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:23:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:23:46 - snowflake.connector.connection - INFO - closed
2025-01-16 06:23:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:24:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:24:16 - root - INFO - It appears you're encountering the error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't include the **database name** in the table reference. To resolve this, you need to include the database name in your query.

---

### **Solution: Include the Database Name in Your Query**

Modify your query to **fully qualify the table name** by adding the database name `"SDOH"`:

```sql
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2018-01-01' AND "Maternal_Morbidity_YN" = 0
GROUP BY "County_of_Residence_FIPS"
LIMIT 1000;
```

By including the database name, you provide the SQL engine with the full path to the table, allowing it to execute the query successfully.

---

### **Explanation**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`
- **Fully Qualified Table Name:**

  ```sql
  "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  ```

---

### **Next Steps**

1. **Copy the Corrected Query**

   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2018-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

2. **Run the Query**

   Execute the query in your SQL client. This should resolve the error and return the results you're expecting.

---

### **Additional Tips**

- **Ensure Correct Quotation:** Use double quotes `"` around identifiers if required by your SQL dialect.

- **Single Statement Execution:** If your SQL environment doesn't allow multiple statements per execution, make sure you're only running one statement at a time.

- **Setting Default Database (Optional):**

  If your SQL client allows, you can set the default database for your session:

  ```sql
  USE DATABASE "SDOH";
  ```

  Then, you can run your query without specifying the database name:

  ```sql
  SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
  FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  WHERE "Year" = '2018-01-01' AND "Maternal_Morbidity_YN" = 0
  GROUP BY "County_of_Residence_FIPS"
  LIMIT 1000;
  ```

---

### **Summary**

By including the database name in your query, you provide the necessary context for the SQL engine to locate your table and execute the query successfully.

---

**Please try running the corrected query, and let me know if you need any further assistance!**
2025-01-16 06:24:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:24:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:24:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:24:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 580
2025-01-16 06:24:18 - snowflake.connector.connection - INFO - closed
2025-01-16 06:24:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:24:18 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2018-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
01999,229
12999,89
34011,55
20091,80
29047,46
06083,60
12101,56
39113,72
05119,58
34035,42
53033,570
31109,55
12031,120
32003,267
34001,66
09001,135
36085,45
45999,190
06053,74
11001,120
06111,90
36059,285
35999,150
41047,97
24031,204
36083,44
27145,45
36047,398
37097,34
27123,163
02020,92
25005,56
34013,78
40143,93
30999,138
55025,176
49049,171
39061,336
34017,116
53063,115
17167,62
47149,77
27137,62
42071,292
34027,61
48303,90
12099,90
10005,45
42045,154
53061,109
34025,71
36029,461
09009,145
41005,76
22071,80
45019,98
13089,81
26161,69
32031,46
24015,16
48041,23
25017,313
39165,65
23031,23
55999,395
12057,233
39017,92
48215,251
24025,42
29999,655
53999,212
21999,404
06085,385
49057,45
42999,554
48201,332
41067,175
49999,96
01097,59
24027,63
51999,307
18999,415
36055,251
04999,54
27003,44
36999,405
48453,130
06001,306
35013,320
26125,225
06077,207
29019,75
29183,67
25021,134
08059,60
36001,102
04027,82
06013,289
34023,82
25025,160
02999,134
39089,37
56999,101
04019,194
53005,46
29095,116
01089,71
18163,34
06029,68
06097,67
18039,37
48085,80
42007,52
06019,45
04021,42
20999,236
17019,61
13117,65
05007,55
55079,262
21111,102
27999,404
17043,133
13135,69
08031,161
41999,128
48113,685
05999,218
26999,304
18057,42
06071,369
42101,359
44007,142
46103,11
12085,12
13185,13
53015,13
13153,15
26025,20
55117,20
51650,22
04003,22
39049,632
13067,77
48439,186
26163,286
40109,103
42107,108
34039,66
36103,837
10003,167
39025,67
47187,208
37081,56
29510,41
26081,119
48999,634
12127,55
39035,366
01081,42
28999,223
35001,102
39041,60
36067,116
41051,201
34003,89
36061,239
06073,546
01125,10
01073,10
17115,12
21093,13
55127,14
48381,15
12113,15
09013,16
15001,17
12019,17
26115,17
13073,18
26049,18
13151,21
06017,22
09011,23
21067,43
50007,47
23005,13
27171,16
45035,17
06007,22
22999,163
12011,106
24999,74
06061,63
42029,93
26077,46
17999,420
06999,157
24003,69
39093,66
22051,105
51059,90
47065,95
06037,795
50999,76
12095,185
33999,83
17143,101
06095,83
06075,120
24013,124
12071,83
45045,69
17097,109
25013,114
19153,125
08001,93
42003,245
16001,67
36005,177
06067,349
24033,174
06023,34
06099,147
36081,458
42017,54
47999,382
48251,11
13059,12
29077,16
28033,16
37133,47
37071,45
34029,77
55101,42
22019,45
37067,85
13999,462
29189,125
37183,179
24510,132
13121,129
12021,61
26093,37
04013,408
18097,149
39095,71
12086,425
25027,251
12117,42
55009,42
36045,37
47037,175
23999,49
34031,91
53011,108
34007,74
36119,132
45079,42
17201,62
12105,34
51153,51
08999,152
17031,1187
24037,34
26065,37
49035,249
33011,105
45063,62
17089,66
09003,99
19103,97
27109,44
27163,56
38017,123
48029,164
06065,176
54999,203
49011,88
27037,72
31055,143
53053,147
25023,59
44003,37
27053,234
37999,384
39999,499
06059,258
22033,132
48141,144
37191,11
37151,11
42081,11
26147,11
37019,11
42069,12
16019,12
23019,12
12073,13
37085,13
17093,13
26045,14
17037,14
54003,14
17099,16
48423,16
17091,16
28059,16
42051,16
39169,17
04025,17
18035,17
51013,17
37155,17
39003,17
26017,18
05131,18
39099,18
48441,18
06055,18
18127,18
34041,19
12111,19
40017,20
53057,20
48451,20
37089,21
39007,21
22017,22
12097,23
12069,24
37021,24
37051,24
05045,24
28049,24
49053,25
18063,25
29071,25
39155,25
19163,25
37025,25
51510,25
22103,25
24017,26
06113,26
06041,26
08101,26
13097,26
12115,27
55063,27
48209,27
36111,27
06087,27
06107,28
10001,28
26005,28
42095,28
36069,29
13215,29
29099,30
42049,30
48309,30
05143,30
30111,32
42125,33
08069,33
36027,33
42079,33
32999,33
48039,33
08013,35
53077,36
06047,36
06079,38
19113,38
42055,39
39045,39
47093,39
45091,40
20173,47
37063,48
13245,48
16999,137
24021,41
38999,113
12103,64
42085,58
18089,62
25009,117
26099,165
08005,87
26021,10
34037,13
20177,14
09015,14
45077,16
35049,17
36007,17
09007,17
55073,17
22055,17
35045,17
19013,18
13021,18
42021,19
18081,19
55039,19
39057,20
37001,20
41029,21
39139,21
25015,22
51550,22
27139,25
42019,26
04017,26
48027,26
42075,27
22063,27
45003,28
26139,29
54039,30
48375,30
01055,30
22005,31
39133,31
42001,32
01101,32
31153,32
49005,33
48245,35
34021,35
48167,35
51810,36
16027,36
36093,40
28047,43
36089,43
42129,47
36091,47
17119,47
06081,48
33013,21
39103,22
55087,24
39173,25
42013,25
26121,28
08077,29
45051,30
34999,31
08123,39
48061,47
36065,48
40999,343
18003,74
24005,169
39153,112
51760,17
40027,22
41043,29
34015,39
31999,217
36071,74
37119,226
48121,79
33015,55
19999,445
36063,71
45007,71
17197,120
55133,100
42011,227
37179,34
46999,131
13223,10
13015,12
25003,13
18019,13
42041,14
48139,14
47189,14
47009,14
18095,15
01015,15
12109,15
13051,16
41017,16
39109,17
37101,17
55131,17
48257,18
39023,18
34019,18
47165,19
09005,19
42043,21
13057,22
30063,22
05125,24
42089,24
19193,24
21015,25
12081,25
41039,26
48491,26
01069,26
29097,26
48329,26
36013,26
37049,27
04005,28
16055,28
37159,29
18141,29
37129,30
55105,31
21117,33
42133,33
46099,33
37057,36
37135,38
17163,38
39085,39
47125,39
39151,40
51107,43
48339,48
26145,48
36087,77
15003,130
47157,134
48157,63
13077,

2025-01-16 06:24:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:24:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:24:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:24:19 - snowflake.connector.connection - INFO - closed
2025-01-16 06:24:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:24:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:24:54 - root - INFO - It appears you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't include the **database name** in the table reference. To resolve this issue, you need to include the database name in your query.

---

### **Solution: Include the Database Name in Your Query**

Please modify your query to **fully qualify the table name** by including the database name `"SDOH"`. Here's the corrected query:

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2016-01-01'
LIMIT 1000;
```

By including the database name, you provide the SQL engine with the full path to the table, allowing it to execute your query successfully.

---

### **Explanation**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY"`
- **Fully Qualified Table Name:**

  ```sql
  "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
  ```

When your SQL session does not have a default database set, the SQL engine requires you to specify the database in your query to locate the table.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL client allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2016-01-01'
LIMIT 1000;
```

**Note:** Some SQL environments do not allow multiple statements in a single execution. If that's the case, you need to execute the `USE DATABASE` command separately before running your `SELECT` query.

---

### **Next Steps**

1. **Copy the Corrected Query:**

   ```sql
   SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2016-01-01'
   LIMIT 1000;
   ```

2. **Run the Query in Your SQL Client:**

   - Ensure you have the necessary permissions to access the `"SDOH"` database and the `"SDOH_CDC_WONDER_NATALITY"` schema.
   - Execute the query as a single statement.

---

### **Additional Tips**

- **Use Correct Quotation Marks:**

  - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
  - Ensure that all quotation marks are correctly paired.

- **Avoid Extra Statements or Characters:**

  - Do not include any additional commands or semicolons `;` that might cause the SQL engine to interpret your input as multiple statements.
  - Make sure there are no hidden characters or line breaks that could affect query execution.

- **Single Statement Execution:**

  - If your SQL environment only allows one statement per execution, avoid combining commands like `USE DATABASE` with your `SELECT` query in the same execution block.

- **Check Database and Schema Names:**

  - Confirm that the database `"SDOH"` and schema `"SDOH_CDC_WONDER_NATALITY"` exist and are accessible.
  - Ensure that the table `"COUNTY_NATALITY"` is in the specified schema.

---

### **Why This Works**

By including the database name in your query, you provide the SQL engine with the full path to locate the table. This resolves the error caused by the absence of a default database in your session.

---

### **Example Execution**

**Corrected Query:**

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2016-01-01'
LIMIT 1000;
```

---

**Please try running the corrected query, and let me know if you need any further assistance. I'm here to help!**
2025-01-16 06:24:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:24:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:24:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:24:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 626
2025-01-16 06:24:55 - snowflake.connector.connection - INFO - closed
2025-01-16 06:24:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:24:56 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2016-01-01'
   LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births
22015,1751
48135,2814
47065,4293
48039,4800
47165,2053
37147,2023
13059,1392
48209,2502
47125,3443
08041,9490
12127,5032
01117,2387
04013,54126
18063,1760
42081,1222
37129,2241
18089,5657
12073,2989
42079,3193
18091,1305
18057,3798
42051,1351
23999,4083
06079,2581
16055,1754
25017,17198
25999,959
42027,1208
22999,20434
12071,6750
17093,1595
45003,1965
45007,2318
47179,1292
49057,3876
12091,2784
29189,11692
21111,9889
35049,1290
36007,1985
12109,2120
35045,1726
26065,3414
18003,5151
34001,2836
42125,2044
51107,5335
39109,1227
19999,22392
06047,4117
36093,1770
42011,4786
06029,13728
42075,1592
08059,6104
06097,4962
41051,9081
53011,5665
25003,1027
39023,1532
48441,2037
45041,1657
17119,3051
48251,2100
17143,2536
12111,2999
15001,2349
51650,1727
42101,21506
17037,1093
17019,2395
13089,11060
48121,10195
26999,21808
24013,1737
27137,1976
41029,2294
23011,1164
13021,2191
13063,3809
13051,3975
24510,8504
21999,34379
20045,1177
39085,2163
26147,1589
55105,2003
29095,9408
55133,4008
49053,2210
42069,2246
36103,15559
48339,7347
36091,2210
53053,11756
08013,2729
27123,7731
48215,14982
22033,6125
17089,6710
55101,2417
39035,14758
40031,1757
21067,4090
06065,30661
34015,2837
42003,13164
37179,2415
42055,1875
04015,1802
24003,6967
54003,1393
42013,1270
23005,2830
46099,2937
53057,1515
47149,4130
45079,4810
13215,2912
20209,2695
17201,3711
17111,3090
39155,2101
08101,1883
34013,10442
35001,7574
47009,1229
12069,3269
39041,2079
36001,3045
06013,12340
05045,1534
08999,8880
12085,1273
16001,5045
04005,1612
09011,2647
55999,21572
08001,6672
12115,2926
55025,6052
06089,2048
37049,1438
06007,2490
26049,4819
48157,9976
22005,1751
37101,2336
35013,2839
12101,5108
24043,1694
42043,3437
12021,3322
13015,1338
39151,4236
37097,1923
06107,7146
31153,2464
06999,10512
42091,8695
34999,1479
36071,4993
41017,1806
28999,26371
45083,3690
40999,24202
40027,3016
12011,22563
45085,1375
48141,13073
48999,59168
49005,2286
37159,1651
51999,38748
06037,123092
53077,3935
45077,1225
12017,1064
36005,21161
06077,10268
11001,9858
16999,10644
51059,14525
12103,8480
13057,2700
10005,2301
42045,6575
37119,14881
26077,3163
53035,3147
34029,8566
53033,26022
41039,3554
39169,1487
39003,1257
22019,3034
39099,2506
28121,1802
17999,22481
48085,11086
22055,3369
26099,9416
49011,5698
37067,4496
51550,2877
06099,7862
38017,2639
27999,23295
42129,2939
55073,1635
36085,5464
09001,10064
33013,1284
27109,2122
48029,27968
13153,1956
12033,3967
22071,4835
17167,2245
05131,1721
42001,922
04025,1868
29999,30617
49035,17612
06071,31032
39133,1441
41999,10471
25021,7341
42029,5325
36061,17587
27053,16495
41043,1521
36999,18322
09007,1277
42999,16421
42095,2831
12031,13292
48355,4738
13151,2511
05999,21443
48091,1448
45063,3264
18019,1448
39095,5627
12015,1037
34031,6842
26121,2127
39113,6631
36065,2497
44007,7275
36059,14329
29097,1669
13045,1615
34005,4419
34025,5960
26081,8811
34039,6756
41067,6983
28047,2790
39007,1075
32003,27388
18097,14294
39057,1808
12095,16653
24015,1106
12001,2862
16019,1910
12019,2209
37999,31354
04017,1497
23019,1483
42019,1833
25005,5643
42077,4253
54039,1968
17115,1327
13999,41842
17163,3228
45051,3118
47093,5272
47037,10023
48485,1631
04999,3188
39165,2400
51179,1711
37155,1775
42089,1477
04027,3007
06053,6219
33017,1211
26025,1660
01097,5504
01101,3139
13185,1605
48167,4167
01069,1333
48381,1640
09015,1102
17161,1776
29077,3579
42107,1367
18999,29457
26125,13665
39089,2075
29047,2962
12081,3445
51510,2823
23001,1247
28049,3123
12061,1245
01003,2247
18095,1506
24017,1812
31055,8832
37089,1089
51700,2814
24037,1425
06083,5501
09009,8886
24021,2839
30999,9160
06087,2799
45999,13084
01999,23128
37081,6259
13223,1644
39093,3295
34017,10383
34007,6226
01055,1214
32999,3485
55009,3336
10003,6501
46103,1471
20177,2189
37019,978
12053,1585
55059,1936
40017,1781
39029,1070
34019,927
51013,3225
30063,1187
36047,40802
41047,4539
08031,10006
53999,12751
37071,2524
19103,1857
27037,5291
02999,6691
27003,4223
36083,1726
22017,3364
47189,1527
40143,9639
22103,3089
42085,1165
55139,1905
37021,2595
27171,1787
34021,4280
20999,17323
45013,1958
06031,2248
34035,3251
37025,2477
24025,2699
38999,8744
10001,2190
06017,1601
33015,2654
53067,3205
53015,1285
08077,1770
41019,1087
18105,1301
48183,1743
01125,2591
39173,1365
12086,32697
48257,1663
01081,1898
34011,1876
51760,3028
21227,1640
48041,2771
48439,28745
48303,4273
48309,3376
21015,1681
17197,7804
05125,1326
21117,2329
13135,11365
55079,13658
48027,6140
04019,11421
17179,1496
18039,3126
37183,13018
06025,2939
36027,2519
53063,6145
30111,1935
06059,38106
36081,30377
23031,1898
26045,1139
48113,40379
34037,1180
36111,1482
50999,4204
33011,4240
50007,1552
17091,1354
22079,1840
48061,6893
18035,1174
51041,3885
13067,9579
24033,12296
17099,1262
42049,3064
17097,7660
37151,1600
48139,2244
15003,12983
12097,4328
29099,2633
39999,30573
13073,1831
13139,2574
21093,1441
35999,9799
20091,7360
06095,5259
25027,8678
27163,2898
42007,1676
06001,19573
22109,1570
35043,1464
48201,72420
22

2025-01-16 06:24:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:24:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:24:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:24:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:24:57 - snowflake.connector.connection - INFO - closed
2025-01-16 06:24:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:24:57 - root - INFO - SQL:
SELECT "geo_id", "poverty"
   FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
   LIMIT 1000;
Results:
Too long, hard cut:
geo_id,poverty
28103,3953.0
21191,2188.0
17065,1211.0
45081,4062.0
39111,2782.0
16051,3492.0
05061,2910.0
21131,3051.0
22059,2857.0
47067,1793.0
13107,6700.0
40063,2244.0
21231,5477.0
49015,1188.0
29186,2540.0
29013,2996.0
47081,4738.0
21121,10093.0
27069,474.0
47109,5319.0
29207,4583.0
05029,4709.0
28129,3813.0
19129,1300.0
17147,1019.0
30067,1918.0
21183,5208.0
28107,7793.0
51011,2668.0
22043,3460.0
39115,3111.0
48177,4009.0
28153,5509.0
51077,3244.0
30095,721.0
22047,5612.0
29015,3540.0
17025,1839.0
21229,2034.0
45049,3963.0
21225,4091.0
40153,2595.0
30009,1137.0
37149,2790.0
46123,1212.0
40095,2645.0
40075,1883.0
20117,1087.0
48239,1765.0
27023,1454.0
39001,6832.0
05017,3385.0
28093,6513.0
40089,8256.0
28141,3146.0
56007,2280.0
31101,931.0
29007,4401.0
13037,1924.0
48089,3081.0
49041,2973.0
22111,6166.0
21017,3272.0
19039,1493.0
27055,2031.0
39117,4063.0
51155,4506.0
53069,674.0
51001,6384.0
08065,833.0
05059,5975.0
12049,7029.0
05091,8594.0
28079,6034.0
45027,8163.0
19029,1855.0
05047,3854.0
17193,1916.0
32013,1762.0
13293,6137.0
08019,748.0
39137,1966.0
26097,1730.0
29121,2895.0
26009,3316.0
48427,22663.0
05023,3676.0
28051,7860.0
22077,4368.0
56023,1435.0
29107,3706.0
19015,2588.0
27071,1937.0
38093,2130.0
17191,2385.0
21235,8871.0
40021,10426.0
35039,9413.0
39021,4756.0
49047,3261.0
51109,3385.0
54079,5494.0
42123,4891.0
16017,6145.0
47073,10661.0
22003,3501.0
40121,7994.0
47101,2292.0
29023,8942.0
45043,12557.0
47043,8116.0
39013,9553.0
13225,5471.0
35015,6237.0
51191,6845.0
56037,5058.0
28081,15327.0
21113,9190.0
30013,12212.0
37093,11047.0
48257,15016.0
49053,21893.0
54011,20110.0
28061,3944.0
56001,9510.0
46005,3708.0
55101,23768.0
55139,19209.0
56025,8407.0
06109,7010.0
22105,26962.0
27141,6966.0
51085,5976.0
55141,7996.0
23031,19192.0
22045,14277.0
04005,28824.0
01101,49918.0
17103,3555.0
08049,1543.0
40135,10261.0
56005,3412.0
42025,6909.0
16011,6093.0
51099,1366.0
48227,4787.0
26107,9338.0
28151,17586.0
41007,5791.0
54069,6658.0
13299,9686.0
39043,9333.0
16069,4581.0
16065,13232.0
27135,1637.0
30029,12307.0
45047,15875.0
22063,19086.0
32023,7658.0
32005,4984.0
26055,9575.0
06103,12313.0
53041,12126.0
48479,82307.0
06045,17527.0
19013,19887.0
28075,17325.0
12119,10802.0
53045,10166.0
22109,21627.0
27131,6469.0
39099,40841.0
26025,22931.0
40017,8995.0
21093,14886.0
22119,9327.0
17051,3644.0
18061,5392.0
55123,4757.0
27161,1544.0
08029,4716.0
48049,6581.0
27061,6018.0
17021,4714.0
24029,2051.0
17133,1667.0
42121,8123.0
42083,6830.0
42035,6086.0
41057,4310.0
42087,7216.0
55135,5232.0
04009,7446.0
51790,4052.0
29113,7980.0
51089,9520.0
19045,6608.0
39091,6487.0
37099,8139.0
35061,17604.0
55031,6713.0
18053,11829.0
05051,19802.0
46013,3613.0
01109,8158.0
21047,13576.0
48251,18392.0
37057,25655.0
22019,32864.0
12105,111877.0
01073,121029.0
48339,59856.0
28089,13287.0
22099,9388.0
18085,8645.0
39139,19504.0
22101,11746.0
56021,9369.0
42019,16325.0
39153,78658.0
21015,10156.0
41061,4641.0
17195,6740.0
39101,11127.0
48001,8274.0
40037,10813.0
27047,3679.0
21029,7911.0
40019,7262.0
50027,6041.0
51590,9629.0
22087,8209.0
13223,18445.0
39025,21127.0
18063,7514.0
01117,16693.0
13153,25111.0
47113,18521.0
08014,3930.0
02090,7752.0
08037,4780.0
01055,20078.0
21037,12883.0
29101,8407.0
16055,18634.0
01003,25798.0
42055,17554.0
45015,26327.0
12061,20272.0
40031,20444.0
37023,17277.0
06101,16743.0
18079,4390.0
18073,2710.0
40015,5976.0
27045,2280.0
12041,3598.0
26039,2073.0
27041,3438.0
40091,4209.0
51131,2730.0
19183,2013.0
30047,6509.0
26051,5211.0
51173,5815.0
21095,8661.0
13079,2122.0
55057,3567.0
39027,6425.0
39059,7784.0
56009,1308.0
26007,4898.0
46135,2993.0
54025,6530.0
39123,4349.0
27005,4160.0
01033,9406.0
40051,6690.0
39047,5185.0
55085,3632.0
21009,8598.0
55075,5168.0
22009,8750.0
41065,4015.0
18037,4071.0
45055,10467.0
04001,25852.0
18137,2403.0
21195,14256.0
53047,8646.0
42073,13192.0
21199,16497.0
36023,6675.0
06035,3563.0
37189,14726.0
49045,4339.0
22075,3775.0
21035,8015.0
48361,12691.0
01015,23325.0
39109,13076.0
29161,8137.0
06089,31707.0
48347,14752.0
45077,22545.0
48441,22395.0
22055,36346.0
29021,15456.0
42085,14549.0
37037,9041.0
02130,1640.0
39155,34912.0
29169,5781.0
21227,21047.0
16083,12418.0
54049,8980.0
18099,5594.0
29029,7516.0
48473,7505.0
18031,3647.0
37107,13401.0
54055,13236.0
29213,9825.0
35009,10338.0
13015,15819.0
01069,18746.0
48469,14531.0
37159,24194.0
13179,11047.0
18163,28870.0
48423,37048.0
13139,34120.0
20161,14922.0
13313,19270.0
38035,11223.0
19153,57143.0
13255,14238.0
20111,6919.0
30111,17250.0
53009,10682.0
47011,19357.0
47065,54036.0
12015,19760.0
51680,16775.0
06115,15862.0
08069,42338.0
35025,9859.0
39039,5071.0
06051,684.0
26105,4861.0
39037,6846.0
51520,3496.0
28113,11334.0
17049,3557.0
26063,4486.0
46081,3115.0
26023,7310.0
19099,3342.0
13207,3492.0
51171,5138.0
40013,7816.0
48419,5553.0
45071,6436.0
56013,5637.0
08097,1709.0
27067,4877.0
46093,2764.0
23013,4304.0
55021,4844.0
47147,8005.0
51670,4165.0
19187,5210.0
51840,4200.0
48367,11785.0
39165,11885.0


2025-01-16 06:24:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:24:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:24:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:24:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:24:59 - snowflake.connector.connection - INFO - closed
2025-01-16 06:24:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:24:59 - root - INFO - SQL:
SELECT "geo_id", SUBSTRING("geo_id", 10, 5) AS "County_FIPS_Code"
   FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
   LIMIT 1000;
Results:
Too long, hard cut:
geo_id,County_FIPS_Code
28103,
21191,
17065,
45081,
39111,
16051,
05061,
21131,
22059,
47067,
13107,
40063,
21231,
49015,
29186,
29013,
47081,
21121,
27069,
47109,
29207,
05029,
28129,
19129,
17147,
30067,
21183,
28107,
51011,
22043,
39115,
48177,
28153,
51077,
30095,
22047,
29015,
17025,
21229,
45049,
21225,
40153,
30009,
37149,
46123,
40095,
40075,
20117,
48239,
27023,
39001,
05017,
28093,
40089,
28141,
56007,
31101,
29007,
13037,
48089,
49041,
22111,
21017,
19039,
27055,
39117,
51155,
53069,
51001,
08065,
05059,
12049,
05091,
28079,
45027,
19029,
05047,
17193,
32013,
13293,
08019,
39137,
26097,
29121,
26009,
48427,
05023,
28051,
22077,
56023,
29107,
19015,
27071,
38093,
17191,
21235,
40021,
35039,
39021,
49047,
51109,
54079,
42123,
16017,
47073,
22003,
40121,
47101,
29023,
45043,
47043,
39013,
13225,
35015,
51191,
56037,
28081,
21113,
30013,
37093,
48257,
49053,
54011,
28061,
56001,
46005,
55101,
55139,
56025,
06109,
22105,
27141,
51085,
55141,
23031,
22045,
04005,
01101,
17103,
08049,
40135,
56005,
42025,
16011,
51099,
48227,
26107,
28151,
41007,
54069,
13299,
39043,
16069,
16065,
27135,
30029,
45047,
22063,
32023,
32005,
26055,
06103,
53041,
48479,
06045,
19013,
28075,
12119,
53045,
22109,
27131,
39099,
26025,
40017,
21093,
22119,
17051,
18061,
55123,
27161,
08029,
48049,
27061,
17021,
24029,
17133,
42121,
42083,
42035,
41057,
42087,
55135,
04009,
51790,
29113,
51089,
19045,
39091,
37099,
35061,
55031,
18053,
05051,
46013,
01109,
21047,
48251,
37057,
22019,
12105,
01073,
48339,
28089,
22099,
18085,
39139,
22101,
56021,
42019,
39153,
21015,
41061,
17195,
39101,
48001,
40037,
27047,
21029,
40019,
50027,
51590,
22087,
13223,
39025,
18063,
01117,
13153,
47113,
08014,
02090,
08037,
01055,
21037,
29101,
16055,
01003,
42055,
45015,
12061,
40031,
37023,
06101,
18079,
18073,
40015,
27045,
12041,
26039,
27041,
40091,
51131,
19183,
30047,
26051,
51173,
21095,
13079,
55057,
39027,
39059,
56009,
26007,
46135,
54025,
39123,
27005,
01033,
40051,
39047,
55085,
21009,
55075,
22009,
41065,
18037,
45055,
04001,
18137,
21195,
53047,
42073,
21199,
36023,
06035,
37189,
49045,
22075,
21035,
48361,
01015,
39109,
29161,
06089,
48347,
45077,
48441,
22055,
29021,
42085,
37037,
02130,
39155,
29169,
21227,
16083,
54049,
18099,
29029,
48473,
18031,
37107,
54055,
29213,
35009,
13015,
01069,
48469,
37159,
13179,
18163,
48423,
13139,
20161,
13313,
38035,
19153,
13255,
20111,
30111,
53009,
47011,
47065,
12015,
51680,
06115,
08069,
35025,
39039,
06051,
26105,
39037,
51520,
28113,
17049,
26063,
46081,
26023,
19099,
13207,
51171,
40013,
48419,
45071,
56013,
08097,
27067,
46093,
23013,
55021,
47147,
51670,
19187,
51840,
48367,
39165,
55063,
37191,
12017,
37025,
06107,
47155,
30031,
53015,
45085,
32510,
22079,
18003,
27119,
53065,
48323,
39145,
30049,
26149,
17177,
20051,
40125,
39007,
54107,
21145,
41033,
48057,
27099,
16019,
26075,
27169,
22015,
47093,
36045,
26111,
12083,
01097,
12019,
12035,
45035,
53007,
35045,
21151,
06033,
27083,
13157,
48303,
27105,
53075,
55087,
35013,
39175,
28159,
39075,
26011,
51125,
51005,
05103,
18119,
13273,
48063,
29177,
37065,
18165,
26019,
21007,
01053,
47171,
18013,
28057,
45089,
54099,
45009,
18111,
17127,
17015,
20059,
26079,
40023,
39127,
45033,
29195,
13087,
21157,
18169,
27039,
08051,
29225,
18087,
12027,
28043,
39107,
21205,
48365,
27091,
26029,
27015,
27095,
27113,
55069,
54009,
51053,
13241,
42005,
54051,
50017,
42047,
17005,
29159,
39087,
21049,
39143,
39083,
55095,
40137,
06027,
37113,
19057,
13295,
48373,
53017,
17107,
37087,
51137,
36035,
38089,
12051,
12107,
05145,
01113,
40101,
17001,
48477,
17109,
01103,
39003,
48005,
47009,
28033,
06069,
41009,
35031,
49043,
18043,
36089,
28049,
41071,
27013,
02170,
53057,
16013,
42051,
48449,
27049,
39147,
55043,
35005,
21209,
05085,
20057,
27103,
53031,
17029,
06015,
05069,
48037,
17115,
17161,
05045,
41003,
20037,
48409,
13095,
45075,
16005,
20177,
19193,
26045,
20169,
42099,
28099,
27115,
18065,
47019,
17141,
53003,
18107,
13025,
51197,
51083,
36033,
22069,
39081,
08107,
48259,
35055,
05035,
37109,
27007,
01095,
18177,
37139,
26017,
37195,
13047,
53037,
51740,
29031,
39009,
18005,
55055,
17099,
53027,
19061,
53021,
13233,
54033,
28067,
39141,
32007,
29071,
04017,
13039,
55109,
53071,
26037,
39173,
37147,
53005,
18035,
47179,
47165,
37021,
51047,
13045,
42063,
05033,
26145,
04021,
37071,
04003,
48329,
47187,
55007,
12077,
26035,
48285,
27157,
01009,
26031,
45037,
26041,
35029,
22085,
30053,
42009,
01005,
40113,
19141,
42131,
13199,
21083,
29049,
27079,
27021,
26089,
39077,
21089,
51067,
28039,
24011,
21101,
17055,
17117,
27149,
37091,
39135,
13193,
30093,
23027,
26117,
01127,
13069,
18029,
19123,
19167,
08117,
39119,
19125,
39157,
01121,
27111,
12093,
27009,
19033,
34033,
40147,
18019,
05125,
16027,
27139,
35028,
13115,
41017,
33013,
42093,
22057,
21073,
23001,
22005,
55015,
34011,
12005,
20045,
37089,
18039,
17037,
27059,
19179,
08043,
27035,
26033,
08067,
36037,
26103,
40119,
05031,
18017,
35035,
48321,
37045,
53025,
48451,
13245,
55117,
04027,
51069,

2025-01-16 06:24:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:24:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:24:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:25:00 - snowflake.connector.connection - INFO - closed
2025-01-16 06:25:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:25:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:25:42 - root - INFO - It appears you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't include the **database name** in the table reference. As a result, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

To resolve this error, please modify your query to **fully qualify the table name** by including the **database name** (`"SDOH"`). Here's the corrected query:

```sql
SELECT DISTINCT "County_of_Residence_FIPS"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
LIMIT 1000;
```

**Explanation:**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

By including the database name in your query, you provide the SQL engine with the full path to the table, allowing it to locate the table and execute your query successfully.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL environment allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT DISTINCT "County_of_Residence_FIPS"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
LIMIT 1000;
```

**Note:** Some SQL clients do not support executing multiple statements in a single execution. If that's the case, you need to execute the `USE DATABASE` command separately from your `SELECT` query.

---

### **Why the Error Occurs**

When your SQL session doesn't have a default database set, the SQL engine requires you to either:

- **Specify the database name** in your query to fully qualify the table name.
- **Set the default database** for your session so that the SQL engine knows where to find your tables.

Since your query doesn't include the database name and there's no default database set, the SQL engine cannot locate the table and returns the error.

---

### **Steps to Resolve the Error**

1. **Modify Your Query to Include the Database Name:**

   ```sql
   SELECT DISTINCT "County_of_Residence_FIPS"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
   ```

2. **Ensure Correct Quotation Marks:**

   - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
   - Ensure all quotation marks are correctly paired.

3. **Avoid Extra Statements or Characters:**

   - Do not include any other commands or semicolons `;` that might cause the SQL engine to interpret your input as multiple statements.
   - Ensure there's no unintended whitespace or hidden characters.

4. **Run the Query:**

   - Execute the modified query in your SQL client.
   - This should resolve the error and return the distinct `County_of_Residence_FIPS` values.

---

### **Additional Tips**

- **Set the Default Database (Optional):**

  If you prefer not to include the database name in every query and your SQL environment allows it, you can set the default database for your session:

  ```sql
  USE DATABASE "SDOH";
  ```

  Then, you can run your query as:

  ```sql
  SELECT DISTINCT "County_of_Residence_FIPS"
  FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  LIMIT 1000;
  ```

  **Remember:** If your SQL client doesn't support multiple statements per execution, execute the `USE DATABASE` command separately.

- **Check for Typos:**

  - Ensure that the database, schema, and table names are spelled correctly.
  - SQL identifiers can be case-sensitive in some environments.

- **Permissions:**

  - Verify that you have the necessary permissions to access the `"SDOH"` database and the `"SDOH_CDC_WONDER_NATALITY"` schema.

---

### **Conclusion**

By updating your query to include the database name, you provide the SQL engine with all the information it needs to locate your table. This should resolve the error and allow your query to execute successfully.

---

**If you have any further questions or need additional assistance, feel free to ask!**
2025-01-16 06:25:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:25:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:25:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:25:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 626
2025-01-16 06:25:43 - snowflake.connector.connection - INFO - closed
2025-01-16 06:25:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:25:44 - root - INFO - SQL:
SELECT DISTINCT "County_of_Residence_FIPS"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
Results:
County_of_Residence_FIPS
01097
01103
01125
06007
06041
06097
13021
13063
13153
22015
22017
22019
22033
22073
22999
25999
26017
28121
28999
36087
39003
42027
48135
50999
55063
04013
18141
29077
34025
49053
34999
53033
05007
17119
48245
48309
37183
06113
20209
39025
13113
28047
39057
48479
12069
09009
15999
17099
02999
42017
36109
41043
45003
53073
06047
41029
48329
06095
20091
12071
48251
36089
17161
13015
28049
41017
50007
17143
48167
12009
01101
39007
48041
25013
36081
51179
39155
48423
16055
39139
12057
55087
10003
44007
06023
13215
22109
33013
48215
54039
05999
17163
37155
04021
26125
47163
51810
36091
12001
30999
36063
53077
23001
13135
34013
06067
27163
36061
34003
06089
17201
18127
29047
36059
42001
42003
17197
45013
24510
26049
09015
15001
45091
29510
45045
51041
34027
37191
06999
45051
34015
45077
12011
12101
06025
25015
13185
34021
42133
26065
42045
08041
18163
29071
32031
54003
13313
35013
08069
19113
39099
48375
42095
12117
37001
17115
26163
27171
37135
24021
34005
06017
45041
48121
55059
27999
36013
39133
24015
51153
08031
34001
36029
37129
18039
35049
06039
36093
17043
42077
18019
24027
12095
13051
47157
39999
12099
27003
21067
42129
55139
40109
48201
06077
12081
41999
49005
06083
26081
26139
42011
04999
37101
45019
28059
48157
26121
45063
18035
21227
26115
48491
06081
27139
36045
38017
08013
27109
18167
10001
18063
39089
55127
41039
12091
48183
13139
51700
21999
28033
12073
29097
51087
04015
19193
21015
39151
37133
06079
08059
35999
39045
42101
06001
06059
06085
20999
29095
34007
34017
36103
39041
12085
25017
53011
01069
29189
19013
48451
49999
12109
26077
36001
39103
48039
06053
27123
36069
41005
53015
21093
39095
18105
12017
44003
12999
47165
55079
06065
12111
17179
23011
26045
37019
42085
33015
42013
44999
01089
12061
13059
34031
37081
47093
48027
48085
48139
13045
23031
25025
26161
34037
42019
22105
48355
06071
13117
26075
29019
32999
46103
48339
48367
23999
25027
36047
42071
42091
12031
16019
22103
40027
08035
12103
19999
37035
37089
42069
42079
51999
26145
36071
36111
41051
41067
53067
05045
13121
17089
18095
24005
24033
37159
06099
09001
36055
36065
55999
48187
18081
24043
47125
55009
25021
47999
48141
06019
06107
36005
51059
51107
55039
29099
40031
49011
51550
23019
47149
01117
12083
13073
17031
17097
47037
51177
25023
27053
48181
54999
10005
18003
26025
26147
47179
55073
24037
01003
12021
13097
34011
39061
42021
34039
36027
13999
45079
48029
12053
12097
48303
06111
08123
26999
33017
05131
22063
45083
11001
15009
42029
44009
12015
17037
21111
47065
08005
12115
37179
17167
22071
13089
19163
06073
19103
27037
27137
33011
37057
37067
08101
12086
31109
08001
17093
42051
24013
34023
39109
48453
56999
37051
48381
06013
08999
12033
49035
42041
01073
25003
35043
37151
04003
53063
39049
39113
40017
18057
24003
09007
46099
31055
45007
47009
34029
45085
17019
18091
39029
37071
53053
26021
04027
39173
53057
53999
47187
30063
36067
21117
06029
34041
40143
36007
39017
06037
42049
06031
22079
45035
47189
48257
51650
34019
13151
42043
49049
25009
53061
01055
22051
39035
39153
53005
06061
06087
25001
53035
42107
48091
25005
27145
12005
12105
18157
37049
20177
48999
19153
24031
26005
35045
37119
42075
12113
29183
31999
36083
36119
42081
24017
04005
05143
39093
06055
09013
05125
16027
17111
18999
37021
55133
01081
37147
37999
02020
55131
17091
31153
09005
09011
01015
24999
39085
04019
24025
42125
15003
35001
37085
36075
37063
34035
17113
30111
22005
51013
20173
42007
12127
48113
48485
51510
13077
39169
32003
51710
26093
01999
20045
37025
37097
05119
40999
04025
18089
06075
17999
51760
41047
33999
45999
09003
22055
29999
42089
55025
46999
48439
41019
55105
23005
36999
39023
36085
08077
48061
42055
04017
49057
55117
13057
55101
12019
18097
48209
38999
16999
45015
16001
48441
26099
13245
13067
13223
42999
39165

2025-01-16 06:25:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:25:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:25:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:25:45 - snowflake.connector.connection - INFO - closed
2025-01-16 06:25:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:26:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:26:40 - root - INFO - It appears you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't include the **database name** in the table reference. As a result, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

Please modify your query to **fully qualify the table name** by including the database name `"SDOH"`. Here's the corrected query:

```sql
SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
GROUP BY "Maternal_Morbidity_YN"
LIMIT 1000;
```

**Explanation:**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

By including the database name in your query, you provide the SQL engine with the full path to the table, allowing it to locate the table and execute your query successfully.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL client allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
GROUP BY "Maternal_Morbidity_YN"
LIMIT 1000;
```

**Note:** Some SQL clients do not support executing multiple statements in a single execution. If that's the case, you need to execute the `USE DATABASE` command separately from your `SELECT` query.

---

### **Why the Error Occurs**

When your SQL session doesn't have a default database set, the SQL engine requires you to either:

- **Specify the database name** in your query to fully qualify the table name.
- **Set the default database** for your session so that the SQL engine knows where to find your tables.

Since your query doesn't include the database name and there's no default database set, the SQL engine cannot locate the table and returns the error.

---

### **Steps to Resolve the Error**

1. **Modify Your Query to Include the Database Name:**

   ```sql
   SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   GROUP BY "Maternal_Morbidity_YN"
   LIMIT 1000;
   ```

2. **Ensure Correct Quotation Marks:**

   - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
   - Ensure all quotation marks are correctly paired.

3. **Avoid Extra Statements or Characters:**

   - Do not include any other commands or semicolons `;` that might cause the SQL engine to interpret your input as multiple statements.
   - Ensure there's no unintended whitespace or hidden characters.

4. **Run the Query:**

   - Execute the modified query in your SQL client.
   - This should resolve the error and return the `Maternal_Morbidity_YN` values along with their record counts.

---

### **Additional Tips**

- **Set the Default Database (Optional):**

  If you prefer not to include the database name in every query and your SQL environment allows it, you can set the default database for your session:

  ```sql
  USE DATABASE "SDOH";
  ```

  Then, you can run your query as:

  ```sql
  SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
  FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  GROUP BY "Maternal_Morbidity_YN"
  LIMIT 1000;
  ```

  **Remember:** If your SQL client doesn't support multiple statements per execution, execute the `USE DATABASE` command separately.

- **Check for Typos:**

  - Ensure that the database, schema, and table names are spelled correctly.
  - SQL identifiers can be case-sensitive in some environments.

- **Permissions:**

  - Verify that you have the necessary permissions to access the `"SDOH"` database and the `"SDOH_CDC_WONDER_NATALITY"` schema.

---

### **Conclusion**

By updating your query to include the database name, you provide the SQL engine with all the information it needs to locate your table. This should resolve the error and allow your query to execute successfully.

---

If you have any further questions or need additional assistance, feel free to ask!
2025-01-16 06:26:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:26:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:26:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:26:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 06:26:41 - snowflake.connector.connection - INFO - closed
2025-01-16 06:26:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:26:42 - root - INFO - SQL:
SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   GROUP BY "Maternal_Morbidity_YN"
   LIMIT 1000;
Results:
Maternal_Morbidity_YN,Record_Count
1,1875
0,1736
9,226

2025-01-16 06:26:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:26:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:26:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:26:43 - snowflake.connector.connection - INFO - closed
2025-01-16 06:26:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:27:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:27:26 - root - INFO - It appears you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't include the **database name** in the table reference. As a result, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

Please modify your query to **fully qualify the table name** by including the database name `"SDOH"`. Here's the corrected query:

```sql
SELECT DISTINCT "Maternal_Morbidity_Desc"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
LIMIT 1000;
```

**Explanation:**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

By including the database name in your query, you provide the SQL engine with the full path to the table, allowing it to locate the table and execute your query successfully.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL client allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT DISTINCT "Maternal_Morbidity_Desc"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
LIMIT 1000;
```

**Note:** Some SQL clients do not support executing multiple statements in a single execution. If that's the case, you need to execute the `USE DATABASE` command separately from your `SELECT` query.

---

### **Why the Error Occurs**

When your SQL session doesn't have a default database set, the SQL engine requires you to either:

- **Specify the database name** in your query to fully qualify the table name.
- **Set the default database** for your session so that the SQL engine knows where to find your tables.

Since your query doesn't include the database name and there's no default database set, the SQL engine cannot locate the table and returns the error.

---

### **Steps to Resolve the Error**

1. **Modify Your Query to Include the Database Name:**

   ```sql
   SELECT DISTINCT "Maternal_Morbidity_Desc"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
   ```

2. **Ensure Correct Quotation Marks:**

   - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
   - Ensure all quotation marks are correctly paired.

3. **Avoid Extra Statements or Characters:**

   - Do not include any other commands or semicolons `;` that might cause the SQL engine to interpret your input as multiple statements.
   - Ensure there's no unintended whitespace or hidden characters.

4. **Run the Query:**

   - Execute the modified query in your SQL client.
   - This should resolve the error and return the distinct values of `"Maternal_Morbidity_Desc"`.

---

### **Additional Tips**

- **Set the Default Database (Optional):**

  If you prefer not to include the database name in every query and your SQL environment allows it, you can set the default database for your session:

  ```sql
  USE DATABASE "SDOH";
  ```

  Then, you can run your query as:

  ```sql
  SELECT DISTINCT "Maternal_Morbidity_Desc"
  FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  LIMIT 1000;
  ```

  **Remember:** If your SQL client doesn't support multiple statements per execution, execute the `USE DATABASE` command separately.

- **Check for Typos:**

  - Ensure that the database, schema, and table names are spelled correctly.
  - SQL identifiers can be case-sensitive in some environments.

- **Permissions:**

  - Verify that you have the necessary permissions to access the `"SDOH"` database and the `"SDOH_CDC_WONDER_NATALITY"` schema.

---

### **Conclusion**

By updating your query to include the database name, you provide the SQL engine with all the information it needs to locate your table. This should resolve the error and allow your query to execute successfully.

---

If you have any further questions or need additional assistance, feel free to ask!
2025-01-16 06:27:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:27:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:27:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:27:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 06:27:27 - snowflake.connector.connection - INFO - closed
2025-01-16 06:27:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:27:28 - root - INFO - SQL:
SELECT DISTINCT "Maternal_Morbidity_Desc"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
Results:
Maternal_Morbidity_Desc
None checked
At least one checked
Unknown or Not Stated

2025-01-16 06:27:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:27:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:27:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:27:29 - snowflake.connector.connection - INFO - closed
2025-01-16 06:27:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:28:19 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:28:19 - root - INFO - It appears you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't include the **database name** in the table reference. As a result, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

To resolve this error, please modify your query to **fully qualify the table name** by including the **database name** (`"SDOH"`). Here's the corrected query:

```sql
SELECT *
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
LIMIT 1000;
```

**Explanation:**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`

By including the database name in your query, you provide the SQL engine with the full path to the table, allowing it to locate the table and execute your query successfully.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL client allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT *
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
LIMIT 1000;
```

**Note:** Some SQL clients do not support executing multiple statements in a single execution. If that's the case, you need to execute the `USE DATABASE` command separately from your `SELECT` query.

---

### **Why the Error Occurs**

When your SQL session doesn't have a default database set, the SQL engine requires you to either:

- **Specify the database name** in your query to fully qualify the table name.
- **Set the default database** for your session so that the SQL engine knows where to find your tables.

Since your query doesn't include the database name and there's no default database set, the SQL engine cannot locate the table and returns the error.

---

### **Steps to Resolve the Error**

1. **Modify Your Query to Include the Database Name:**

   ```sql
   SELECT *
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
   LIMIT 1000;
   ```

2. **Ensure Correct Quotation Marks:**

   - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
   - Ensure all quotation marks are correctly paired.

3. **Avoid Extra Statements or Characters:**

   - Do not include any other commands or semicolons `;` that might cause the SQL engine to interpret your input as multiple statements.
   - Ensure there's no unintended whitespace or hidden characters.

4. **Run the Query:**

   - Execute the modified query in your SQL client.
   - This should resolve the error and return the records you're expecting.

---

### **Additional Tips**

- **Set the Default Database (Optional):**

  If you prefer not to include the database name in every query and your SQL environment allows it, you can set the default database for your session:

  ```sql
  USE DATABASE "SDOH";
  ```

  Then, you can run your query as:

  ```sql
  SELECT *
  FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
  WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
  LIMIT 1000;
  ```

  **Remember:** If your SQL client doesn't support multiple statements per execution, execute the `USE DATABASE` command separately.

- **Check for Typos:**

  - Ensure that the database, schema, and table names are spelled correctly.
  - SQL identifiers can be case-sensitive in some environments.

- **Permissions:**

  - Verify that you have the necessary permissions to access the `"SDOH"` database and the `"SDOH_CDC_WONDER_NATALITY"` schema.

---

### **Conclusion**

By updating your query to include the database name, you provide the SQL engine with all the information it needs to locate your table. This should resolve the error and allow your query to execute successfully.

---

If you have any further questions or need additional assistance, feel free to ask!
2025-01-16 06:28:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:28:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:28:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:28:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 06:28:20 - snowflake.connector.connection - INFO - closed
2025-01-16 06:28:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:28:21 - root - INFO - SQL:
SELECT *
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
   LIMIT 1000;
Results:
Year,County_of_Residence,County_of_Residence_FIPS,Maternal_Morbidity_Desc,Maternal_Morbidity_YN,Births,Ave_Age_of_Mother,Ave_OE_Gestational_Age_Wks,Ave_LMP_Gestational_Age_Wks,Ave_Birth_Weight_gms,Ave_Pre_pregnancy_BMI,Ave_Number_of_Prenatal_Wks
2016-01-01,"Los Angeles County, CA",06037,None checked,1,121976,29.91,38.56,38.66,3260.0,26.17,12.0
2016-01-01,"Los Angeles County, CA",06037,At least one checked,0,1105,29.44,38.5,38.59,3261.21,25.22,11.38
2016-01-01,"Los Angeles County, CA",06037,Unknown or Not Stated,9,11,30.09,36.88,39.12,3201.8,25.82,8.86

2025-01-16 06:28:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:28:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:28:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:28:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:28:22 - snowflake.connector.connection - INFO - closed
2025-01-16 06:28:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:28:23 - root - INFO - SQL:
SELECT "geo_id", "poverty"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR"
    LIMIT 1000;
Results:
Too long, hard cut:
geo_id,poverty
45005,2519.0
46035,2283.0
45081,3764.0
46102,7622.0
21231,5138.0
28061,3641.0
13107,6465.0
22081,1953.0
28043,5090.0
17065,1219.0
16081,1283.0
30067,1905.0
51520,3498.0
12041,3730.0
28153,5144.0
28129,3640.0
30095,675.0
13197,2151.0
18165,2077.0
05103,5970.0
51007,1465.0
21229,2060.0
22047,5465.0
26003,1096.0
08063,1033.0
16043,1475.0
20059,3357.0
20001,1916.0
48089,2854.0
48177,3443.0
39117,3816.0
05061,2605.0
19129,1203.0
51077,2899.0
51181,804.0
21079,3259.0
40095,2613.0
18045,2081.0
48239,1863.0
29013,2623.0
38053,1361.0
37149,2902.0
29139,1999.0
19015,2659.0
22111,5438.0
51690,3159.0
31173,2168.0
18169,3839.0
21007,1298.0
49041,2973.0
18041,4472.0
38003,1025.0
13005,1949.0
01087,4442.0
55119,2511.0
29149,2809.0
27071,2139.0
19047,3681.0
26143,4644.0
28051,8046.0
45027,8400.0
48063,2422.0
37065,13750.0
51001,6341.0
47097,6014.0
29121,2845.0
17181,2667.0
21027,3350.0
27055,1910.0
13303,4996.0
27157,1399.0
27093,2116.0
39137,2648.0
35029,7153.0
39127,7322.0
39123,4464.0
18119,3074.0
17051,3240.0
45033,9431.0
29225,6737.0
55069,2616.0
37053,2468.0
51067,7950.0
13087,6885.0
18073,2488.0
17191,2552.0
21183,5003.0
49007,3128.0
48363,4916.0
21121,10613.0
45089,9056.0
21089,6268.0
27091,2308.0
40113,6948.0
49015,1258.0
26105,4601.0
56013,5585.0
39033,6566.0
29159,7000.0
48049,6390.0
18099,5351.0
06043,2849.0
13025,3846.0
27119,3950.0
18107,4635.0
13207,3419.0
48325,6340.0
08049,1523.0
48449,6654.0
27067,4732.0
18069,4227.0
27059,2732.0
48001,7561.0
55093,4572.0
06009,5641.0
34033,8692.0
48409,9397.0
01109,8074.0
29021,15652.0
51019,7028.0
16005,14875.0
48251,18706.0
13139,33350.0
40017,10237.0
20169,7986.0
27171,7150.0
23031,18486.0
48291,12448.0
18017,5640.0
21037,13138.0
13095,26982.0
27099,5403.0
37045,19866.0
18163,29710.0
37057,26221.0
45015,25772.0
18067,13665.0
16083,12417.0
13313,20126.0
22015,18867.0
55005,5467.0
40021,10380.0
56005,3898.0
22097,23007.0
30093,6555.0
39101,10299.0
21029,7904.0
37109,11907.0
49043,3084.0
01103,19172.0
53025,15441.0
20103,7238.0
54011,20249.0
22045,14437.0
18039,29381.0
21093,14847.0
26103,10403.0
18095,20618.0
40019,7395.0
05069,16959.0
36009,13265.0
53041,12131.0
29051,9067.0
05031,18682.0
39063,9877.0
28059,21818.0
26045,11895.0
13223,15974.0
12061,20302.0
17037,18001.0
55063,16675.0
12071,104219.0
45043,11514.0
21235,9191.0
42099,3921.0
21101,8696.0
06105,2607.0
47089,7724.0
46129,576.0
56029,2288.0
51109,4086.0
17005,2553.0
42123,5042.0
08097,1507.0
17141,5617.0
17133,1480.0
47073,10706.0
13233,8229.0
17195,6388.0
35015,7638.0
48373,7706.0
51670,4509.0
53017,5330.0
27147,3396.0
12107,19120.0
27135,1286.0
39043,9584.0
16011,6008.0
37027,14137.0
53031,3541.0
41009,6598.0
53045,10136.0
47113,18345.0
27141,6382.0
48441,22653.0
12015,20511.0
47165,16543.0
55139,19573.0
29101,8426.0
39023,23792.0
37089,14559.0
53075,12246.0
39173,16797.0
39099,40823.0
06107,127130.0
06031,28661.0
04001,25658.0
51191,7569.0
37087,9851.0
19179,6033.0
21195,15528.0
55021,4729.0
41033,16177.0
17007,5908.0
22101,11227.0
22105,27460.0
19013,19605.0
02130,1453.0
48209,28863.0
40031,19294.0
18177,12903.0
56025,8333.0
06033,15561.0
29169,6372.0
22087,8784.0
05125,9706.0
19061,11616.0
04027,40330.0
37129,37167.0
37167,10047.0
45085,21063.0
33013,12150.0
48171,2725.0
39131,5735.0
21205,5510.0
56023,1616.0
55007,1693.0
12027,9920.0
27023,1285.0
55077,1730.0
45037,4002.0
05059,5347.0
26053,2908.0
54057,4386.0
17015,1663.0
27161,1387.0
22085,4612.0
55137,2646.0
47057,4578.0
18049,2828.0
54009,2851.0
08051,2319.0
26029,3208.0
22031,7097.0
54051,4600.0
22119,9693.0
55047,2076.0
40015,5883.0
19141,1278.0
26051,5099.0
39027,6169.0
46135,3055.0
19065,2581.0
26023,7368.0
39135,5536.0
28113,12290.0
47019,13110.0
42083,6705.0
31111,4200.0
19181,3402.0
08117,3522.0
37113,6183.0
36099,3952.0
56037,4868.0
49021,10107.0
05035,11991.0
47167,8378.0
19125,3108.0
17177,7203.0
16065,12226.0
36037,7245.0
04007,11097.0
37099,8646.0
37189,14797.0
13255,14798.0
08077,23633.0
42055,17504.0
29161,8620.0
53021,14019.0
28089,12720.0
05045,18590.0
41071,15255.0
55009,29105.0
04015,37884.0
20111,6671.0
21151,17222.0
21073,7054.0
28071,11902.0
40145,8206.0
37023,17135.0
38035,11507.0
28121,13568.0
37001,28123.0
36073,6089.0
39145,17569.0
16069,5266.0
04023,10083.0
55043,7335.0
27007,8247.0
31001,3314.0
27009,5220.0
29213,9264.0
51590,9135.0
35005,14196.0
32023,7346.0
06015,5219.0
35031,28089.0
35009,10676.0
48321,7877.0
18043,9050.0
19049,4424.0
12005,27363.0
06089,30945.0
51680,16598.0
39057,19929.0
21117,21805.0
04003,22184.0
46013,4076.0
47011,18291.0
39009,17301.0
35028,904.0
39109,11374.0
20161,14347.0
12083,60266.0
36121,4312.0
26151,6476.0
35039,9275.0
40089,7705.0
49047,3406.0
17107,2996.0
51195,7865.0
24011,5484.0
37091,5217.0
37175,4598.0
17117,5875.0
08075,3394.0
16017,6092.0
39171,5176.0
45025,11158.0
39143,7757.0
40013,7551.0
16013,2707.0
22069,11401.0
39087,11183.0
47043,8019.0
18077,4344.0
13295,12273.0
53047,8637.0
41007,5187.0
01121,16119.0
39141,13419.0
08045,6274.0
51015,6550.0
01095,19138.0
53007

2025-01-16 06:28:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:28:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:28:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:28:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:28:24 - snowflake.connector.connection - INFO - closed
2025-01-16 06:28:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:28:24 - root - INFO - SQL:
SELECT "geo_id", "poverty"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR"
    LIMIT 1000;
Results:
Too long, hard cut:
geo_id,poverty
29079,2008.0
13071,11444.0
17203,2793.0
19139,4442.0
46011,4815.0
13145,2382.0
19029,1970.0
12055,18495.0
51830,2278.0
51683,3633.0
27047,3536.0
45073,13993.0
51610,405.0
56039,1561.0
17121,6659.0
13299,8240.0
36053,7397.0
17049,3798.0
39103,10764.0
42127,5323.0
21209,5837.0
31079,8133.0
24015,9533.0
45059,13280.0
33019,3953.0
20055,5914.0
24029,2359.0
36025,7187.0
42117,5461.0
51099,1449.0
51685,1643.0
24017,10666.0
50001,2638.0
27013,11321.0
44009,11569.0
24037,8839.0
36107,5453.0
36035,8461.0
13247,14232.0
39031,5424.0
17091,16059.0
26159,11733.0
51061,4190.0
39139,17674.0
27025,2871.0
17183,15043.0
17165,4920.0
17027,3200.0
48139,17014.0
51600,1797.0
51630,4169.0
37179,20626.0
51680,15311.0
51540,10759.0
47163,25508.0
50003,4443.0
42107,17134.0
51199,3446.0
34009,9796.0
05131,28211.0
24041,3692.0
47187,9704.0
13113,6907.0
48397,5222.0
33017,11127.0
12091,21997.0
53041,11987.0
47179,20127.0
50023,6658.0
45077,20987.0
48485,22027.0
36057,9486.0
50025,5876.0
27027,7236.0
53029,7414.0
42007,17867.0
48187,15774.0
12109,20330.0
24047,5228.0
27145,19321.0
37151,23520.0
31153,9155.0
36069,10343.0
51650,19633.0
33009,8993.0
06093,8915.0
42013,18479.0
48309,45691.0
29021,14698.0
26149,9403.0
18091,16924.0
48375,24720.0
55127,12405.0
53009,12353.0
13215,41295.0
27019,3934.0
13217,17328.0
45007,29776.0
17113,24110.0
13117,13643.0
08101,31467.0
51121,21058.0
10001,21743.0
18063,7832.0
42089,18309.0
24009,5114.0
18127,17954.0
54061,20763.0
13151,24638.0
34037,7573.0
17111,22339.0
48135,18882.0
13063,58701.0
24043,18045.0
42129,36111.0
36079,4719.0
05143,38855.0
06061,30473.0
24027,16001.0
55105,22550.0
53035,24850.0
17197,50149.0
13051,47119.0
25005,65842.0
22033,83483.0
27123,78410.0
10005,25479.0
36081,317142.0
06001,181194.0
48201,751985.0
36061,277483.0
37063,47237.0
42071,54244.0
37119,136399.0
12086,505182.0
25009,82434.0
48439,264575.0
12099,189156.0
27053,138478.0
17031,821572.0
31109,40887.0
34021,40450.0
37051,57582.0
36111,22682.0
12021,45385.0
51041,23707.0
08069,40006.0
45045,64347.0
53073,31630.0
08035,11636.0
34029,63181.0
12009,75104.0
34007,65858.0
32031,58642.0
25021,44279.0
24005,73560.0
36055,107481.0
39061,134499.0
18097,182317.0
13089,127299.0
29095,108026.0
49035,114135.0
25017,125491.0
08059,43339.0
48491,35067.0
41067,58214.0
51013,18502.0
29189,95974.0
47037,111103.0
41051,126836.0
39049,203877.0
06071,374810.0
04019,179569.0
27137,29574.0
13077,15900.0
06023,27481.0
55059,23594.0
24013,8993.0
15009,16147.0
34001,40750.0
20209,34641.0
36021,6806.0
36093,18684.0
17019,41088.0
34041,8602.0
36043,9201.0
06113,39686.0
50007,17057.0
06007,44977.0
55133,19634.0
22073,36450.0
36109,18411.0
40027,33054.0
51153,30938.0
34005,28066.0
47149,34716.0
45083,45020.0
17167,30348.0
13059,38618.0
51810,35276.0
29047,20693.0
17097,58251.0
51087,33510.0
17119,35099.0
33015,14402.0
06095,48623.0
15001,33703.0
34039,56826.0
36059,78657.0
42029,34446.0
42003,149568.0
08041,72699.0
45079,62671.0
01073,113368.0
39151,50921.0
53061,67118.0
09009,100732.0
12127,81729.0
24510,133793.0
06075,99096.0
12011,262306.0
04013,644476.0
13067,79127.0
13185,27410.0
36083,19322.0
54011,21376.0
06053,60933.0
24025,18512.0
26005,12169.0
36091,14681.0
25003,13778.0
12087,9562.0
01097,78256.0
29183,21362.0
08001,59050.0
42011,54762.0
25013,78315.0
51710,46251.0
35049,20817.0
48157,56959.0
34013,130583.0
06013,108630.0
06085,162525.0
36103,105522.0
48029,304792.0
48453,159948.0
42017,37912.0
40143,97358.0
09001,81422.0
24031,72085.0
55079,191973.0
08031,100611.0
06081,54981.0
29510,76472.0
47157,191520.0
25025,144661.0
42101,393924.0
42025,8053.0
36105,11583.0
36089,19142.0
49011,20755.0
49057,29277.0
24001,10916.0
51740,16302.0
36051,8497.0
13127,15773.0
26139,25806.0
06017,17996.0
37101,26622.0
42037,9821.0
37097,21307.0
06055,11285.0
36077,8966.0
45041,26444.0
48091,11827.0
42027,26291.0
48061,129912.0
13073,12269.0
51179,6517.0
15007,6420.0
30063,17695.0
33005,7297.0
51003,9581.0
35061,16266.0
08037,4128.0
49053,21878.0
54037,5363.0
34011,26781.0
37025,22481.0
01081,33132.0
42125,19629.0
42069,31419.0
48183,21028.0
36087,45563.0
17093,6889.0
51107,13727.0
51550,21962.0
34019,5403.0
45013,20786.0
53077,46428.0
13097,19690.0
44003,12687.0
51770,21046.0
27037,28284.0
25015,19052.0
17163,44376.0
06041,20515.0
06099,91210.0
29077,50765.0
53011,46542.0
34015,22815.0
06077,121296.0
25023,39748.0
41005,35549.0
36119,89829.0
24033,82328.0
44007,101489.0
32003,304449.0
36047,570731.0
22071,95346.0
05119,67056.0
34023,69297.0
12117,52509.0
36005,422197.0
51059,69528.0
06065,362215.0
13057,22072.0
06087,38605.0
39017,47018.0
39089,19591.0
34025,47055.0
51760,52942.0
48085,62439.0
40109,128566.0
53033,212509.0
11001,111025.0
10003,64082.0
42077,46596.0
31055,72562.0
53053,101328.0
36029,133648.0
15003,86868.0
06059,378459.0
12103,127948.0
55025,63003.0
37183,101256.0
35001,119697.0
42103,5452.0
41029,35120.0
37135,18379.0
01125,33597.0
39093,40477.0
09005,12400.0
36085,60735.0
51177,10296.0
45091,30418.0
08013,39882.0
36065,3648

2025-01-16 06:28:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:28:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:28:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:28:25 - snowflake.connector.connection - INFO - closed
2025-01-16 06:28:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:29:01 - root - INFO - I understand that you're encountering the error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error indicates that your SQL session does not have a **current database** set, and your query does not include the **database name** in the table reference. As a result, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

To resolve this error, you need to **fully qualify the table name** by including the **database name** (`"SDOH"`) in your query. Here's the corrected query:

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2017-01-01'
LIMIT 1000;
```

**Explanation:**

- **Database Name:** `"SDOH"`
- **Schema Name:** `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name:** `"COUNTY_NATALITY"`
- **Fully Qualified Table Name:**

  ```sql
  "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
  ```

By including the database name in your query, you provide the SQL engine with the complete path to the table, allowing it to locate the table and execute your query successfully.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL environment allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your original query without specifying the database name:

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2017-01-01'
LIMIT 1000;
```

**Important Notes:**

- If your SQL client does not support executing multiple statements at once, you need to execute the `USE DATABASE` command separately before running your `SELECT` query.
- Some SQL environments do not permit executing `USE DATABASE` in the same execution block as other queries.

---

### **Why This Works**

- **Error Cause:** The SQL engine cannot perform the `SELECT` because it doesn't know which database to use.
- **Solution:** By specifying the database, you provide a complete path to the table, allowing the SQL engine to find it.

---

### **Steps to Resolve the Error**

1. **Modify Your Query to Include the Database Name:**

   Copy and paste the corrected query:

   ```sql
   SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2017-01-01'
   LIMIT 1000;
   ```

2. **Ensure No Additional Statements Are Included:**

   - Do not include `USE DATABASE` in the same execution if your environment disallows multiple statements.
   - Avoid extra semicolons `;` or unintended characters that might split your query into multiple statements.

3. **Run the Query:**

   Execute the modified query in your SQL client.

---

### **Additional Tips**

- **Consistency in Quoting:**

  - Use double quotes `"` around identifiers (database names, schema names, table names, column names) if required by your SQL dialect.
  - Ensure that all identifiers are correctly quoted and that there's no mismatch in quotation marks.

- **Avoid Mixing Commands:**

  - If your environment doesn't support multiple statements per execution, don't combine `USE DATABASE` with your `SELECT` query.

- **Check for Hidden Characters:**

  - If copying the query from a document or email, paste it into a plain text editor first to remove any formatting or hidden characters before copying it into your SQL client.

- **Permissions:**

  - Confirm that you have the necessary permissions to access the `"SDOH"` database and the specified schema and table.

- **Validate Names:**

  - Ensure that `"SDOH"`, `"SDOH_CDC_WONDER_NATALITY"`, and `"COUNTY_NATALITY"` are correctly spelled and capitalized, as some SQL environments are case-sensitive.

---

### **Summary**

By including the database name in your query, you provide the SQL engine with the necessary information to locate your table. This should resolve the error and allow your query to execute successfully.

---

**Feel free to let me know if you have any other questions or need further assistance!**
2025-01-16 06:29:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:29:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 626
2025-01-16 06:29:03 - snowflake.connector.connection - INFO - closed
2025-01-16 06:29:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:03 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2017-01-01'
   LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births
41043,1456
44009,852
01101,3172
22033,5975
48061,6276
48479,4872
06025,2894
25015,1003
22017,3231
22015,1627
16055,1811
13215,2791
22109,1544
01097,5607
39003,1244
37133,4061
17091,1289
53073,2163
54039,1929
36087,5481
28999,26037
22999,19602
06041,2237
36109,767
24510,7941
41017,1808
01089,4253
29510,4138
45041,1695
22105,1986
48329,2826
48355,4520
06023,1372
36111,1453
01103,1435
22079,1724
22005,1704
48135,2750
48215,14108
20177,2074
28049,3126
22073,2152
22019,2987
28121,1732
33013,1305
50007,1450
47157,13163
23001,1241
33999,2784
34029,8597
50999,4205
45085,1386
16019,1876
01073,8706
20173,6924
24017,1842
12099,15050
45019,4803
12001,2824
48309,3446
45013,2012
12999,13012
21999,33722
42049,2994
39061,10833
34011,1839
39085,2198
06081,8585
04027,2960
53005,2563
37001,1940
08031,9594
26005,1306
39109,1154
04021,4392
12057,17416
45003,1860
45091,2958
37057,1761
06019,14541
26145,2244
48113,39263
13113,886
34999,1477
41039,3459
36013,1344
25021,7134
08077,1624
42129,2953
12011,22322
17143,2533
29019,2072
48039,4630
39035,14550
13051,3712
45079,4646
01117,2283
06083,5531
26065,3237
05143,3199
26075,1772
34023,9123
36029,9870
48453,15142
36001,3083
37025,2593
29097,1596
39999,30558
45015,2697
08013,2627
25017,16736
41005,3999
23999,3947
53061,9883
41051,8573
24037,1352
49005,2194
05999,20701
20999,16623
55079,13427
13015,1307
24005,9844
54999,15385
42089,1537
11001,9560
55127,917
55139,1833
19999,21672
51510,2647
37089,1040
55133,3863
12115,2824
37097,1858
06073,41230
18141,3497
26125,13235
17999,21878
12073,3132
08069,3313
49999,6570
37049,1386
18157,2240
17031,64374
37135,1179
19103,1751
34027,4636
42019,1742
55105,1911
37051,5506
26021,1737
01015,1338
48187,1773
24033,12393
48441,2094
13067,9588
49057,3766
30999,8763
19113,2799
39017,4466
06029,13326
06065,29857
13117,2302
51153,6675
24031,12681
37119,14753
12113,1924
24015,1145
34001,2804
42075,1581
12127,4986
53999,12382
06079,2550
27137,1989
44999,1061
09005,1402
09007,1255
42999,16218
40017,1763
17119,2892
47189,1567
47165,2193
01055,1213
48181,1580
12019,2197
36063,2114
06059,37369
06031,2373
37159,1587
34019,952
48367,1498
42079,3284
13045,1613
31999,11002
16999,10587
26147,1462
02020,4136
51179,1746
36069,984
12085,1271
25999,866
53067,3067
06097,4642
01125,2538
45999,13038
18167,1224
40143,9120
47149,4030
18057,3835
39173,1401
17197,7427
26115,1482
10003,6431
35013,2674
51700,2717
08035,3368
01081,1898
48303,4017
37999,31498
42001,972
23011,1132
23031,1812
06053,5810
39133,1351
51177,1505
36055,7893
42055,1786
13021,2244
29189,11374
45063,3210
13185,1671
48183,1623
40027,2781
22051,5835
48999,56751
37155,1782
34021,4081
49053,2202
20091,7223
21111,9908
15003,12487
06047,4202
06037,116950
34007,6022
13313,1357
34035,3068
24043,1638
17093,1481
18999,29270
04003,1335
27163,2724
16001,4842
42041,2612
42029,5323
28059,1661
13151,2581
22103,2865
20045,1134
12095,16890
04017,1508
13089,10933
26025,1535
06085,22133
04025,1798
26045,1097
32031,5210
34041,935
55039,1066
08001,6610
13223,1602
39057,1744
08123,4250
36999,17960
25001,1546
33011,4178
42013,1205
26017,1009
04013,52633
04999,3002
48491,6432
18063,1720
34017,10165
39089,1866
39139,1317
17089,6339
48091,1480
13097,1729
45077,1169
09009,8641
37191,1611
41029,2252
06039,2120
36065,2555
27053,16322
47179,1236
55131,1291
40109,11554
20209,2541
48245,3475
12101,5140
19163,2117
29077,3339
34003,9339
12117,4774
36007,1979
49049,11618
17179,1450
37021,2393
45007,2298
13057,2582
42051,1296
53053,11297
18105,1249
42027,1171
25009,8655
51013,2990
41047,4467
48423,3055
28033,2128
47999,30776
12015,1060
40999,23261
12009,5201
36061,17504
12081,3476
36083,1589
39165,2262
51999,38295
18039,3087
17043,10337
46099,2911
44003,1552
55117,1204
53057,1429
39155,2107
48451,1558
01999,22881
12071,6681
48027,5976
48439,27820
35045,1472
21067,3912
40031,1735
49011,5481
06089,2008
25013,4975
08059,5819
36093,1814
51041,3845
25025,9359
39103,1720
41067,6570
05119,5259
37179,2382
13073,1666
22063,1828
45051,3167
13063,3813
08101,1776
22055,3339
39041,2074
13121,13363
12105,7849
42043,3404
51550,2902
24027,3528
17097,7607
39023,1614
42021,1271
15009,1883
37085,1886
06007,2386
06055,1291
42071,7258
05125,1275
25003,993
42101,21288
48375,1714
12031,13182
34031,6790
34025,5737
42085,1092
29047,3040
17099,1180
42095,2789
42003,12882
27145,2054
32999,3597
30111,1898
55009,3323
38999,8203
24003,6898
36085,5444
39029,1025
36091,2135
33015,2669
06087,2658
36071,5092
55063,1188
39169,1502
06113,2272
17037,1142
04019,10983
08041,9493
18089,5601
48041,2692
06071,29643
31109,3925
48085,10919
51650,1736
21093,1449
17113,2004
47037,10063
48209,2584
47009,1220
04005,1508
32003,26949
39049,18886
42011,4719
24013,1570
27999,22804
34005,4424
25005,5733
42077,4291
17161,1668
16027,3065
51810,5710
22071,4619
01069,1295
26163,23279
47065,4235
51760,3031
06077,9928
51087,3895
04015,1753
39045,1755
12111,3019
08005,7574
36119,10400
37147,2051
09003,9204
15999,857
34037,1213
27123,7686
42091,8702
53015,1295
48485

2025-01-16 06:29:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:29:04 - snowflake.connector.connection - INFO - closed
2025-01-16 06:29:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:29:51 - root - INFO - It appears you're encountering the following error:

```
090105 (22000): Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

This error occurs because your SQL session does not have a **current database** set, and your query doesn't specify the **database name** in the table reference. Without knowing which database to use, the SQL engine cannot locate the table you're querying.

---

### **Solution: Include the Database Name in Your Query**

To resolve this error, you need to **fully qualify the table name** by including the database name `"SDOH"` in your query. Here's how you can modify your query:

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2018-01-01'
LIMIT 1000;
```

By specifying the database name, the SQL engine can locate the table and execute your query successfully.

---

### **Explanation**

- **Database Name**: `"SDOH"`
- **Schema Name**: `"SDOH_CDC_WONDER_NATALITY"`
- **Table Name**: `"COUNTY_NATALITY"`
- **Fully Qualified Table Name**: `"SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"`

When your SQL session doesn't have a default database set, the SQL engine requires you to provide the database name in your query to locate the table.

---

### **Alternative Solution: Set the Default Database for Your Session**

If your SQL environment allows, you can set the default database for your session using the `USE DATABASE` command:

```sql
USE DATABASE "SDOH";
```

After setting the default database, you can run your query without specifying the database name:

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2018-01-01'
LIMIT 1000;
```

**Note**: Some SQL clients do not allow multiple statements in a single execution. If that's the case, you need to execute `USE DATABASE` separately from your query.

---

### **Next Steps**

1. **Modify your query to include the database name**, as shown above.
2. **Run the updated query** in your SQL client.
3. **Ensure that you have the necessary permissions** to access the `"SDOH"` database and the specified schema and table.

---

### **Additional Tips**

- **Check for Typos**: Ensure that all names are spelled correctly and case-sensitive if applicable.
- **Consistency in Quoting**: Use double quotes `"` around identifiers if required by your SQL dialect. Make sure quotes are properly closed.
- **Avoid Multiple Statements**: If your SQL client doesn't support multiple statements per execution, don't include `USE DATABASE` and your query together.

---

### **Example Execution**

```sql
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2018-01-01'
LIMIT 1000;
```

Executing this query should resolve the error and return the results you're expecting.

---

### **Conclusion**

By including the database name in your query, you provide the SQL engine with the necessary information to locate your table and execute the query successfully.

---

If you have any further questions or need additional assistance, feel free to ask!
2025-01-16 06:29:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:29:52 - snowflake.connector.cursor - INFO - Number of results in first chunk: 626
2025-01-16 06:29:53 - snowflake.connector.connection - INFO - closed
2025-01-16 06:29:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:53 - root - INFO - SQL:
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2018-01-01'
LIMIT 1000;
Results:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births
01015,1265
40143,8933
13045,1540
26145,2182
12057,17126
18089,5785
22103,2932
12097,4437
31153,2386
17089,6337
35045,1444
20045,1116
48121,9857
48209,2572
49011,5302
12081,3452
09009,8519
06081,8330
06079,2445
16027,2918
13057,2562
06099,7364
06053,5895
36071,5065
06041,2127
22079,1717
22015,1693
45063,3224
13151,2705
22071,4656
12086,31032
05119,5123
48041,2584
49035,15998
32003,26773
47163,1506
21111,9584
36005,20121
12069,3368
29999,30650
51087,3911
06113,2135
42095,2909
27139,1717
41039,3327
17179,1391
55999,20974
53011,5482
37151,1520
34029,9015
29510,4127
48355,4569
18097,14036
48141,11721
12001,2733
13135,10855
47189,1651
37049,1337
55105,1869
42079,3310
34001,2797
12053,1617
08031,9424
39165,2306
12017,1025
18127,1677
37063,4152
27109,2035
53015,1235
36089,1080
39003,1248
13021,2063
17143,2504
13121,12652
05143,3227
20999,16535
13077,1575
08059,5654
27999,22480
29077,3309
19103,1735
26045,1106
55117,1270
25027,8335
41005,3886
06087,2449
53073,2161
29019,2050
48183,1644
17119,2865
18095,1409
22063,1771
48187,1848
48201,67095
18003,5240
48113,38182
05007,3778
46099,2891
34017,10234
12091,2717
40031,1681
08005,7401
48251,2110
37019,987
24027,3405
16001,4861
37051,5401
36027,2549
23031,1865
27171,1767
06061,3663
42999,15927
44999,1015
13215,2864
01081,1810
26121,2051
40999,23234
55079,13032
12011,21928
18035,1072
26163,22910
17115,1269
39035,13870
06047,3875
42107,1272
42089,1518
17043,10298
36093,1840
04021,4498
24031,12401
55131,1300
08999,8105
15003,12168
20091,7140
35049,1180
09003,9239
37097,1891
39999,30582
06017,1674
42041,2597
53033,24347
53999,12152
06089,1966
53035,2994
36075,1217
22999,18874
18167,1131
48303,3896
12015,1040
12033,3733
45019,4861
21093,1431
48139,2214
24021,2969
26075,1741
26005,1416
13313,1300
34041,1020
06111,9065
26021,1674
26081,8648
42007,1575
42085,1078
55059,1788
08001,6293
29071,1174
51041,3841
36047,38574
25025,9072
50999,4040
33999,2753
25001,1496
36111,1546
54039,1864
22055,3242
29189,11368
48029,26562
55039,1073
17999,21369
12111,3123
29047,3105
45015,2801
12071,6793
45045,6225
26115,1468
48027,5889
06075,8697
25003,1002
04027,3034
25013,4926
30063,1063
27123,7517
53053,11478
27053,15845
06095,5033
51177,1503
25023,5028
34999,1433
41029,2199
42027,1171
17167,2240
48061,6306
45051,3153
01003,2290
22105,1916
05999,20422
31055,8342
34007,6157
34023,8872
39173,1267
31999,10867
12101,5084
42081,1202
24025,2638
26093,1704
36065,2500
42071,6975
23999,3952
41051,8211
45079,4693
48245,3468
47125,3513
29095,9065
13059,1351
21999,33368
39023,1552
39061,10835
48181,1662
55133,3918
42075,1562
37057,1751
32031,5399
37179,2456
37085,1845
12061,1294
42051,1326
26017,947
22017,3072
22033,5780
28999,25808
48441,2044
49999,6460
39045,1669
12073,2915
26099,9171
39007,1108
08069,3219
45013,1912
35999,9360
08041,9107
42129,2849
34019,968
36085,5186
25021,7033
37089,1093
36069,966
06007,2430
16055,1732
26025,1537
41043,1518
25999,802
53063,5737
22073,2063
20209,2614
20177,2123
01125,2406
21067,3921
24510,7681
48439,27280
34013,10425
13089,10785
13999,41000
12113,1953
42133,4707
17097,7095
39153,5934
12009,5309
37025,2509
36103,15278
39057,1720
06037,110271
18019,1396
51650,1645
42011,4602
49049,11514
12083,3476
48423,2922
08123,4243
42045,6453
48367,1537
24037,1328
25009,8377
33011,4144
41999,9558
41017,1827
25017,16603
06055,1204
08101,1829
24033,12159
45007,2256
01117,2250
47037,9984
42049,2788
26049,4558
37155,1699
12031,12973
06071,28994
47179,1247
26147,1543
51550,2928
21015,1695
42125,2063
36061,17020
39139,1353
35013,2587
36001,2886
19013,1632
24003,6781
33017,1143
36091,2022
36109,735
23011,1161
06023,1364
01101,3139
22019,3057
47157,13124
48329,3011
05045,1467
13117,2306
47187,2322
17091,1237
51710,3452
47065,4249
48085,11147
56999,6562
29183,4306
05125,1339
13245,2918
18157,2158
12999,12991
45077,1145
51059,13841
34015,2762
37035,1693
39133,1392
06999,9938
37071,2525
28049,3041
22109,1506
48479,4693
28033,2139
01055,1191
18163,2115
01069,1368
48451,1473
28059,1606
17163,3109
40027,2833
47009,1306
04005,1506
37001,1958
17099,1092
39151,4075
30999,8642
47165,2150
18999,29235
17113,1817
37999,31164
06083,5268
38999,8183
06029,12916
55139,1798
04003,1354
51179,1745
42019,1809
44003,1502
09005,1364
27037,5140
37133,3923
01073,8437
22005,1687
12099,15066
04019,10671
48381,1645
17197,7318
12019,2182
19193,1393
48091,1526
36081,28042
55009,3158
26139,3138
36013,1299
53005,2552
09015,1062
21117,2191
06059,35679
34005,4365
04025,1772
12085,1251
39085,2212
18105,1246
37119,14650
06107,6905
37021,2482
44009,870
06097,4526
13073,1817
36045,1864
41019,1054
39103,1675
06025,2629
36087,5719
45999,12921
01999,22362
36063,2100
37159,1593
06019,14465
48309,3460
29097,1570
18081,1877
24017,1863
05131,1662
04013,51854
40017,1864
26065,3049
39049,18338
51153,6484
55073,1561
06013,12002
13015,1173
27003,4241
42077,4352
37191,1639
04015,1796
12115,2878
26161,3527
23005,2717
18039,3117
50007,1392
33013,1305
28121,1744
01089,4262
16019,1815
40109,11255
48039,4734
20

2025-01-16 06:29:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:29:54 - snowflake.connector.connection - INFO - closed
2025-01-16 06:29:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 400 model_error"
2025-01-16 06:29:55 - root - INFO - Input sql:
SELECT "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc", COUNT(*) AS "Count"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    GROUP BY "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc"
    LIMIT 1000;
The error information is:
090105 (22000): 01b9be85-0004-7b0e-0001-11c300c9fb42: Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
2025-01-16 06:29:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:29:56 - snowflake.connector.connection - INFO - closed
2025-01-16 06:29:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:57 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 400 model_error"
2025-01-16 06:29:57 - root - INFO - Input sql:
SELECT "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc", COUNT(*) AS "Count"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    GROUP BY "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc"
    LIMIT 1000;
The error information is:
001003 (42000): 01b9be85-0004-7b0f-0001-11c300ca048e: SQL compilation error:
syntax error line 1 at position 0 unexpected 'E'.
2025-01-16 06:29:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:29:59 - snowflake.connector.connection - INFO - closed
2025-01-16 06:29:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:29:59 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 400 model_error"
2025-01-16 06:29:59 - root - INFO - Input sql:
SELECT "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc", COUNT(*) AS "Count"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    GROUP BY "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc"
    LIMIT 1000;
The error information is:
001003 (42000): 01b9be85-0004-7b0e-0001-11c300c9fb46: SQL compilation error:
syntax error line 1 at position 0 unexpected 'E'.
2025-01-16 06:29:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:29:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:29:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:30:01 - snowflake.connector.connection - INFO - closed
2025-01-16 06:30:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:30:01 - root - INFO - SQL:
E
Results:
001003 (42000): 01b9be86-0004-7b0e-0001-11c300c9fb4a: SQL compilation error:
syntax error line 1 at position 0 unexpected 'E'.
2025-01-16 06:30:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:30:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:30:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:30:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:30:03 - snowflake.connector.connection - INFO - closed
2025-01-16 06:30:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:30:03 - root - INFO - SQL:
SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
    LIMIT 1000;
Results:
Too long, hard cut:
geo_id
28103
21191
17065
45081
39111
16051
05061
21131
47067
13107
40063
49015
29186
29013
21121
29207
17147
21183
28107
51011
39115
51077
22047
17025
45049
21225
40153
30009
40075
48089
22111
28079
05047
19015
45043
21113
48257
45047
19013
22109
47109
40095
48239
40089
56007
39117
51001
05023
56023
17191
47073
51191
06109
04005
48227
22063
42035
21015
41061
50027
27045
51085
01117
01055
22059
47081
19129
22043
48177
46123
28093
21017
19039
27055
32013
26097
38093
51109
39013
30013
28061
26055
21231
27069
28129
30067
28153
30095
29015
27023
39001
05017
31101
49041
08065
05059
05091
45027
17193
13293
48427
28051
22077
35039
39021
40121
29023
47043
35015
54011
46005
55139
22105
22045
01101
08049
16011
39043
06103
06045
27131
48049
41057
55135
04009
37099
18053
21047
39139
42019
17195
40037
21029
42055
21229
20117
53069
12049
19029
40021
47101
56037
49053
51099
26107
28151
16069
30029
53045
39099
17021
19045
05051
01109
13153
01003
37023
55141
41007
18061
35061
22019
27041
40091
51173
39027
56009
01033
39047
55075
36023
06035
48361
42085
37037
39155
16083
54055
19153
30111
37025
40125
36045
17015
27091
36089
48259
05033
20059
39147
18095
31081
05029
28141
51155
26009
29107
24029
37149
29007
13037
21235
22003
28081
37093
56001
55101
17103
13299
27135
32005
53041
48479
12119
42083
51790
29113
46013
12105
01073
22099
13223
39025
12061
08019
29121
27071
49047
54079
42123
16017
13225
56025
27141
23031
40135
56005
42025
54069
32023
28075
26025
40017
21093
22119
55123
27161
08029
27061
17133
42087
51089
55031
48251
37057
48339
28089
22101
56021
39153
48001
27047
40019
51590
22087
18063
47113
08014
02090
08037
21037
29101
16055
45015
40031
06101
18073
40015
42121
39091
26039
51131
19183
30047
26051
21095
13079
55057
39059
26007
46135
54025
39123
27005
55085
18037
18137
21195
53047
21199
37189
49045
21035
01015
39109
29161
06089
45077
22055
29021
02130
29169
21227
54049
18099
29029
48473
18031
13015
13179
18163
38035
13255
20111
53009
47011
47065
51680
06115
08069
39039
06051
26105
28113
17049
26063
46081
26023
40013
45071
23013
51670
48367
39165
37191
06107
47155
45085
32510
18003
48323
20051
39007
54107
48057
16019
26075
27169
22015
47093
12083
01097
12019
53007
21151
13157
48303
27105
55087
39175
39075
26011
05103
18119
48063
29177
37065
18165
18013
28057
40023
45033
13087
21157
08051
29225
12027
39107
21205
26029
27015
39143
39083
55095
40137
19057
17107
37087
36035
38089
12107
28033
41009
41071
27013
42051
48449
55043
17161
20037
13095
16005
19193
28099
47019
17141
51197
51083
36033
22069
39081
18177
26017
13047
53037
39009
18005
55055
17099
28067
13039
55109
53071
39173
37147
47179
51047
13045
42063
37071
55007
26031
01005
19141
29049
39077
21089
35028
33013
23001
34011
19179
08043
08067
05031
48321
53025
26137
12039
42117
36073
38015
41053
45051
39063
41011
21185
35009
37159
51520
19099
27067
47147
12017
30031
30049
21145
41033
45009
39127
18169
27095
27113
54009
51053
13241
42005
29159
39087
01103
21209
05045
48409
45075
20177
18065
13025
13233
18035
26145
48329
12077
22085
30053
40113
27021
26089
24011
13193
01127
13069
19123
08117
39119
18019
16027
13115
22057
17037
27059
26033
48451
19181
39005
40071
51015
13285
18071
17199
17115
27009
20155
08045
26087
47167
47063
12089
21059
06031
13219
36117
29051
08077
48167
45045
44001
37187
40073
47075
08027
26119
20095
29199
37075
47127
40093
48101
54109
38037
45005
08009
46067
48159
22027
20129
42023
01035
54017
40053
28037
47173
21051
38009
48129
20025
48411
31139
47033
13165
48193
08025
38081
46025
47159
31127
20141
12047
48351
29065
48389
54065
12029
13147
31033
19147
51167
48131
48093
40151
47049
17023
12013
13291
28123
21179
01041
13029
31067
51735
13081
20019
31163
40011
47027
05043
26069
38097
48225
21077
37055
48073
21219
28019
28135
45065
29087
48295
47039
01105
13319
16047
13143
40105
19115
46087
26131
47025
51580
05123
13009
28063
08125
08105
40097
20013
17083
20125
41001
37131
55019
18175
05133
51065
48013
48111
40107
46083
01079
13305
21099
51111
29085
48313
48337
28085
05009
53051
01131
39137
18085
16065
17051
39101
18079
12041
40051
21009
41065
45055
42073
48347
48441
37107
29213
01069
48423
20161
39037
13207
48419
56013
08097
46093
55021
22079
27119
53065
45035
06033
27083
53075
51125
51005
13273
26019
21007
47171
45089
54099
18111
26079
29195
27039
18087
17005
37113
13295
51137
40101
48477
06069
49043
28049
02170
53057
35005
27103
17029
06015
41003
26045
20169
27115
08107
35055
05035
37109
27007
01095
51740
53021
29071
04021
04003
47187
48285
01009
26041
42009
42131
21101
37091
30093
23027
18029
19167
39157
05125
41017
21073
22005
12005
37089
35035
13245
55117
51069
36121
51195
05005
49039
27033
13137
48381
46099
37155
46103
22009
04001
22075
13139
13313
12015
35025
19187
51840
53015
17177
27099
12035
35045
35013
28159
01053
17127
28043
48365
54051
50017
42047
21049
06027
53017
12051
05145
01113
17001
47009
35031
16013
27049
05085
20057
53031
05069
53003
18107
37195
29031
53027
39141
32007
04017
26037
53005
47165
26035
27157
45037
13199
21083
27079
5

2025-01-16 06:30:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:30:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:30:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:30:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:30:04 - snowflake.connector.connection - INFO - closed
2025-01-16 06:30:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:30:05 - root - INFO - SQL:
SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR"
    LIMIT 1000;
Results:
Too long, hard cut:
geo_id
45005
46035
45081
46102
21231
28061
22081
28043
17065
30067
28153
28129
18165
05103
26003
16043
20059
48089
39117
51077
18045
37149
29139
19015
51690
18041
48063
51001
47097
27055
27093
13087
48363
48449
56005
37109
53041
48373
21205
13197
22047
38053
22111
18169
21027
35029
49007
21121
21089
40113
26105
13025
48325
29021
51019
16005
26103
05031
12107
39173
55005
40019
26029
19141
13107
16081
30095
51007
05061
19129
51181
21079
40095
01087
27071
19047
39123
21029
49043
17037
12041
20001
48239
29013
21007
49041
38003
55119
29149
26143
17181
13303
27157
39137
17051
51067
45089
49015
39033
29159
06043
13207
18069
55093
01109
13139
40017
21037
13095
39101
39063
12061
45043
56029
47073
35015
27135
06107
37087
17007
02130
33013
55077
27161
48177
13005
39127
18119
08049
48409
23031
48291
37045
13313
26045
12071
21235
42099
17141
17195
51670
16011
53031
41009
12015
39023
53075
39099
04001
06033
22087
37129
05059
26053
04027
22085
18049
55047
26051
39027
37113
56037
49021
47167
04007
29161
28121
36073
29213
35005
19049
46013
35028
26151
37091
16017
18077
41007
18019
55031
39111
26011
27173
54107
27049
37161
40047
18029
05033
16053
39147
24039
29225
56013
18163
22015
36009
51520
21229
08063
31173
45027
45033
37053
17191
27091
27119
18107
27067
27059
48001
06009
37057
16083
18095
46129
08097
13233
48441
55021
22105
39131
28051
37065
29121
55069
21183
48049
20169
27171
18017
27099
45015
18067
30093
53025
20103
54011
22045
21093
06105
51109
17005
42123
39043
37027
53045
27141
29101
37089
51191
21195
41033
22101
48209
40031
56025
29169
19061
37167
45085
56023
55007
27023
45037
17015
18099
01103
29051
55139
06031
18177
48171
12027
54057
55063
55137
54009
08051
54051
40015
39135
28113
47019
42083
19181
08117
19125
17177
16065
36037
37099
37189
13255
53021
28089
05045
41071
20111
21151
40145
37001
16069
04023
55043
27007
31001
27009
32023
48321
12005
51680
39057
21117
47011
39109
36121
35039
40089
24011
37175
08075
39171
40013
16013
22069
39087
47043
53047
08045
51015
53007
26017
38015
27131
37025
12081
12097
01083
13285
37147
13245
55035
08043
42073
12089
37155
37021
19169
19127
17077
39003
37037
48341
45077
47065
48469
28093
08019
48481
20117
29177
51193
12077
29195
18079
26019
21131
45049
46065
39073
01019
51173
21157
30047
29049
26063
51083
26091
18083
29023
37163
12051
19033
45075
17029
28075
12131
13137
48143
19045
51137
48473
27111
26055
41011
39155
51740
41017
28081
04017
06103
21227
06069
18081
39077
27085
06011
36075
29071
32005
01077
01089
47093
47147
36035
48361
48099
32510
45051
18051
27045
08081
13241
55057
21161
27021
13227
51197
39083
19123
19167
08067
30029
06045
19193
36117
02122
56001
42025
39005
23001
16019
55141
37093
01101
27013
48423
17115
35055
53049
45035
01117
36045
45047
27169
08077
42055
55009
37023
35031
35009
49047
45025
08014
41041
18035
13179
17025
39001
28079
26031
51155
55109
56021
32007
48021
41053
17099
37159
02090
39159
51069
48329
27005
40071
39119
18053
01069
48347
17113
54055
36023
39167
29099
28099
27039
39037
51820
40037
20057
51085
06115
48451
17199
26145
12017
01015
48339
06051
26117
48323
39007
17109
18005
53063
48367
45045
39107
42005
39071
53035
42093
39169
18173
37191
48167
48039
48317
38069
54095
16029
13283
13125
48011
08027
40055
28009
28041
37143
38063
35023
21065
29197
13271
28037
47159
40053
47185
54013
31127
21219
46003
28119
21023
28111
08073
47075
37177
48197
01035
48151
48337
38009
31035
48411
48129
46025
17155
05065
05043
13165
05137
05021
28097
47033
13007
20141
12079
49017
38077
20163
31081
56003
21179
13291
13029
05135
37055
51735
28145
48297
51167
08025
48093
48131
17123
40057
04011
17023
21167
48249
48073
13259
37003
37111
48387
13265
29103
47139
20007
13081
16073
37103
13263
40011
45065
30077
48457
29083
08125
20201
21143
37153
29059
35051
48421
28019
29087
13301
31019
19063
13131
35037
48225
40105
40153
41031
13253
20043
37181
20015
26131
19073
46083
47053
05057
37079
47117
30023
40075
13069
22095
47141
48059
18175
01063
29217
12133
28123
05009
18113
29081
18073
28059
13223
19179
34033
48251
40021
22097
05069
21101
47089
17133
53017
27147
47113
47165
19013
05125
18039
47057
22031
22119
46135
19065
26023
31111
36099
05035
04015
28071
38035
39145
51590
06015
18043
04003
39009
17107
17117
13295
01095
06025
21113
39013
26107
48057
29031
48257
46005
02170
48181
18087
48427
05091
28027
26133
26035
08071
39039
22003
12093
40101
16055
46103
48381
40135
08037
37195
53071
26075
53009
19111
27115
19067
23027
26149
12119
21211
37139
06109
35035
06035
48005
48215
48479
30049
17001
53037
42049
51029
26041
51131
19183
42009
42131
17145
17021
41065
39081
47107
54069
28033
46099
51840
18085
37007
37107
20177
53057
42121
01127
12019
39041
21015
29009
12053
45055
05083
21073
06089
12083
51195
39143
01121
39141
21185
37049
08107
55015
55101
21059
29201
12037
16051
01091
31101
28143
38093
40091
41057
17055
55085
08085
54033
13015
35043
22055
22005
16027
04009
51089
20155
26087
05085
22063
30031
41003
05051
21047
55117
42047
18103
39051
28067
27127
49045
17179
41035
35045
2

2025-01-16 06:30:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:30:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:30:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:30:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 06:30:06 - snowflake.connector.connection - INFO - closed
2025-01-16 06:30:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:30:06 - root - INFO - SQL:
SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR"
    LIMIT 1000;
Results:
Too long, hard cut:
geo_id
29079
13071
17203
19139
46011
13145
19029
12055
51830
27047
45073
56039
13299
36053
17049
39103
21209
31079
24015
45059
33019
20055
24029
36025
24017
50001
44009
36035
39031
26159
39139
17183
51600
51680
51540
34009
47187
13113
45077
48485
53029
12109
31153
51650
33009
51087
51610
42127
51630
50003
05131
50023
42013
26149
24009
24027
17197
27123
27053
08001
34013
17111
51550
53033
51683
42117
51061
27025
17027
48139
47163
51199
50025
27027
37151
13215
13151
36079
13051
10005
17121
51099
51685
24037
36107
17165
42107
48397
53041
47179
36057
27145
36069
06093
29021
18091
27019
13217
17113
13063
24043
42129
55105
25005
22033
36081
06001
48201
12086
25009
37051
36111
08069
53073
34007
32031
36055
08059
41051
04019
27137
13077
36093
17019
06007
55133
06095
01073
26005
25003
35049
13247
17091
12091
45007
08101
42089
05143
37063
12099
17031
12021
51041
25021
24005
29095
34001
34041
51153
17167
33015
34039
12011
04013
48157
42017
55079
47157
01097
42025
06017
36077
13097
44003
06041
34023
12117
11001
36029
06059
01125
24021
18141
12033
17043
20091
26163
37081
45057
05061
48177
27091
19109
20051
08049
21113
29225
56005
18099
27127
35006
22069
18127
37179
48187
24047
48375
55127
53009
51121
10001
18063
48135
42071
48439
34029
39061
13089
25017
41067
51013
55059
24013
36043
50007
40027
34005
51810
15001
36059
42029
45079
39151
09009
12127
13067
24025
06085
48453
40143
06081
25025
24041
33017
42007
48309
13117
54061
34037
06061
53035
37119
31109
34021
08035
12009
18097
49035
48491
29189
39049
06071
06023
15009
06113
36109
45083
29047
17097
17119
08041
53061
24510
13185
36083
06053
12087
29183
42011
06013
36103
48029
09001
24031
45045
47149
42003
29510
42101
36105
36089
49011
49057
24001
51740
36051
37101
42037
06055
42027
48061
13073
51179
33005
51003
08037
49053
54037
34011
37025
42069
48183
36087
17093
45013
53077
51770
27037
25015
17163
06099
34015
25023
41005
36119
24033
44007
32003
22071
36005
39089
51760
48085
40109
42077
53053
12103
55025
37183
37135
39093
51177
45091
08013
54003
09007
36007
09011
42041
23005
36071
51510
08005
39113
21067
12095
06073
26125
18167
17089
18003
06111
42045
42091
24003
26161
48121
12057
34003
13121
06037
38099
51103
47091
29145
42097
50015
12113
51165
18045
39111
21225
12027
37011
38093
39027
17021
08085
29169
05149
13137
27015
05139
53025
28091
35029
05083
13175
53031
39159
16031
28113
51155
08107
37163
21151
55077
28051
54067
05047
48117
45037
13055
13091
21121
13303
51173
19123
28001
19167
19179
18119
49039
39077
29107
27149
41061
29009
30093
53017
31101
27099
29195
29135
54025
54055
27111
39137
29023
26007
45089
26029
27049
37167
27059
42093
39039
05103
29213
29049
27147
22119
37087
42083
41009
35047
53011
05119
31055
36063
33011
25027
39035
34027
12031
51139
18093
39097
17159
01051
37157
08065
38003
18027
28083
47167
05063
04023
51111
08117
08119
51670
13179
46065
39129
41065
27067
47011
45067
28059
20155
56023
45009
21017
16051
17015
12049
13227
51101
46029
18065
48323
02130
17025
51053
05071
48465
06027
12093
02220
17085
27039
26031
04012
40101
19049
08097
26143
26103
17103
08075
32023
13129
36097
27021
27057
48227
18071
53015
37093
55007
06009
56037
27085
49015
29149
27097
39071
53047
39083
18083
55031
37047
13025
48329
16017
17133
22105
05045
42131
39005
38015
45055
22109
30047
39069
45085
45049
53007
06015
16053
54069
36117
26063
39063
53075
37189
02170
21185
06043
28039
22005
04001
39119
30031
01121
39127
22015
31119
47043
26117
13285
41041
26147
26055
37159
35039
39087
48049
48339
01069
18081
21227
06107
45051
26099
18057
48181
02090
16019
17199
29099
12019
45043
27171
20177
12017
48469
05031
22001
37001
16005
37057
12111
37129
12097
48295
28097
26013
13131
48389
12003
31033
47127
28145
13291
48401
37143
48017
48297
01057
05009
01129
13029
13165
13259
38073
47169
29069
47087
31021
37169
31127
48069
48225
48249
37111
48073
21197
05123
21179
47027
40043
29025
30027
37181
54043
13301
51035
51169
20125
02180
19191
51043
21079
41031
17151
53059
46083
29215
21127
45071
21139
19055
37141
17075
48097
13267
56021
42005
17115
48027
27013
47037
25013
36061
20209
36021
22073
13059
54011
51710
08031
06075
36091
26139
37097
45041
48091
15007
30063
35061
01081
42125
34019
29077
36047
51059
06065
13057
06087
39017
34025
10003
15003
35001
42103
41029
09005
36085
36065
49049
45003
34035
34031
36001
06019
34017
18089
25001
02020
06067
48113
23007
48199
17063
22095
23015
13279
37019
22047
29015
21231
48239
51029
22121
17193
51570
05085
20001
54099
13005
28099
27005
27119
18077
06069
16049
17145
48419
48449
29161
20169
45001
48189
21229
28003
51027
47089
39143
51197
06035
46027
19141
35031
55003
19183
26023
26097
16065
30013
26061
27071
27169
51195
48223
51109
22031
26041
20111
42085
55043
17195
19061
08051
05005
17011
27093
18087
51011
01127
42123
27157
51107
06077
36067
39095
35013
28047
09003
13135
06097
51157
36039
47131
16039
51775
56013
54019
08071
21157
51083
48373
42047
51089
18031
17099
28029
26035
17187
22003
31001
22093
48427
29121
38071
18169
21101
17141
40021
55021
20103
5

2025-01-16 06:30:06 - root - INFO - itercount: 0
2025-01-16 06:30:06 - root - INFO - Database Name: SDOH
Schema Name: CENSUS_BUREAU_ACS
DDL describes table information.
,0
table_name,BLOCKGROUP_2011_5YR
description,
DDL,"create or replace TABLE BLOCKGROUP_2011_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2018_5YR', 'BLOCKGROUP_2012_5YR', 'BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2016_5YR']
,1
table_name,CBSA_2012_3YR
description,
DDL,"create or replace TABLE CBSA_2012_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CBSA_2012_3YR', 'CBSA_2016_1YR', 'CBSA_2016_5YR', 'CBSA_2020_5YR', 'CBSA_2015_5YR', 'CBSA_2017_1YR', 'CBSA_2012_1YR', 'CBSA_2019_5YR', 'CBSA_2009_1YR', 'CBSA_2018_5YR', 'CBSA_2019_1YR', 'CBSA_2014_1YR', 'CBSA_2021_1YR', 'CBSA_2013_1YR', 'CBSA_2015_1YR', 'CBSA_2007_1YR', 'CBSA_2007_3YR', 'CBSA_2011_3YR', 'CBSA_2012_5YR', 'CBSA_2017_5YR', 'CBSA_2010_5YR', 'CBSA_2013_3YR', 'CBSA_2008_1YR', 'CBSA_2008_3YR', 'CBSA_2009_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2011_1YR', 'CBSA_2013_5YR', 'CBSA_2014_5YR', 'CBSA_2018_1YR', 'CBSA_2011_5YR']
,2
table_name,CENSUSTRACT_2014_5YR
description,
DDL,"create or replace TABLE CENSUSTRACT_2014_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2020_5YR', 'CENSUSTRACT_2019_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2015_5YR']
,3
table_name,CONGRESSIONALDISTRICT_2013_3YR
description,
DDL,"create or replace TABLE CONGRESSIONALDISTRICT_2013_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2018_1YR']
,4
table_name,COUNTY_2010_3YR
description,
DDL,"create or replace TABLE COUNTY_2010_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216),
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT
);"

Some other tables have the similar structure: ['COUNTY_2010_3YR', 'COUNTY_2013_5YR', 'COUNTY_2014_1YR', 'COUNTY_2015_5YR', 'COUNTY_2008_3YR', 'COUNTY_2010_1YR', 'COUNTY_2011_3YR', 'COUNTY_2013_1YR', 'COUNTY_2017_5YR', 'COUNTY_2019_1YR', 'COUNTY_2019_5YR', 'COUNTY_2011_1YR', 'COUNTY_2010_5YR', 'COUNTY_2014_5YR', 'COUNTY_2012_5YR', 'COUNTY_2009_1YR', 'COUNTY_2012_3YR', 'COUNTY_2011_5YR', 'COUNTY_2017_1YR', 'COUNTY_2008_1YR', 'COUNTY_2012_1YR', 'COUNTY_2016_1YR', 'COUNTY_2018_1YR', 'COUNTY_2020_5YR', 'COUNTY_2016_5YR', 'COUNTY_2021_1YR', 'COUNTY_2013_3YR', 'COUNTY_2015_1YR', 'COUNTY_2007_1YR', 'COUNTY_2018_5YR', 'COUNTY_2007_3YR', 'COUNTY_2009_3YR']
,5
table_name,PUMA_2009_3YR
description,
DDL,"create or replace TABLE PUMA_2009_3YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['PUMA_2009_3YR', 'PUMA_2013_5YR', 'PUMA_2007_3YR', 'PUMA_2012_3YR', 'PUMA_2011_5YR', 'PUMA_2017_1YR', 'PUMA_2010_3YR', 'PUMA_2012_5YR', 'PUMA_2008_1YR', 'PUMA_2007_1YR', 'PUMA_2018_5YR', 'PUMA_2021_1YR', 'PUMA_2011_1YR', 'PUMA_2014_1YR', 'PUMA_2009_1YR', 'PUMA_2011_3YR', 'PUMA_2015_1YR', 'PUMA_2020_5YR', 'PUMA_2008_3YR', 'PUMA_2016_5YR', 'PUMA_2016_1YR', 'PUMA_2014_5YR', 'PUMA_2015_5YR', 'PUMA_2018_1YR', 'PUMA_2019_1YR', 'PUMA_2010_1YR', 'PUMA_2010_5YR', 'PUMA_2012_1YR', 'PUMA_2013_3YR', 'PUMA_2017_5YR', 'PUMA_2013_1YR', 'PUMA_2019_5YR']
,6
table_name,PLACE_2007_1YR
description,
DDL,"create or replace TABLE PLACE_2007_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['PLACE_2007_1YR', 'PLACE_2008_1YR', 'PLACE_2009_1YR', 'PLACE_2016_1YR', 'PLACE_2019_1YR', 'PLACE_2010_1YR', 'PLACE_2010_3YR', 'PLACE_2014_5YR', 'PLACE_2019_5YR', 'PLACE_2021_1YR', 'PLACE_2010_5YR', 'PLACE_2011_5YR', 'PLACE_2008_3YR', 'PLACE_2013_5YR', 'PLACE_2011_1YR', 'PLACE_2013_3YR', 'PLACE_2015_1YR', 'PLACE_2017_1YR', 'PLACE_2014_1YR', 'PLACE_2018_1YR', 'PLACE_2018_5YR', 'PLACE_2011_3YR', 'PLACE_2012_3YR', 'PLACE_2016_5YR', 'PLACE_2009_3YR', 'PLACE_2015_5YR', 'PLACE_2012_1YR', 'PLACE_2017_5YR', 'PLACE_2007_3YR', 'PLACE_2012_5YR', 'PLACE_2013_1YR', 'PLACE_2020_5YR']
,7
table_name,SCHOOLDISTRICTUNIFIED_2020_5YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTUNIFIED_2020_5YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR']
,8
table_name,STATE_2010_1YR
description,
DDL,"create or replace TABLE STATE_2010_1YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" NUMBER(38,9),
	""family_households"" NUMBER(38,9),
	""median_year_structure_built"" NUMBER(38,9),
	""rent_burden_not_computed"" NUMBER(38,9),
	""rent_over_50_percent"" NUMBER(38,9),
	""rent_40_to_50_percent"" NUMBER(38,9),
	""rent_35_to_40_percent"" NUMBER(38,9),
	""rent_30_to_35_percent"" NUMBER(38,9),
	""rent_25_to_30_percent"" NUMBER(38,9),
	""rent_20_to_25_percent"" NUMBER(38,9),
	""rent_15_to_20_percent"" NUMBER(38,9),
	""rent_10_to_15_percent"" NUMBER(38,9),
	""rent_under_10_percent"" NUMBER(38,9),
	""total_pop"" NUMBER(38,9),
	""male_pop"" NUMBER(38,9),
	""female_pop"" NUMBER(38,9),
	""median_age"" NUMBER(38,9),
	""white_pop"" NUMBER(38,9),
	""black_pop"" NUMBER(38,9),
	""asian_pop"" NUMBER(38,9),
	""hispanic_pop"" NUMBER(38,9),
	""amerindian_pop"" NUMBER(38,9),
	""other_race_pop"" NUMBER(38,9),
	""two_or_more_races_pop"" NUMBER(38,9),
	""not_hispanic_pop"" NUMBER(38,9),
	""commuters_by_public_transportation"" NUMBER(38,9),
	""households"" NUMBER(38,9),
	""median_income"" NUMBER(38,9),
	""income_per_capita"" NUMBER(38,9),
	""housing_units"" NUMBER(38,9),
	""vacant_housing_units"" NUMBER(38,9),
	""vacant_housing_units_for_rent"" NUMBER(38,9),
	""vacant_housing_units_for_sale"" NUMBER(38,9),
	""median_rent"" NUMBER(38,9),
	""percent_income_spent_on_rent"" NUMBER(38,9),
	""owner_occupied_housing_units"" NUMBER(38,9),
	""million_dollar_housing_units"" NUMBER(38,9),
	""mortgaged_housing_units"" NUMBER(38,9),
	""families_with_young_children"" NUMBER(38,9),
	""two_parent_families_with_young_children"" NUMBER(38,9),
	""two_parents_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_father_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_mother_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""two_parents_not_in_labor_force_families_with_young_children"" NUMBER(38,9),
	""one_parent_families_with_young_children"" NUMBER(38,9),
	""father_one_parent_families_with_young_children"" NUMBER(38,9),
	""father_in_labor_force_one_parent_families_with_young_children"" NUMBER(38,9),
	""commute_10_14_mins"" NUMBER(38,9),
	""commute_15_19_mins"" NUMBER(38,9),
	""commute_20_24_mins"" NUMBER(38,9),
	""commute_25_29_mins"" NUMBER(38,9),
	""commute_30_34_mins"" NUMBER(38,9),
	""commute_45_59_mins"" NUMBER(38,9),
	""aggregate_travel_time_to_work"" NUMBER(38,9),
	""income_less_10000"" NUMBER(38,9),
	""income_10000_14999"" NUMBER(38,9),
	""income_15000_19999"" NUMBER(38,9),
	""income_20000_24999"" NUMBER(38,9),
	""income_25000_29999"" NUMBER(38,9),
	""income_30000_34999"" NUMBER(38,9),
	""income_35000_39999"" NUMBER(38,9),
	""income_40000_44999"" NUMBER(38,9),
	""income_45000_49999"" NUMBER(38,9),
	""income_50000_59999"" NUMBER(38,9),
	""income_60000_74999"" NUMBER(38,9),
	""income_75000_99999"" NUMBER(38,9),
	""income_100000_124999"" NUMBER(38,9),
	""income_125000_149999"" NUMBER(38,9),
	""income_150000_199999"" NUMBER(38,9),
	""income_200000_or_more"" NUMBER(38,9),
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" NUMBER(38,9),
	""owner_occupied_housing_units_lower_value_quartile"" NUMBER(38,9),
	""owner_occupied_housing_units_median_value"" NUMBER(38,9),
	""owner_occupied_housing_units_upper_value_quartile"" NUMBER(38,9),
	""married_households"" NUMBER(38,9),
	""occupied_housing_units"" NUMBER(38,9),
	""housing_units_renter_occupied"" NUMBER(38,9),
	""dwellings_1_units_detached"" NUMBER(38,9),
	""dwellings_1_units_attached"" NUMBER(38,9),
	""dwellings_2_units"" NUMBER(38,9),
	""dwellings_3_to_4_units"" NUMBER(38,9),
	""dwellings_5_to_9_units"" NUMBER(38,9),
	""dwellings_10_to_19_units"" NUMBER(38,9),
	""dwellings_20_to_49_units"" NUMBER(38,9),
	""dwellings_50_or_more_units"" NUMBER(38,9),
	""mobile_homes"" NUMBER(38,9),
	""housing_built_2005_or_later"" NUMBER(38,9),
	""housing_built_2000_to_2004"" NUMBER(38,9),
	""housing_built_1939_or_earlier"" NUMBER(38,9),
	""male_under_5"" NUMBER(38,9),
	""male_5_to_9"" NUMBER(38,9),
	""male_10_to_14"" NUMBER(38,9),
	""male_15_to_17"" NUMBER(38,9),
	""male_18_to_19"" NUMBER(38,9),
	""male_20"" NUMBER(38,9),
	""male_21"" NUMBER(38,9),
	""male_22_to_24"" NUMBER(38,9),
	""male_25_to_29"" NUMBER(38,9),
	""male_30_to_34"" NUMBER(38,9),
	""male_35_to_39"" NUMBER(38,9),
	""male_40_to_44"" NUMBER(38,9),
	""male_45_to_49"" NUMBER(38,9),
	""male_50_to_54"" NUMBER(38,9),
	""male_55_to_59"" NUMBER(38,9),
	""male_60_61"" NUMBER(38,9),
	""male_62_64"" NUMBER(38,9),
	""male_65_to_66"" NUMBER(38,9),
	""male_67_to_69"" NUMBER(38,9),
	""male_70_to_74"" NUMBER(38,9),
	""male_75_to_79"" NUMBER(38,9),
	""male_80_to_84"" NUMBER(38,9),
	""male_85_and_over"" NUMBER(38,9),
	""female_under_5"" NUMBER(38,9),
	""female_5_to_9"" NUMBER(38,9),
	""female_10_to_14"" NUMBER(38,9),
	""female_15_to_17"" NUMBER(38,9),
	""female_18_to_19"" NUMBER(38,9),
	""female_20"" NUMBER(38,9),
	""female_21"" NUMBER(38,9),
	""female_22_to_24"" NUMBER(38,9),
	""female_25_to_29"" NUMBER(38,9),
	""female_30_to_34"" NUMBER(38,9),
	""female_35_to_39"" NUMBER(38,9),
	""female_40_to_44"" NUMBER(38,9),
	""female_45_to_49"" NUMBER(38,9),
	""female_50_to_54"" NUMBER(38,9),
	""female_55_to_59"" NUMBER(38,9),
	""female_60_to_61"" NUMBER(38,9),
	""female_62_to_64"" NUMBER(38,9),
	""female_65_to_66"" NUMBER(38,9),
	""female_67_to_69"" NUMBER(38,9),
	""female_70_to_74"" NUMBER(38,9),
	""female_75_to_79"" NUMBER(38,9),
	""female_80_to_84"" NUMBER(38,9),
	""female_85_and_over"" NUMBER(38,9),
	""white_including_hispanic"" NUMBER(38,9),
	""black_including_hispanic"" NUMBER(38,9),
	""amerindian_including_hispanic"" NUMBER(38,9),
	""asian_including_hispanic"" NUMBER(38,9),
	""commute_5_9_mins"" NUMBER(38,9),
	""commute_35_39_mins"" NUMBER(38,9),
	""commute_40_44_mins"" NUMBER(38,9),
	""commute_60_89_mins"" NUMBER(38,9),
	""commute_90_more_mins"" NUMBER(38,9),
	""households_retirement_income"" NUMBER(38,9),
	""asian_male_45_54"" NUMBER(38,9),
	""asian_male_55_64"" NUMBER(38,9),
	""black_male_45_54"" NUMBER(38,9),
	""black_male_55_64"" NUMBER(38,9),
	""hispanic_male_45_54"" NUMBER(38,9),
	""hispanic_male_55_64"" NUMBER(38,9),
	""white_male_45_54"" NUMBER(38,9),
	""white_male_55_64"" NUMBER(38,9),
	""bachelors_degree_2"" NUMBER(38,9),
	""bachelors_degree_or_higher_25_64"" NUMBER(38,9),
	""children"" NUMBER(38,9),
	""children_in_single_female_hh"" NUMBER(38,9),
	""commuters_by_bus"" NUMBER(38,9),
	""commuters_by_car_truck_van"" NUMBER(38,9),
	""commuters_by_carpool"" NUMBER(38,9),
	""commuters_by_subway_or_elevated"" NUMBER(38,9),
	""commuters_drove_alone"" NUMBER(38,9),
	""different_house_year_ago_different_city"" NUMBER(38,9),
	""different_house_year_ago_same_city"" NUMBER(38,9),
	""employed_agriculture_forestry_fishing_hunting_mining"" NUMBER(38,9),
	""employed_arts_entertainment_recreation_accommodation_food"" NUMBER(38,9),
	""employed_construction"" NUMBER(38,9),
	""employed_education_health_social"" NUMBER(38,9),
	""employed_finance_insurance_real_estate"" NUMBER(38,9),
	""employed_information"" NUMBER(38,9),
	""employed_manufacturing"" NUMBER(38,9),
	""employed_other_services_not_public_admin"" NUMBER(38,9),
	""employed_public_administration"" NUMBER(38,9),
	""employed_retail_trade"" NUMBER(38,9),
	""employed_science_management_admin_waste"" NUMBER(38,9),
	""employed_transportation_warehousing_utilities"" NUMBER(38,9),
	""employed_wholesale_trade"" NUMBER(38,9),
	""female_female_households"" NUMBER(38,9),
	""four_more_cars"" NUMBER(38,9),
	""gini_index"" NUMBER(38,9),
	""graduate_professional_degree"" NUMBER(38,9),
	""group_quarters"" NUMBER(38,9),
	""high_school_including_ged"" NUMBER(38,9),
	""households_public_asst_or_food_stamps"" NUMBER(38,9),
	""in_grades_1_to_4"" NUMBER(38,9),
	""in_grades_5_to_8"" NUMBER(38,9),
	""in_grades_9_to_12"" NUMBER(38,9),
	""in_school"" NUMBER(38,9),
	""in_undergrad_college"" NUMBER(38,9),
	""less_than_high_school_graduate"" NUMBER(38,9),
	""male_45_64_associates_degree"" NUMBER(38,9),
	""male_45_64_bachelors_degree"" NUMBER(38,9),
	""male_45_64_graduate_degree"" NUMBER(38,9),
	""male_45_64_less_than_9_grade"" NUMBER(38,9),
	""male_45_64_grade_9_12"" NUMBER(38,9),
	""male_45_64_high_school"" NUMBER(38,9),
	""male_45_64_some_college"" NUMBER(38,9),
	""male_45_to_64"" NUMBER(38,9),
	""male_male_households"" NUMBER(38,9),
	""management_business_sci_arts_employed"" NUMBER(38,9),
	""no_car"" NUMBER(38,9),
	""no_cars"" NUMBER(38,9),
	""not_us_citizen_pop"" NUMBER(38,9),
	""occupation_management_arts"" NUMBER(38,9),
	""occupation_natural_resources_construction_maintenance"" NUMBER(38,9),
	""occupation_production_transportation_material"" NUMBER(38,9),
	""occupation_sales_office"" NUMBER(38,9),
	""occupation_services"" NUMBER(38,9),
	""one_car"" NUMBER(38,9),
	""two_cars"" NUMBER(38,9),
	""three_cars"" NUMBER(38,9),
	""pop_25_64"" NUMBER(38,9),
	""pop_determined_poverty_status"" NUMBER(38,9),
	""population_1_year_and_over"" NUMBER(38,9),
	""population_3_years_over"" NUMBER(38,9),
	""poverty"" NUMBER(38,9),
	""sales_office_employed"" NUMBER(38,9),
	""some_college_and_associates_degree"" NUMBER(38,9),
	""walked_to_work"" NUMBER(38,9),
	""worked_at_home"" NUMBER(38,9),
	""workers_16_and_over"" NUMBER(38,9),
	""associates_degree"" NUMBER(38,9),
	""bachelors_degree"" NUMBER(38,9),
	""high_school_diploma"" NUMBER(38,9),
	""less_one_year_college"" NUMBER(38,9),
	""masters_degree"" NUMBER(38,9),
	""one_year_more_college"" NUMBER(38,9),
	""pop_25_years_over"" NUMBER(38,9),
	""commute_35_44_mins"" NUMBER(38,9),
	""commute_60_more_mins"" NUMBER(38,9),
	""commute_less_10_mins"" NUMBER(38,9),
	""commuters_16_over"" NUMBER(38,9),
	""hispanic_any_race"" NUMBER(38,9),
	""pop_5_years_over"" NUMBER(38,9),
	""speak_only_english_at_home"" NUMBER(38,9),
	""speak_spanish_at_home"" NUMBER(38,9),
	""speak_spanish_at_home_low_english"" NUMBER(38,9),
	""pop_15_and_over"" NUMBER(38,9),
	""pop_never_married"" NUMBER(38,9),
	""pop_now_married"" NUMBER(38,9),
	""pop_separated"" NUMBER(38,9),
	""pop_widowed"" NUMBER(38,9),
	""pop_divorced"" NUMBER(38,9),
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['STATE_2010_1YR', 'STATE_2011_3YR', 'STATE_2016_5YR', 'STATE_2007_3YR', 'STATE_2010_5YR', 'STATE_2013_1YR', 'STATE_2015_5YR', 'STATE_2010_3YR', 'STATE_2009_1YR', 'STATE_2011_5YR', 'STATE_2012_1YR', 'STATE_2012_5YR', 'STATE_2013_3YR', 'STATE_2014_1YR', 'STATE_2014_5YR', 'STATE_2015_1YR', 'STATE_2016_1YR', 'STATE_2019_1YR', 'STATE_2008_3YR', 'STATE_2012_3YR', 'STATE_2007_1YR', 'STATE_2008_1YR', 'STATE_2009_3YR', 'STATE_2018_1YR', 'STATE_2011_1YR', 'STATE_2017_1YR', 'STATE_2018_5YR', 'STATE_2020_5YR', 'STATE_2013_5YR', 'STATE_2017_5YR', 'STATE_2019_5YR', 'STATE_2021_1YR']
,9
table_name,SCHOOLDISTRICTELEMENTARY_2021_1YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTELEMENTARY_2021_1YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR']
,10
table_name,SCHOOLDISTRICTSECONDARY_2017_5YR
description,
DDL,"create or replace TABLE SCHOOLDISTRICTSECONDARY_2017_5YR (
	""geo_id"" VARCHAR(16777216),
	""aggregate_travel_time_to_work"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""amerindian_pop"" FLOAT,
	""armed_forces"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""asian_pop"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""black_pop"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_pop"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""families_with_young_children"" FLOAT,
	""family_households"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""female_female_households"" FLOAT,
	""female_pop"" FLOAT,
	""female_under_5"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_diploma"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""hispanic_pop"" FLOAT,
	""households"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""households_retirement_income"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_per_capita"" FLOAT,
	""less_one_year_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_60_to_61"" FLOAT,
	""male_62_to_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""male_male_households"" FLOAT,
	""male_pop"" FLOAT,
	""male_under_5"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""married_households"" FLOAT,
	""masters_degree"" FLOAT,
	""median_age"" FLOAT,
	""median_income"" FLOAT,
	""median_rent"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""nonfamily_households"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""one_car"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""one_year_more_college"" FLOAT,
	""other_race_pop"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""three_cars"" FLOAT,
	""total_pop"" FLOAT,
	""two_cars"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""unemployed_pop"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""walked_to_work"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""white_pop"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT
);"

Some other tables have the similar structure: ['SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR']
,11
table_name,ZCTA5_2012_5YR
description,
DDL,"create or replace TABLE ZCTA5_2012_5YR (
	""geo_id"" VARCHAR(16777216),
	""do_date"" DATE,
	""total_pop"" FLOAT,
	""households"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""housing_units"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""married_households"" FLOAT,
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT
);"

Some other tables have the similar structure: ['ZCTA5_2012_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2011_5YR', 'ZCTA5_2015_5YR', 'ZCTA_2019_5YR', 'ZCTA5_2019_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2018_5YR', 'ZCTA_2020_5YR']
,12
table_name,ZIP_CODES_2011_5YR
description,
DDL,"create or replace TABLE ZIP_CODES_2011_5YR (
	""geo_id"" VARCHAR(16777216),
	""nonfamily_households"" FLOAT,
	""family_households"" FLOAT,
	""median_year_structure_built"" FLOAT,
	""rent_burden_not_computed"" FLOAT,
	""rent_over_50_percent"" FLOAT,
	""rent_40_to_50_percent"" FLOAT,
	""rent_35_to_40_percent"" FLOAT,
	""rent_30_to_35_percent"" FLOAT,
	""rent_25_to_30_percent"" FLOAT,
	""rent_20_to_25_percent"" FLOAT,
	""rent_15_to_20_percent"" FLOAT,
	""rent_10_to_15_percent"" FLOAT,
	""rent_under_10_percent"" FLOAT,
	""total_pop"" FLOAT,
	""male_pop"" FLOAT,
	""female_pop"" FLOAT,
	""median_age"" FLOAT,
	""white_pop"" FLOAT,
	""black_pop"" FLOAT,
	""asian_pop"" FLOAT,
	""hispanic_pop"" FLOAT,
	""amerindian_pop"" FLOAT,
	""other_race_pop"" FLOAT,
	""two_or_more_races_pop"" FLOAT,
	""not_hispanic_pop"" FLOAT,
	""commuters_by_public_transportation"" FLOAT,
	""households"" FLOAT,
	""median_income"" FLOAT,
	""income_per_capita"" FLOAT,
	""housing_units"" FLOAT,
	""vacant_housing_units"" FLOAT,
	""vacant_housing_units_for_rent"" FLOAT,
	""vacant_housing_units_for_sale"" FLOAT,
	""median_rent"" FLOAT,
	""percent_income_spent_on_rent"" FLOAT,
	""owner_occupied_housing_units"" FLOAT,
	""million_dollar_housing_units"" FLOAT,
	""mortgaged_housing_units"" FLOAT,
	""families_with_young_children"" FLOAT,
	""two_parent_families_with_young_children"" FLOAT,
	""two_parents_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_father_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_mother_in_labor_force_families_with_young_children"" FLOAT,
	""two_parents_not_in_labor_force_families_with_young_children"" FLOAT,
	""one_parent_families_with_young_children"" FLOAT,
	""father_one_parent_families_with_young_children"" FLOAT,
	""father_in_labor_force_one_parent_families_with_young_children"" FLOAT,
	""commute_10_14_mins"" FLOAT,
	""commute_15_19_mins"" FLOAT,
	""commute_20_24_mins"" FLOAT,
	""commute_25_29_mins"" FLOAT,
	""commute_30_34_mins"" FLOAT,
	""commute_45_59_mins"" FLOAT,
	""aggregate_travel_time_to_work"" FLOAT,
	""income_less_10000"" FLOAT,
	""income_10000_14999"" FLOAT,
	""income_15000_19999"" FLOAT,
	""income_20000_24999"" FLOAT,
	""income_25000_29999"" FLOAT,
	""income_30000_34999"" FLOAT,
	""income_35000_39999"" FLOAT,
	""income_40000_44999"" FLOAT,
	""income_45000_49999"" FLOAT,
	""income_50000_59999"" FLOAT,
	""income_60000_74999"" FLOAT,
	""income_75000_99999"" FLOAT,
	""income_100000_124999"" FLOAT,
	""income_125000_149999"" FLOAT,
	""income_150000_199999"" FLOAT,
	""income_200000_or_more"" FLOAT,
	""renter_occupied_housing_units_paying_cash_median_gross_rent"" FLOAT,
	""owner_occupied_housing_units_lower_value_quartile"" FLOAT,
	""owner_occupied_housing_units_median_value"" FLOAT,
	""owner_occupied_housing_units_upper_value_quartile"" FLOAT,
	""married_households"" FLOAT,
	""occupied_housing_units"" FLOAT,
	""housing_units_renter_occupied"" FLOAT,
	""dwellings_1_units_detached"" FLOAT,
	""dwellings_1_units_attached"" FLOAT,
	""dwellings_2_units"" FLOAT,
	""dwellings_3_to_4_units"" FLOAT,
	""dwellings_5_to_9_units"" FLOAT,
	""dwellings_10_to_19_units"" FLOAT,
	""dwellings_20_to_49_units"" FLOAT,
	""dwellings_50_or_more_units"" FLOAT,
	""mobile_homes"" FLOAT,
	""housing_built_2005_or_later"" FLOAT,
	""housing_built_2000_to_2004"" FLOAT,
	""housing_built_1939_or_earlier"" FLOAT,
	""male_under_5"" FLOAT,
	""male_5_to_9"" FLOAT,
	""male_10_to_14"" FLOAT,
	""male_15_to_17"" FLOAT,
	""male_18_to_19"" FLOAT,
	""male_20"" FLOAT,
	""male_21"" FLOAT,
	""male_22_to_24"" FLOAT,
	""male_25_to_29"" FLOAT,
	""male_30_to_34"" FLOAT,
	""male_35_to_39"" FLOAT,
	""male_40_to_44"" FLOAT,
	""male_45_to_49"" FLOAT,
	""male_50_to_54"" FLOAT,
	""male_55_to_59"" FLOAT,
	""male_60_61"" FLOAT,
	""male_62_64"" FLOAT,
	""male_65_to_66"" FLOAT,
	""male_67_to_69"" FLOAT,
	""male_70_to_74"" FLOAT,
	""male_75_to_79"" FLOAT,
	""male_80_to_84"" FLOAT,
	""male_85_and_over"" FLOAT,
	""female_under_5"" FLOAT,
	""female_5_to_9"" FLOAT,
	""female_10_to_14"" FLOAT,
	""female_15_to_17"" FLOAT,
	""female_18_to_19"" FLOAT,
	""female_20"" FLOAT,
	""female_21"" FLOAT,
	""female_22_to_24"" FLOAT,
	""female_25_to_29"" FLOAT,
	""female_30_to_34"" FLOAT,
	""female_35_to_39"" FLOAT,
	""female_40_to_44"" FLOAT,
	""female_45_to_49"" FLOAT,
	""female_50_to_54"" FLOAT,
	""female_55_to_59"" FLOAT,
	""female_60_to_61"" FLOAT,
	""female_62_to_64"" FLOAT,
	""female_65_to_66"" FLOAT,
	""female_67_to_69"" FLOAT,
	""female_70_to_74"" FLOAT,
	""female_75_to_79"" FLOAT,
	""female_80_to_84"" FLOAT,
	""female_85_and_over"" FLOAT,
	""white_including_hispanic"" FLOAT,
	""black_including_hispanic"" FLOAT,
	""amerindian_including_hispanic"" FLOAT,
	""asian_including_hispanic"" FLOAT,
	""commute_5_9_mins"" FLOAT,
	""commute_35_39_mins"" FLOAT,
	""commute_40_44_mins"" FLOAT,
	""commute_60_89_mins"" FLOAT,
	""commute_90_more_mins"" FLOAT,
	""households_retirement_income"" FLOAT,
	""armed_forces"" FLOAT,
	""civilian_labor_force"" FLOAT,
	""employed_pop"" FLOAT,
	""unemployed_pop"" FLOAT,
	""not_in_labor_force"" FLOAT,
	""pop_16_over"" FLOAT,
	""pop_in_labor_force"" FLOAT,
	""asian_male_45_54"" FLOAT,
	""asian_male_55_64"" FLOAT,
	""black_male_45_54"" FLOAT,
	""black_male_55_64"" FLOAT,
	""hispanic_male_45_54"" FLOAT,
	""hispanic_male_55_64"" FLOAT,
	""white_male_45_54"" FLOAT,
	""white_male_55_64"" FLOAT,
	""bachelors_degree_2"" FLOAT,
	""bachelors_degree_or_higher_25_64"" FLOAT,
	""children"" FLOAT,
	""children_in_single_female_hh"" FLOAT,
	""commuters_by_bus"" FLOAT,
	""commuters_by_car_truck_van"" FLOAT,
	""commuters_by_carpool"" FLOAT,
	""commuters_by_subway_or_elevated"" FLOAT,
	""commuters_drove_alone"" FLOAT,
	""different_house_year_ago_different_city"" FLOAT,
	""different_house_year_ago_same_city"" FLOAT,
	""employed_agriculture_forestry_fishing_hunting_mining"" FLOAT,
	""employed_arts_entertainment_recreation_accommodation_food"" FLOAT,
	""employed_construction"" FLOAT,
	""employed_education_health_social"" FLOAT,
	""employed_finance_insurance_real_estate"" FLOAT,
	""employed_information"" FLOAT,
	""employed_manufacturing"" FLOAT,
	""employed_other_services_not_public_admin"" FLOAT,
	""employed_public_administration"" FLOAT,
	""employed_retail_trade"" FLOAT,
	""employed_science_management_admin_waste"" FLOAT,
	""employed_transportation_warehousing_utilities"" FLOAT,
	""employed_wholesale_trade"" FLOAT,
	""female_female_households"" FLOAT,
	""four_more_cars"" FLOAT,
	""gini_index"" FLOAT,
	""graduate_professional_degree"" FLOAT,
	""group_quarters"" FLOAT,
	""high_school_including_ged"" FLOAT,
	""households_public_asst_or_food_stamps"" FLOAT,
	""in_grades_1_to_4"" FLOAT,
	""in_grades_5_to_8"" FLOAT,
	""in_grades_9_to_12"" FLOAT,
	""in_school"" FLOAT,
	""in_undergrad_college"" FLOAT,
	""less_than_high_school_graduate"" FLOAT,
	""male_45_64_associates_degree"" FLOAT,
	""male_45_64_bachelors_degree"" FLOAT,
	""male_45_64_graduate_degree"" FLOAT,
	""male_45_64_less_than_9_grade"" FLOAT,
	""male_45_64_grade_9_12"" FLOAT,
	""male_45_64_high_school"" FLOAT,
	""male_45_64_some_college"" FLOAT,
	""male_45_to_64"" FLOAT,
	""male_male_households"" FLOAT,
	""management_business_sci_arts_employed"" FLOAT,
	""no_car"" FLOAT,
	""no_cars"" FLOAT,
	""not_us_citizen_pop"" FLOAT,
	""occupation_management_arts"" FLOAT,
	""occupation_natural_resources_construction_maintenance"" FLOAT,
	""occupation_production_transportation_material"" FLOAT,
	""occupation_sales_office"" FLOAT,
	""occupation_services"" FLOAT,
	""one_car"" FLOAT,
	""two_cars"" FLOAT,
	""three_cars"" FLOAT,
	""pop_25_64"" FLOAT,
	""pop_determined_poverty_status"" FLOAT,
	""population_1_year_and_over"" FLOAT,
	""population_3_years_over"" FLOAT,
	""poverty"" FLOAT,
	""sales_office_employed"" FLOAT,
	""some_college_and_associates_degree"" FLOAT,
	""walked_to_work"" FLOAT,
	""worked_at_home"" FLOAT,
	""workers_16_and_over"" FLOAT,
	""associates_degree"" FLOAT,
	""bachelors_degree"" FLOAT,
	""high_school_diploma"" FLOAT,
	""less_one_year_college"" FLOAT,
	""masters_degree"" FLOAT,
	""one_year_more_college"" FLOAT,
	""pop_25_years_over"" FLOAT,
	""commute_35_44_mins"" FLOAT,
	""commute_60_more_mins"" FLOAT,
	""commute_less_10_mins"" FLOAT,
	""commuters_16_over"" FLOAT,
	""hispanic_any_race"" FLOAT,
	""pop_5_years_over"" FLOAT,
	""speak_only_english_at_home"" FLOAT,
	""speak_spanish_at_home"" FLOAT,
	""speak_spanish_at_home_low_english"" FLOAT,
	""pop_15_and_over"" FLOAT,
	""pop_never_married"" FLOAT,
	""pop_now_married"" FLOAT,
	""pop_separated"" FLOAT,
	""pop_widowed"" FLOAT,
	""pop_divorced"" FLOAT,
	""do_date"" VARCHAR(16777216)
);"

Some other tables have the similar structure: ['ZIP_CODES_2011_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2014_5YR']
Database Name: SDOH
Schema Name: SDOH_BEA_CAINC30
DDL describes table information.
,0
table_name,FIPS
description,
DDL,"create or replace TABLE FIPS (
	""Year"" DATE,
	""GeoFIPS"" VARCHAR(16777216),
	""GeoName"" VARCHAR(16777216),
	""Employer_contrib_pension_and_insurance"" NUMBER(38,0),
	""Employer_contrib_govt_and_social_insurance"" NUMBER(38,0),
	""Farm_proprietors_income"" NUMBER(38,0),
	""Nonfarm_proprietors_income"" NUMBER(38,0),
	""Farm_proprietors_employment"" NUMBER(38,0),
	""Income_maintenance_benefits"" NUMBER(38,0),
	""Nonfarm_proprietors_employment"" NUMBER(38,0),
	""Percapita_income_maintenance_benefits"" NUMBER(38,0),
	""Percapita_retirement_and_other"" NUMBER(38,0),
	""Percapita_unemployment_insurance_compensation"" NUMBER(38,0),
	""Proprietors_income"" NUMBER(38,0),
	""Retirement_and_other"" NUMBER(38,0),
	""Wages_and_salaries_supplement"" NUMBER(38,0),
	""Unemployment_insurance"" NUMBER(38,0),
	""Wages_and_salaries"" NUMBER(38,0),
	""Nonfarm_proprietors_income_avg"" NUMBER(38,0),
	""Wages_and_salaries_avg"" NUMBER(38,0),
	""Dividends_interest_rent"" NUMBER(38,0),
	""Earnings_by_place_of_work"" NUMBER(38,0),
	""Net_earnings_by_place_of_residence"" NUMBER(38,0),
	""Percapita_dividends_interest_rent"" NUMBER(38,0),
	""Percapita_net_earnings"" NUMBER(38,0),
	""Percapita_personal_current_transfer_receipts"" NUMBER(38,0),
	""Percapita_personal_income"" NUMBER(38,0),
	""Personal_current_transfer_receipts"" NUMBER(38,0),
	""Population"" NUMBER(38,0),
	""Proprietors_employment"" NUMBER(38,0),
	""Wage_and_salary_employment"" NUMBER(38,0),
	""Earnings_per_job_avg"" NUMBER(38,0),
	""Personal_income"" NUMBER(38,0),
	""Total_employment"" NUMBER(38,0)
);"

Database Name: SDOH
Schema Name: SDOH_CDC_WONDER_NATALITY
DDL describes table information.
,0
table_name,COUNTY_NATALITY_BY_ABNORMAL_CONDITIONS
description,
DDL,"create or replace TABLE COUNTY_NATALITY_BY_ABNORMAL_CONDITIONS (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Abnormal_Conditions_Checked_Desc"" VARCHAR(16777216),
	""Abnormal_Conditions_Checked_YN"" NUMBER(38,0),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

,1
table_name,COUNTY_NATALITY_BY_MATERNAL_MORBIDITY
description,
DDL,"create or replace TABLE COUNTY_NATALITY_BY_MATERNAL_MORBIDITY (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Maternal_Morbidity_Desc"" VARCHAR(16777216),
	""Maternal_Morbidity_YN"" NUMBER(38,0),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

,2
table_name,COUNTY_NATALITY_BY_PAYMENT
description,
DDL,"create or replace TABLE COUNTY_NATALITY_BY_PAYMENT (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Source_of_Payment"" VARCHAR(16777216),
	""Source_of_Payment_Code"" NUMBER(38,0),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

,3
table_name,COUNTY_NATALITY_BY_CONGENITAL_ABNORMALITIES
description,
DDL,"create or replace TABLE COUNTY_NATALITY_BY_CONGENITAL_ABNORMALITIES (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Congenital_Abnormality_Checked_Desc"" VARCHAR(16777216),
	""Congenital_Abnormality_Checked_YN"" NUMBER(38,0),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

,4
table_name,COUNTY_NATALITY_BY_MOTHER_RACE
description,
DDL,"create or replace TABLE COUNTY_NATALITY_BY_MOTHER_RACE (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Mothers_Single_Race"" VARCHAR(16777216),
	""Mothers_Single_Race_Code"" VARCHAR(16777216),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

,5
table_name,COUNTY_NATALITY_BY_FATHER_RACE
description,
DDL,"create or replace TABLE COUNTY_NATALITY_BY_FATHER_RACE (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Fathers_Single_Race"" VARCHAR(16777216),
	""Fathers_Single_Race_Code"" VARCHAR(16777216),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

,6
table_name,COUNTY_NATALITY
description,
DDL,"create or replace TABLE COUNTY_NATALITY (
	""Year"" DATE,
	""County_of_Residence"" VARCHAR(16777216),
	""County_of_Residence_FIPS"" VARCHAR(16777216),
	""Births"" NUMBER(38,0),
	""Ave_Age_of_Mother"" FLOAT,
	""Ave_OE_Gestational_Age_Wks"" FLOAT,
	""Ave_LMP_Gestational_Age_Wks"" FLOAT,
	""Ave_Birth_Weight_gms"" FLOAT,
	""Ave_Pre_pregnancy_BMI"" FLOAT,
	""Ave_Number_of_Prenatal_Wks"" FLOAT
);"

Database Name: SDOH
Schema Name: SDOH_CMS_DUAL_ELIGIBLE_ENROLLMENT
DDL describes table information.
,0
table_name,DUAL_ELIGIBLE_ENROLLMENT_BY_COUNTY_AND_PROGRAM
description,
DDL,"create or replace TABLE DUAL_ELIGIBLE_ENROLLMENT_BY_COUNTY_AND_PROGRAM (
	""State_Abbr"" VARCHAR(16777216),
	""County_Name"" VARCHAR(16777216),
	""QMB_Only"" NUMBER(38,0),
	""QMB_plus_Full"" NUMBER(38,0),
	""SLMB_only"" NUMBER(38,0),
	""SLMB_plus_Full"" NUMBER(38,0),
	QDWI NUMBER(38,0),
	QI NUMBER(38,0),
	""Other_full"" NUMBER(38,0),
	""Public_Total"" NUMBER(38,0),
	""Date"" DATE,
	FIPS VARCHAR(16777216)
);"

Database Name: SDOH
Schema Name: SDOH_HRSA_SHORTAGE_AREAS
DDL describes table information.
,0
table_name,HPSA_MENTAL_HEALTH
description,
DDL,"create or replace TABLE HPSA_MENTAL_HEALTH (
	""Source_ID"" VARCHAR(16777216),
	""Source_Name"" VARCHAR(16777216),
	""Status_Code"" VARCHAR(16777216),
	""Status_Description"" VARCHAR(16777216),
	""Type_Code"" VARCHAR(16777216),
	""Type_Desc"" VARCHAR(16777216),
	""Address"" VARCHAR(16777216),
	""City"" VARCHAR(16777216),
	""State_Abbr"" VARCHAR(16777216),
	""Postal_Code"" VARCHAR(16777216),
	""Degree_of_Shortage"" VARCHAR(16777216),
	""Designation_Date"" DATE,
	""Designation_Last_Update_Date"" DATE,
	""Designation_Pop"" NUMBER(38,0),
	""Estimated_Underserved_Pop"" NUMBER(38,0),
	""Estimated_Served_Pop"" NUMBER(38,0),
	""Formal_Ratio"" VARCHAR(16777216),
	""Total_FTE_Clinicians"" FLOAT,
	""Metropolitan_Indicator_Code"" VARCHAR(16777216),
	""Metropolitan_Indicator_Desc"" VARCHAR(16777216),
	""Provider_Ratio_Goal"" VARCHAR(16777216),
	""Percent_Pop_Below_Poverty"" FLOAT,
	""HPSA_Score"" NUMBER(38,0),
	""HPSA_Shortage"" FLOAT,
	""Discipline_Class_Num"" NUMBER(38,0),
	""Discipline_Class_Desc"" VARCHAR(16777216),
	""Component_Source_ID"" VARCHAR(16777216),
	""Component_Source_Name"" VARCHAR(16777216),
	""Component_Status_Code"" VARCHAR(16777216),
	""Component_Status_Desc"" VARCHAR(16777216),
	""Component_Type_Code"" VARCHAR(16777216),
	""Component_Type_Desc"" VARCHAR(16777216),
	""Component_State_Abbr"" VARCHAR(16777216),
	""Component_Postal_Code"" VARCHAR(16777216),
	""Component_Designation_Date"" DATE,
	""Component_Designation_Date_String"" VARCHAR(16777216),
	""Component_Designation_Last_Update_Date"" DATE,
	""Geography_ID"" VARCHAR(16777216),
	""CountyFIPS"" NUMBER(38,0),
	""County_Name"" VARCHAR(16777216),
	""StateCountyFIPS"" VARCHAR(16777216),
	""State_FIPS"" VARCHAR(16777216),
	""State_Abbr_2"" VARCHAR(16777216),
	""State_Name"" VARCHAR(16777216),
	""Primary_State_Name"" VARCHAR(16777216),
	""Primary_State_FIPS"" NUMBER(38,0),
	""Primary_HHS_Region_Name"" VARCHAR(16777216),
	""US_Mexico_Border_County"" VARCHAR(16777216),
	""US_Mexico_Border_100km"" VARCHAR(16777216),
	""Data_Warehouse_Record_Create_Date"" DATE,
	""Data_Warehouse_Record_Create_Date_Text"" VARCHAR(16777216),
	""HPSA_Name"" VARCHAR(16777216),
	""HPSA_Component_Name"" VARCHAR(16777216),
	""Break_in_Designation"" VARCHAR(16777216),
	""Geocoding_Primary_X"" FLOAT,
	""Geocoding_Primary_Y"" FLOAT,
	""HPSA_Pop_Type_Code"" VARCHAR(16777216),
	""HPSA_Pop_Type_Desc"" VARCHAR(16777216),
	""HPSA_Resident_Civilian_Pop"" NUMBER(38,0),
	""Common_City_Name_with_State_Abbr"" VARCHAR(16777216),
	""Common_Postal_Code"" NUMBER(38,0),
	""Common_County_Name"" VARCHAR(16777216),
	""Common_StateCounty_FIPS"" VARCHAR(16777216),
	""Common_State_Abbr"" VARCHAR(16777216),
	""Common_State_Name"" VARCHAR(16777216),
	""Common_State_FIPS"" VARCHAR(16777216),
	""Common_Region_Name"" VARCHAR(16777216),
	""HPSA_Withdrawn_Date"" DATE,
	""HPSA_Withdrawn_Date_String"" VARCHAR(16777216),
	""Provider_Type"" VARCHAR(16777216),
	""Rural_Status_Code"" VARCHAR(16777216),
	""Rural_Status_Desc"" VARCHAR(16777216),
	""HPSA_Designation_Pop_Type_Desc"" VARCHAR(16777216),
	""BHCMIS_OrgID"" VARCHAR(16777216)
);"

,1
table_name,HPSA_MUA
description,
DDL,"create or replace TABLE HPSA_MUA (
	MUA_SOURCE_ID VARCHAR(16777216),
	MUA_AREA_CD VARCHAR(16777216),
	""MCD_FIPS_Cd"" VARCHAR(16777216),
	MCD_CENSUS_CD VARCHAR(16777216),
	MCD_NM VARCHAR(16777216),
	MUA_DESIGNATION_TYP_CD VARCHAR(16777216),
	MUA_DESIGNATION_TYP_DESC VARCHAR(16777216),
	MUA_STATUS_CD VARCHAR(16777216),
	MUA_STATUS_DESC VARCHAR(16777216),
	CENSUS_TRACT VARCHAR(16777216),
	MUA_DESIGNATION_DT DATE,
	MUA_DESIGNATION_DT_TXT VARCHAR(16777216),
	MUA_SCORE VARCHAR(16777216),
	MUA_SERVICE_AREA_NM VARCHAR(16777216),
	MUA_UPDATE_DT DATE,
	MUA_UPDATE_DT_TXT VARCHAR(16777216),
	US_MEXICO_BORDER_100KM_IND VARCHAR(16777216),
	US_MEXICO_BORDER_COUNTY_IND VARCHAR(16777216),
	STATE_COUNTY_FIPS_CD VARCHAR(16777216),
	COUNTY_FIPS_CD VARCHAR(16777216),
	LIST_BOX_COUNTY_NM VARCHAR(16777216),
	COUNTY_NM VARCHAR(16777216),
	COUNTY_DESC VARCHAR(16777216),
	REGION_CD VARCHAR(16777216),
	REGION_NM VARCHAR(16777216),
	STATE_FIPS_CD VARCHAR(16777216),
	STATE_NM VARCHAR(16777216),
	STATE_ABBR VARCHAR(16777216),
	POVERTY_100_PCT_NUM FLOAT,
	POP_AGE_65_OVER_PCT FLOAT,
	INFANT_MORTALITY_RATE FLOAT,
	PROVIDER_1000_POP_RATIO VARCHAR(16777216),
	POVERTY_100_PCT_NUM_IMU FLOAT,
	POP_AGE_65_OVER_PCT_IMU FLOAT,
	INFANT_MORTALITY_RATE_IMU FLOAT,
	PROVIDER_1000_POP_RATIO_IMU FLOAT,
	DW_RECORD_CREATE_DT DATE,
	DW_RECORD_CREATE_DT_TXT VARCHAR(16777216),
	PRIMARY_STATE_FIPS_CD VARCHAR(16777216),
	PRIMARY_STATE_ABBR VARCHAR(16777216),
	PRIMARY_STATE_NM VARCHAR(16777216),
	PRIMARY_REGION_CD VARCHAR(16777216),
	PRIMARY_REGION_NM VARCHAR(16777216),
	CMN_REGION_CD VARCHAR(16777216),
	CMN_REGION_NM VARCHAR(16777216),
	CMN_STATE_NM VARCHAR(16777216),
	CMN_STATE_ABBR VARCHAR(16777216),
	CMN_STATE_FIPS_CD VARCHAR(16777216),
	CMN_STATE_COUNTY_FIPS_CD VARCHAR(16777216),
	CMN_COUNTY_NM_STATE_ABBR VARCHAR(16777216),
	BREAK_DESIGNATION_IND VARCHAR(16777216),
	MUA_COMP_DESIGNATION_DT DATE,
	MUA_COMP_DESIGNATION_DT_TXT VARCHAR(16777216),
	MUA_COMP_GEO_NM VARCHAR(16777216),
	MUA_COMP_GEO_TYP_CD VARCHAR(16777216),
	MUA_COMP_GEO_TYP_DESC VARCHAR(16777216),
	MUA_COMP_GEO_TYP_ID NUMBER(38,0),
	MUA_COMP_LAST_UPDATE_DT DATE,
	MUA_COMP_STATUS_CD VARCHAR(16777216),
	MUA_COMP_STATUS_DESC VARCHAR(16777216),
	MUA_COMP_UPDATE_DT_TXT VARCHAR(16777216),
	MUA_DESIGNATION_POP FLOAT,
	MUA_METRO_IND_CD VARCHAR(16777216),
	MUA_METRO_IND_DESC VARCHAR(16777216),
	MUA_METRO_IND_ID NUMBER(38,0),
	MUA_POPULATION_TYP_CD VARCHAR(16777216),
	MUA_POPULATION_TYP_DESC VARCHAR(16777216),
	MUA_POPULATION_TYP_ID NUMBER(38,0),
	MUA_RES_CIV_POP NUMBER(38,0),
	MUA_WITHDRAWAL_DT DATE,
	MUA_WITHDRAWAL_DT_TXT VARCHAR(16777216),
	RURAL_STATUS_CD VARCHAR(16777216),
	RURAL_STATUS_DESC VARCHAR(16777216),
	PROVIDER_1000_POP FLOAT
);"

,2
table_name,HPSA_DENTAL_HEALTH
description,
DDL,"create or replace TABLE HPSA_DENTAL_HEALTH (
	""Source_ID"" VARCHAR(16777216),
	""Source_Name"" VARCHAR(16777216),
	""Status_Code"" VARCHAR(16777216),
	""Status_Description"" VARCHAR(16777216),
	""Type_Code"" VARCHAR(16777216),
	""Type_Desc"" VARCHAR(16777216),
	""Address"" VARCHAR(16777216),
	""City"" VARCHAR(16777216),
	""State_Abbr"" VARCHAR(16777216),
	""Postal_Code"" VARCHAR(16777216),
	""Degree_of_Shortage"" VARCHAR(16777216),
	""Designation_Date"" DATE,
	""Designation_Last_Update_Date"" DATE,
	""Designation_Pop"" NUMBER(38,0),
	""Estimated_Underserved_Pop"" NUMBER(38,0),
	""Estimated_Served_Pop"" NUMBER(38,0),
	""Formal_Ratio"" VARCHAR(16777216),
	""Total_FTE_Clinicians"" FLOAT,
	""Metropolitan_Indicator_Code"" VARCHAR(16777216),
	""Metropolitan_Indicator_Desc"" VARCHAR(16777216),
	""Provider_Ratio_Goal"" VARCHAR(16777216),
	""Percent_Pop_Below_Poverty"" FLOAT,
	""HPSA_Score"" NUMBER(38,0),
	""HPSA_Shortage"" FLOAT,
	""Discipline_Class_Num"" NUMBER(38,0),
	""Discipline_Class_Desc"" VARCHAR(16777216),
	""Component_Source_ID"" VARCHAR(16777216),
	""Component_Source_Name"" VARCHAR(16777216),
	""Component_Status_Code"" VARCHAR(16777216),
	""Component_Status_Desc"" VARCHAR(16777216),
	""Component_Type_Code"" VARCHAR(16777216),
	""Component_Type_Desc"" VARCHAR(16777216),
	""Component_State_Abbr"" VARCHAR(16777216),
	""Component_Postal_Code"" VARCHAR(16777216),
	""Component_Designation_Date"" DATE,
	""Component_Designation_Date_String"" VARCHAR(16777216),
	""Component_Designation_Last_Update_Date"" DATE,
	""Geography_ID"" VARCHAR(16777216),
	""CountyFIPS"" NUMBER(38,0),
	""County_Name"" VARCHAR(16777216),
	""StateCountyFIPS"" VARCHAR(16777216),
	""State_FIPS"" VARCHAR(16777216),
	""State_Abbr_2"" VARCHAR(16777216),
	""State_Name"" VARCHAR(16777216),
	""Primary_State_Name"" VARCHAR(16777216),
	""Primary_State_FIPS"" NUMBER(38,0),
	""Primary_HHS_Region_Name"" VARCHAR(16777216),
	""US_Mexico_Border_County"" VARCHAR(16777216),
	""US_Mexico_Border_100km"" VARCHAR(16777216),
	""Data_Warehouse_Record_Create_Date"" DATE,
	""Data_Warehouse_Record_Create_Date_Text"" VARCHAR(16777216),
	""HPSA_Name"" VARCHAR(16777216),
	""HPSA_Component_Name"" VARCHAR(16777216),
	""Break_in_Designation"" VARCHAR(16777216),
	""Geocoding_Primary_X"" FLOAT,
	""Geocoding_Primary_Y"" FLOAT,
	""HPSA_Pop_Type_Code"" VARCHAR(16777216),
	""HPSA_Pop_Type_Desc"" VARCHAR(16777216),
	""HPSA_Resident_Civilian_Pop"" NUMBER(38,0),
	""Common_City_Name_with_State_Abbr"" VARCHAR(16777216),
	""Common_Postal_Code"" NUMBER(38,0),
	""Common_County_Name"" VARCHAR(16777216),
	""Common_StateCounty_FIPS"" VARCHAR(16777216),
	""Common_State_Abbr"" VARCHAR(16777216),
	""Common_State_Name"" VARCHAR(16777216),
	""Common_State_FIPS"" VARCHAR(16777216),
	""Common_Region_Name"" VARCHAR(16777216),
	""HPSA_Withdrawn_Date"" DATE,
	""HPSA_Withdrawn_Date_String"" VARCHAR(16777216),
	""Provider_Type"" VARCHAR(16777216),
	""Rural_Status_Code"" VARCHAR(16777216),
	""Rural_Status_Desc"" VARCHAR(16777216),
	""HPSA_Designation_Pop_Type_Desc"" VARCHAR(16777216),
	""BHCMIS_OrgID"" VARCHAR(16777216)
);"

,3
table_name,HPSA_PRIMARY_CARE
description,
DDL,"create or replace TABLE HPSA_PRIMARY_CARE (
	""Source_ID"" VARCHAR(16777216),
	""Source_Name"" VARCHAR(16777216),
	""Status_Code"" VARCHAR(16777216),
	""Status_Description"" VARCHAR(16777216),
	""Type_Code"" VARCHAR(16777216),
	""Type_Desc"" VARCHAR(16777216),
	""Address"" VARCHAR(16777216),
	""City"" VARCHAR(16777216),
	""State_Abbr"" VARCHAR(16777216),
	""Postal_Code"" VARCHAR(16777216),
	""Degree_of_Shortage"" VARCHAR(16777216),
	""Designation_Date"" DATE,
	""Designation_Last_Update_Date"" DATE,
	""Designation_Pop"" NUMBER(38,0),
	""Estimated_Underserved_Pop"" NUMBER(38,0),
	""Estimated_Served_Pop"" NUMBER(38,0),
	""Formal_Ratio"" VARCHAR(16777216),
	""Total_FTE_Clinicians"" FLOAT,
	""Metropolitan_Indicator_Code"" VARCHAR(16777216),
	""Metropolitan_Indicator_Desc"" VARCHAR(16777216),
	""Provider_Ratio_Goal"" VARCHAR(16777216),
	""Percent_Pop_Below_Poverty"" FLOAT,
	""HPSA_Score"" NUMBER(38,0),
	""HPSA_Shortage"" FLOAT,
	""Discipline_Class_Num"" NUMBER(38,0),
	""Discipline_Class_Desc"" VARCHAR(16777216),
	""Component_Source_ID"" VARCHAR(16777216),
	""Component_Source_Name"" VARCHAR(16777216),
	""Component_Status_Code"" VARCHAR(16777216),
	""Component_Status_Desc"" VARCHAR(16777216),
	""Component_Type_Code"" VARCHAR(16777216),
	""Component_Type_Desc"" VARCHAR(16777216),
	""Component_State_Abbr"" VARCHAR(16777216),
	""Component_Postal_Code"" VARCHAR(16777216),
	""Component_Designation_Date"" DATE,
	""Component_Designation_Date_String"" VARCHAR(16777216),
	""Component_Designation_Last_Update_Date"" DATE,
	""Geography_ID"" VARCHAR(16777216),
	""CountyFIPS"" NUMBER(38,0),
	""County_Name"" VARCHAR(16777216),
	""StateCountyFIPS"" VARCHAR(16777216),
	""State_FIPS"" VARCHAR(16777216),
	""State_Abbr_2"" VARCHAR(16777216),
	""State_Name"" VARCHAR(16777216),
	""Primary_State_Name"" VARCHAR(16777216),
	""Primary_State_FIPS"" NUMBER(38,0),
	""Primary_HHS_Region_Name"" VARCHAR(16777216),
	""US_Mexico_Border_County"" VARCHAR(16777216),
	""US_Mexico_Border_100km"" VARCHAR(16777216),
	""Data_Warehouse_Record_Create_Date"" DATE,
	""Data_Warehouse_Record_Create_Date_Text"" VARCHAR(16777216),
	""HPSA_Name"" VARCHAR(16777216),
	""HPSA_Component_Name"" VARCHAR(16777216),
	""Break_in_Designation"" VARCHAR(16777216),
	""Geocoding_Primary_X"" FLOAT,
	""Geocoding_Primary_Y"" FLOAT,
	""HPSA_Pop_Type_Code"" VARCHAR(16777216),
	""HPSA_Pop_Type_Desc"" VARCHAR(16777216),
	""HPSA_Resident_Civilian_Pop"" NUMBER(38,0),
	""Common_City_Name_with_State_Abbr"" VARCHAR(16777216),
	""Common_Postal_Code"" NUMBER(38,0),
	""Common_County_Name"" VARCHAR(16777216),
	""Common_StateCounty_FIPS"" VARCHAR(16777216),
	""Common_State_Abbr"" VARCHAR(16777216),
	""Common_State_Name"" VARCHAR(16777216),
	""Common_State_FIPS"" VARCHAR(16777216),
	""Common_Region_Name"" VARCHAR(16777216),
	""HPSA_Withdrawn_Date"" DATE,
	""HPSA_Withdrawn_Date_String"" VARCHAR(16777216),
	""Provider_Type"" VARCHAR(16777216),
	""Rural_Status_Code"" VARCHAR(16777216),
	""Rural_Status_Desc"" VARCHAR(16777216),
	""HPSA_Designation_Pop_Type_Desc"" VARCHAR(16777216),
	""BHCMIS_OrgID"" VARCHAR(16777216)
);"

Database Name: SDOH
Schema Name: SDOH_HUD_HOUSING
DDL describes table information.
,0
table_name,_2017_LIHTC_DATABASE_HUD
description,
DDL,"create or replace TABLE _2017_LIHTC_DATABASE_HUD (
	""hud_id"" VARCHAR(16777216),
	""project"" VARCHAR(16777216),
	""proj_add"" VARCHAR(16777216),
	""proj_cty"" VARCHAR(16777216),
	""proj_st"" VARCHAR(16777216),
	""proj_zip"" VARCHAR(16777216),
	""state_id"" VARCHAR(16777216),
	""contact"" VARCHAR(16777216),
	""company"" VARCHAR(16777216),
	""co_add"" VARCHAR(16777216),
	""co_cty"" VARCHAR(16777216),
	""co_st"" VARCHAR(16777216),
	""co_zip"" VARCHAR(16777216),
	""co_tel"" VARCHAR(16777216),
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""reg"" NUMBER(38,0),
	""msa"" VARCHAR(16777216),
	""cbsa"" VARCHAR(16777216),
	""placece"" VARCHAR(16777216),
	""placefp"" VARCHAR(16777216),
	""place2010"" VARCHAR(16777216),
	""cosubcur"" VARCHAR(16777216),
	""fips1990"" VARCHAR(16777216),
	""st1990"" VARCHAR(16777216),
	""cnty1990"" VARCHAR(16777216),
	""trct1990"" VARCHAR(16777216),
	""fips2000"" VARCHAR(16777216),
	""st2000"" VARCHAR(16777216),
	""cnty2000"" VARCHAR(16777216),
	""trct2000"" VARCHAR(16777216),
	""fips2010"" VARCHAR(16777216),
	""st2010"" VARCHAR(16777216),
	""cnty2010"" VARCHAR(16777216),
	""trct2010"" VARCHAR(16777216),
	""scattered_site_cd"" NUMBER(38,0),
	""resyndication_cd"" NUMBER(38,0),
	""allocamt"" FLOAT,
	""n_units"" NUMBER(38,0),
	""li_units"" NUMBER(38,0),
	""n_0br"" NUMBER(38,0),
	""n_1br"" NUMBER(38,0),
	""n_2br"" NUMBER(38,0),
	""n_3br"" NUMBER(38,0),
	""n_4br"" NUMBER(38,0),
	""inc_ceil"" NUMBER(38,0),
	""low_ceil"" NUMBER(38,0),
	""ceilunit"" NUMBER(38,0),
	""yr_pis"" VARCHAR(16777216),
	""yr_alloc"" VARCHAR(16777216),
	""non_prof"" NUMBER(38,0),
	""basis"" NUMBER(38,0),
	""bond"" NUMBER(38,0),
	""mff_ra"" NUMBER(38,0),
	""fmha_514"" NUMBER(38,0),
	""fmha_515"" NUMBER(38,0),
	""fmha_538"" NUMBER(38,0),
	""home"" NUMBER(38,0),
	""home_amt"" NUMBER(38,0),
	""tcap"" NUMBER(38,0),
	""tcap_amt"" FLOAT,
	""cdbg"" NUMBER(38,0),
	""cdbg_amt"" NUMBER(38,0),
	""fha"" NUMBER(38,0),
	""hopevi"" NUMBER(38,0),
	""hpvi_amt"" NUMBER(38,0),
	""tcep"" NUMBER(38,0),
	""tcep_amt"" FLOAT,
	""rentassist"" NUMBER(38,0),
	""trgt_pop"" NUMBER(38,0),
	""trgt_fam"" VARCHAR(16777216),
	""trgt_eld"" VARCHAR(16777216),
	""trgt_dis"" VARCHAR(16777216),
	""trgt_hml"" VARCHAR(16777216),
	""trgt_other"" VARCHAR(16777216),
	""trgt_spc"" VARCHAR(16777216),
	""type"" NUMBER(38,0),
	""credit"" NUMBER(38,0),
	""n_unitsr"" NUMBER(38,0),
	""li_unitr"" NUMBER(38,0),
	""metro"" NUMBER(38,0),
	""dda"" NUMBER(38,0),
	""qct"" NUMBER(38,0),
	""nonprog"" VARCHAR(16777216),
	""datanote"" VARCHAR(16777216),
	""record_status"" VARCHAR(16777216),
	""x"" FLOAT,
	""y"" FLOAT,
	""z"" FLOAT,
	""yrmisflg"" NUMBER(38,0)
);"

Database Name: SDOH
Schema Name: SDOH_HUD_PIT_HOMELESSNESS
DDL describes table information.
,0
table_name,HUD_PIT_BY_COC
description,
DDL,"create or replace TABLE HUD_PIT_BY_COC (
	""CoC_Number"" VARCHAR(16777216),
	""CoC_Name"" VARCHAR(16777216),
	""CoC_Category"" VARCHAR(16777216),
	""Overall_Homeless"" NUMBER(38,0),
	""Sheltered_ES_Homeless"" NUMBER(38,0),
	""Sheltered_TH_Homeless"" NUMBER(38,0),
	""Sheltered_SH_Homeless"" NUMBER(38,0),
	""Sheltered_Total_Homeless"" NUMBER(38,0),
	""Unsheltered_Homeless"" NUMBER(38,0),
	""Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_SH_Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Individuals"" NUMBER(38,0),
	""Unsheltered_Homeless_Individuals"" NUMBER(38,0),
	""Homeless_People_in_Families"" NUMBER(38,0),
	""Sheltered_ES_Homeless_People_in_Families"" NUMBER(38,0),
	""Sheltered_TH_Homeless_People_in_Families"" NUMBER(38,0),
	""Sheltered_Total_Homeless_People_in_Families"" NUMBER(38,0),
	""Unsheltered_Homeless_People_in_Families"" NUMBER(38,0),
	""Homeless_Family_Households"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Family_Households"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Family_Households"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Family_Households"" NUMBER(38,0),
	""Unsheltered_Homeless_Family_Households"" NUMBER(38,0),
	""Chronically_Homeless"" NUMBER(38,0),
	""Sheltered_ES_Chronically_Homeless"" NUMBER(38,0),
	""Sheltered_SH_Chronically_Homeless"" NUMBER(38,0),
	""Sheltered_Total_Chronically_Homeless"" NUMBER(38,0),
	""Unsheltered_Chronically_Homeless"" NUMBER(38,0),
	""Chronically_Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_ES_Chronically_Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_SH_Chronically_Homeless_Individuals"" NUMBER(38,0),
	""Sheltered_Total_Chronically_Homeless_Individuals"" NUMBER(38,0),
	""Unsheltered_Chronically_Homeless_Individuals"" NUMBER(38,0),
	""Chronically_Homeless_People_in_Families"" NUMBER(38,0),
	""Sheltered_ES_Chronically_Homeless_People_in_Families"" NUMBER(38,0),
	""Sheltered_Total_Chronically_Homeless_People_in_Families"" NUMBER(38,0),
	""Unsheltered_Chronically_Homeless_People_in_Families"" NUMBER(38,0),
	""Homeless_Veterans"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Veterans"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Veterans"" NUMBER(38,0),
	""Sheltered_SH_Homeless_Veterans"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Veterans"" NUMBER(38,0),
	""Unsheltered_Homeless_Veterans"" NUMBER(38,0),
	""Homeless_Unaccompanied_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Unaccompanied_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Unaccompanied_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_SH_Homeless_Unaccompanied_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Unaccompanied_Youth_Under_25"" NUMBER(38,0),
	""Unsheltered_Homeless_Unaccompanied_Youth_Under_25"" NUMBER(38,0),
	""Homeless_Unaccompanied_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Unaccompanied_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Unaccompanied_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_SH_Homeless_Unaccompanied_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Unaccompanied_Youth_Under_18"" NUMBER(38,0),
	""Unsheltered_Homeless_Unaccompanied_Youth_Under_18"" NUMBER(38,0),
	""Homeless_Unaccompanied_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Unaccompanied_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Unaccompanied_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_SH_Homeless_Unaccompanied_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Unaccompanied_Youth_Age_18_24"" NUMBER(38,0),
	""Unsheltered_Homeless_Unaccompanied_Youth_Age_18_24"" NUMBER(38,0),
	""Homeless_Parenting_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Parenting_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Parenting_Youth_Under_25"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Parenting_Youth_Under_25"" NUMBER(38,0),
	""Unsheltered_Homeless_Parenting_Youth_Under_25"" NUMBER(38,0),
	""Homeless_Parenting_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Parenting_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Parenting_Youth_Under_18"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Parenting_Youth_Under_18"" NUMBER(38,0),
	""Unsheltered_Homeless_Parenting_Youth_Under_18"" NUMBER(38,0),
	""Homeless_Parenting_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Parenting_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Parenting_Youth_Age_18_24"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Parenting_Youth_Age_18_24"" NUMBER(38,0),
	""Unsheltered_Homeless_Parenting_Youth_Age_18_24"" NUMBER(38,0),
	""Homeless_Children_of_Parenting_Youth"" NUMBER(38,0),
	""Sheltered_ES_Homeless_Children_of_Parenting_Youth"" NUMBER(38,0),
	""Sheltered_TH_Homeless_Children_of_Parenting_Youth"" NUMBER(38,0),
	""Sheltered_Total_Homeless_Children_of_Parenting_Youth"" NUMBER(38,0),
	""Unsheltered_Homeless_Children_of_Parenting_Youth"" NUMBER(38,0),
	""Count_Year"" NUMBER(38,0)
);"

Database Name: SDOH
Schema Name: SDOH_SNAP_ENROLLMENT
DDL describes table information.
,0
table_name,SNAP_ENROLLMENT
description,
DDL,"create or replace TABLE SNAP_ENROLLMENT (
	""GeoDesc"" VARCHAR(16777216),
	""SNAP_PA_Participation_Persons"" NUMBER(38,0),
	""SNAP_NPA_Participation_Persons"" NUMBER(38,0),
	""SNAP_All_Participation_Persons"" NUMBER(38,0),
	""SNAP_PA_Participation_Households"" NUMBER(38,0),
	""SNAP_NPA_Participation_Households"" NUMBER(38,0),
	""SNAP_All_Participation_Households"" NUMBER(38,0),
	""SNAP_All_Issuance"" NUMBER(38,0),
	""Date"" DATE,
	FIPS VARCHAR(16777216),
	""SubCounty"" VARCHAR(16777216),
	""Program"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'SDOH': {'CENSUS_BUREAU_ACS': ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2012_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2018_5YR', 'CBSA_2007_1YR', 'CBSA_2007_3YR', 'CBSA_2008_1YR', 'CBSA_2008_3YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2010_5YR', 'CBSA_2011_1YR', 'CBSA_2011_3YR', 'CBSA_2011_5YR', 'CBSA_2012_1YR', 'CBSA_2012_3YR', 'CBSA_2012_5YR', 'CBSA_2013_1YR', 'CBSA_2013_3YR', 'CBSA_2013_5YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2015_1YR', 'CBSA_2015_5YR', 'CBSA_2016_1YR', 'CBSA_2016_5YR', 'CBSA_2017_1YR', 'CBSA_2017_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2019_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR', 'CENSUSTRACT_2020_5YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'COUNTY_2007_1YR', 'COUNTY_2007_3YR', 'COUNTY_2008_1YR', 'COUNTY_2008_3YR', 'COUNTY_2009_1YR', 'COUNTY_2009_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_3YR', 'COUNTY_2010_5YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2011_5YR', 'COUNTY_2012_1YR', 'COUNTY_2012_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_1YR', 'COUNTY_2013_3YR', 'COUNTY_2013_5YR', 'COUNTY_2014_1YR', 'COUNTY_2014_5YR', 'COUNTY_2015_1YR', 'COUNTY_2015_5YR', 'COUNTY_2016_1YR', 'COUNTY_2016_5YR', 'COUNTY_2017_1YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2018_5YR', 'COUNTY_2019_1YR', 'COUNTY_2019_5YR', 'COUNTY_2020_5YR', 'COUNTY_2021_1YR', 'PLACE_2007_1YR', 'PLACE_2007_3YR', 'PLACE_2008_1YR', 'PLACE_2008_3YR', 'PLACE_2009_1YR', 'PLACE_2009_3YR', 'PLACE_2010_1YR', 'PLACE_2010_3YR', 'PLACE_2010_5YR', 'PLACE_2011_1YR', 'PLACE_2011_3YR', 'PLACE_2011_5YR', 'PLACE_2012_1YR', 'PLACE_2012_3YR', 'PLACE_2012_5YR', 'PLACE_2013_1YR', 'PLACE_2013_3YR', 'PLACE_2013_5YR', 'PLACE_2014_1YR', 'PLACE_2014_5YR', 'PLACE_2015_1YR', 'PLACE_2015_5YR', 'PLACE_2016_1YR', 'PLACE_2016_5YR', 'PLACE_2017_1YR', 'PLACE_2017_5YR', 'PLACE_2018_1YR', 'PLACE_2018_5YR', 'PLACE_2019_1YR', 'PLACE_2019_5YR', 'PLACE_2020_5YR', 'PLACE_2021_1YR', 'PUMA_2007_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2008_3YR', 'PUMA_2009_1YR', 'PUMA_2009_3YR', 'PUMA_2010_1YR', 'PUMA_2010_3YR', 'PUMA_2010_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2011_5YR', 'PUMA_2012_1YR', 'PUMA_2012_3YR', 'PUMA_2012_5YR', 'PUMA_2013_1YR', 'PUMA_2013_3YR', 'PUMA_2013_5YR', 'PUMA_2014_1YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2015_5YR', 'PUMA_2016_1YR', 'PUMA_2016_5YR', 'PUMA_2017_1YR', 'PUMA_2017_5YR', 'PUMA_2018_1YR', 'PUMA_2018_5YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2020_5YR', 'PUMA_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'STATE_2007_1YR', 'STATE_2007_3YR', 'STATE_2008_1YR', 'STATE_2008_3YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2010_1YR', 'STATE_2010_3YR', 'STATE_2010_5YR', 'STATE_2011_1YR', 'STATE_2011_3YR', 'STATE_2011_5YR', 'STATE_2012_1YR', 'STATE_2012_3YR', 'STATE_2012_5YR', 'STATE_2013_1YR', 'STATE_2013_3YR', 'STATE_2013_5YR', 'STATE_2014_1YR', 'STATE_2014_5YR', 'STATE_2015_1YR', 'STATE_2015_5YR', 'STATE_2016_1YR', 'STATE_2016_5YR', 'STATE_2017_1YR', 'STATE_2017_5YR', 'STATE_2018_1YR', 'STATE_2018_5YR', 'STATE_2019_1YR', 'STATE_2019_5YR', 'STATE_2020_5YR', 'STATE_2021_1YR', 'ZCTA5_2011_5YR', 'ZCTA5_2012_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2019_5YR', 'ZCTA_2019_5YR', 'ZCTA_2020_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2014_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR'], 'SDOH_BEA_CAINC30': ['FIPS'], 'SDOH_CDC_WONDER_NATALITY': ['COUNTY_NATALITY', 'COUNTY_NATALITY_BY_ABNORMAL_CONDITIONS', 'COUNTY_NATALITY_BY_CONGENITAL_ABNORMALITIES', 'COUNTY_NATALITY_BY_FATHER_RACE', 'COUNTY_NATALITY_BY_MATERNAL_MORBIDITY', 'COUNTY_NATALITY_BY_MOTHER_RACE', 'COUNTY_NATALITY_BY_PAYMENT'], 'SDOH_CMS_DUAL_ELIGIBLE_ENROLLMENT': ['DUAL_ELIGIBLE_ENROLLMENT_BY_COUNTY_AND_PROGRAM'], 'SDOH_HRSA_SHORTAGE_AREAS': ['HPSA_DENTAL_HEALTH', 'HPSA_MENTAL_HEALTH', 'HPSA_MUA', 'HPSA_PRIMARY_CARE'], 'SDOH_HUD_HOUSING': ['_2017_LIHTC_DATABASE_HUD'], 'SDOH_HUD_PIT_HOMELESSNESS': ['HUD_PIT_BY_COC'], 'SDOH_SNAP_ENROLLMENT': ['SNAP_ENROLLMENT']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **Table:** `"SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"`
   - `"Year"`: Used to filter data for the years 2016 to 2018.
   - `"County_of_Residence_FIPS"`: Used to identify the county and join with census data.
   - `"Maternal_Morbidity_YN"`: Used to select births without maternal morbidity (`0` indicates no morbidity).
   - `"Births"`: Number of births, used to calculate percentages.

2. **Table:** `"SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"`
   - `"Year"`: Used to filter data for the years 2016 to 2018.
   - `"County_of_Residence_FIPS"`: Used to identify the county and join with census data.
   - `"Births"`: Total number of births per county, used as the denominator in percentage calculations.

3. **Tables:** `"SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"`, `"COUNTY_2016_5YR"`, `"COUNTY_2017_5YR"`
   - `"geo_id"`: Geographic identifier, used to match with `"County_of_Residence_FIPS"`.
   - `"poverty"`: Poverty rate, used for correlation analysis.
   - Note: Each table corresponds to a specific year’s data (e.g., `COUNTY_2015_5YR` is used for 2016 analysis).

**Conditions to be Used:**

- Filter natality data for years 2016 to 2018 using `"Year"` between `'2016-01-01'` and `'2018-12-31'`.
- Select births without maternal morbidity by using `"Maternal_Morbidity_YN" = 0`.
- Match counties between natality and census data using `"County_of_Residence_FIPS"` and `"geo_id"` (after appropriate formatting).

**SQL Queries to Explore the Data:**

1. **List Available Years in Natality Data:**
   ```sql
   SELECT DISTINCT "Year"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
   ```

2. **Check Values of Maternal Morbidity Indicator:**
   ```sql
   SELECT DISTINCT "Maternal_Morbidity_YN"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY";
   ```

3. **Total Births Without Maternal Morbidity per County for 2016:**
   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

4. **Total Births Without Maternal Morbidity per County for 2017:**
   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2017-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

5. **Total Births Without Maternal Morbidity per County for 2018:**
   ```sql
   SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2018-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
   ```

6. **Total Births per County for 2016:**
   ```sql
   SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2016-01-01'
   LIMIT 1000;
   ```

7. **Poverty Rates from 2015 Census Data:**
   ```sql
   SELECT "geo_id", "poverty"
   FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
   LIMIT 1000;
   ```

8. **Extract County FIPS Code from Census Geo_ID:**
   ```sql
   SELECT "geo_id", SUBSTRING("geo_id", 10, 5) AS "County_FIPS_Code"
   FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
   LIMIT 1000;
   ```

9. **List County FIPS Codes in Natality Data:**
   ```sql
   SELECT DISTINCT "County_of_Residence_FIPS"
   FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
   ```

10. **Count of Records by Maternal Morbidity Indicator:**
    ```sql
    SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    GROUP BY "Maternal_Morbidity_YN"
    LIMIT 1000;
    ```

11. **Distinct Maternal Morbidity Descriptions:**
    ```sql
    SELECT DISTINCT "Maternal_Morbidity_Desc"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    LIMIT 1000;
    ```

12. **Sample Data for a Specific County and Year:**
    ```sql
    SELECT *
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
    LIMIT 1000;
    ```

13. **Poverty Rates from 2016 Census Data:**
    ```sql
    SELECT "geo_id", "poverty"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR"
    LIMIT 1000;
    ```

14. **Poverty Rates from 2017 Census Data:**
    ```sql
    SELECT "geo_id", "poverty"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR"
    LIMIT 1000;
    ```

15. **Total Births per County for 2017:**
    ```sql
    SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
    WHERE "Year" = '2017-01-01'
    LIMIT 1000;
    ```

16. **Total Births per County for 2018:**
    ```sql
    SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
    WHERE "Year" = '2018-01-01'
    LIMIT 1000;
    ```

17. **Check Data Consistency for Maternal Morbidity Descriptions:**
    ```sql
    SELECT "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc", COUNT(*) AS "Count"
    FROM "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
    GROUP BY "Maternal_Morbidity_YN", "Maternal_Morbidity_Desc"
    LIMIT 1000;
    ```

18. **List of Counties in Census Data for 2015:**
    ```sql
    SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
    LIMIT 1000;
    ```

19. **List of Counties in Census Data for 2016:**
    ```sql
    SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR"
    LIMIT 1000;
    ```

20. **List of Counties in Census Data for 2017:**
    ```sql
    SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR"
    LIMIT 1000;
    ```

These queries help understand the data structure, explore the necessary columns, and prepare for further analysis to assess the relationship between poverty rates and the percentage of births without maternal morbidity for the specified years.Query:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Answer:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
01089,82
04013,411
06019,50
06059,289
06061,55
06075,119
06081,62
06083,45
06085,348
06097,66
08013,41
08031,171
08035,68
12086,141
12105,54
12127,37
13121,101
13135,62
15003,217
17031,1193
17097,107
17119,51
17167,49
17201,64
17999,424
18089,65
21067,44
21111,90
21999,365
22033,117
22071,70
24013,75
26081,60
26163,273
26999,319
29999,450
34007,100
34025,69
36005,160
39025,71
45999,154
48027,34
49057,54
30999,149
48187,13
24027,61
24510,129
25021,123
34011,59
34013,85
34023,103
34039,95
36001,82
36067,134
42003,334
42045,133
53033,561
55079,225
42101,328
40109,137
53011,92
46103,10
37097,31
27137,61
04027,64
12011,85
17043,158
22051,85
24999,68
25005,55
27037,86
32003,225
36013,52
39089,34
45079,55
48113,740
48121,61
53061,120
42071,245
12057,102
32031,64
53063,119
24031,152
08001,76
12099,115
13067,111
18057,49
29095,136
33015,45
34005,52
34031,95
34035,50
35013,160
36065,44
36999,403
37081,202
37999,383
38999,144
41067,126
42089,37
48141,126
48157,37
48999,657
49005,34
53067,49
55133,51
01073,50
25009,75
17019,45
49049,184
13089,66
12103,72
12095,96
34017,123
47999,273
08999,133
24033,148
25025,188
42107,105
36061,315
51999,252
34027,79
39061,315
20091,53
37133,58
06111,127
06067,235
06071,651
06013,252
02020,86
50007,52
05999,225
41047,70
26115,11
37089,11
26005,12
49053,13
12019,14
53015,16
09011,22
24015,23
01081,26
12111,28
39155,30
28999,230
36085,37
48439,245
02999,132
05007,53
36103,809
39035,351
06073,743
36059,290
35001,234
42007,67
33011,74
34021,66
06029,87
39095,92
39999,492
42133,54
09009,131
45007,64
09003,94
27123,141
20177,11
47009,12
18095,14
53057,15
13151,15
17099,16
18035,16
26147,16
13021,17
42095,20
29097,22
05119,23
55127,26
13073,26
26049,31
13185,35
11001,71
23031,28
23005,38
01125,43
18039,48
10005,48
12031,144
23999,59
34001,34
40143,62
40999,244
48029,186
48201,291
49999,103
06037,1105
39017,107
36055,231
36119,93
41005,64
47037,89
51087,37
36091,54
01097,76
08059,67
25013,63
19103,42
36071,41
25027,225
22999,194
12999,86
46999,122
53053,134
24005,112
29183,78
53005,145
56999,107
06001,267
34003,97
42129,67
41051,175
20999,229
27163,53
42069,11
13097,17
12109,18
37049,18
41043,22
42077,24
34015,48
34029,94
37183,120
48215,216
53035,37
55059,44
36063,86
10003,189
08005,121
38017,105
18003,68
45051,45
26125,188
16999,187
36029,448
49035,339
06095,64
17089,64
26161,72
04999,58
10001,53
37021,37
44007,139
45045,89
12101,64
01999,243
26099,161
27053,239
48085,74
16001,70
04019,197
55999,361
08041,83
36047,405
25023,91
31055,160
20173,85
36081,427
31109,100
39113,61
39049,476
39165,70
42999,478
45019,85
22063,34
18097,200
18999,396
19153,132
37067,80
12001,10
12053,10
37035,10
37155,10
51177,11
13045,11
12113,12
25003,12
42021,13
47163,13
06017,14
25999,14
37159,14
45083,14
12061,14
55117,14
23011,14
29071,15
30063,15
39023,15
35045,15
48355,15
18019,15
12005,15
04003,16
24017,16
41017,16
55063,16
28033,16
17091,16
12073,16
04025,17
37001,17
39003,17
39169,17
39029,17
48451,17
12085,18
12069,18
08101,19
37025,19
48257,19
48329,19
09013,20
13059,20
22103,20
28049,20
34041,20
54003,20
36111,20
06041,20
44003,20
15001,20
36089,20
04017,21
06055,21
06087,21
16055,21
23001,21
48381,21
16019,21
47125,21
45003,22
12033,23
17037,24
17115,24
24025,24
06099,24
18081,25
37019,25
39057,25
13063,25
26093,26
36045,26
01101,27
39099,27
39133,27
35043,28
42125,28
37057,28
36069,28
06113,29
13245,29
12115,30
22017,30
28047,31
48167,31
06023,31
48041,31
42079,32
54039,32
42085,32
19163,32
55139,32
05131,32
48339,33
37051,33
29019,33
39045,35
55009,35
08069,35
45091,36
05143,36
29077,38
29510,39
12021,40
36093,40
39041,40
17163,40
42055,40
13215,43
32999,43
36027,43
29099,43
04021,47
48309,47
48491,47
37129,47
37063,48
53077,48
47093,48
53999,264
35999,157
29189,166
09001,108
17197,158
48453,114
12097,10
42013,10
55073,10
12083,11
34037,15
26021,15
08077,16
12009,16
28059,16
39007,16
42081,16
01117,17
26017,17
35049,18
37085,19
45077,19
42001,20
27139,21
48039,21
25015,21
48423,22
09007,22
19113,23
37151,24
48375,24
18163,25
26139,25
41029,25
06107,27
42027,28
42075,28
26065,28
36007,31
30111,32
47165,36
26025,12
27171,23
48245,23
06007,25
09015,25
39103,32
48061,33
55087,36
27003,36
26121,38
45035,27
50999,69
17143,60
29047,60
31999,237
48303,116
42091,316
24003,55
21117,56
39173,34
55025,153
06999,137
33999,69
54999,213
41999,188
39093,57
47157,93
51153,49
19999,413
31153,49
26075,11
39139,12
51700,13
17093,14
20045,14
33017,15
47189,16
51041,17
12117,17
42043,17
06079,19
18127,19
37135,20
37101,21
48091,21
04005,22
55131,23
09005,23
24037,24
51107,24
48209,24
48139,26
12081,27
18063,27
55039,27
27145,27
36109,28
17179,29
18157,30
19193,30
26145,30
27109,30
34019,30
06047,31
46099,32
42041,33
42049,36
42017,36
41039,38
36083,40
55105,43
47149,43
06077,48
06065,223
06039,84
13999,455
26077,51
37119,195
27999,367
25017,217
49011,115
06053,75
53073,10
13077,11
44009,13
17111,18
22105,19
23019,19
13051,21
48441,22
19013,23
12091,24
34999,24
17161,26
0110
Query:
SELECT DISTINCT "Maternal_Morbidity_YN"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
Answer:
Maternal_Morbidity_YN
1
0
9
Query:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2017-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Answer:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
02999,121
04013,443
04021,55
04999,69
06001,297
06013,231
06029,76
06039,78
06061,75
06067,257
06085,384
06111,152
08005,144
08031,224
10003,173
12021,46
12086,151
12103,64
13135,89
15003,121
17999,388
18039,45
22033,129
22051,98
24013,97
25025,224
26099,151
27037,53
34017,92
34025,49
34031,80
34039,74
39035,379
39999,539
45999,184
48041,44
48215,250
54999,202
41039,44
37133,64
55079,237
24027,54
02020,64
05999,236
08013,42
12999,96
13067,70
23005,46
24510,108
26161,61
26163,265
28047,41
28999,251
35013,260
36001,98
37081,92
40109,119
34021,57
42107,124
25017,275
22071,101
45019,98
35001,114
30999,132
06053,72
06097,78
10001,59
17031,1154
17043,150
17143,61
17167,61
19153,121
21111,117
24999,54
34003,110
36005,157
37021,52
39093,76
40143,81
32031,55
06075,115
09009,113
12031,119
17197,135
18089,96
21999,332
22999,177
24033,153
29019,34
29077,34
34001,57
34007,75
34013,85
36067,116
39099,34
42003,315
48061,34
48141,110
48201,299
48999,685
49057,65
53005,134
53011,108
53061,101
55009,41
04019,238
17019,44
42011,127
51999,304
17097,123
35999,166
25005,46
53033,534
27123,149
31153,37
31109,87
47999,313
47149,69
47037,228
36059,289
18057,44
06095,66
49049,174
41067,146
21067,51
39061,319
41999,170
42017,41
48121,82
33011,101
12095,80
50007,71
45045,74
28049,11
09011,15
06055,16
18127,17
05125,17
26005,18
24015,22
26065,23
13185,25
36999,383
53035,44
53999,239
42055,34
06999,149
06065,230
13089,75
39165,66
48439,238
10005,41
12099,114
25009,103
37999,382
37129,55
34023,87
06059,316
42101,405
53053,153
36061,253
26081,139
01003,41
39025,75
05007,52
25023,85
36029,494
12001,10
13151,10
35043,10
17091,14
47009,16
42051,18
26115,18
01125,18
15001,20
13073,22
17099,22
47187,22
42007,23
42075,23
55127,23
34011,36
49035,328
27137,67
06007,19
23031,30
37135,34
51059,49
51087,70
53063,105
36091,45
19103,64
25013,66
32003,282
48029,204
56999,97
17089,63
24025,50
06071,626
01097,58
29047,54
42091,365
36047,323
31055,135
39095,68
48113,476
17113,44
26999,367
29999,597
36119,112
37119,198
38017,122
06037,1190
06083,88
42129,56
48453,157
39017,129
42071,236
46103,10
48251,14
13223,15
04003,16
39155,17
12019,17
36013,23
12011,81
16001,82
16999,143
36085,51
45051,41
48491,44
55025,142
20091,51
47157,143
36063,86
06081,59
24031,165
11001,129
33015,46
01089,63
19999,401
49999,105
37183,138
18097,159
27999,403
51107,44
39045,54
06073,859
37067,70
09001,125
41047,103
49011,107
39113,71
42079,41
42999,545
17201,75
34027,51
41051,212
34029,99
29183,82
46999,123
01999,259
18999,438
41005,65
12101,55
39049,554
45015,44
20999,243
08059,78
08999,144
36055,242
37063,49
39041,54
20173,69
27109,44
42045,129
08035,64
08041,73
36103,912
44007,157
23011,10
45041,10
13059,11
13153,11
35045,11
37147,11
53057,11
09015,11
17115,12
37019,12
42081,12
16019,12
12109,12
12069,13
25015,13
40031,13
53015,13
25999,13
47163,13
06041,14
37085,14
48257,14
12113,14
18035,14
33013,14
51013,14
20177,14
55131,15
29071,16
48209,16
55117,16
28033,16
36111,16
04015,16
22105,16
24017,17
06087,18
12009,18
20209,18
39003,18
40017,18
48441,18
18019,18
04025,19
06023,19
13097,19
54039,19
22103,19
05131,19
19193,19
36069,20
20045,20
54003,20
12111,20
18063,20
17037,21
19013,21
06107,21
12005,21
55063,22
41017,22
45077,22
12073,22
42085,23
34019,23
42041,24
01069,24
37049,25
19113,25
16055,25
01073,26
13215,26
39169,26
45083,26
48187,26
26093,27
36045,28
12115,29
04017,29
49053,29
12127,30
18081,30
42095,30
26049,30
39023,31
29097,32
08101,32
06077,33
37051,33
37097,33
06113,33
36027,35
29510,36
05143,38
17163,38
45091,38
47125,38
32999,38
36083,39
48309,39
13245,39
42125,40
13117,40
39089,43
23999,47
47093,48
45079,48
48339,48
04027,78
27053,236
13999,438
38999,133
29189,120
25021,160
45013,10
09007,11
01015,12
36007,12
42013,14
12097,15
28059,16
44003,16
51179,17
48139,17
37151,18
01081,20
35049,20
13063,21
26017,21
29099,21
01117,22
09013,22
19163,23
39133,23
24043,23
12061,23
37001,24
39057,24
48329,24
41029,24
01101,25
34037,25
30111,25
39007,26
13021,27
42027,27
49005,27
48039,28
48167,28
39151,30
22063,32
26139,32
48451,32
36089,33
17119,36
36093,38
48375,38
12105,38
53077,38
51153,38
16027,39
47165,39
37025,39
27163,40
12071,48
26025,17
08077,17
27171,17
45035,20
51550,21
27139,23
24021,25
39103,27
48245,33
55087,35
53067,40
27003,47
13121,105
36071,58
40999,306
26145,42
55133,62
24005,130
12057,133
39153,82
41043,23
42077,27
42049,45
48085,91
25027,221
08001,85
48157,72
21117,53
42029,75
55999,376
36081,410
26125,230
51810,50
50999,107
47065,79
17093,10
37155,11
12085,13
42021,13
42069,13
18095,14
34041,14
26147,15
23001,16
39029,16
01055,18
51700,18
06099,18
06017,19
30063,19
39139,19
12117,20
42043,20
06079,20
48381,20
26121,21
47189,21
51710,23
37159,24
13051,25
37057,26
06047,27
12081,28
45003,29
18163,29
18157,30
55105,30
04005,30
24037,30
12033,31
26077,31
17179,32
33017,32
27145,33
12091,33
21015,35
46099,35
05119,36
42133,36
55139,38
34015,43
08069,47
24003,58
09003,120
08123,65
45007,56
18003,77
18091,13
Query:
SELECT "County_of_Residence_FIPS", SUM("Births") AS "Total_Births_No_Morbidity"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2018-01-01' AND "Maternal_Morbidity_YN" = 0
   GROUP BY "County_of_Residence_FIPS"
   LIMIT 1000;
Answer:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births_No_Morbidity
01999,229
12999,89
34011,55
20091,80
29047,46
06083,60
12101,56
39113,72
05119,58
34035,42
53033,570
31109,55
12031,120
32003,267
34001,66
09001,135
36085,45
45999,190
06053,74
11001,120
06111,90
36059,285
35999,150
41047,97
24031,204
36083,44
27145,45
36047,398
37097,34
27123,163
02020,92
25005,56
34013,78
40143,93
30999,138
55025,176
49049,171
39061,336
34017,116
53063,115
17167,62
47149,77
27137,62
42071,292
34027,61
48303,90
12099,90
10005,45
42045,154
53061,109
34025,71
36029,461
09009,145
41005,76
22071,80
45019,98
13089,81
26161,69
32031,46
24015,16
48041,23
25017,313
39165,65
23031,23
55999,395
12057,233
39017,92
48215,251
24025,42
29999,655
53999,212
21999,404
06085,385
49057,45
42999,554
48201,332
41067,175
49999,96
01097,59
24027,63
51999,307
18999,415
36055,251
04999,54
27003,44
36999,405
48453,130
06001,306
35013,320
26125,225
06077,207
29019,75
29183,67
25021,134
08059,60
36001,102
04027,82
06013,289
34023,82
25025,160
02999,134
39089,37
56999,101
04019,194
53005,46
29095,116
01089,71
18163,34
06029,68
06097,67
18039,37
48085,80
42007,52
06019,45
04021,42
20999,236
17019,61
13117,65
05007,55
55079,262
21111,102
27999,404
17043,133
13135,69
08031,161
41999,128
48113,685
05999,218
26999,304
18057,42
06071,369
42101,359
44007,142
46103,11
12085,12
13185,13
53015,13
13153,15
26025,20
55117,20
51650,22
04003,22
39049,632
13067,77
48439,186
26163,286
40109,103
42107,108
34039,66
36103,837
10003,167
39025,67
47187,208
37081,56
29510,41
26081,119
48999,634
12127,55
39035,366
01081,42
28999,223
35001,102
39041,60
36067,116
41051,201
34003,89
36061,239
06073,546
01125,10
01073,10
17115,12
21093,13
55127,14
48381,15
12113,15
09013,16
15001,17
12019,17
26115,17
13073,18
26049,18
13151,21
06017,22
09011,23
21067,43
50007,47
23005,13
27171,16
45035,17
06007,22
22999,163
12011,106
24999,74
06061,63
42029,93
26077,46
17999,420
06999,157
24003,69
39093,66
22051,105
51059,90
47065,95
06037,795
50999,76
12095,185
33999,83
17143,101
06095,83
06075,120
24013,124
12071,83
45045,69
17097,109
25013,114
19153,125
08001,93
42003,245
16001,67
36005,177
06067,349
24033,174
06023,34
06099,147
36081,458
42017,54
47999,382
48251,11
13059,12
29077,16
28033,16
37133,47
37071,45
34029,77
55101,42
22019,45
37067,85
13999,462
29189,125
37183,179
24510,132
13121,129
12021,61
26093,37
04013,408
18097,149
39095,71
12086,425
25027,251
12117,42
55009,42
36045,37
47037,175
23999,49
34031,91
53011,108
34007,74
36119,132
45079,42
17201,62
12105,34
51153,51
08999,152
17031,1187
24037,34
26065,37
49035,249
33011,105
45063,62
17089,66
09003,99
19103,97
27109,44
27163,56
38017,123
48029,164
06065,176
54999,203
49011,88
27037,72
31055,143
53053,147
25023,59
44003,37
27053,234
37999,384
39999,499
06059,258
22033,132
48141,144
37191,11
37151,11
42081,11
26147,11
37019,11
42069,12
16019,12
23019,12
12073,13
37085,13
17093,13
26045,14
17037,14
54003,14
17099,16
48423,16
17091,16
28059,16
42051,16
39169,17
04025,17
18035,17
51013,17
37155,17
39003,17
26017,18
05131,18
39099,18
48441,18
06055,18
18127,18
34041,19
12111,19
40017,20
53057,20
48451,20
37089,21
39007,21
22017,22
12097,23
12069,24
37021,24
37051,24
05045,24
28049,24
49053,25
18063,25
29071,25
39155,25
19163,25
37025,25
51510,25
22103,25
24017,26
06113,26
06041,26
08101,26
13097,26
12115,27
55063,27
48209,27
36111,27
06087,27
06107,28
10001,28
26005,28
42095,28
36069,29
13215,29
29099,30
42049,30
48309,30
05143,30
30111,32
42125,33
08069,33
36027,33
42079,33
32999,33
48039,33
08013,35
53077,36
06047,36
06079,38
19113,38
42055,39
39045,39
47093,39
45091,40
20173,47
37063,48
13245,48
16999,137
24021,41
38999,113
12103,64
42085,58
18089,62
25009,117
26099,165
08005,87
26021,10
34037,13
20177,14
09015,14
45077,16
35049,17
36007,17
09007,17
55073,17
22055,17
35045,17
19013,18
13021,18
42021,19
18081,19
55039,19
39057,20
37001,20
41029,21
39139,21
25015,22
51550,22
27139,25
42019,26
04017,26
48027,26
42075,27
22063,27
45003,28
26139,29
54039,30
48375,30
01055,30
22005,31
39133,31
42001,32
01101,32
31153,32
49005,33
48245,35
34021,35
48167,35
51810,36
16027,36
36093,40
28047,43
36089,43
42129,47
36091,47
17119,47
06081,48
33013,21
39103,22
55087,24
39173,25
42013,25
26121,28
08077,29
45051,30
34999,31
08123,39
48061,47
36065,48
40999,343
18003,74
24005,169
39153,112
51760,17
40027,22
41043,29
34015,39
31999,217
36071,74
37119,226
48121,79
33015,55
19999,445
36063,71
45007,71
17197,120
55133,100
42011,227
37179,34
46999,131
13223,10
13015,12
25003,13
18019,13
42041,14
48139,14
47189,14
47009,14
18095,15
01015,15
12109,15
13051,16
41017,16
39109,17
37101,17
55131,17
48257,18
39023,18
34019,18
47165,19
09005,19
42043,21
13057,22
30063,22
05125,24
42089,24
19193,24
21015,25
12081,25
41039,26
48491,26
01069,26
29097,26
48329,26
36013,26
37049,27
04005,28
16055,28
37159,29
18141,29
37129,30
55105,31
21117,33
42133,33
46099,33
37057,36
37135,38
17163,38
39085,39
47125,39
39151,40
51107,43
48339,48
26145,48
36087,77
15003,130
47157,134
48157,63
13077,
Query:
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2016-01-01'
   LIMIT 1000;
Answer:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births
22015,1751
48135,2814
47065,4293
48039,4800
47165,2053
37147,2023
13059,1392
48209,2502
47125,3443
08041,9490
12127,5032
01117,2387
04013,54126
18063,1760
42081,1222
37129,2241
18089,5657
12073,2989
42079,3193
18091,1305
18057,3798
42051,1351
23999,4083
06079,2581
16055,1754
25017,17198
25999,959
42027,1208
22999,20434
12071,6750
17093,1595
45003,1965
45007,2318
47179,1292
49057,3876
12091,2784
29189,11692
21111,9889
35049,1290
36007,1985
12109,2120
35045,1726
26065,3414
18003,5151
34001,2836
42125,2044
51107,5335
39109,1227
19999,22392
06047,4117
36093,1770
42011,4786
06029,13728
42075,1592
08059,6104
06097,4962
41051,9081
53011,5665
25003,1027
39023,1532
48441,2037
45041,1657
17119,3051
48251,2100
17143,2536
12111,2999
15001,2349
51650,1727
42101,21506
17037,1093
17019,2395
13089,11060
48121,10195
26999,21808
24013,1737
27137,1976
41029,2294
23011,1164
13021,2191
13063,3809
13051,3975
24510,8504
21999,34379
20045,1177
39085,2163
26147,1589
55105,2003
29095,9408
55133,4008
49053,2210
42069,2246
36103,15559
48339,7347
36091,2210
53053,11756
08013,2729
27123,7731
48215,14982
22033,6125
17089,6710
55101,2417
39035,14758
40031,1757
21067,4090
06065,30661
34015,2837
42003,13164
37179,2415
42055,1875
04015,1802
24003,6967
54003,1393
42013,1270
23005,2830
46099,2937
53057,1515
47149,4130
45079,4810
13215,2912
20209,2695
17201,3711
17111,3090
39155,2101
08101,1883
34013,10442
35001,7574
47009,1229
12069,3269
39041,2079
36001,3045
06013,12340
05045,1534
08999,8880
12085,1273
16001,5045
04005,1612
09011,2647
55999,21572
08001,6672
12115,2926
55025,6052
06089,2048
37049,1438
06007,2490
26049,4819
48157,9976
22005,1751
37101,2336
35013,2839
12101,5108
24043,1694
42043,3437
12021,3322
13015,1338
39151,4236
37097,1923
06107,7146
31153,2464
06999,10512
42091,8695
34999,1479
36071,4993
41017,1806
28999,26371
45083,3690
40999,24202
40027,3016
12011,22563
45085,1375
48141,13073
48999,59168
49005,2286
37159,1651
51999,38748
06037,123092
53077,3935
45077,1225
12017,1064
36005,21161
06077,10268
11001,9858
16999,10644
51059,14525
12103,8480
13057,2700
10005,2301
42045,6575
37119,14881
26077,3163
53035,3147
34029,8566
53033,26022
41039,3554
39169,1487
39003,1257
22019,3034
39099,2506
28121,1802
17999,22481
48085,11086
22055,3369
26099,9416
49011,5698
37067,4496
51550,2877
06099,7862
38017,2639
27999,23295
42129,2939
55073,1635
36085,5464
09001,10064
33013,1284
27109,2122
48029,27968
13153,1956
12033,3967
22071,4835
17167,2245
05131,1721
42001,922
04025,1868
29999,30617
49035,17612
06071,31032
39133,1441
41999,10471
25021,7341
42029,5325
36061,17587
27053,16495
41043,1521
36999,18322
09007,1277
42999,16421
42095,2831
12031,13292
48355,4738
13151,2511
05999,21443
48091,1448
45063,3264
18019,1448
39095,5627
12015,1037
34031,6842
26121,2127
39113,6631
36065,2497
44007,7275
36059,14329
29097,1669
13045,1615
34005,4419
34025,5960
26081,8811
34039,6756
41067,6983
28047,2790
39007,1075
32003,27388
18097,14294
39057,1808
12095,16653
24015,1106
12001,2862
16019,1910
12019,2209
37999,31354
04017,1497
23019,1483
42019,1833
25005,5643
42077,4253
54039,1968
17115,1327
13999,41842
17163,3228
45051,3118
47093,5272
47037,10023
48485,1631
04999,3188
39165,2400
51179,1711
37155,1775
42089,1477
04027,3007
06053,6219
33017,1211
26025,1660
01097,5504
01101,3139
13185,1605
48167,4167
01069,1333
48381,1640
09015,1102
17161,1776
29077,3579
42107,1367
18999,29457
26125,13665
39089,2075
29047,2962
12081,3445
51510,2823
23001,1247
28049,3123
12061,1245
01003,2247
18095,1506
24017,1812
31055,8832
37089,1089
51700,2814
24037,1425
06083,5501
09009,8886
24021,2839
30999,9160
06087,2799
45999,13084
01999,23128
37081,6259
13223,1644
39093,3295
34017,10383
34007,6226
01055,1214
32999,3485
55009,3336
10003,6501
46103,1471
20177,2189
37019,978
12053,1585
55059,1936
40017,1781
39029,1070
34019,927
51013,3225
30063,1187
36047,40802
41047,4539
08031,10006
53999,12751
37071,2524
19103,1857
27037,5291
02999,6691
27003,4223
36083,1726
22017,3364
47189,1527
40143,9639
22103,3089
42085,1165
55139,1905
37021,2595
27171,1787
34021,4280
20999,17323
45013,1958
06031,2248
34035,3251
37025,2477
24025,2699
38999,8744
10001,2190
06017,1601
33015,2654
53067,3205
53015,1285
08077,1770
41019,1087
18105,1301
48183,1743
01125,2591
39173,1365
12086,32697
48257,1663
01081,1898
34011,1876
51760,3028
21227,1640
48041,2771
48439,28745
48303,4273
48309,3376
21015,1681
17197,7804
05125,1326
21117,2329
13135,11365
55079,13658
48027,6140
04019,11421
17179,1496
18039,3126
37183,13018
06025,2939
36027,2519
53063,6145
30111,1935
06059,38106
36081,30377
23031,1898
26045,1139
48113,40379
34037,1180
36111,1482
50999,4204
33011,4240
50007,1552
17091,1354
22079,1840
48061,6893
18035,1174
51041,3885
13067,9579
24033,12296
17099,1262
42049,3064
17097,7660
37151,1600
48139,2244
15003,12983
12097,4328
29099,2633
39999,30573
13073,1831
13139,2574
21093,1441
35999,9799
20091,7360
06095,5259
25027,8678
27163,2898
42007,1676
06001,19573
22109,1570
35043,1464
48201,72420
22
Query:
SELECT "geo_id", "poverty"
   FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
   LIMIT 1000;
Answer:
Too long, hard cut:
geo_id,poverty
28103,3953.0
21191,2188.0
17065,1211.0
45081,4062.0
39111,2782.0
16051,3492.0
05061,2910.0
21131,3051.0
22059,2857.0
47067,1793.0
13107,6700.0
40063,2244.0
21231,5477.0
49015,1188.0
29186,2540.0
29013,2996.0
47081,4738.0
21121,10093.0
27069,474.0
47109,5319.0
29207,4583.0
05029,4709.0
28129,3813.0
19129,1300.0
17147,1019.0
30067,1918.0
21183,5208.0
28107,7793.0
51011,2668.0
22043,3460.0
39115,3111.0
48177,4009.0
28153,5509.0
51077,3244.0
30095,721.0
22047,5612.0
29015,3540.0
17025,1839.0
21229,2034.0
45049,3963.0
21225,4091.0
40153,2595.0
30009,1137.0
37149,2790.0
46123,1212.0
40095,2645.0
40075,1883.0
20117,1087.0
48239,1765.0
27023,1454.0
39001,6832.0
05017,3385.0
28093,6513.0
40089,8256.0
28141,3146.0
56007,2280.0
31101,931.0
29007,4401.0
13037,1924.0
48089,3081.0
49041,2973.0
22111,6166.0
21017,3272.0
19039,1493.0
27055,2031.0
39117,4063.0
51155,4506.0
53069,674.0
51001,6384.0
08065,833.0
05059,5975.0
12049,7029.0
05091,8594.0
28079,6034.0
45027,8163.0
19029,1855.0
05047,3854.0
17193,1916.0
32013,1762.0
13293,6137.0
08019,748.0
39137,1966.0
26097,1730.0
29121,2895.0
26009,3316.0
48427,22663.0
05023,3676.0
28051,7860.0
22077,4368.0
56023,1435.0
29107,3706.0
19015,2588.0
27071,1937.0
38093,2130.0
17191,2385.0
21235,8871.0
40021,10426.0
35039,9413.0
39021,4756.0
49047,3261.0
51109,3385.0
54079,5494.0
42123,4891.0
16017,6145.0
47073,10661.0
22003,3501.0
40121,7994.0
47101,2292.0
29023,8942.0
45043,12557.0
47043,8116.0
39013,9553.0
13225,5471.0
35015,6237.0
51191,6845.0
56037,5058.0
28081,15327.0
21113,9190.0
30013,12212.0
37093,11047.0
48257,15016.0
49053,21893.0
54011,20110.0
28061,3944.0
56001,9510.0
46005,3708.0
55101,23768.0
55139,19209.0
56025,8407.0
06109,7010.0
22105,26962.0
27141,6966.0
51085,5976.0
55141,7996.0
23031,19192.0
22045,14277.0
04005,28824.0
01101,49918.0
17103,3555.0
08049,1543.0
40135,10261.0
56005,3412.0
42025,6909.0
16011,6093.0
51099,1366.0
48227,4787.0
26107,9338.0
28151,17586.0
41007,5791.0
54069,6658.0
13299,9686.0
39043,9333.0
16069,4581.0
16065,13232.0
27135,1637.0
30029,12307.0
45047,15875.0
22063,19086.0
32023,7658.0
32005,4984.0
26055,9575.0
06103,12313.0
53041,12126.0
48479,82307.0
06045,17527.0
19013,19887.0
28075,17325.0
12119,10802.0
53045,10166.0
22109,21627.0
27131,6469.0
39099,40841.0
26025,22931.0
40017,8995.0
21093,14886.0
22119,9327.0
17051,3644.0
18061,5392.0
55123,4757.0
27161,1544.0
08029,4716.0
48049,6581.0
27061,6018.0
17021,4714.0
24029,2051.0
17133,1667.0
42121,8123.0
42083,6830.0
42035,6086.0
41057,4310.0
42087,7216.0
55135,5232.0
04009,7446.0
51790,4052.0
29113,7980.0
51089,9520.0
19045,6608.0
39091,6487.0
37099,8139.0
35061,17604.0
55031,6713.0
18053,11829.0
05051,19802.0
46013,3613.0
01109,8158.0
21047,13576.0
48251,18392.0
37057,25655.0
22019,32864.0
12105,111877.0
01073,121029.0
48339,59856.0
28089,13287.0
22099,9388.0
18085,8645.0
39139,19504.0
22101,11746.0
56021,9369.0
42019,16325.0
39153,78658.0
21015,10156.0
41061,4641.0
17195,6740.0
39101,11127.0
48001,8274.0
40037,10813.0
27047,3679.0
21029,7911.0
40019,7262.0
50027,6041.0
51590,9629.0
22087,8209.0
13223,18445.0
39025,21127.0
18063,7514.0
01117,16693.0
13153,25111.0
47113,18521.0
08014,3930.0
02090,7752.0
08037,4780.0
01055,20078.0
21037,12883.0
29101,8407.0
16055,18634.0
01003,25798.0
42055,17554.0
45015,26327.0
12061,20272.0
40031,20444.0
37023,17277.0
06101,16743.0
18079,4390.0
18073,2710.0
40015,5976.0
27045,2280.0
12041,3598.0
26039,2073.0
27041,3438.0
40091,4209.0
51131,2730.0
19183,2013.0
30047,6509.0
26051,5211.0
51173,5815.0
21095,8661.0
13079,2122.0
55057,3567.0
39027,6425.0
39059,7784.0
56009,1308.0
26007,4898.0
46135,2993.0
54025,6530.0
39123,4349.0
27005,4160.0
01033,9406.0
40051,6690.0
39047,5185.0
55085,3632.0
21009,8598.0
55075,5168.0
22009,8750.0
41065,4015.0
18037,4071.0
45055,10467.0
04001,25852.0
18137,2403.0
21195,14256.0
53047,8646.0
42073,13192.0
21199,16497.0
36023,6675.0
06035,3563.0
37189,14726.0
49045,4339.0
22075,3775.0
21035,8015.0
48361,12691.0
01015,23325.0
39109,13076.0
29161,8137.0
06089,31707.0
48347,14752.0
45077,22545.0
48441,22395.0
22055,36346.0
29021,15456.0
42085,14549.0
37037,9041.0
02130,1640.0
39155,34912.0
29169,5781.0
21227,21047.0
16083,12418.0
54049,8980.0
18099,5594.0
29029,7516.0
48473,7505.0
18031,3647.0
37107,13401.0
54055,13236.0
29213,9825.0
35009,10338.0
13015,15819.0
01069,18746.0
48469,14531.0
37159,24194.0
13179,11047.0
18163,28870.0
48423,37048.0
13139,34120.0
20161,14922.0
13313,19270.0
38035,11223.0
19153,57143.0
13255,14238.0
20111,6919.0
30111,17250.0
53009,10682.0
47011,19357.0
47065,54036.0
12015,19760.0
51680,16775.0
06115,15862.0
08069,42338.0
35025,9859.0
39039,5071.0
06051,684.0
26105,4861.0
39037,6846.0
51520,3496.0
28113,11334.0
17049,3557.0
26063,4486.0
46081,3115.0
26023,7310.0
19099,3342.0
13207,3492.0
51171,5138.0
40013,7816.0
48419,5553.0
45071,6436.0
56013,5637.0
08097,1709.0
27067,4877.0
46093,2764.0
23013,4304.0
55021,4844.0
47147,8005.0
51670,4165.0
19187,5210.0
51840,4200.0
48367,11785.0
39165,11885.0

Query:
SELECT "geo_id", SUBSTRING("geo_id", 10, 5) AS "County_FIPS_Code"
   FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
   LIMIT 1000;
Answer:
Too long, hard cut:
geo_id,County_FIPS_Code
28103,
21191,
17065,
45081,
39111,
16051,
05061,
21131,
22059,
47067,
13107,
40063,
21231,
49015,
29186,
29013,
47081,
21121,
27069,
47109,
29207,
05029,
28129,
19129,
17147,
30067,
21183,
28107,
51011,
22043,
39115,
48177,
28153,
51077,
30095,
22047,
29015,
17025,
21229,
45049,
21225,
40153,
30009,
37149,
46123,
40095,
40075,
20117,
48239,
27023,
39001,
05017,
28093,
40089,
28141,
56007,
31101,
29007,
13037,
48089,
49041,
22111,
21017,
19039,
27055,
39117,
51155,
53069,
51001,
08065,
05059,
12049,
05091,
28079,
45027,
19029,
05047,
17193,
32013,
13293,
08019,
39137,
26097,
29121,
26009,
48427,
05023,
28051,
22077,
56023,
29107,
19015,
27071,
38093,
17191,
21235,
40021,
35039,
39021,
49047,
51109,
54079,
42123,
16017,
47073,
22003,
40121,
47101,
29023,
45043,
47043,
39013,
13225,
35015,
51191,
56037,
28081,
21113,
30013,
37093,
48257,
49053,
54011,
28061,
56001,
46005,
55101,
55139,
56025,
06109,
22105,
27141,
51085,
55141,
23031,
22045,
04005,
01101,
17103,
08049,
40135,
56005,
42025,
16011,
51099,
48227,
26107,
28151,
41007,
54069,
13299,
39043,
16069,
16065,
27135,
30029,
45047,
22063,
32023,
32005,
26055,
06103,
53041,
48479,
06045,
19013,
28075,
12119,
53045,
22109,
27131,
39099,
26025,
40017,
21093,
22119,
17051,
18061,
55123,
27161,
08029,
48049,
27061,
17021,
24029,
17133,
42121,
42083,
42035,
41057,
42087,
55135,
04009,
51790,
29113,
51089,
19045,
39091,
37099,
35061,
55031,
18053,
05051,
46013,
01109,
21047,
48251,
37057,
22019,
12105,
01073,
48339,
28089,
22099,
18085,
39139,
22101,
56021,
42019,
39153,
21015,
41061,
17195,
39101,
48001,
40037,
27047,
21029,
40019,
50027,
51590,
22087,
13223,
39025,
18063,
01117,
13153,
47113,
08014,
02090,
08037,
01055,
21037,
29101,
16055,
01003,
42055,
45015,
12061,
40031,
37023,
06101,
18079,
18073,
40015,
27045,
12041,
26039,
27041,
40091,
51131,
19183,
30047,
26051,
51173,
21095,
13079,
55057,
39027,
39059,
56009,
26007,
46135,
54025,
39123,
27005,
01033,
40051,
39047,
55085,
21009,
55075,
22009,
41065,
18037,
45055,
04001,
18137,
21195,
53047,
42073,
21199,
36023,
06035,
37189,
49045,
22075,
21035,
48361,
01015,
39109,
29161,
06089,
48347,
45077,
48441,
22055,
29021,
42085,
37037,
02130,
39155,
29169,
21227,
16083,
54049,
18099,
29029,
48473,
18031,
37107,
54055,
29213,
35009,
13015,
01069,
48469,
37159,
13179,
18163,
48423,
13139,
20161,
13313,
38035,
19153,
13255,
20111,
30111,
53009,
47011,
47065,
12015,
51680,
06115,
08069,
35025,
39039,
06051,
26105,
39037,
51520,
28113,
17049,
26063,
46081,
26023,
19099,
13207,
51171,
40013,
48419,
45071,
56013,
08097,
27067,
46093,
23013,
55021,
47147,
51670,
19187,
51840,
48367,
39165,
55063,
37191,
12017,
37025,
06107,
47155,
30031,
53015,
45085,
32510,
22079,
18003,
27119,
53065,
48323,
39145,
30049,
26149,
17177,
20051,
40125,
39007,
54107,
21145,
41033,
48057,
27099,
16019,
26075,
27169,
22015,
47093,
36045,
26111,
12083,
01097,
12019,
12035,
45035,
53007,
35045,
21151,
06033,
27083,
13157,
48303,
27105,
53075,
55087,
35013,
39175,
28159,
39075,
26011,
51125,
51005,
05103,
18119,
13273,
48063,
29177,
37065,
18165,
26019,
21007,
01053,
47171,
18013,
28057,
45089,
54099,
45009,
18111,
17127,
17015,
20059,
26079,
40023,
39127,
45033,
29195,
13087,
21157,
18169,
27039,
08051,
29225,
18087,
12027,
28043,
39107,
21205,
48365,
27091,
26029,
27015,
27095,
27113,
55069,
54009,
51053,
13241,
42005,
54051,
50017,
42047,
17005,
29159,
39087,
21049,
39143,
39083,
55095,
40137,
06027,
37113,
19057,
13295,
48373,
53017,
17107,
37087,
51137,
36035,
38089,
12051,
12107,
05145,
01113,
40101,
17001,
48477,
17109,
01103,
39003,
48005,
47009,
28033,
06069,
41009,
35031,
49043,
18043,
36089,
28049,
41071,
27013,
02170,
53057,
16013,
42051,
48449,
27049,
39147,
55043,
35005,
21209,
05085,
20057,
27103,
53031,
17029,
06015,
05069,
48037,
17115,
17161,
05045,
41003,
20037,
48409,
13095,
45075,
16005,
20177,
19193,
26045,
20169,
42099,
28099,
27115,
18065,
47019,
17141,
53003,
18107,
13025,
51197,
51083,
36033,
22069,
39081,
08107,
48259,
35055,
05035,
37109,
27007,
01095,
18177,
37139,
26017,
37195,
13047,
53037,
51740,
29031,
39009,
18005,
55055,
17099,
53027,
19061,
53021,
13233,
54033,
28067,
39141,
32007,
29071,
04017,
13039,
55109,
53071,
26037,
39173,
37147,
53005,
18035,
47179,
47165,
37021,
51047,
13045,
42063,
05033,
26145,
04021,
37071,
04003,
48329,
47187,
55007,
12077,
26035,
48285,
27157,
01009,
26031,
45037,
26041,
35029,
22085,
30053,
42009,
01005,
40113,
19141,
42131,
13199,
21083,
29049,
27079,
27021,
26089,
39077,
21089,
51067,
28039,
24011,
21101,
17055,
17117,
27149,
37091,
39135,
13193,
30093,
23027,
26117,
01127,
13069,
18029,
19123,
19167,
08117,
39119,
19125,
39157,
01121,
27111,
12093,
27009,
19033,
34033,
40147,
18019,
05125,
16027,
27139,
35028,
13115,
41017,
33013,
42093,
22057,
21073,
23001,
22005,
55015,
34011,
12005,
20045,
37089,
18039,
17037,
27059,
19179,
08043,
27035,
26033,
08067,
36037,
26103,
40119,
05031,
18017,
35035,
48321,
37045,
53025,
48451,
13245,
55117,
04027,
51069,
Query:
SELECT DISTINCT "County_of_Residence_FIPS"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
Answer:
County_of_Residence_FIPS
01097
01103
01125
06007
06041
06097
13021
13063
13153
22015
22017
22019
22033
22073
22999
25999
26017
28121
28999
36087
39003
42027
48135
50999
55063
04013
18141
29077
34025
49053
34999
53033
05007
17119
48245
48309
37183
06113
20209
39025
13113
28047
39057
48479
12069
09009
15999
17099
02999
42017
36109
41043
45003
53073
06047
41029
48329
06095
20091
12071
48251
36089
17161
13015
28049
41017
50007
17143
48167
12009
01101
39007
48041
25013
36081
51179
39155
48423
16055
39139
12057
55087
10003
44007
06023
13215
22109
33013
48215
54039
05999
17163
37155
04021
26125
47163
51810
36091
12001
30999
36063
53077
23001
13135
34013
06067
27163
36061
34003
06089
17201
18127
29047
36059
42001
42003
17197
45013
24510
26049
09015
15001
45091
29510
45045
51041
34027
37191
06999
45051
34015
45077
12011
12101
06025
25015
13185
34021
42133
26065
42045
08041
18163
29071
32031
54003
13313
35013
08069
19113
39099
48375
42095
12117
37001
17115
26163
27171
37135
24021
34005
06017
45041
48121
55059
27999
36013
39133
24015
51153
08031
34001
36029
37129
18039
35049
06039
36093
17043
42077
18019
24027
12095
13051
47157
39999
12099
27003
21067
42129
55139
40109
48201
06077
12081
41999
49005
06083
26081
26139
42011
04999
37101
45019
28059
48157
26121
45063
18035
21227
26115
48491
06081
27139
36045
38017
08013
27109
18167
10001
18063
39089
55127
41039
12091
48183
13139
51700
21999
28033
12073
29097
51087
04015
19193
21015
39151
37133
06079
08059
35999
39045
42101
06001
06059
06085
20999
29095
34007
34017
36103
39041
12085
25017
53011
01069
29189
19013
48451
49999
12109
26077
36001
39103
48039
06053
27123
36069
41005
53015
21093
39095
18105
12017
44003
12999
47165
55079
06065
12111
17179
23011
26045
37019
42085
33015
42013
44999
01089
12061
13059
34031
37081
47093
48027
48085
48139
13045
23031
25025
26161
34037
42019
22105
48355
06071
13117
26075
29019
32999
46103
48339
48367
23999
25027
36047
42071
42091
12031
16019
22103
40027
08035
12103
19999
37035
37089
42069
42079
51999
26145
36071
36111
41051
41067
53067
05045
13121
17089
18095
24005
24033
37159
06099
09001
36055
36065
55999
48187
18081
24043
47125
55009
25021
47999
48141
06019
06107
36005
51059
51107
55039
29099
40031
49011
51550
23019
47149
01117
12083
13073
17031
17097
47037
51177
25023
27053
48181
54999
10005
18003
26025
26147
47179
55073
24037
01003
12021
13097
34011
39061
42021
34039
36027
13999
45079
48029
12053
12097
48303
06111
08123
26999
33017
05131
22063
45083
11001
15009
42029
44009
12015
17037
21111
47065
08005
12115
37179
17167
22071
13089
19163
06073
19103
27037
27137
33011
37057
37067
08101
12086
31109
08001
17093
42051
24013
34023
39109
48453
56999
37051
48381
06013
08999
12033
49035
42041
01073
25003
35043
37151
04003
53063
39049
39113
40017
18057
24003
09007
46099
31055
45007
47009
34029
45085
17019
18091
39029
37071
53053
26021
04027
39173
53057
53999
47187
30063
36067
21117
06029
34041
40143
36007
39017
06037
42049
06031
22079
45035
47189
48257
51650
34019
13151
42043
49049
25009
53061
01055
22051
39035
39153
53005
06061
06087
25001
53035
42107
48091
25005
27145
12005
12105
18157
37049
20177
48999
19153
24031
26005
35045
37119
42075
12113
29183
31999
36083
36119
42081
24017
04005
05143
39093
06055
09013
05125
16027
17111
18999
37021
55133
01081
37147
37999
02020
55131
17091
31153
09005
09011
01015
24999
39085
04019
24025
42125
15003
35001
37085
36075
37063
34035
17113
30111
22005
51013
20173
42007
12127
48113
48485
51510
13077
39169
32003
51710
26093
01999
20045
37025
37097
05119
40999
04025
18089
06075
17999
51760
41047
33999
45999
09003
22055
29999
42089
55025
46999
48439
41019
55105
23005
36999
39023
36085
08077
48061
42055
04017
49057
55117
13057
55101
12019
18097
48209
38999
16999
45015
16001
48441
26099
13245
13067
13223
42999
39165
Query:
SELECT "Maternal_Morbidity_YN", COUNT(*) AS "Record_Count"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   GROUP BY "Maternal_Morbidity_YN"
   LIMIT 1000;
Answer:
Maternal_Morbidity_YN,Record_Count
1,1875
0,1736
9,226
Query:
SELECT DISTINCT "Maternal_Morbidity_Desc"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   LIMIT 1000;
Answer:
Maternal_Morbidity_Desc
None checked
At least one checked
Unknown or Not Stated
Query:
SELECT *
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY"
   WHERE "Year" = '2016-01-01' AND "County_of_Residence_FIPS" = '06037'
   LIMIT 1000;
Answer:
Year,County_of_Residence,County_of_Residence_FIPS,Maternal_Morbidity_Desc,Maternal_Morbidity_YN,Births,Ave_Age_of_Mother,Ave_OE_Gestational_Age_Wks,Ave_LMP_Gestational_Age_Wks,Ave_Birth_Weight_gms,Ave_Pre_pregnancy_BMI,Ave_Number_of_Prenatal_Wks
2016-01-01,"Los Angeles County, CA",06037,None checked,1,121976,29.91,38.56,38.66,3260.0,26.17,12.0
2016-01-01,"Los Angeles County, CA",06037,At least one checked,0,1105,29.44,38.5,38.59,3261.21,25.22,11.38
2016-01-01,"Los Angeles County, CA",06037,Unknown or Not Stated,9,11,30.09,36.88,39.12,3201.8,25.82,8.86
Query:
SELECT "geo_id", "poverty"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR"
    LIMIT 1000;
Answer:
Too long, hard cut:
geo_id,poverty
45005,2519.0
46035,2283.0
45081,3764.0
46102,7622.0
21231,5138.0
28061,3641.0
13107,6465.0
22081,1953.0
28043,5090.0
17065,1219.0
16081,1283.0
30067,1905.0
51520,3498.0
12041,3730.0
28153,5144.0
28129,3640.0
30095,675.0
13197,2151.0
18165,2077.0
05103,5970.0
51007,1465.0
21229,2060.0
22047,5465.0
26003,1096.0
08063,1033.0
16043,1475.0
20059,3357.0
20001,1916.0
48089,2854.0
48177,3443.0
39117,3816.0
05061,2605.0
19129,1203.0
51077,2899.0
51181,804.0
21079,3259.0
40095,2613.0
18045,2081.0
48239,1863.0
29013,2623.0
38053,1361.0
37149,2902.0
29139,1999.0
19015,2659.0
22111,5438.0
51690,3159.0
31173,2168.0
18169,3839.0
21007,1298.0
49041,2973.0
18041,4472.0
38003,1025.0
13005,1949.0
01087,4442.0
55119,2511.0
29149,2809.0
27071,2139.0
19047,3681.0
26143,4644.0
28051,8046.0
45027,8400.0
48063,2422.0
37065,13750.0
51001,6341.0
47097,6014.0
29121,2845.0
17181,2667.0
21027,3350.0
27055,1910.0
13303,4996.0
27157,1399.0
27093,2116.0
39137,2648.0
35029,7153.0
39127,7322.0
39123,4464.0
18119,3074.0
17051,3240.0
45033,9431.0
29225,6737.0
55069,2616.0
37053,2468.0
51067,7950.0
13087,6885.0
18073,2488.0
17191,2552.0
21183,5003.0
49007,3128.0
48363,4916.0
21121,10613.0
45089,9056.0
21089,6268.0
27091,2308.0
40113,6948.0
49015,1258.0
26105,4601.0
56013,5585.0
39033,6566.0
29159,7000.0
48049,6390.0
18099,5351.0
06043,2849.0
13025,3846.0
27119,3950.0
18107,4635.0
13207,3419.0
48325,6340.0
08049,1523.0
48449,6654.0
27067,4732.0
18069,4227.0
27059,2732.0
48001,7561.0
55093,4572.0
06009,5641.0
34033,8692.0
48409,9397.0
01109,8074.0
29021,15652.0
51019,7028.0
16005,14875.0
48251,18706.0
13139,33350.0
40017,10237.0
20169,7986.0
27171,7150.0
23031,18486.0
48291,12448.0
18017,5640.0
21037,13138.0
13095,26982.0
27099,5403.0
37045,19866.0
18163,29710.0
37057,26221.0
45015,25772.0
18067,13665.0
16083,12417.0
13313,20126.0
22015,18867.0
55005,5467.0
40021,10380.0
56005,3898.0
22097,23007.0
30093,6555.0
39101,10299.0
21029,7904.0
37109,11907.0
49043,3084.0
01103,19172.0
53025,15441.0
20103,7238.0
54011,20249.0
22045,14437.0
18039,29381.0
21093,14847.0
26103,10403.0
18095,20618.0
40019,7395.0
05069,16959.0
36009,13265.0
53041,12131.0
29051,9067.0
05031,18682.0
39063,9877.0
28059,21818.0
26045,11895.0
13223,15974.0
12061,20302.0
17037,18001.0
55063,16675.0
12071,104219.0
45043,11514.0
21235,9191.0
42099,3921.0
21101,8696.0
06105,2607.0
47089,7724.0
46129,576.0
56029,2288.0
51109,4086.0
17005,2553.0
42123,5042.0
08097,1507.0
17141,5617.0
17133,1480.0
47073,10706.0
13233,8229.0
17195,6388.0
35015,7638.0
48373,7706.0
51670,4509.0
53017,5330.0
27147,3396.0
12107,19120.0
27135,1286.0
39043,9584.0
16011,6008.0
37027,14137.0
53031,3541.0
41009,6598.0
53045,10136.0
47113,18345.0
27141,6382.0
48441,22653.0
12015,20511.0
47165,16543.0
55139,19573.0
29101,8426.0
39023,23792.0
37089,14559.0
53075,12246.0
39173,16797.0
39099,40823.0
06107,127130.0
06031,28661.0
04001,25658.0
51191,7569.0
37087,9851.0
19179,6033.0
21195,15528.0
55021,4729.0
41033,16177.0
17007,5908.0
22101,11227.0
22105,27460.0
19013,19605.0
02130,1453.0
48209,28863.0
40031,19294.0
18177,12903.0
56025,8333.0
06033,15561.0
29169,6372.0
22087,8784.0
05125,9706.0
19061,11616.0
04027,40330.0
37129,37167.0
37167,10047.0
45085,21063.0
33013,12150.0
48171,2725.0
39131,5735.0
21205,5510.0
56023,1616.0
55007,1693.0
12027,9920.0
27023,1285.0
55077,1730.0
45037,4002.0
05059,5347.0
26053,2908.0
54057,4386.0
17015,1663.0
27161,1387.0
22085,4612.0
55137,2646.0
47057,4578.0
18049,2828.0
54009,2851.0
08051,2319.0
26029,3208.0
22031,7097.0
54051,4600.0
22119,9693.0
55047,2076.0
40015,5883.0
19141,1278.0
26051,5099.0
39027,6169.0
46135,3055.0
19065,2581.0
26023,7368.0
39135,5536.0
28113,12290.0
47019,13110.0
42083,6705.0
31111,4200.0
19181,3402.0
08117,3522.0
37113,6183.0
36099,3952.0
56037,4868.0
49021,10107.0
05035,11991.0
47167,8378.0
19125,3108.0
17177,7203.0
16065,12226.0
36037,7245.0
04007,11097.0
37099,8646.0
37189,14797.0
13255,14798.0
08077,23633.0
42055,17504.0
29161,8620.0
53021,14019.0
28089,12720.0
05045,18590.0
41071,15255.0
55009,29105.0
04015,37884.0
20111,6671.0
21151,17222.0
21073,7054.0
28071,11902.0
40145,8206.0
37023,17135.0
38035,11507.0
28121,13568.0
37001,28123.0
36073,6089.0
39145,17569.0
16069,5266.0
04023,10083.0
55043,7335.0
27007,8247.0
31001,3314.0
27009,5220.0
29213,9264.0
51590,9135.0
35005,14196.0
32023,7346.0
06015,5219.0
35031,28089.0
35009,10676.0
48321,7877.0
18043,9050.0
19049,4424.0
12005,27363.0
06089,30945.0
51680,16598.0
39057,19929.0
21117,21805.0
04003,22184.0
46013,4076.0
47011,18291.0
39009,17301.0
35028,904.0
39109,11374.0
20161,14347.0
12083,60266.0
36121,4312.0
26151,6476.0
35039,9275.0
40089,7705.0
49047,3406.0
17107,2996.0
51195,7865.0
24011,5484.0
37091,5217.0
37175,4598.0
17117,5875.0
08075,3394.0
16017,6092.0
39171,5176.0
45025,11158.0
39143,7757.0
40013,7551.0
16013,2707.0
22069,11401.0
39087,11183.0
47043,8019.0
18077,4344.0
13295,12273.0
53047,8637.0
41007,5187.0
01121,16119.0
39141,13419.0
08045,6274.0
51015,6550.0
01095,19138.0
53007
Query:
SELECT "geo_id", "poverty"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR"
    LIMIT 1000;
Answer:
Too long, hard cut:
geo_id,poverty
29079,2008.0
13071,11444.0
17203,2793.0
19139,4442.0
46011,4815.0
13145,2382.0
19029,1970.0
12055,18495.0
51830,2278.0
51683,3633.0
27047,3536.0
45073,13993.0
51610,405.0
56039,1561.0
17121,6659.0
13299,8240.0
36053,7397.0
17049,3798.0
39103,10764.0
42127,5323.0
21209,5837.0
31079,8133.0
24015,9533.0
45059,13280.0
33019,3953.0
20055,5914.0
24029,2359.0
36025,7187.0
42117,5461.0
51099,1449.0
51685,1643.0
24017,10666.0
50001,2638.0
27013,11321.0
44009,11569.0
24037,8839.0
36107,5453.0
36035,8461.0
13247,14232.0
39031,5424.0
17091,16059.0
26159,11733.0
51061,4190.0
39139,17674.0
27025,2871.0
17183,15043.0
17165,4920.0
17027,3200.0
48139,17014.0
51600,1797.0
51630,4169.0
37179,20626.0
51680,15311.0
51540,10759.0
47163,25508.0
50003,4443.0
42107,17134.0
51199,3446.0
34009,9796.0
05131,28211.0
24041,3692.0
47187,9704.0
13113,6907.0
48397,5222.0
33017,11127.0
12091,21997.0
53041,11987.0
47179,20127.0
50023,6658.0
45077,20987.0
48485,22027.0
36057,9486.0
50025,5876.0
27027,7236.0
53029,7414.0
42007,17867.0
48187,15774.0
12109,20330.0
24047,5228.0
27145,19321.0
37151,23520.0
31153,9155.0
36069,10343.0
51650,19633.0
33009,8993.0
06093,8915.0
42013,18479.0
48309,45691.0
29021,14698.0
26149,9403.0
18091,16924.0
48375,24720.0
55127,12405.0
53009,12353.0
13215,41295.0
27019,3934.0
13217,17328.0
45007,29776.0
17113,24110.0
13117,13643.0
08101,31467.0
51121,21058.0
10001,21743.0
18063,7832.0
42089,18309.0
24009,5114.0
18127,17954.0
54061,20763.0
13151,24638.0
34037,7573.0
17111,22339.0
48135,18882.0
13063,58701.0
24043,18045.0
42129,36111.0
36079,4719.0
05143,38855.0
06061,30473.0
24027,16001.0
55105,22550.0
53035,24850.0
17197,50149.0
13051,47119.0
25005,65842.0
22033,83483.0
27123,78410.0
10005,25479.0
36081,317142.0
06001,181194.0
48201,751985.0
36061,277483.0
37063,47237.0
42071,54244.0
37119,136399.0
12086,505182.0
25009,82434.0
48439,264575.0
12099,189156.0
27053,138478.0
17031,821572.0
31109,40887.0
34021,40450.0
37051,57582.0
36111,22682.0
12021,45385.0
51041,23707.0
08069,40006.0
45045,64347.0
53073,31630.0
08035,11636.0
34029,63181.0
12009,75104.0
34007,65858.0
32031,58642.0
25021,44279.0
24005,73560.0
36055,107481.0
39061,134499.0
18097,182317.0
13089,127299.0
29095,108026.0
49035,114135.0
25017,125491.0
08059,43339.0
48491,35067.0
41067,58214.0
51013,18502.0
29189,95974.0
47037,111103.0
41051,126836.0
39049,203877.0
06071,374810.0
04019,179569.0
27137,29574.0
13077,15900.0
06023,27481.0
55059,23594.0
24013,8993.0
15009,16147.0
34001,40750.0
20209,34641.0
36021,6806.0
36093,18684.0
17019,41088.0
34041,8602.0
36043,9201.0
06113,39686.0
50007,17057.0
06007,44977.0
55133,19634.0
22073,36450.0
36109,18411.0
40027,33054.0
51153,30938.0
34005,28066.0
47149,34716.0
45083,45020.0
17167,30348.0
13059,38618.0
51810,35276.0
29047,20693.0
17097,58251.0
51087,33510.0
17119,35099.0
33015,14402.0
06095,48623.0
15001,33703.0
34039,56826.0
36059,78657.0
42029,34446.0
42003,149568.0
08041,72699.0
45079,62671.0
01073,113368.0
39151,50921.0
53061,67118.0
09009,100732.0
12127,81729.0
24510,133793.0
06075,99096.0
12011,262306.0
04013,644476.0
13067,79127.0
13185,27410.0
36083,19322.0
54011,21376.0
06053,60933.0
24025,18512.0
26005,12169.0
36091,14681.0
25003,13778.0
12087,9562.0
01097,78256.0
29183,21362.0
08001,59050.0
42011,54762.0
25013,78315.0
51710,46251.0
35049,20817.0
48157,56959.0
34013,130583.0
06013,108630.0
06085,162525.0
36103,105522.0
48029,304792.0
48453,159948.0
42017,37912.0
40143,97358.0
09001,81422.0
24031,72085.0
55079,191973.0
08031,100611.0
06081,54981.0
29510,76472.0
47157,191520.0
25025,144661.0
42101,393924.0
42025,8053.0
36105,11583.0
36089,19142.0
49011,20755.0
49057,29277.0
24001,10916.0
51740,16302.0
36051,8497.0
13127,15773.0
26139,25806.0
06017,17996.0
37101,26622.0
42037,9821.0
37097,21307.0
06055,11285.0
36077,8966.0
45041,26444.0
48091,11827.0
42027,26291.0
48061,129912.0
13073,12269.0
51179,6517.0
15007,6420.0
30063,17695.0
33005,7297.0
51003,9581.0
35061,16266.0
08037,4128.0
49053,21878.0
54037,5363.0
34011,26781.0
37025,22481.0
01081,33132.0
42125,19629.0
42069,31419.0
48183,21028.0
36087,45563.0
17093,6889.0
51107,13727.0
51550,21962.0
34019,5403.0
45013,20786.0
53077,46428.0
13097,19690.0
44003,12687.0
51770,21046.0
27037,28284.0
25015,19052.0
17163,44376.0
06041,20515.0
06099,91210.0
29077,50765.0
53011,46542.0
34015,22815.0
06077,121296.0
25023,39748.0
41005,35549.0
36119,89829.0
24033,82328.0
44007,101489.0
32003,304449.0
36047,570731.0
22071,95346.0
05119,67056.0
34023,69297.0
12117,52509.0
36005,422197.0
51059,69528.0
06065,362215.0
13057,22072.0
06087,38605.0
39017,47018.0
39089,19591.0
34025,47055.0
51760,52942.0
48085,62439.0
40109,128566.0
53033,212509.0
11001,111025.0
10003,64082.0
42077,46596.0
31055,72562.0
53053,101328.0
36029,133648.0
15003,86868.0
06059,378459.0
12103,127948.0
55025,63003.0
37183,101256.0
35001,119697.0
42103,5452.0
41029,35120.0
37135,18379.0
01125,33597.0
39093,40477.0
09005,12400.0
36085,60735.0
51177,10296.0
45091,30418.0
08013,39882.0
36065,3648
Query:
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
   FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
   WHERE "Year" = '2017-01-01'
   LIMIT 1000;
Answer:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births
41043,1456
44009,852
01101,3172
22033,5975
48061,6276
48479,4872
06025,2894
25015,1003
22017,3231
22015,1627
16055,1811
13215,2791
22109,1544
01097,5607
39003,1244
37133,4061
17091,1289
53073,2163
54039,1929
36087,5481
28999,26037
22999,19602
06041,2237
36109,767
24510,7941
41017,1808
01089,4253
29510,4138
45041,1695
22105,1986
48329,2826
48355,4520
06023,1372
36111,1453
01103,1435
22079,1724
22005,1704
48135,2750
48215,14108
20177,2074
28049,3126
22073,2152
22019,2987
28121,1732
33013,1305
50007,1450
47157,13163
23001,1241
33999,2784
34029,8597
50999,4205
45085,1386
16019,1876
01073,8706
20173,6924
24017,1842
12099,15050
45019,4803
12001,2824
48309,3446
45013,2012
12999,13012
21999,33722
42049,2994
39061,10833
34011,1839
39085,2198
06081,8585
04027,2960
53005,2563
37001,1940
08031,9594
26005,1306
39109,1154
04021,4392
12057,17416
45003,1860
45091,2958
37057,1761
06019,14541
26145,2244
48113,39263
13113,886
34999,1477
41039,3459
36013,1344
25021,7134
08077,1624
42129,2953
12011,22322
17143,2533
29019,2072
48039,4630
39035,14550
13051,3712
45079,4646
01117,2283
06083,5531
26065,3237
05143,3199
26075,1772
34023,9123
36029,9870
48453,15142
36001,3083
37025,2593
29097,1596
39999,30558
45015,2697
08013,2627
25017,16736
41005,3999
23999,3947
53061,9883
41051,8573
24037,1352
49005,2194
05999,20701
20999,16623
55079,13427
13015,1307
24005,9844
54999,15385
42089,1537
11001,9560
55127,917
55139,1833
19999,21672
51510,2647
37089,1040
55133,3863
12115,2824
37097,1858
06073,41230
18141,3497
26125,13235
17999,21878
12073,3132
08069,3313
49999,6570
37049,1386
18157,2240
17031,64374
37135,1179
19103,1751
34027,4636
42019,1742
55105,1911
37051,5506
26021,1737
01015,1338
48187,1773
24033,12393
48441,2094
13067,9588
49057,3766
30999,8763
19113,2799
39017,4466
06029,13326
06065,29857
13117,2302
51153,6675
24031,12681
37119,14753
12113,1924
24015,1145
34001,2804
42075,1581
12127,4986
53999,12382
06079,2550
27137,1989
44999,1061
09005,1402
09007,1255
42999,16218
40017,1763
17119,2892
47189,1567
47165,2193
01055,1213
48181,1580
12019,2197
36063,2114
06059,37369
06031,2373
37159,1587
34019,952
48367,1498
42079,3284
13045,1613
31999,11002
16999,10587
26147,1462
02020,4136
51179,1746
36069,984
12085,1271
25999,866
53067,3067
06097,4642
01125,2538
45999,13038
18167,1224
40143,9120
47149,4030
18057,3835
39173,1401
17197,7427
26115,1482
10003,6431
35013,2674
51700,2717
08035,3368
01081,1898
48303,4017
37999,31498
42001,972
23011,1132
23031,1812
06053,5810
39133,1351
51177,1505
36055,7893
42055,1786
13021,2244
29189,11374
45063,3210
13185,1671
48183,1623
40027,2781
22051,5835
48999,56751
37155,1782
34021,4081
49053,2202
20091,7223
21111,9908
15003,12487
06047,4202
06037,116950
34007,6022
13313,1357
34035,3068
24043,1638
17093,1481
18999,29270
04003,1335
27163,2724
16001,4842
42041,2612
42029,5323
28059,1661
13151,2581
22103,2865
20045,1134
12095,16890
04017,1508
13089,10933
26025,1535
06085,22133
04025,1798
26045,1097
32031,5210
34041,935
55039,1066
08001,6610
13223,1602
39057,1744
08123,4250
36999,17960
25001,1546
33011,4178
42013,1205
26017,1009
04013,52633
04999,3002
48491,6432
18063,1720
34017,10165
39089,1866
39139,1317
17089,6339
48091,1480
13097,1729
45077,1169
09009,8641
37191,1611
41029,2252
06039,2120
36065,2555
27053,16322
47179,1236
55131,1291
40109,11554
20209,2541
48245,3475
12101,5140
19163,2117
29077,3339
34003,9339
12117,4774
36007,1979
49049,11618
17179,1450
37021,2393
45007,2298
13057,2582
42051,1296
53053,11297
18105,1249
42027,1171
25009,8655
51013,2990
41047,4467
48423,3055
28033,2128
47999,30776
12015,1060
40999,23261
12009,5201
36061,17504
12081,3476
36083,1589
39165,2262
51999,38295
18039,3087
17043,10337
46099,2911
44003,1552
55117,1204
53057,1429
39155,2107
48451,1558
01999,22881
12071,6681
48027,5976
48439,27820
35045,1472
21067,3912
40031,1735
49011,5481
06089,2008
25013,4975
08059,5819
36093,1814
51041,3845
25025,9359
39103,1720
41067,6570
05119,5259
37179,2382
13073,1666
22063,1828
45051,3167
13063,3813
08101,1776
22055,3339
39041,2074
13121,13363
12105,7849
42043,3404
51550,2902
24027,3528
17097,7607
39023,1614
42021,1271
15009,1883
37085,1886
06007,2386
06055,1291
42071,7258
05125,1275
25003,993
42101,21288
48375,1714
12031,13182
34031,6790
34025,5737
42085,1092
29047,3040
17099,1180
42095,2789
42003,12882
27145,2054
32999,3597
30111,1898
55009,3323
38999,8203
24003,6898
36085,5444
39029,1025
36091,2135
33015,2669
06087,2658
36071,5092
55063,1188
39169,1502
06113,2272
17037,1142
04019,10983
08041,9493
18089,5601
48041,2692
06071,29643
31109,3925
48085,10919
51650,1736
21093,1449
17113,2004
47037,10063
48209,2584
47009,1220
04005,1508
32003,26949
39049,18886
42011,4719
24013,1570
27999,22804
34005,4424
25005,5733
42077,4291
17161,1668
16027,3065
51810,5710
22071,4619
01069,1295
26163,23279
47065,4235
51760,3031
06077,9928
51087,3895
04015,1753
39045,1755
12111,3019
08005,7574
36119,10400
37147,2051
09003,9204
15999,857
34037,1213
27123,7686
42091,8702
53015,1295
48485
Query:
SELECT "County_of_Residence_FIPS", "Births" AS "Total_Births"
FROM "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY"
WHERE "Year" = '2018-01-01'
LIMIT 1000;
Answer:
Too long, hard cut:
County_of_Residence_FIPS,Total_Births
01015,1265
40143,8933
13045,1540
26145,2182
12057,17126
18089,5785
22103,2932
12097,4437
31153,2386
17089,6337
35045,1444
20045,1116
48121,9857
48209,2572
49011,5302
12081,3452
09009,8519
06081,8330
06079,2445
16027,2918
13057,2562
06099,7364
06053,5895
36071,5065
06041,2127
22079,1717
22015,1693
45063,3224
13151,2705
22071,4656
12086,31032
05119,5123
48041,2584
49035,15998
32003,26773
47163,1506
21111,9584
36005,20121
12069,3368
29999,30650
51087,3911
06113,2135
42095,2909
27139,1717
41039,3327
17179,1391
55999,20974
53011,5482
37151,1520
34029,9015
29510,4127
48355,4569
18097,14036
48141,11721
12001,2733
13135,10855
47189,1651
37049,1337
55105,1869
42079,3310
34001,2797
12053,1617
08031,9424
39165,2306
12017,1025
18127,1677
37063,4152
27109,2035
53015,1235
36089,1080
39003,1248
13021,2063
17143,2504
13121,12652
05143,3227
20999,16535
13077,1575
08059,5654
27999,22480
29077,3309
19103,1735
26045,1106
55117,1270
25027,8335
41005,3886
06087,2449
53073,2161
29019,2050
48183,1644
17119,2865
18095,1409
22063,1771
48187,1848
48201,67095
18003,5240
48113,38182
05007,3778
46099,2891
34017,10234
12091,2717
40031,1681
08005,7401
48251,2110
37019,987
24027,3405
16001,4861
37051,5401
36027,2549
23031,1865
27171,1767
06061,3663
42999,15927
44999,1015
13215,2864
01081,1810
26121,2051
40999,23234
55079,13032
12011,21928
18035,1072
26163,22910
17115,1269
39035,13870
06047,3875
42107,1272
42089,1518
17043,10298
36093,1840
04021,4498
24031,12401
55131,1300
08999,8105
15003,12168
20091,7140
35049,1180
09003,9239
37097,1891
39999,30582
06017,1674
42041,2597
53033,24347
53999,12152
06089,1966
53035,2994
36075,1217
22999,18874
18167,1131
48303,3896
12015,1040
12033,3733
45019,4861
21093,1431
48139,2214
24021,2969
26075,1741
26005,1416
13313,1300
34041,1020
06111,9065
26021,1674
26081,8648
42007,1575
42085,1078
55059,1788
08001,6293
29071,1174
51041,3841
36047,38574
25025,9072
50999,4040
33999,2753
25001,1496
36111,1546
54039,1864
22055,3242
29189,11368
48029,26562
55039,1073
17999,21369
12111,3123
29047,3105
45015,2801
12071,6793
45045,6225
26115,1468
48027,5889
06075,8697
25003,1002
04027,3034
25013,4926
30063,1063
27123,7517
53053,11478
27053,15845
06095,5033
51177,1503
25023,5028
34999,1433
41029,2199
42027,1171
17167,2240
48061,6306
45051,3153
01003,2290
22105,1916
05999,20422
31055,8342
34007,6157
34023,8872
39173,1267
31999,10867
12101,5084
42081,1202
24025,2638
26093,1704
36065,2500
42071,6975
23999,3952
41051,8211
45079,4693
48245,3468
47125,3513
29095,9065
13059,1351
21999,33368
39023,1552
39061,10835
48181,1662
55133,3918
42075,1562
37057,1751
32031,5399
37179,2456
37085,1845
12061,1294
42051,1326
26017,947
22017,3072
22033,5780
28999,25808
48441,2044
49999,6460
39045,1669
12073,2915
26099,9171
39007,1108
08069,3219
45013,1912
35999,9360
08041,9107
42129,2849
34019,968
36085,5186
25021,7033
37089,1093
36069,966
06007,2430
16055,1732
26025,1537
41043,1518
25999,802
53063,5737
22073,2063
20209,2614
20177,2123
01125,2406
21067,3921
24510,7681
48439,27280
34013,10425
13089,10785
13999,41000
12113,1953
42133,4707
17097,7095
39153,5934
12009,5309
37025,2509
36103,15278
39057,1720
06037,110271
18019,1396
51650,1645
42011,4602
49049,11514
12083,3476
48423,2922
08123,4243
42045,6453
48367,1537
24037,1328
25009,8377
33011,4144
41999,9558
41017,1827
25017,16603
06055,1204
08101,1829
24033,12159
45007,2256
01117,2250
47037,9984
42049,2788
26049,4558
37155,1699
12031,12973
06071,28994
47179,1247
26147,1543
51550,2928
21015,1695
42125,2063
36061,17020
39139,1353
35013,2587
36001,2886
19013,1632
24003,6781
33017,1143
36091,2022
36109,735
23011,1161
06023,1364
01101,3139
22019,3057
47157,13124
48329,3011
05045,1467
13117,2306
47187,2322
17091,1237
51710,3452
47065,4249
48085,11147
56999,6562
29183,4306
05125,1339
13245,2918
18157,2158
12999,12991
45077,1145
51059,13841
34015,2762
37035,1693
39133,1392
06999,9938
37071,2525
28049,3041
22109,1506
48479,4693
28033,2139
01055,1191
18163,2115
01069,1368
48451,1473
28059,1606
17163,3109
40027,2833
47009,1306
04005,1506
37001,1958
17099,1092
39151,4075
30999,8642
47165,2150
18999,29235
17113,1817
37999,31164
06083,5268
38999,8183
06029,12916
55139,1798
04003,1354
51179,1745
42019,1809
44003,1502
09005,1364
27037,5140
37133,3923
01073,8437
22005,1687
12099,15066
04019,10671
48381,1645
17197,7318
12019,2182
19193,1393
48091,1526
36081,28042
55009,3158
26139,3138
36013,1299
53005,2552
09015,1062
21117,2191
06059,35679
34005,4365
04025,1772
12085,1251
39085,2212
18105,1246
37119,14650
06107,6905
37021,2482
44009,870
06097,4526
13073,1817
36045,1864
41019,1054
39103,1675
06025,2629
36087,5719
45999,12921
01999,22362
36063,2100
37159,1593
06019,14465
48309,3460
29097,1570
18081,1877
24017,1863
05131,1662
04013,51854
40017,1864
26065,3049
39049,18338
51153,6484
55073,1561
06013,12002
13015,1173
27003,4241
42077,4352
37191,1639
04015,1796
12115,2878
26161,3527
23005,2717
18039,3117
50007,1392
33013,1305
28121,1744
01089,4262
16019,1815
40109,11255
48039,4734
20
Query:
E
Answer:
001003 (42000): 01b9be86-0004-7b0e-0001-11c300c9fb4a: SQL compilation error:
syntax error line 1 at position 0 unexpected 'E'.Query:
SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR"
    LIMIT 1000;
Answer:
Too long, hard cut:
geo_id
28103
21191
17065
45081
39111
16051
05061
21131
47067
13107
40063
49015
29186
29013
21121
29207
17147
21183
28107
51011
39115
51077
22047
17025
45049
21225
40153
30009
40075
48089
22111
28079
05047
19015
45043
21113
48257
45047
19013
22109
47109
40095
48239
40089
56007
39117
51001
05023
56023
17191
47073
51191
06109
04005
48227
22063
42035
21015
41061
50027
27045
51085
01117
01055
22059
47081
19129
22043
48177
46123
28093
21017
19039
27055
32013
26097
38093
51109
39013
30013
28061
26055
21231
27069
28129
30067
28153
30095
29015
27023
39001
05017
31101
49041
08065
05059
05091
45027
17193
13293
48427
28051
22077
35039
39021
40121
29023
47043
35015
54011
46005
55139
22105
22045
01101
08049
16011
39043
06103
06045
27131
48049
41057
55135
04009
37099
18053
21047
39139
42019
17195
40037
21029
42055
21229
20117
53069
12049
19029
40021
47101
56037
49053
51099
26107
28151
16069
30029
53045
39099
17021
19045
05051
01109
13153
01003
37023
55141
41007
18061
35061
22019
27041
40091
51173
39027
56009
01033
39047
55075
36023
06035
48361
42085
37037
39155
16083
54055
19153
30111
37025
40125
36045
17015
27091
36089
48259
05033
20059
39147
18095
31081
05029
28141
51155
26009
29107
24029
37149
29007
13037
21235
22003
28081
37093
56001
55101
17103
13299
27135
32005
53041
48479
12119
42083
51790
29113
46013
12105
01073
22099
13223
39025
12061
08019
29121
27071
49047
54079
42123
16017
13225
56025
27141
23031
40135
56005
42025
54069
32023
28075
26025
40017
21093
22119
55123
27161
08029
27061
17133
42087
51089
55031
48251
37057
48339
28089
22101
56021
39153
48001
27047
40019
51590
22087
18063
47113
08014
02090
08037
21037
29101
16055
45015
40031
06101
18073
40015
42121
39091
26039
51131
19183
30047
26051
21095
13079
55057
39059
26007
46135
54025
39123
27005
55085
18037
18137
21195
53047
21199
37189
49045
21035
01015
39109
29161
06089
45077
22055
29021
02130
29169
21227
54049
18099
29029
48473
18031
13015
13179
18163
38035
13255
20111
53009
47011
47065
51680
06115
08069
39039
06051
26105
28113
17049
26063
46081
26023
40013
45071
23013
51670
48367
39165
37191
06107
47155
45085
32510
18003
48323
20051
39007
54107
48057
16019
26075
27169
22015
47093
12083
01097
12019
53007
21151
13157
48303
27105
55087
39175
39075
26011
05103
18119
48063
29177
37065
18165
18013
28057
40023
45033
13087
21157
08051
29225
12027
39107
21205
26029
27015
39143
39083
55095
40137
19057
17107
37087
36035
38089
12107
28033
41009
41071
27013
42051
48449
55043
17161
20037
13095
16005
19193
28099
47019
17141
51197
51083
36033
22069
39081
18177
26017
13047
53037
39009
18005
55055
17099
28067
13039
55109
53071
39173
37147
47179
51047
13045
42063
37071
55007
26031
01005
19141
29049
39077
21089
35028
33013
23001
34011
19179
08043
08067
05031
48321
53025
26137
12039
42117
36073
38015
41053
45051
39063
41011
21185
35009
37159
51520
19099
27067
47147
12017
30031
30049
21145
41033
45009
39127
18169
27095
27113
54009
51053
13241
42005
29159
39087
01103
21209
05045
48409
45075
20177
18065
13025
13233
18035
26145
48329
12077
22085
30053
40113
27021
26089
24011
13193
01127
13069
19123
08117
39119
18019
16027
13115
22057
17037
27059
26033
48451
19181
39005
40071
51015
13285
18071
17199
17115
27009
20155
08045
26087
47167
47063
12089
21059
06031
13219
36117
29051
08077
48167
45045
44001
37187
40073
47075
08027
26119
20095
29199
37075
47127
40093
48101
54109
38037
45005
08009
46067
48159
22027
20129
42023
01035
54017
40053
28037
47173
21051
38009
48129
20025
48411
31139
47033
13165
48193
08025
38081
46025
47159
31127
20141
12047
48351
29065
48389
54065
12029
13147
31033
19147
51167
48131
48093
40151
47049
17023
12013
13291
28123
21179
01041
13029
31067
51735
13081
20019
31163
40011
47027
05043
26069
38097
48225
21077
37055
48073
21219
28019
28135
45065
29087
48295
47039
01105
13319
16047
13143
40105
19115
46087
26131
47025
51580
05123
13009
28063
08125
08105
40097
20013
17083
20125
41001
37131
55019
18175
05133
51065
48013
48111
40107
46083
01079
13305
21099
51111
29085
48313
48337
28085
05009
53051
01131
39137
18085
16065
17051
39101
18079
12041
40051
21009
41065
45055
42073
48347
48441
37107
29213
01069
48423
20161
39037
13207
48419
56013
08097
46093
55021
22079
27119
53065
45035
06033
27083
53075
51125
51005
13273
26019
21007
47171
45089
54099
18111
26079
29195
27039
18087
17005
37113
13295
51137
40101
48477
06069
49043
28049
02170
53057
35005
27103
17029
06015
41003
26045
20169
27115
08107
35055
05035
37109
27007
01095
51740
53021
29071
04021
04003
47187
48285
01009
26041
42009
42131
21101
37091
30093
23027
18029
19167
39157
05125
41017
21073
22005
12005
37089
35035
13245
55117
51069
36121
51195
05005
49039
27033
13137
48381
46099
37155
46103
22009
04001
22075
13139
13313
12015
35025
19187
51840
53015
17177
27099
12035
35045
35013
28159
01053
17127
28043
48365
54051
50017
42047
21049
06027
53017
12051
05145
01113
17001
47009
35031
16013
27049
05085
20057
53031
05069
53003
18107
37195
29031
53027
39141
32007
04017
26037
53005
47165
26035
27157
45037
13199
21083
27079
5
Query:
SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR"
    LIMIT 1000;
Answer:
Too long, hard cut:
geo_id
45005
46035
45081
46102
21231
28061
22081
28043
17065
30067
28153
28129
18165
05103
26003
16043
20059
48089
39117
51077
18045
37149
29139
19015
51690
18041
48063
51001
47097
27055
27093
13087
48363
48449
56005
37109
53041
48373
21205
13197
22047
38053
22111
18169
21027
35029
49007
21121
21089
40113
26105
13025
48325
29021
51019
16005
26103
05031
12107
39173
55005
40019
26029
19141
13107
16081
30095
51007
05061
19129
51181
21079
40095
01087
27071
19047
39123
21029
49043
17037
12041
20001
48239
29013
21007
49041
38003
55119
29149
26143
17181
13303
27157
39137
17051
51067
45089
49015
39033
29159
06043
13207
18069
55093
01109
13139
40017
21037
13095
39101
39063
12061
45043
56029
47073
35015
27135
06107
37087
17007
02130
33013
55077
27161
48177
13005
39127
18119
08049
48409
23031
48291
37045
13313
26045
12071
21235
42099
17141
17195
51670
16011
53031
41009
12015
39023
53075
39099
04001
06033
22087
37129
05059
26053
04027
22085
18049
55047
26051
39027
37113
56037
49021
47167
04007
29161
28121
36073
29213
35005
19049
46013
35028
26151
37091
16017
18077
41007
18019
55031
39111
26011
27173
54107
27049
37161
40047
18029
05033
16053
39147
24039
29225
56013
18163
22015
36009
51520
21229
08063
31173
45027
45033
37053
17191
27091
27119
18107
27067
27059
48001
06009
37057
16083
18095
46129
08097
13233
48441
55021
22105
39131
28051
37065
29121
55069
21183
48049
20169
27171
18017
27099
45015
18067
30093
53025
20103
54011
22045
21093
06105
51109
17005
42123
39043
37027
53045
27141
29101
37089
51191
21195
41033
22101
48209
40031
56025
29169
19061
37167
45085
56023
55007
27023
45037
17015
18099
01103
29051
55139
06031
18177
48171
12027
54057
55063
55137
54009
08051
54051
40015
39135
28113
47019
42083
19181
08117
19125
17177
16065
36037
37099
37189
13255
53021
28089
05045
41071
20111
21151
40145
37001
16069
04023
55043
27007
31001
27009
32023
48321
12005
51680
39057
21117
47011
39109
36121
35039
40089
24011
37175
08075
39171
40013
16013
22069
39087
47043
53047
08045
51015
53007
26017
38015
27131
37025
12081
12097
01083
13285
37147
13245
55035
08043
42073
12089
37155
37021
19169
19127
17077
39003
37037
48341
45077
47065
48469
28093
08019
48481
20117
29177
51193
12077
29195
18079
26019
21131
45049
46065
39073
01019
51173
21157
30047
29049
26063
51083
26091
18083
29023
37163
12051
19033
45075
17029
28075
12131
13137
48143
19045
51137
48473
27111
26055
41011
39155
51740
41017
28081
04017
06103
21227
06069
18081
39077
27085
06011
36075
29071
32005
01077
01089
47093
47147
36035
48361
48099
32510
45051
18051
27045
08081
13241
55057
21161
27021
13227
51197
39083
19123
19167
08067
30029
06045
19193
36117
02122
56001
42025
39005
23001
16019
55141
37093
01101
27013
48423
17115
35055
53049
45035
01117
36045
45047
27169
08077
42055
55009
37023
35031
35009
49047
45025
08014
41041
18035
13179
17025
39001
28079
26031
51155
55109
56021
32007
48021
41053
17099
37159
02090
39159
51069
48329
27005
40071
39119
18053
01069
48347
17113
54055
36023
39167
29099
28099
27039
39037
51820
40037
20057
51085
06115
48451
17199
26145
12017
01015
48339
06051
26117
48323
39007
17109
18005
53063
48367
45045
39107
42005
39071
53035
42093
39169
18173
37191
48167
48039
48317
38069
54095
16029
13283
13125
48011
08027
40055
28009
28041
37143
38063
35023
21065
29197
13271
28037
47159
40053
47185
54013
31127
21219
46003
28119
21023
28111
08073
47075
37177
48197
01035
48151
48337
38009
31035
48411
48129
46025
17155
05065
05043
13165
05137
05021
28097
47033
13007
20141
12079
49017
38077
20163
31081
56003
21179
13291
13029
05135
37055
51735
28145
48297
51167
08025
48093
48131
17123
40057
04011
17023
21167
48249
48073
13259
37003
37111
48387
13265
29103
47139
20007
13081
16073
37103
13263
40011
45065
30077
48457
29083
08125
20201
21143
37153
29059
35051
48421
28019
29087
13301
31019
19063
13131
35037
48225
40105
40153
41031
13253
20043
37181
20015
26131
19073
46083
47053
05057
37079
47117
30023
40075
13069
22095
47141
48059
18175
01063
29217
12133
28123
05009
18113
29081
18073
28059
13223
19179
34033
48251
40021
22097
05069
21101
47089
17133
53017
27147
47113
47165
19013
05125
18039
47057
22031
22119
46135
19065
26023
31111
36099
05035
04015
28071
38035
39145
51590
06015
18043
04003
39009
17107
17117
13295
01095
06025
21113
39013
26107
48057
29031
48257
46005
02170
48181
18087
48427
05091
28027
26133
26035
08071
39039
22003
12093
40101
16055
46103
48381
40135
08037
37195
53071
26075
53009
19111
27115
19067
23027
26149
12119
21211
37139
06109
35035
06035
48005
48215
48479
30049
17001
53037
42049
51029
26041
51131
19183
42009
42131
17145
17021
41065
39081
47107
54069
28033
46099
51840
18085
37007
37107
20177
53057
42121
01127
12019
39041
21015
29009
12053
45055
05083
21073
06089
12083
51195
39143
01121
39141
21185
37049
08107
55015
55101
21059
29201
12037
16051
01091
31101
28143
38093
40091
41057
17055
55085
08085
54033
13015
35043
22055
22005
16027
04009
51089
20155
26087
05085
22063
30031
41003
05051
21047
55117
42047
18103
39051
28067
27127
49045
17179
41035
35045
2
Query:
SELECT DISTINCT "geo_id"
    FROM "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR"
    LIMIT 1000;
Answer:
Too long, hard cut:
geo_id
29079
13071
17203
19139
46011
13145
19029
12055
51830
27047
45073
56039
13299
36053
17049
39103
21209
31079
24015
45059
33019
20055
24029
36025
24017
50001
44009
36035
39031
26159
39139
17183
51600
51680
51540
34009
47187
13113
45077
48485
53029
12109
31153
51650
33009
51087
51610
42127
51630
50003
05131
50023
42013
26149
24009
24027
17197
27123
27053
08001
34013
17111
51550
53033
51683
42117
51061
27025
17027
48139
47163
51199
50025
27027
37151
13215
13151
36079
13051
10005
17121
51099
51685
24037
36107
17165
42107
48397
53041
47179
36057
27145
36069
06093
29021
18091
27019
13217
17113
13063
24043
42129
55105
25005
22033
36081
06001
48201
12086
25009
37051
36111
08069
53073
34007
32031
36055
08059
41051
04019
27137
13077
36093
17019
06007
55133
06095
01073
26005
25003
35049
13247
17091
12091
45007
08101
42089
05143
37063
12099
17031
12021
51041
25021
24005
29095
34001
34041
51153
17167
33015
34039
12011
04013
48157
42017
55079
47157
01097
42025
06017
36077
13097
44003
06041
34023
12117
11001
36029
06059
01125
24021
18141
12033
17043
20091
26163
37081
45057
05061
48177
27091
19109
20051
08049
21113
29225
56005
18099
27127
35006
22069
18127
37179
48187
24047
48375
55127
53009
51121
10001
18063
48135
42071
48439
34029
39061
13089
25017
41067
51013
55059
24013
36043
50007
40027
34005
51810
15001
36059
42029
45079
39151
09009
12127
13067
24025
06085
48453
40143
06081
25025
24041
33017
42007
48309
13117
54061
34037
06061
53035
37119
31109
34021
08035
12009
18097
49035
48491
29189
39049
06071
06023
15009
06113
36109
45083
29047
17097
17119
08041
53061
24510
13185
36083
06053
12087
29183
42011
06013
36103
48029
09001
24031
45045
47149
42003
29510
42101
36105
36089
49011
49057
24001
51740
36051
37101
42037
06055
42027
48061
13073
51179
33005
51003
08037
49053
54037
34011
37025
42069
48183
36087
17093
45013
53077
51770
27037
25015
17163
06099
34015
25023
41005
36119
24033
44007
32003
22071
36005
39089
51760
48085
40109
42077
53053
12103
55025
37183
37135
39093
51177
45091
08013
54003
09007
36007
09011
42041
23005
36071
51510
08005
39113
21067
12095
06073
26125
18167
17089
18003
06111
42045
42091
24003
26161
48121
12057
34003
13121
06037
38099
51103
47091
29145
42097
50015
12113
51165
18045
39111
21225
12027
37011
38093
39027
17021
08085
29169
05149
13137
27015
05139
53025
28091
35029
05083
13175
53031
39159
16031
28113
51155
08107
37163
21151
55077
28051
54067
05047
48117
45037
13055
13091
21121
13303
51173
19123
28001
19167
19179
18119
49039
39077
29107
27149
41061
29009
30093
53017
31101
27099
29195
29135
54025
54055
27111
39137
29023
26007
45089
26029
27049
37167
27059
42093
39039
05103
29213
29049
27147
22119
37087
42083
41009
35047
53011
05119
31055
36063
33011
25027
39035
34027
12031
51139
18093
39097
17159
01051
37157
08065
38003
18027
28083
47167
05063
04023
51111
08117
08119
51670
13179
46065
39129
41065
27067
47011
45067
28059
20155
56023
45009
21017
16051
17015
12049
13227
51101
46029
18065
48323
02130
17025
51053
05071
48465
06027
12093
02220
17085
27039
26031
04012
40101
19049
08097
26143
26103
17103
08075
32023
13129
36097
27021
27057
48227
18071
53015
37093
55007
06009
56037
27085
49015
29149
27097
39071
53047
39083
18083
55031
37047
13025
48329
16017
17133
22105
05045
42131
39005
38015
45055
22109
30047
39069
45085
45049
53007
06015
16053
54069
36117
26063
39063
53075
37189
02170
21185
06043
28039
22005
04001
39119
30031
01121
39127
22015
31119
47043
26117
13285
41041
26147
26055
37159
35039
39087
48049
48339
01069
18081
21227
06107
45051
26099
18057
48181
02090
16019
17199
29099
12019
45043
27171
20177
12017
48469
05031
22001
37001
16005
37057
12111
37129
12097
48295
28097
26013
13131
48389
12003
31033
47127
28145
13291
48401
37143
48017
48297
01057
05009
01129
13029
13165
13259
38073
47169
29069
47087
31021
37169
31127
48069
48225
48249
37111
48073
21197
05123
21179
47027
40043
29025
30027
37181
54043
13301
51035
51169
20125
02180
19191
51043
21079
41031
17151
53059
46083
29215
21127
45071
21139
19055
37141
17075
48097
13267
56021
42005
17115
48027
27013
47037
25013
36061
20209
36021
22073
13059
54011
51710
08031
06075
36091
26139
37097
45041
48091
15007
30063
35061
01081
42125
34019
29077
36047
51059
06065
13057
06087
39017
34025
10003
15003
35001
42103
41029
09005
36085
36065
49049
45003
34035
34031
36001
06019
34017
18089
25001
02020
06067
48113
23007
48199
17063
22095
23015
13279
37019
22047
29015
21231
48239
51029
22121
17193
51570
05085
20001
54099
13005
28099
27005
27119
18077
06069
16049
17145
48419
48449
29161
20169
45001
48189
21229
28003
51027
47089
39143
51197
06035
46027
19141
35031
55003
19183
26023
26097
16065
30013
26061
27071
27169
51195
48223
51109
22031
26041
20111
42085
55043
17195
19061
08051
05005
17011
27093
18087
51011
01127
42123
27157
51107
06077
36067
39095
35013
28047
09003
13135
06097
51157
36039
47131
16039
51775
56013
54019
08071
21157
51083
48373
42047
51089
18031
17099
28029
26035
17187
22003
31001
22093
48427
29121
38071
18169
21101
17141
40021
55021
20103
5
End Exploring Related Columns
Task: Could you assess the relationship between the poverty rates from the previous year's census data and the percentage of births without maternal morbidity for the years 2016 to 2018? Use only data for births where no maternal morbidity was reported and for each year, use the 5-year census data from the year before to compute the Pearson correlation coefficient

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Pearson_Correlation_Coefficient
2016,float between -1 and 1
2017,float between -1 and 1
2018,float between -1 and 1
```.
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
Please refrain from adding any conditions that are not explicitly specified in the task.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'SDOH': {'CENSUS_BUREAU_ACS': ['BLOCKGROUP_2010_5YR', 'BLOCKGROUP_2011_5YR', 'BLOCKGROUP_2012_5YR', 'BLOCKGROUP_2013_5YR', 'BLOCKGROUP_2014_5YR', 'BLOCKGROUP_2015_5YR', 'BLOCKGROUP_2016_5YR', 'BLOCKGROUP_2017_5YR', 'BLOCKGROUP_2018_5YR', 'CBSA_2007_1YR', 'CBSA_2007_3YR', 'CBSA_2008_1YR', 'CBSA_2008_3YR', 'CBSA_2009_1YR', 'CBSA_2009_3YR', 'CBSA_2010_1YR', 'CBSA_2010_3YR', 'CBSA_2010_5YR', 'CBSA_2011_1YR', 'CBSA_2011_3YR', 'CBSA_2011_5YR', 'CBSA_2012_1YR', 'CBSA_2012_3YR', 'CBSA_2012_5YR', 'CBSA_2013_1YR', 'CBSA_2013_3YR', 'CBSA_2013_5YR', 'CBSA_2014_1YR', 'CBSA_2014_5YR', 'CBSA_2015_1YR', 'CBSA_2015_5YR', 'CBSA_2016_1YR', 'CBSA_2016_5YR', 'CBSA_2017_1YR', 'CBSA_2017_5YR', 'CBSA_2018_1YR', 'CBSA_2018_5YR', 'CBSA_2019_1YR', 'CBSA_2019_5YR', 'CBSA_2020_5YR', 'CBSA_2021_1YR', 'CENSUSTRACT_2010_5YR', 'CENSUSTRACT_2011_5YR', 'CENSUSTRACT_2012_5YR', 'CENSUSTRACT_2013_5YR', 'CENSUSTRACT_2014_5YR', 'CENSUSTRACT_2015_5YR', 'CENSUSTRACT_2016_5YR', 'CENSUSTRACT_2017_5YR', 'CENSUSTRACT_2018_5YR', 'CENSUSTRACT_2019_5YR', 'CENSUSTRACT_2020_5YR', 'CONGRESSIONALDISTRICT_2007_1YR', 'CONGRESSIONALDISTRICT_2007_3YR', 'CONGRESSIONALDISTRICT_2008_1YR', 'CONGRESSIONALDISTRICT_2008_3YR', 'CONGRESSIONALDISTRICT_2009_1YR', 'CONGRESSIONALDISTRICT_2009_3YR', 'CONGRESSIONALDISTRICT_2010_1YR', 'CONGRESSIONALDISTRICT_2010_3YR', 'CONGRESSIONALDISTRICT_2010_5YR', 'CONGRESSIONALDISTRICT_2011_1YR', 'CONGRESSIONALDISTRICT_2011_3YR', 'CONGRESSIONALDISTRICT_2011_5YR', 'CONGRESSIONALDISTRICT_2012_1YR', 'CONGRESSIONALDISTRICT_2012_3YR', 'CONGRESSIONALDISTRICT_2012_5YR', 'CONGRESSIONALDISTRICT_2013_1YR', 'CONGRESSIONALDISTRICT_2013_3YR', 'CONGRESSIONALDISTRICT_2013_5YR', 'CONGRESSIONALDISTRICT_2014_1YR', 'CONGRESSIONALDISTRICT_2014_5YR', 'CONGRESSIONALDISTRICT_2015_1YR', 'CONGRESSIONALDISTRICT_2015_5YR', 'CONGRESSIONALDISTRICT_2016_1YR', 'CONGRESSIONALDISTRICT_2016_5YR', 'CONGRESSIONALDISTRICT_2017_1YR', 'CONGRESSIONALDISTRICT_2017_5YR', 'CONGRESSIONALDISTRICT_2018_1YR', 'CONGRESSIONALDISTRICT_2018_5YR', 'CONGRESSIONALDISTRICT_2019_1YR', 'CONGRESSIONALDISTRICT_2019_5YR', 'CONGRESSIONALDISTRICT_2020_5YR', 'CONGRESSIONALDISTRICT_2021_1YR', 'COUNTY_2007_1YR', 'COUNTY_2007_3YR', 'COUNTY_2008_1YR', 'COUNTY_2008_3YR', 'COUNTY_2009_1YR', 'COUNTY_2009_3YR', 'COUNTY_2010_1YR', 'COUNTY_2010_3YR', 'COUNTY_2010_5YR', 'COUNTY_2011_1YR', 'COUNTY_2011_3YR', 'COUNTY_2011_5YR', 'COUNTY_2012_1YR', 'COUNTY_2012_3YR', 'COUNTY_2012_5YR', 'COUNTY_2013_1YR', 'COUNTY_2013_3YR', 'COUNTY_2013_5YR', 'COUNTY_2014_1YR', 'COUNTY_2014_5YR', 'COUNTY_2015_1YR', 'COUNTY_2015_5YR', 'COUNTY_2016_1YR', 'COUNTY_2016_5YR', 'COUNTY_2017_1YR', 'COUNTY_2017_5YR', 'COUNTY_2018_1YR', 'COUNTY_2018_5YR', 'COUNTY_2019_1YR', 'COUNTY_2019_5YR', 'COUNTY_2020_5YR', 'COUNTY_2021_1YR', 'PLACE_2007_1YR', 'PLACE_2007_3YR', 'PLACE_2008_1YR', 'PLACE_2008_3YR', 'PLACE_2009_1YR', 'PLACE_2009_3YR', 'PLACE_2010_1YR', 'PLACE_2010_3YR', 'PLACE_2010_5YR', 'PLACE_2011_1YR', 'PLACE_2011_3YR', 'PLACE_2011_5YR', 'PLACE_2012_1YR', 'PLACE_2012_3YR', 'PLACE_2012_5YR', 'PLACE_2013_1YR', 'PLACE_2013_3YR', 'PLACE_2013_5YR', 'PLACE_2014_1YR', 'PLACE_2014_5YR', 'PLACE_2015_1YR', 'PLACE_2015_5YR', 'PLACE_2016_1YR', 'PLACE_2016_5YR', 'PLACE_2017_1YR', 'PLACE_2017_5YR', 'PLACE_2018_1YR', 'PLACE_2018_5YR', 'PLACE_2019_1YR', 'PLACE_2019_5YR', 'PLACE_2020_5YR', 'PLACE_2021_1YR', 'PUMA_2007_1YR', 'PUMA_2007_3YR', 'PUMA_2008_1YR', 'PUMA_2008_3YR', 'PUMA_2009_1YR', 'PUMA_2009_3YR', 'PUMA_2010_1YR', 'PUMA_2010_3YR', 'PUMA_2010_5YR', 'PUMA_2011_1YR', 'PUMA_2011_3YR', 'PUMA_2011_5YR', 'PUMA_2012_1YR', 'PUMA_2012_3YR', 'PUMA_2012_5YR', 'PUMA_2013_1YR', 'PUMA_2013_3YR', 'PUMA_2013_5YR', 'PUMA_2014_1YR', 'PUMA_2014_5YR', 'PUMA_2015_1YR', 'PUMA_2015_5YR', 'PUMA_2016_1YR', 'PUMA_2016_5YR', 'PUMA_2017_1YR', 'PUMA_2017_5YR', 'PUMA_2018_1YR', 'PUMA_2018_5YR', 'PUMA_2019_1YR', 'PUMA_2019_5YR', 'PUMA_2020_5YR', 'PUMA_2021_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_1YR', 'SCHOOLDISTRICTELEMENTARY_2010_5YR', 'SCHOOLDISTRICTELEMENTARY_2014_1YR', 'SCHOOLDISTRICTELEMENTARY_2014_5YR', 'SCHOOLDISTRICTELEMENTARY_2015_1YR', 'SCHOOLDISTRICTELEMENTARY_2015_5YR', 'SCHOOLDISTRICTELEMENTARY_2016_1YR', 'SCHOOLDISTRICTELEMENTARY_2016_5YR', 'SCHOOLDISTRICTELEMENTARY_2017_1YR', 'SCHOOLDISTRICTELEMENTARY_2017_5YR', 'SCHOOLDISTRICTELEMENTARY_2018_1YR', 'SCHOOLDISTRICTELEMENTARY_2018_5YR', 'SCHOOLDISTRICTELEMENTARY_2019_1YR', 'SCHOOLDISTRICTELEMENTARY_2019_5YR', 'SCHOOLDISTRICTELEMENTARY_2020_5YR', 'SCHOOLDISTRICTELEMENTARY_2021_1YR', 'SCHOOLDISTRICTSECONDARY_2010_1YR', 'SCHOOLDISTRICTSECONDARY_2010_5YR', 'SCHOOLDISTRICTSECONDARY_2014_5YR', 'SCHOOLDISTRICTSECONDARY_2015_1YR', 'SCHOOLDISTRICTSECONDARY_2015_5YR', 'SCHOOLDISTRICTSECONDARY_2016_1YR', 'SCHOOLDISTRICTSECONDARY_2016_5YR', 'SCHOOLDISTRICTSECONDARY_2017_1YR', 'SCHOOLDISTRICTSECONDARY_2017_5YR', 'SCHOOLDISTRICTSECONDARY_2018_1YR', 'SCHOOLDISTRICTSECONDARY_2018_5YR', 'SCHOOLDISTRICTSECONDARY_2019_1YR', 'SCHOOLDISTRICTSECONDARY_2019_5YR', 'SCHOOLDISTRICTSECONDARY_2020_5YR', 'SCHOOLDISTRICTSECONDARY_2021_1YR', 'SCHOOLDISTRICTUNIFIED_2010_1YR', 'SCHOOLDISTRICTUNIFIED_2010_5YR', 'SCHOOLDISTRICTUNIFIED_2014_1YR', 'SCHOOLDISTRICTUNIFIED_2014_5YR', 'SCHOOLDISTRICTUNIFIED_2015_1YR', 'SCHOOLDISTRICTUNIFIED_2015_5YR', 'SCHOOLDISTRICTUNIFIED_2016_1YR', 'SCHOOLDISTRICTUNIFIED_2016_5YR', 'SCHOOLDISTRICTUNIFIED_2017_1YR', 'SCHOOLDISTRICTUNIFIED_2017_5YR', 'SCHOOLDISTRICTUNIFIED_2018_1YR', 'SCHOOLDISTRICTUNIFIED_2018_5YR', 'SCHOOLDISTRICTUNIFIED_2019_1YR', 'SCHOOLDISTRICTUNIFIED_2019_5YR', 'SCHOOLDISTRICTUNIFIED_2020_5YR', 'SCHOOLDISTRICTUNIFIED_2021_1YR', 'STATE_2007_1YR', 'STATE_2007_3YR', 'STATE_2008_1YR', 'STATE_2008_3YR', 'STATE_2009_1YR', 'STATE_2009_3YR', 'STATE_2010_1YR', 'STATE_2010_3YR', 'STATE_2010_5YR', 'STATE_2011_1YR', 'STATE_2011_3YR', 'STATE_2011_5YR', 'STATE_2012_1YR', 'STATE_2012_3YR', 'STATE_2012_5YR', 'STATE_2013_1YR', 'STATE_2013_3YR', 'STATE_2013_5YR', 'STATE_2014_1YR', 'STATE_2014_5YR', 'STATE_2015_1YR', 'STATE_2015_5YR', 'STATE_2016_1YR', 'STATE_2016_5YR', 'STATE_2017_1YR', 'STATE_2017_5YR', 'STATE_2018_1YR', 'STATE_2018_5YR', 'STATE_2019_1YR', 'STATE_2019_5YR', 'STATE_2020_5YR', 'STATE_2021_1YR', 'ZCTA5_2011_5YR', 'ZCTA5_2012_5YR', 'ZCTA5_2013_5YR', 'ZCTA5_2014_5YR', 'ZCTA5_2015_5YR', 'ZCTA5_2016_5YR', 'ZCTA5_2017_5YR', 'ZCTA5_2018_5YR', 'ZCTA5_2019_5YR', 'ZCTA_2019_5YR', 'ZCTA_2020_5YR', 'ZIP_CODES_2011_5YR', 'ZIP_CODES_2012_5YR', 'ZIP_CODES_2013_5YR', 'ZIP_CODES_2014_5YR', 'ZIP_CODES_2015_5YR', 'ZIP_CODES_2016_5YR', 'ZIP_CODES_2017_5YR', 'ZIP_CODES_2018_5YR'], 'SDOH_BEA_CAINC30': ['FIPS'], 'SDOH_CDC_WONDER_NATALITY': ['COUNTY_NATALITY', 'COUNTY_NATALITY_BY_ABNORMAL_CONDITIONS', 'COUNTY_NATALITY_BY_CONGENITAL_ABNORMALITIES', 'COUNTY_NATALITY_BY_FATHER_RACE', 'COUNTY_NATALITY_BY_MATERNAL_MORBIDITY', 'COUNTY_NATALITY_BY_MOTHER_RACE', 'COUNTY_NATALITY_BY_PAYMENT'], 'SDOH_CMS_DUAL_ELIGIBLE_ENROLLMENT': ['DUAL_ELIGIBLE_ENROLLMENT_BY_COUNTY_AND_PROGRAM'], 'SDOH_HRSA_SHORTAGE_AREAS': ['HPSA_DENTAL_HEALTH', 'HPSA_MENTAL_HEALTH', 'HPSA_MUA', 'HPSA_PRIMARY_CARE'], 'SDOH_HUD_HOUSING': ['_2017_LIHTC_DATABASE_HUD'], 'SDOH_HUD_PIT_HOMELESSNESS': ['HUD_PIT_BY_COC'], 'SDOH_SNAP_ENROLLMENT': ['SNAP_ENROLLMENT']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
Be careful one country may have different names in different columns in a database.
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
Be careful of information in nested JSON columns. e.g.1. When it comes to active users, it refers to has engagement_time_msec parameter rather than directly counting users. So the right query is: SELECT DISTINCT USER_PSEUDO_ID FROM all_user_activity, LATERAL FLATTEN(input => event_params) AS flattened_params WHERE flattened_params.value:key = 'engagement_time_msec'
e.g. When it comes to top-selling product, you should pay attention to hits2.value:"eCommerceAction":"action_type"::INTEGER = 6 where 6 means sold product.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When counting for rows of a column, ensure they are distinct: SELECT COUNT(DISTINCT col_name) FROM table;
Keep all decimals to four decimal places.

2025-01-16 06:32:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:32:36 - root - INFO - ```sql
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_of_Residence_FIPS",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_of_Residence_FIPS",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_of_Residence_FIPS"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
```
2025-01-16 06:32:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:32:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:32:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:32:38 - snowflake.connector.connection - INFO - closed
2025-01-16 06:32:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:32:38 - root - INFO - itercount: 1
2025-01-16 06:32:38 - root - INFO - 090105 (22000): 01b9be88-0004-7b0f-0001-11c300ca04ba: Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
2025-01-16 06:32:38 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_of_Residence_FIPS",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_of_Residence_FIPS",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_of_Residence_FIPS"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
090105 (22000): 01b9be88-0004-7b0f-0001-11c300ca04ba: Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
Please correct it and output only 1 complete SQL query.
2025-01-16 06:33:45 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:33:45 - root - INFO - ```sql
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_of_Residence_FIPS",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_of_Residence_FIPS",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_of_Residence_FIPS"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
```
2025-01-16 06:33:45 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:33:45 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:33:45 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:33:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 06:33:47 - snowflake.connector.connection - INFO - closed
2025-01-16 06:33:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:33:47 - root - INFO - itercount: 2
2025-01-16 06:33:47 - root - INFO - No data found for the specified query.

2025-01-16 06:33:47 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_of_Residence_FIPS",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_of_Residence_FIPS",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_of_Residence_FIPS"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:35:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:35:27 - root - INFO - ```sql
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-
2025-01-16 06:35:27 - root - INFO - itercount: 3
2025-01-16 06:35:27 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_of_Residence_FIPS",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_of_Residence_FIPS",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_of_Residence_FIPS"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:35:27 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_of_Residence_FIPS",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_of_Residence_FIPS",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_of_Residence_FIPS"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:36:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:36:55 - root - INFO - ```sql
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    LPAD(tb."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
```
2025-01-16 06:36:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:36:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:36:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:36:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 06:36:56 - snowflake.connector.connection - INFO - closed
2025-01-16 06:36:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:36:57 - root - INFO - itercount: 4
2025-01-16 06:36:57 - root - INFO - No data found for the specified query.

2025-01-16 06:36:57 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    LPAD(tb."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:37:46 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:37:46 - root - INFO - 
2025-01-16 06:37:46 - root - INFO - itercount: 5
2025-01-16 06:37:46 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    LPAD(tb."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:37:46 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    tn."County_of_Residence_FIPS",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    tn."County_of_Residence_FIPS"
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    tnm."County_of_Residence_FIPS",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    tnm."County_of_Residence_FIPS"
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    LPAD(tb."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_of_Residence_FIPS" = bnm."County_of_Residence_FIPS"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    pd."poverty",
    pd."pop_determined_poverty_status",
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL AND pd."pop_determined_poverty_status" > 0
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    (pd."poverty" / pd."pop_determined_poverty_status") * 100 AS poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd."pop_determined_poverty_status" > 0
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:38:21 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:38:21 - root - INFO - ```sql
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0')
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0')
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_FIPS_Code" = bnm."County_FIPS_Code"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    pd.poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd.poverty_rate IS NOT NULL
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
```
2025-01-16 06:38:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 06:38:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 06:38:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 06:38:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 06:38:22 - snowflake.connector.connection - INFO - closed
2025-01-16 06:38:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 06:38:23 - root - INFO - itercount: 6
2025-01-16 06:38:23 - root - INFO - No data found for the specified query.

2025-01-16 06:38:23 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0')
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0')
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_FIPS_Code" = bnm."County_FIPS_Code"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    pd.poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd.poverty_rate IS NOT NULL
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:38:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 06:38:25 - root - INFO - 
2025-01-16 06:38:25 - root - INFO - itercount: 7
2025-01-16 06:38:25 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0')
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0')
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_FIPS_Code" = bnm."County_FIPS_Code"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    pd.poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd.poverty_rate IS NOT NULL
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:38:25 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0')
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0')
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_FIPS_Code" = bnm."County_FIPS_Code"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    pd.poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd.poverty_rate IS NOT NULL
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:38:26 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 400 model_error"
2025-01-16 06:38:26 - root - INFO - Input sql:
WITH

-- Get total births per county per year from COUNTY_NATALITY
total_births AS (
  SELECT
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tn."Births") AS total_births
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY" tn
  WHERE
    tn."Year" BETWEEN '2016-01-01' AND '2018-12-31'
  GROUP BY
    tn."Year",
    LPAD(tn."County_of_Residence_FIPS", 5, '0')
),

-- Get total births without maternal morbidity per county per year
births_no_morbidity AS (
  SELECT
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0') AS "County_FIPS_Code",
    SUM(tnm."Births") AS births_no_morbidity
  FROM
    "SDOH"."SDOH_CDC_WONDER_NATALITY"."COUNTY_NATALITY_BY_MATERNAL_MORBIDITY" tnm
  WHERE
    tnm."Year" BETWEEN '2016-01-01' AND '2018-12-31'
    AND tnm."Maternal_Morbidity_YN" = 0
  GROUP BY
    tnm."Year",
    LPAD(tnm."County_of_Residence_FIPS", 5, '0')
),

-- Calculate percentage per county per year
percentage_no_morbidity AS (
  SELECT
    tb."Year",
    tb."County_FIPS_Code",
    bnm.births_no_morbidity,
    tb.total_births,
    (bnm.births_no_morbidity / tb.total_births) * 100 AS perc_no_morbidity
  FROM
    total_births tb
    JOIN births_no_morbidity bnm ON tb."Year" = bnm."Year"
    AND tb."County_FIPS_Code" = bnm."County_FIPS_Code"
  WHERE tb.total_births > 0
),

-- Poverty data from previous year's census data
poverty_data AS (
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2015' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2015_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2016' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2016_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
  UNION ALL
  SELECT
    SUBSTRING(pd."geo_id", 10, 5) AS "County_FIPS_Code",
    (pd."poverty" / NULLIF(pd."pop_determined_poverty_status", 0)) * 100 AS poverty_rate,
    '2017' AS census_year
  FROM
    "SDOH"."CENSUS_BUREAU_ACS"."COUNTY_2017_5YR" pd
  WHERE pd."poverty" IS NOT NULL AND pd."pop_determined_poverty_status" IS NOT NULL
),

-- Join percentage data with poverty data per year
combined_data AS (
  SELECT
    pm."Year",
    pm."County_FIPS_Code",
    pm.perc_no_morbidity,
    pd.poverty_rate
  FROM
    percentage_no_morbidity pm
    JOIN poverty_data pd ON pd."County_FIPS_Code" = pm."County_FIPS_Code"
    AND pd.census_year = TO_VARCHAR(YEAR(DATEADD(year, -1, pm."Year")))
  WHERE
    pd.poverty_rate IS NOT NULL
),

-- Compute Pearson correlation coefficient per year
correlation_results AS (
  SELECT
    pm."Year",
    CORR(poverty_rate, perc_no_morbidity) AS "Pearson_Correlation_Coefficient"
  FROM
    combined_data pm
  GROUP BY
    pm."Year"
)

SELECT
  TO_VARCHAR(YEAR("Year")) AS "Year",
  ROUND("Pearson_Correlation_Coefficient", 4) AS "Pearson_Correlation_Coefficient"
FROM
  correlation_results
ORDER BY
  "Year";
The error information is:
 No data found for the specified query.

2025-01-16 06:38:26 - root - INFO - Exceeded
2025-01-16 06:38:26 - root - INFO - Total iteration counts: 7
