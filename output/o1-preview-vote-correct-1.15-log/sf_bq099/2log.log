2025-01-16 03:09:31 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 03:10:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 03:10:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 03:10:32 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:32 - root - INFO - SQL:
SELECT DISTINCT f.value:"code"::STRING AS "cpc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   LIMIT 1000;
Results:
Too long, hard cut:
cpc_code
H05K2203/1327
H04B1/0057
G06T19/006
H01L21/50
B32B27/308
B32B27/32
C09D7/65
C01B9/04
H01L21/76849
A61G13/02
G06K9/00369
G06F40/279
H04B7/086
B32B37/12
G01N15/14
H04W72/542
A61K31/282
G01D11/245
G01D21/00
F16F9/19
H04W64/00
H01L45/08
H02J7/04
H01L21/823437
F41C23/04
F02D2250/36
C04B2111/40
F02B67/00
H01L24/19
C07F15/0093
G01N15/1459
G02B27/0172
F02M26/00
F24D2220/042
A61K2300/00
Y02P70/10
C23C18/24
Y02T70/10
C07K5/06034
F21V5/008
C07F15/025
A61K39/0017
A61B17/3468
A63C10/24
F16L3/1236
B29C70/003
H04M19/08
F22G7/14
C08F299/065
C09K5/063
B82Y40/00
H01L21/3065
H04N2201/3278
C09D11/17
H04L67/10
H04L41/22
H01M8/04671
B29C48/913
H05K7/20545
H04M3/42314
G01N33/74
C08G65/30
A01K2207/15
C08L77/06
C07F7/126
F24H9/02
G06Q50/02
H04N21/4147
H01M4/62
E05B17/0058
A61K31/439
A23K20/24
B60W2710/083
A47C1/032
B62D1/185
E02F9/2217
C22C21/08
B32B2307/746
G02B1/18
G06T2207/10088
A61L2/10
A61N5/0616
G06F2201/88
G06K9/2063
E04F13/06
H04N19/159
G06T9/004
G06F2009/4557
H04N19/114
A61M25/1027
C09D5/00
F05D2260/98
F02C7/266
G07C5/008
G09G2330/023
A61K31/065
A43B1/0009
A47J31/18
D04H1/587
A61B2017/07257
A61K2800/5426
B23K2103/02
B23K35/3053
G10L15/08
G06F19/3475
B01D61/10
H01L24/09
H03K3/84
G01K7/42
A61B17/0401
G06F9/3808
E21B43/084
C30B25/10
F04B1/12
H01L27/3272
F02B2053/005
C09J2489/00
A43B13/125
A23L19/00
G02B27/0093
B66D1/14
G06F1/1626
H01S3/076
H04L45/02
G03G15/5041
A61K31/195
G06Q30/0278
A61L27/50
H01M4/381
B21B45/004
A61H2201/0157
G11C29/52
A63F2300/63
G06Q30/0267
B01D53/268
G06T2207/20021
C30B25/18
E04H15/06
G16H20/40
G06F2203/04105
A23K40/30
B29C55/04
G01S2205/01
G06F16/43
B01J35/56
H02J50/20
H01L33/145
C12N15/1065
C12N2310/20
B01D53/263
F02N2200/022
H04B5/0087
B33Y50/00
D07B2201/2043
A61L29/14
A46B7/044
H02P7/29
E05B45/12
H04B17/382
A23L27/20
Y10T29/49885
A47C1/12
G02B2027/0165
A61B17/12109
F41H5/0471
C04B38/0022
B01D1/221
E06B9/171
H04N9/888
C07D231/14
B60G17/0152
B60G2202/42
A47C4/286
E01C19/176
F02M59/48
H01J2237/221
H02J7/0063
H01M16/00
C09J7/00
A61F5/56
C04B2201/10
B01D39/2017
B32B27/28
A61M1/3427
B63C11/18
G01N2223/6116
B41K1/58
B63B2704/00
B60Y2200/92
A63F2300/8047
G06T2207/20092
E01C15/00
C08F2/001
H10K59/129
H01L27/0292
A46B13/02
F16K15/18
C04B33/34
H04Q1/144
F04C2/344
D21D5/24
G06F17/30876
A61B2017/00353
B23K26/127
H03M13/2792
C04B35/6261
B63B13/02
A41C1/00
B01D2253/108
B23K2101/42
B60W10/10
H04J11/0093
B60L58/30
F23R3/286
G06V20/58
B32B2457/20
H04L69/04
G06F2203/04112
G02B5/3033
D02J1/08
G06F17/30138
G07F11/10
B03B4/005
G01J3/108
Y10T83/8716
F24F3/153
F23Q2/32
B44C5/0407
C08K3/24
B65D47/2037
H04L9/00
E06B9/15
E21B47/01
B29C2949/08
B67B7/44
F16H61/30
B29D22/00
B65H21/00
B23B27/22
B64C3/54
C07C323/44
F25D23/065
F01D5/025
F01N13/001
H01H67/06
B29C73/02
G06F16/2471
H02G15/013
A61K49/0036
B60L2240/545
H01L23/3675
C03B37/0124
C12N2500/02
A61M2037/0023
A61M2037/0046
B25J19/021
H04N19/85
G06F3/0655
C22C38/10
A63B69/0059
H04L12/1822
G01V2210/244
Y10T409/307672
B23K35/286
G01J3/04
B23K35/325
A61B2017/2904
A61B2090/037
A61K49/0065
H04B1/71632
G06F9/44505
B65G47/71
H01L29/7889
B60L3/0069
A61M2025/0226
C09J7/02
A61N1/36135
A61N1/37217
C10N2040/42
H01L33/486
B67D3/0029
A61B1/31
H01L33/10
Y10T137/8593
A61H2230/10
F16C2300/34
Y10T29/49032
B81B2201/042
C09J163/00
B60S1/3887
A63F13/56
G02F1/133317
B01J2219/0801
H03K17/693
A61K47/59
C04B35/63428
B27G19/04
C12Q2525/307
C07C213/06
A61C3/025
A61K51/1251
C08G64/22
A47B47/005
A61K36/233
G01J5/10
A61K36/232
B67D1/0009
B67D1/0412
B60P1/34
B65G1/0478
H04W36/0064
G06N3/067
A61F2/2466
A61L2/238
G06F18/217
H02H3/343
B01D2258/014
H03K5/135
H04L41/0816
H04L43/0811
F02D41/1462
H01L2924/20753
Y10T428/24702
F42C19/00
G11C2013/0092
A61B8/485
H02K1/187
F05D2240/303
F16H37/12
B23D45/048
Y10S901/36
H02M1/0054
H01S5/028
B29C2045/1741
H05K13/08
H03F3/20
G06F3/06
C08G59/621
H04N23/611
H02K3/345
F16H2025/2481
H01L43/10
H01L2224/05157
A61B5/4504
G02B6/06
H01L2224/03462
A61H2201/1436
C23F13/005
H05K3/426
F24C15/2035
Y02P30/00
H04W36/0016
A61M1/1524
H04K3/224
C01B3/42
G03G15/04054
A61M60/40
A61B2017/2906
H03K19/17764
F16L1/10
G06Q10/047
H04L12/2856
A61B2017/0464
G11B20/1879
G06F21/31
C08F251/02
A43B17/026
Y10T29/49989
B01D2256/10
B25B27/06
C09K9/02
G06T2207/10012
G08B13/1427
A61N1/378
G06T2207/30024
B65H2403/73
E05B77/38
B60W2556/65
G01S19/37
G02F1/133621
G06V40/197
H04N1/00708
G06N3/0418
G05D1/24
H01L21/187
H01L27/11514
H02K33/02
B65D25/108
Y10T83/155
A61K39/001103
H04L2012/5614
H05K2201/09736
A61B5/0836
F02M63/0078
B22D11/0406
A61K31/4172
H01L2224/82101
B65D5/241
B65D5/2019
H01L24/40
B65H2801/31
C21B2400/08
F04C18/16
C12Y302/01091
A61B8/5253
G01N21/8806
H10N70/884
C07F15/0046
C12Q1/04
F16F7/123
B01D2257/404
H04N9/3114
H04M1/0216
B60L2240/507
G02B5/3008
C08G75/045
A61M25/003
C08G63/00
C09J9/00
H01J37/32669
C04B2111/00767
F15B2211/265
G02B17/0812
G06F2200/1633
H01M50/533
G06F17/241
A63B45/00
F16C2316/10
H01M8/0606
A61F2002/91591
B65D2575/329
A61F2013/00246
B01D46/69
B32B2307/584
G16B20/10
H04N19/96
H01H13/81
C09D5/1668
F25C5/182
A61H2201/123
B24D3/002
C07F7/0838
C07D211/66
H04B1/18
A63B21/0407
H04W36/

2025-01-16 03:10:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 66
2025-01-16 03:10:34 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:34 - root - INFO - SQL:
SELECT DISTINCT f.value:"code"::STRING AS "cpc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   WHERE f.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Results:
cpc_code
A01B35/18
A01B3/32
A01B35/10
A01B3/10
A01B35/28
A01B35/08
A01B33/12
A01B33/025
A01B33/028
A01B35/12
A01B39/26
A01B33/082
A01B33/14
A01B3/24
A01B3/36
A01B33/142
A01B33/106
A01B33/024
A01B33/144
A01B33/00
A01B39/22
A01B3/08
A01B33/08
A01B35/26
A01B35/225
A01B33/10
A01B33/06
A01B39/14
A01B33/146
A01B3/18
A01B33/16
A01B33/087
A01B39/06
A01B3/12
A01B39/10
A01B33/02
A01B35/20
A01B39/18
A01B39/19
A01B39/00
A01B35/00
A01B39/16
A01B33/04
A01B3/464
A01B35/24
A01B33/021
A01B3/30
A01B37/00
A01B3/46
A01B31/00
A01B35/32
A01B33/065
A01B35/22
A01B3/26
A01B35/14
A01B39/20
A01B3/50
A01B35/06
A01B3/74
A01B39/085
A01B35/04
A01B3/54
A01B39/163
A01B3/28
A01B33/103
A01B35/16

2025-01-16 03:10:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 03:10:36 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:36 - root - INFO - SQL:
SELECT DISTINCT f.value:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f
   LIMIT 1000;
Results:
Too long, hard cut:
assignee_name
PREC BIOSCIENCES INC
STANLEY WORKS LTD
CAMURUS AB
WWT SPOLKA Z OGRANICZONA ODPOWIEDZIALNOSCIA
EISEN EIKO
WISTRON NEWEB CORP
UST INC
UNIV ANGERS
CHUNG CHI Y
ZHU MIN
SUMNER MICHAEL
BERNARD MARC R
HRA PHARMA LAB
GANZHOU HEMAY PHARMACEUTICAL CO
SURROZEN OPERATING INC
KIMBERLY CLARK CO
VIGIL NEUROSCIENCE INC
ROCKWOOL INT
OMNISYSTEM CO LTD
AGCO DO BRASIL SOLUCOES AGRICOLAS LTDA
KOREA INST OCEAN SCI & TECH
MATHUR BHAVNA
VARTIAINEN PANU
KAN GEORGE L
SUN HAO
KOO YEON KWAN
ADVANCED BIONICS LLC
MICROELECTRONICS TECH INC
MARTIN DOMINIC R
BRUKER BIOSPIN AG
SOROCO PRIVATE LTD
NIKE INC
Turner Tackle LLC
WAGNER JOACHIM
TOOLTECH LLC
ATOTECH DEUTSCHLAND GMBH
AJINOMOTO KK
HIKMET RIFAT A M
AUYOUNG ALVIN
CHEVRON ORONITE SAS
UNIV MACAU
H4X EU
FUNDACION INSTITUTO DE INVESTIG SANITARIA FUNDACION JIMENEZ DIAZ
COGNEX CORP
WIRTGEN GMBH
AUE TEXTILMASCHINENBAU GMBH
OTKRYTOE AKTSIONERNOE OBSHCHESTVO INFORMATSIONNYE TEKH I KOMMUNIKATSIONNYE SISTEMY
ACTION ELIZABETH
RATKAY ALECSEU
EXXON RESEARCH ENGINEERING CO
FOSTER WHEELER ENERGY CORP
LAESSER FRANZ AG
KORPORATSIJA MASTERNEHT AOZT
HOWELL THOMAS A
SHIM JAE J
MEGURO TAKESHI
ARNEY SHANE R
UBE MAT IND LTD
POORNACHANDRAN RAJESH
OOI TETSUYA
SCHUMACHER DONALD J
DECKARD CARL
TAPIA MARIO G
PEREGO ANDREA
KAWANA TAKAHIRO
SERVIER LAB
GRINKEVICH ALEKSANDR VASIL EVICH
DVOEGLAZOV ALEKSEJ IVANOVICH
ASEA AB
SCHAEFER ELEKTROTECHNIK U SONDERMASCHINEN GMBH
ZIMMERMANN GISELA
SHINDENGEN ELECTRIC MFG CO
ATATUERK UENIVERSITESI BILIMSEL ARASTIRMA PROJELERI BIRIMI
LYUBEZNOV VALERIJ KONSTANTINOVICH
KODAMA NOBUTAKA
GUOZHU YE
HINTERMAIER WOLFGANG
MAURER JOHN H
PICHER PATRICK
LAMBA DIGVIJAY SINGH
LÉONARD FRANÇOIS
CARUELLE JEAN-PIERRE
ST MICROELECTRONICS ROUSSET
TERMINATOR IP LTD
TOTALENERGIES CORBION BV
KAISER GYPSUM COMPANY INC
LISTON JAMES A TRUSTEE
SYLVESTER RICHARD
WITTENBERGE NAEHMASCH VEB
BORG HOLDING A G
WARNER LAMBERT TECH
ORTH JANOSNE
FAIL SAFE IND INC
HIAB AB
MOBIPAYPOINT LTD
HEWLETT PACKARD DEVELOPMENT CO LP
ROBOPAC SPA
ROCHE DIAGNOSTICS OPERATIONS INC
HEINRICH GEORG GMBH MASCHF
BioVersys AG
JANSMA MICHAEL
BIOTA EUROPE LTD
VICENTE JOSE GERMAN
CELLULAR RES INC
JANSSEN PHARMACEUTICALS INC
DARNELL WAYNE
TECHNION RES & DEV FOUNDATION
ANALOGIC CORP
WEIR MINERALS AUSTRALIA LTD
FORMLABS INC
SUBARU CORP
LUKITO HARSOYO
MEEKER DAVID E
LARYNGEAL MASK CO LTD
MOLYNEUX STEPHEN
JOHNSON & JOHNSON SURGICAL VISION INC
BERTHIEZ C N M P
BASF PLANT SCIENCE CO GMBH
CQLT SAARGUMMI TECH SARL
HEFEI MIDEA REFRIGERATOR CO
FERROLI SPA
STEFFENS RALF
ZHANG JINGLIN
XIAMEN CHANGELIGHT CO LTD
MURATA TOSHIKI
SUMITOMO METAL MINING CO
SOLINAS MEDICAL INC
RADIABEAM TECH LLC
Evol Science LLC
MARTINEZ CANALES MONICA LUCIA
WAVE OPTICS LTD
JIANGSU SHEMAR ELECTRIC CO LTD
KANG MIN SOO
LUEDTKE OLIVER
BUONO JUAN C MR
FARGO KENDALL M
KELLER IGOR
MONOPANEL SA
ROLLERBLADE INC
GALLER KURT
TOLEDO ERAN
EL TAHER TODD
ISHITANI TOMOYA
MATERIALS & ELECTROCHEMICAL RES CORP
TERATRON GMBH
EUROPOLES GMBH & CO KG
WHITE IAN D
GOTFRIED YECHIEL
KESSLER MANFRED
STAPP SOEREN
EUROCATENE SRL
SEOK TAEK O
WOO DAE ENGINEERING CONSULTANT CO LTD
ELIESON CHAIMSONOVITZ PROSPER
MARSHALL & ILSLEY BANK
JAMES B BLACKBURN
BERACA SABARA QUIMICOS E INGRE
SWEETSER BERT M
LELAND ELECTRIC CO
NIPPON KOGAKU KK
BOGIE N
KELVINATOR CORP
REDINGTON COUNTERS INC
DANFOSS AS
STOCK EQUIPMENT CO
BISSETT & SONS LTD J
TAITO CORP
GROSS ISAK
TELEX CORP THE
TURNER BROTHERS ASBEST
HITACHI SOFTWARE ENG
REMINGTON TYPEWRITER CO
PEUGEOT
STIRN ALBERT L
JANSSEN VACCINES & PREVENTION BV
WARREN FASTENER CORP
MUELLER JOHANN
WHEELABRATOR CORP
PACIFIC MILLS
CANADIAN SAFETY FUSE COMPANY L
CARTIER JOSEPH GIDEON
OMARK INDUSTRIES INC
STICKEL CHARLES E A
NORGREN CO C A
HOLDEN ARTEMAS F
ARMSTRONG WHITWORTH CO ENG
CEBAL
WEA MFG INC
WILLIAM R BECKER
SICARI R
PERES DALMO JOSE
ALFRED CARRINGTON KENNEDY
CARL WALTHER OHG
KIOXIA CORP
BATTELLE ENERGY ALLIANCE LLC
SOLID INC
TG3D STUDIO
LIXIL SUZUKI SHUTTER CORP
EMPRESSA NAC DE MINERIA ENAMI
VELCRO IP HOLDINGS LLC
MATSUMOTO AYAKA
LODZKA FAB MASZYN JEDWABNI
ALLEN GROUP
SANNER FRIEDR GMBH CO KG
SINGAPORE CHARTERED IND
BEHR GMBH & CO KG
SPATTI GIOVANNI
BOMBAY TEXTILE RES ASS BTRA
SUZUKI MASAMI
WOONGJIN CHEMICAL CO LTD
Convida Wireless LLC
HEATON JEREMIAH
SONOS INC
REMEDEE LABS
BYSTRONIC MASCH
AFP ADVANCED FOOD PRODUCTS LLC
CHR HANSEN AS
THEKKADATH GOVINDANUNNY
SHANGHAI GUIMU ROBOT CO LTD
DEUTSCHE REICHSBAHN
TELO GENOMICS HOLDINGS CORP
POTOMAC PHOTONICS INC
TRIGEM COMPUTER INC
PARK MAN KI
UNIV FLORIDA STATE
MUSIL FRANTISEK
NGUYEN THIEN NHON DIANA
METAL IND RES & DEV CT
DAIKIN FLUOROCHEMICALS CHINA CO LTD
HOWARD DANE
LEPPIN HANS
PEUCKERT KLAUS
KIRCHNER RUDI
MITSUMI ELECTRIC CO LTD
REXROTH INDRAMAT GMBH
DYNAVAX TECH CORP
PROGRESSIVE TOOL & IND CO
MUROTA WATARU
PITCHER CHARLES SPENCER
REVIVE ENVIRONMENTAL TECHNOLOGY LLC
DROSTE RENATE
VRACAR VIKTOR
THE REGENTS OF UNIV OF CALIFORNIA
GEISER TOBIAS
YANG BONG HYUN
MITSUBISHI HITACHI POWER SYSTEMS ENV SOLUTIONS LTD
UNIV OHIO STATE
JEONG DONG HUN
SANKEI YAKUHIN KK
TAIWAN SEMICONDUCTOR MFG
YEH CHIH-KANG
HILL CLYDE D
YANG CHENG-CHUAN


2025-01-16 03:10:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 87
2025-01-16 03:10:38 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:38 - root - INFO - SQL:
SELECT DISTINCT f.value:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Results:
assignee_name
TRECKER FRANCIS J
KUHN SA
GEORGE A KELLY PLOW COMPANY
GUERBET FRANCOIS
JIM ALEX SMITH
BOTVID SETTERGREN ANDERS GOSTA
LEMKEN GMBH & CO KG
SIGFRID ANDERSON ANDERS
ZHANG LIJIN
NIEMEYER SOEHNE STAHL PFLUG
ARWAC LTD
WALLNER KLAUS
WILLIAM HENRY HONY FROST
ELEOS ROBOTICS INC
SJOEHOLMS MEKANISKA AB
SAMSUNG SDI CO LTD
GUIZHOU SPACEFLIGHT SMART AGRICULTURE LTD COMPANY
SAPHIR MASCHB GMBH
Liu Yueshang
GLASIER HAROLD H
AMAZONEN WERKE DREYER H
UNIV JIANGSU
QUINSTAR CORP
DAEHO FARMING MACHINERY CO LTD
SHEPPARD RICHARD H
CAMPBELL CLARENCE L
CHOATE STOREY NORMAN
ARTHUR BROOKS SPURR
LEINFELDER DIPL-LANDW HERMANN
KORSMEYER ERNEST H
MARTIN DOMINIC R
GERBER HUBERT
WANG XUEDONG
GERBER MAURICE
NEW ZEALAND INVENTIONS DEV
LG ELECTRONICS INC
EDWARDS JOHN W
EDMOND HEE
RICHARD CO
CHONGQING TIANJI IND CO LTD
PREC PLANTING LLC
AUGUST SETTERGREN OTTO GORAN
CHONGQING YUBAO AGRICULTURE EXPL CO LTD
MCKAY RALPH LTD
INT HARVESTER GREAT BRITAIN
BULLS CO LTD
TWOSE OF TIVERTON LTD
HUBEI SHUANGYU MACHINERY TECH CO LTD
FISHER VAN E
KUBOTA KK
CHRISTOPHER H R WOODWARD
HUBER FRANZ FERDINAND
UNIV HEILONGJIANG SCI & TECH
LEIJENAAR SYTZE
CNH IND AMERICA LLC
WALTER ROWAN JAMES
UNIV CHUNG ANG IND
KIM JAE KEUN
DAIYO TANGO CO LTD
SAMSUNG KWANGJU ELECTRONICS CO
WILLIAM DREFKE
SOUTHERN PLOW COMPANY
KIM BYUNG SUB
AMAZONEN-WERKE H DREYER GMBH & CO KG
TEXAS INDUSTRIES INC
HARRELL DANNY H
RUDOLPH HASSON PAUL
LIM HEON HO
HOLGER LETH
LELY NV C VAN DER
DEERE & CO
CHO SUNG GU
HUNAN BIOLOGICAL & ELECTROMECHANICAL POLYTECHNIC
CHRISTEN ARNE JENSEN
MARTIN CHARLES H
PATENT CONCERN NV
UNIV TONGJI
OTULAK PRZEMYSLAW PRO CNC
SALGE HENRY F
KIM JONG JIN
CARLUCCI JAMES J
EMPR IMPORT EXPORT Y DISTRIB P
ALLEN SAMUEL L
AGSOILWORKS TECH COMPANY LLC
DALIAN TIANZU ECOLOGICAL AGRICULTURE TECH DEVELOPMENT CO LTD
UNIV SYDNEY
BETEK GMBH & CO KG

2025-01-16 03:10:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 03:10:40 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:40 - root - INFO - SQL:
SELECT DISTINCT "publication_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "publication_date" IS NOT NULL
   LIMIT 1000;
Results:
Too long, hard cut:
publication_date
19800815
20120215
20220202
20240306
19950120
19991125
20100422
20050414
20191219
20110206
20061012
20110331
20131020
19980107
20170718
19850329
20140820
19881125
20211026
20040825
20191127
19830406
20061003
19990401
20050614
20180620
20060222
20220718
20160302
20170909
20080905
20121004
19061225
19731016
19661206
19710629
18650613
19691016
19351224
20050510
18900506
18911215
19940615
19620816
19820209
19711103
19680131
19900720
19801230
19240923
19250609
19521223
19630917
19700623
19710105
19050620
19340625
19881007
19710930
19921002
19791019
19880325
19840411
19890301
20030212
20220418
20220715
19940330
20141227
19860710
20011201
19701027
20000901
20060710
20100820
20240110
19850606
20170828
20220321
20230605
19831117
19870130
20020304
19820208
19950719
19821026
20150804
19820609
19950608
20020522
20200217
20230502
19800128
20000329
19800702
18961128
19930308
19921228
19980615
20020323
20041015
19860322
20051019
20040804
19961211
20030929
20210113
19871012
19860903
19970510
19950605
19921218
19921211
20080625
20220328
20020810
20010920
19200203
19440808
19490913
19661129
19370622
18840205
19750408
19220926
19441024
18980105
19590731
19790315
20000511
20050204
20041101
20200911
20190902
19821216
19830910
19730108
19771019
19760629
19870306
19741016
19820504
18660821
19800612
19871124
19820720
19980317
19590609
19500331
19050217
19500207
19320524
19070226
19580731
18981018
19180709
18960704
19800715
19880716
19810828
20060125
19861226
19930705
19930208
19780622
19951106
19990322
19771101
19950202
20110506
19900606
19741010
19740525
19741108
19850612
19520909
19540803
19621106
19491004
19281113
19670411
19221016
18991216
19030122
19270125
19820802
19760506
19770519
19681009
20220218
20230324
20231229
19660901
20030409
19920621
19890905
20141215
19900511
20060929
20030703
20120117
20181028
19761030
19960902
19761009
19461227
20021127
18940316
19290801
19990521
20081230
19890601
19600419
19610428
19700613
19310421
19710608
19501129
19310709
20040323
19711021
19690828
19740712
19810902
18670122
19440620
19100104
18860302
18850825
19160501
19310609
19321108
19800705
19241209
18981130
19711124
19790804
19580315
19280112
19961105
19180910
19130708
19760113
19860128
20020706
18900114
18880710
18820905
19060415
18831106
19341105
19710201
19080922
19711013
19250813
19520430
20130308
20240513
20060401
19720929
19721214
20010623
19760327
18910421
19431102
19480511
19680301
18841129
19670421
19750615
19430408
19250206
19481021
19301224
19850105
20031209
19940705
20210116
20051202
19960227
19960308
20010126
19310407
19590119
19101212
19200113
19810818
19780417
19851021
20090501
18421109
19471216
19481026
19030825
19990312
19851215
20140829
20190208
19140304
19700625
19680914
19800130
19840919
19990520
20150722
20190529
20010523
20090101
20100121
20040415
20080306
20061019
20040624
20110922
20180913
20040426
20170924
20210603
20240530
20151203
19810622
20131231
20240711
20231012
20160628
20190402
20131002
19860521
19901024
20020313
19720804
19790803
19971120
20031007
20180912
20080430
20090710
20221018
20170515
19800331
20010420
20210223
20240322
19950921
19961031
19830622
20090618
20200414
20171228
20150528
18840729
18780514
19540323
19680123
19520415
19711221
18591004
19620904
19540629
19031031
19221114
18930411
19700315
19661031
19640630
19750821
19890608
19950321
19950706
19680708
20001212
19900821
19300121
19310317
19360721
19711026
19210322
19770901
19590318
19640930
19790419
19840818
19761122
19790116
19831118
19680731
19841115
19970218
19801112
19900613
19710819
19710826
20240904
20160412
20131112
20210420
19920515
20140305
20040915
20031028
20080326
20051116
20031001
20041012
20101217
20120703
20120622
20190409
20230711
20210305
20020228
19880521
19940112
20040928
20111213
20210127
20160203
20211117
20230509
20221114
20240814
20240319
20120930
20000706
19920815
20190729
19940623
19720217
19730528
20010917
20030421
19810806
19780904
20220801
20030522
19791122
19900228
19990730
19941225
19671104
19741026
19791201
19910403
19931112
19910409
19701030
19851031
20170103
19980218
19920708
20050907
20090902
19951101
20020206
20201115
19780629
20111031
20210216
20000814
20240618
19840207
19920221
20240820
19860411
20170814
19830413
19910314
20011029
20070425
20201222
19610711
19130826
19221219
18870705
19590714
19550412
19710323
19710628
19160516
19750630
19840702
19801104
19711230
19730322
19771229
20010103
20220530
19960108
19801110
19620824
19860929
19860630
19941004
19250601
19330403
19750115
19970905
19870921
19391024
19441219
19220207
19510206
19300408
19440111
19360512
19051031
19020114
19450202
18940508
19210517
18810628
19780516
19640612
19140908
19410819
19810227
19910805
19910301
20020402
19840319
19840921
20011020
19780524
19840430
19920507
19730518
19731001
19540810
20061226
19150802
19281030
19650928
18951231
19080602
18990413
19020812
18810906
19371224
19681115
19780608
19631215
19550720
19010409
19200429
19800701
20000608
19890316
19990126
19960201
20021226
19970102
19900609
19971003
199806

2025-01-16 03:10:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 93
2025-01-16 03:10:41 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:42 - root - INFO - SQL:
SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" IS NOT NULL
   LIMIT 1000;
Results:
country_code
DO
UA
MW
HR
SA
MN
AU
CU
KR
RO
EP
ZA
JP
HU
DZ
WO
LT
PL
CR
EG
PA
RS
HK
TN
GT
US
DD
DE
PH
GR
IE
EA
ES
CS
MY
LV
TR
BG
AT
IL
TW
MT
MD
ZW
IT
CY
OA
MX
GE
EE
NO
CO
SI
AR
KE
FI
DK
SK
IS
CA
JO
MA
CZ
HN
SV
FR
SU
BR
ID
LU
NL
BE
NI
IN
EC
CL
PT
NZ
CH
PE
KZ
YU
ZM
RU
SE
AP
SM
ME
SG
GB
CN
MC
BA

2025-01-16 03:10:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 20
2025-01-16 03:10:43 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:44 - root - INFO - SQL:
SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Results:
country_code
HU
JP
AU
BE
RU
US
DE
NL
AT
IL
CA
PL
KR
IT
GB
EP
ZA
NO
CN
FR

2025-01-16 03:10:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 119
2025-01-16 03:10:45 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:46 - root - INFO - SQL:
SELECT DISTINCT "publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Results:
publication_number
AU-7115874-A
CN-108289407-A
CN-106973572-B
CA-3089518-A1
EP-3474651-C0
DE-102017102683-A1
KR-102484290-B1
US-159642-A
CN-108575125-A
CN-114916261-A
FR-508965-A
CA-2977468-A1
CN-116671357-A
CN-109392332-A
KR-102593393-B1
US-5845717-A
KR-101378314-B1
US-1412308-A
GB-2039201-B
KR-200149462-Y1
US-694931-A
IL-268624-A
CN-100366901-C
NL-7909063-A
GB-2598141-A
DE-1963184-U
DE-140654-C
CN-113761309-A
US-828171-A
GB-696973-A
CA-997451-A
KR-20020067218-A
NO-910950-L
EP-3586579-A1
KR-101169320-B1
US-10375891-B2
US-220177-A
US-3963079-A
CN-109005687-A
IT-8519066-A1
KR-200473688-Y1
CN-107072143-A
KR-100626846-B1
ZA-808003-B
US-3129772-A
US-1081539-A
US-2545590-A
US-1636048-A
US-376176-A
US-395573-A
US-231385-A
HU-E050035-T2
US-290366-A
US-2039702-A
KR-200386017-Y1
RU-191537-U1
US-5267618-A
NO-153631-B
BE-826346-A
PL-440426-A1
NL-183071-C
DE-8707829-U1
FR-2287837-B1
KR-20130063834-A
US-1545136-A
AT-A720679-A
BE-727862-A
US-469659-A
KR-20010029583-A
US-3054462-A
US-5669452-A
GB-2090713-B
DE-829523-C
US-5407014-A
FR-2943502-A1
US-1860534-A
GB-792883-A
KR-20070101567-A
BE-872468-A
JP-S6342702-Y2
JP-6998053-B2
US-2784656-A
AU-2016269849-A1
CN-114651538-A
US-2843032-A
KR-100191418-B1
JP-6910281-B2
CN-115362764-A
GB-2089182-B
KR-101593221-B1
CN-113796181-A
CN-107646212-A
US-130700-A
DE-463858-C
KR-20020000597-A
BE-1007083-A5
AU-2002301383-B2
CN-104040083-B
US-2597821-A
DE-102010019819-B4
CN-105325075-A
CA-2945250-A1
GB-436304-A
CA-2543900-A1
US-2888084-A
KR-900006618-B1
US-2019324472-A1
US-2031188-A
US-1093294-A
IT-1166526-B
FR-960102-A
KR-200487998-Y1
US-501724-A
IT-1064821-B
US-2024164239-A1
US-1471180-A
KR-200194260-Y1
US-530054-A
CN-107094377-A

2025-01-16 03:10:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:47 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-16 03:10:47 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:47 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:48 - root - INFO - SQL:
SELECT DISTINCT f.value:"name"::STRING AS "assignee_name",
                   f.value:"country"::STRING AS "assignee_country"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f
   LIMIT 1000;
Results:
Too long, hard cut:
assignee_name,assignee_country
FUJI KIKO KK,
SORMUNEN GRANT,
HYGIEIA INC,
SYSVIEW TECH INC,
YUAN KUN-I,
LIN YUNG-PING,
CHENG JUNG-FU,
FLOOD MICHAEL A,
SULLIVAN MATTHEW T,
LIU CHUNQING,
GAPWAVES AB,
YABUUCHI YASUHIRO,
CEDARS SINAI MEDICAL CENTER,
SENSORMATIC ELECTRONICS LLC,
UNITED MICROELECTRONICS CENTRE HONG KONG LTD,
UNIV OF WASHINGTON,
XWPHARMA LTD,
PECHINEY EMBALLAGE FLEXIBLE EU,
PAYRANGE INC,
POLYVISION CORP,
MICKELER SIEGFRIED,
CONSEJO NACIONAL DE INVESTIGACIONES CIENTIFICAS Y TECN CONICET,
MARS INC,
HRABE,
K NIHA MISS,
OLEJNIK VINCENT,
SUIKOH TOP LINE CO LTD,
ALFA LAVAL AB,
THOREL JEAN NOEL,
LIPTON ALLAN,
MORTON INT INC,
LEE JUNG SIK,
BB BIO CO LTD,
SCHUETZ GMBH MESSTECHNIK,
FLUCK ISTVANNE HORVATH KATALIN,
DAVID EVENWELL,
FLINNER JOHN,
RICHMOND THOMAS GORDON,
CIBA LTD,
JOHNS MANVILLE,
BURKETT SAMUEL E,
JONES BEYER ARTHUR,
FARES JAMES J,
HUNTINGTON JOSEPH D,
BOEHRINGER & SOEHNE GMBH,
VEEDER ROOT INC,
UNITED SHOE MACHINERY CO,
HOOVER BALL & BEARING CO,
BENY FRIEDRICH AUGUST,
CLIMAX ENGINEERING COMPANY,
BAERMANN MAX,
CHEM FAB VORMALS SANDOZ,
KOHAN DENSHI KOGYO,
ASTRA TECH AB,
AB VOLVO,
ELECTROLUX LTD,
SAMUEL WILLIAMS,
TAISEI SHIZAI KK,
TOSHIBA LIGHTING & TECHNOLOGY,
SONY ELECTRONICS INC,
GESTETNER MFG LTD,
KLEIN ERNEST,
DETROIT HARVESTER CO,
KIPENI SU A,
TORRENCE JAMES FREDERICK,
HERBERT HOLMES ROY,
BRUECHSEL HEINRICH,
OSBORN ALDEN E,
WESTINGHOUSE ELECTRIC & MFG CO,
ROSS ORRIN E,
WELDING RESEARCH INC,
MCFARLAND CLYDE L,
SHLESINGER JR BERNARD E,
CAWLEY ALOYSIUS J,
MICROSEAL CORP,
EMIL J GRICHNIK,
HARPER J RANSBURG COMPANY,
VACUUM OIL COMPANY INC,
BRITISH NUCLEAR DESIGN CONSTR,
JACOBSEN I,
BEKAERT SA NV,
NOKIA MOBILE PHONES LTD,
STANDUN,
MEYER JOHN,
JENSENS GEORG SOLVSMEDIE,
HARRIS GEORGE,
BODE & CO GEB,
HOSTETLER DEWEY L,
KOEHLER UTA,
KIM DEOK JUNG,
THYSSEN KRUPP AUTOMOTIVE AG,
SANT ANDREA NOVARA SPA,
MANZONI GIULIO,
OBJECTVIDEO INC,
ANGUS ANDREW,
UNIV SOGANG IND UNIV COOP FOUN,
NEC ELECTRONICS CORP,
MILNER SCOTT T,
ORTNER JR ROBERT C,
RAPPAPORT ALON,
AMERICAN EXPRESS TRAVEL RELATE,
NAKAI YOSHIHIRO,
TURZI ANTOINE,
TAYLOR DAVID STIRLING,
TARNOWSKI LYNN A,
JOHNSON DAVID A,
BRIZZIO GUILLERMO EVER,
SANDHILLS PUBLISHING CO,
UNIV SEOUL NAT R & DB FOUND,
HANWHA CORP,
RIBLETT EDWARD L,
OHTSUKA TOSHIHIKO,
LEVY SHMUEL,
ISHIGE HIROYUKI,
DRESSER RAND CO,
MAZDA MOTOR,
TFH PUBLICATIONS INC,
GUNAL OZLEM,
PUROHIT SIBASIS,
GILEAD SCIENCE INC,
GLASTON FINLAND OY,
CHINA NOVARTIS INSTITUTES FOR BIOMEDICAL RES,
NOVA RICHARD C,
CARBONCURE TECH INC,
UNIV KING ABDULLAH SCI & TECH,
FACEBOOK TECH LLC,
SADEGHI MOHAMMAD ALI,
ECOPURO LLC,
KITTY HAWK CORP,
DAIFUKU KK,
INSTYTUT MASZ PRZEPLYWOWYCH IM ROBERTA SZEWALSKIEGO POLSKIEJ AKADEMII NAUK,
CONNEC LTD,
NITTO SEIKI KK,
CHEMOCENTRYX INC,
GM GLOBAL TECH OPERATIONS INC,
CLAAS E SYSTEMS GMBH,
INNOVATIVE CONSTRUCTIONS AUSTRALIA PTY LTD,
LEAD OPTO TECH CO LTD,
CABKA GROUP GMBH,
IBM UK,
HOPE CITY,
CLARA FOODS CO,
Moehringer Palmwood GmbH,
UNIV RICE WILLIAM M,
HOHENTHANNER CLAUS-RUPERT,
PHOENIX AG,
BUCHLI JACOB,
ROLLMECH AUTOMOTIVE SANAYI VE TICARET ANONIM SIRKETI,
TEON THERAPEUTICS INC,
BAY WORX LABORATORIES LLC,
LAASER CRITICAL COMMUNICATIONS CORP,
SCHLUMBERGER HOLDINGS,
RAJAMANI VIGNESH,
MARSHALL SIONA JANE MS,
WEGMANN AUTOMOTIVE GMBH,
SKF KUGELLAGERFABRIKEN GMBH,
ELECTROFLO METERS CO LTD,
SIKA FINANZ AG,
BUSCH JAEGER DURENER METALL WE,
BRISTOL MYERS CO,
ILFORD LTD,
OMG ACQUISITION HOLDINGS II INC,
UNITED METAL HOSE COMPANY,
ANDERSON IRVIN M,
CHEMICOLLOID LAB,
VOEST AG,
IRIS DOROTHY MITCHELL,
DUFAYLITE DEV LTD,
ELEVATOR GMBH,
CHEMSTRAND CORP,
FANTAYE GIRUM,
IPEX TECH INC,
GLIDEWELL JAMES R DENTAL CERAMICS INC,
UNIV KENT STATE OHIO,
DING KUNLUN,
BETONSON B V,
CLAAS OHG,
CORDIS CORP,
MUHR & BENDER KG,
PETTE ANTONIO,
ANELT KALIBRA MILOSLAV,
GTP SCHAEFER GIESTECHNISCHE PR,
LEO PHARMA AS,
META SYSTEM SPA,
PRECISION BIOLOGICS INC,
GLOFISH LLC,
PANASONIC ECO SYS GUANGDONG CO,
TAICANG YUEBO ELECTRIC TECH CO LTD,
FINNKETJU INVEST OY,
EASY GREEN TECH S R L,
NUOVA CARPENTERIA ODOLESE S P A,
1/1TORAY IND INC,
VALQUA LTD,
LOPEZ GONZALEZ RODOLFO,
SEQUENT MEDICAL INC,
THYSSENKRUPP PRESTA STEERTEC,
LOGAN KAITLYN MARIE,
MERTENS ERWIN,
STIFTUNG A WEGENER INST POLAR,
Sparkfield GmbH,
YOUN JUNG-HOON,
CEBIX AB,
ESCARCEGA ANTHONY J,
INFOLENZ CORP,
DO TRI,
MODU LTD,
BABA HIROYUKI,
ZIEMAN JONATHAN J,
TAGA KAZUYA,
PIETSCH KAI-OVE,
VANTAGE SURGICAL SYSTEMS INC,
NELL PETER,
UNIV GEORGIA STATE RES FOUND INC,
CHEN SAMUEL,
BMIC LLC,
KLAUKE GMBH GUSTAV,
PPL CORP,
TECH PHARMACY SERVICES LLC,
VISTERRA INC,
RADIANT OPTO ELECTRONICS SUZHOU CO LTD,
VERDANT ROBOTICS INC,
INST DE CERCETARI PENTRU COMPO,
ALLIED CORP,
PGXHEALTH LLC,
LI HUSHENG,
WEIDMUELLER INTERFACE GMBH & CO KG,
NINA MEDICAL LTD,
ONCOTHERAPY SCIENCE INC,
SAGEM,
LWB REFRACTORIES GMBH,
ANELLO ANGELO,
YONGKANG FEISHENG INTELLIGENT TECHNOLOGY CO LTD,
TENOVA SPA,
SAMYANG CORP,
LENNOSTI,
VRNII KONSERVNOJ I OVOSHCHESUS,
FOKKER ELMO B V,
GARLAND COMMERCIAL RANGES LTD,
HERMELING KATHARINA MAG,
CHARONNAT MARCEL,
MELLO C,
INFINITESIMA LTD,
KOBRA FORMEN GMBH,
TIEMANN JOS

2025-01-16 03:10:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:10:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:10:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:10:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 118
2025-01-16 03:10:49 - snowflake.connector.connection - INFO - closed
2025-01-16 03:10:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:10:50 - root - INFO - SQL:
SELECT DISTINCT "publication_date"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c
    WHERE c.value:"code"::STRING LIKE 'A01B3%'
      AND "publication_date" IS NOT NULL
    LIMIT 1000;
Results:
publication_date
19860120
19910913
20140327
20220118
20190301
20191031
20060920
20211217
18720820
19231016
20221122
18831218
19360218
19841114
19620918
19750630
20190812
20071017
19131216
19850225
20160215
19020304
19580402
19880718
18750209
19820922
19580715
18920223
20190813
20020822
18790930
20180118
20230104
20210728
20220624
19931207
20130617
19900915
20071011
19320531
19990615
19500413
20170818
20200101
20160217
20050519
20190222
19820611
19820331
20220819
20180411
20080206
20231025
19970923
20170829
19981208
0
18890101
18800817
19280803
20230607
19870917
18880110
19520520
20220223
20190801
19760115
19760615
19530909
19270719
19201028
18930718
19060807
19801215
18941127
19950418
19690716
19790601
20170825
20020105
20170423
20140718
20180928
20201130
19640421
20180717
19870506
19860710
19840919
20000901
20180202
19950307
19250707
19140414
20211207
19360505
20180504
19570312
20230901
20010406
19881108
19220411
19670629
20230828
20191024
19760921
20050607
20101001
20140918
19510320
20120730
20181218
20240523
19800620
19590526
19351009
20180816
19520128

2025-01-16 03:10:50 - root - INFO - itercount: 0
2025-01-16 03:10:50 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
DDL describes table information.
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
Sure, let's start by identifying the relevant tables, columns, and potential usages:

---

**Relevant Tables and Columns:**

- **Table:** `PATENTS.PATENTS.PUBLICATIONS`

  - **"cpc"**: Used to filter applications classified under CPC code **A01B3**.
    - **Potential Usage:** Extract CPC codes to identify relevant patent applications.

  - **"assignee_harmonized"**: Contains assignee information.
    - **Potential Usage:** Extract assignee names for counting and analysis.

  - **"publication_date"**: Date when the patent application was published.
    - **Potential Usage:** Determine the year of publication to find peak application years.

  - **"country_code"**: Country code of the patent application.
    - **Potential Usage:** Identify the country with the most applications for each assignee.

  - **"application_number"** / **"publication_number"**: Unique identifiers for applications.
    - **Potential Usage:** Count the total number of applications.

---

**Conditions That May Be Used:**

- **Filtering by CPC Code:**
  - Condition: `c.value:"code"::STRING LIKE 'A01B3%'`
  - Purpose: Select only the applications classified under CPC code **A01B3**.

- **Handling VARIANT (JSON) Columns:**
  - Use `LATERAL FLATTEN` to extract data from `VARIANT` columns like `"cpc"` and `"assignee_harmonized"`.

- **Filtering Non-Null Values:**
  - Conditions like `"publication_date" IS NOT NULL` to ensure data completeness.

---

**Sample SQL Queries:**

Here are 10 simple, independent SQL queries to explore the data:

1. **Retrieve Distinct CPC Codes:**

   ```sql
   SELECT DISTINCT f.value:"code"::STRING AS "cpc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   LIMIT 1000;
   ```

2. **Retrieve CPC Codes Starting with 'A01B3':**

   ```sql
   SELECT DISTINCT f.value:"code"::STRING AS "cpc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   WHERE f.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
   ```

3. **Retrieve Assignee Names:**

   ```sql
   SELECT DISTINCT f.value:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f
   LIMIT 1000;
   ```

4. **Retrieve Assignee Names for CPC 'A01B3':**

   ```sql
   SELECT DISTINCT f.value:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
   ```

5. **Retrieve Publication Dates:**

   ```sql
   SELECT DISTINCT "publication_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "publication_date" IS NOT NULL
   LIMIT 1000;
   ```

6. **Retrieve Country Codes:**

   ```sql
   SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" IS NOT NULL
   LIMIT 1000;
   ```

7. **Retrieve Country Codes for CPC 'A01B3':**

   ```sql
   SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
   ```

8. **Retrieve Publication Numbers for CPC 'A01B3':**

   ```sql
   SELECT DISTINCT "publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
   ```

9. **Retrieve Assignee Names with Their Countries:**

   ```sql
   SELECT DISTINCT f.value:"name"::STRING AS "assignee_name",
                   f.value:"country"::STRING AS "assignee_country"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f
   LIMIT 1000;
   ```

10. **Retrieve Publication Dates for CPC 'A01B3':**

    ```sql
    SELECT DISTINCT "publication_date"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c
    WHERE c.value:"code"::STRING LIKE 'A01B3%'
      AND "publication_date" IS NOT NULL
    LIMIT 1000;
    ```

---

These queries help to:

- Understand the structure and content of the `"cpc"` and `"assignee_harmonized"` columns.
- Identify how CPC codes are represented and how to filter for a specific class (`A01B3`).
- Extract assignee names for further analysis.
- Explore publication dates and country codes related to the applications.
- Prepare for aggregations and counts needed to identify the top assignees, peak years, and country codes.

*Note:* All column names are enclosed in double quotations as per your instructions. The queries are designed to be simple and independent, focusing on retrieving and understanding the necessary data for the analysis.Query:
SELECT DISTINCT f.value:"code"::STRING AS "cpc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   LIMIT 1000;
Answer:
Too long, hard cut:
cpc_code
H05K2203/1327
H04B1/0057
G06T19/006
H01L21/50
B32B27/308
B32B27/32
C09D7/65
C01B9/04
H01L21/76849
A61G13/02
G06K9/00369
G06F40/279
H04B7/086
B32B37/12
G01N15/14
H04W72/542
A61K31/282
G01D11/245
G01D21/00
F16F9/19
H04W64/00
H01L45/08
H02J7/04
H01L21/823437
F41C23/04
F02D2250/36
C04B2111/40
F02B67/00
H01L24/19
C07F15/0093
G01N15/1459
G02B27/0172
F02M26/00
F24D2220/042
A61K2300/00
Y02P70/10
C23C18/24
Y02T70/10
C07K5/06034
F21V5/008
C07F15/025
A61K39/0017
A61B17/3468
A63C10/24
F16L3/1236
B29C70/003
H04M19/08
F22G7/14
C08F299/065
C09K5/063
B82Y40/00
H01L21/3065
H04N2201/3278
C09D11/17
H04L67/10
H04L41/22
H01M8/04671
B29C48/913
H05K7/20545
H04M3/42314
G01N33/74
C08G65/30
A01K2207/15
C08L77/06
C07F7/126
F24H9/02
G06Q50/02
H04N21/4147
H01M4/62
E05B17/0058
A61K31/439
A23K20/24
B60W2710/083
A47C1/032
B62D1/185
E02F9/2217
C22C21/08
B32B2307/746
G02B1/18
G06T2207/10088
A61L2/10
A61N5/0616
G06F2201/88
G06K9/2063
E04F13/06
H04N19/159
G06T9/004
G06F2009/4557
H04N19/114
A61M25/1027
C09D5/00
F05D2260/98
F02C7/266
G07C5/008
G09G2330/023
A61K31/065
A43B1/0009
A47J31/18
D04H1/587
A61B2017/07257
A61K2800/5426
B23K2103/02
B23K35/3053
G10L15/08
G06F19/3475
B01D61/10
H01L24/09
H03K3/84
G01K7/42
A61B17/0401
G06F9/3808
E21B43/084
C30B25/10
F04B1/12
H01L27/3272
F02B2053/005
C09J2489/00
A43B13/125
A23L19/00
G02B27/0093
B66D1/14
G06F1/1626
H01S3/076
H04L45/02
G03G15/5041
A61K31/195
G06Q30/0278
A61L27/50
H01M4/381
B21B45/004
A61H2201/0157
G11C29/52
A63F2300/63
G06Q30/0267
B01D53/268
G06T2207/20021
C30B25/18
E04H15/06
G16H20/40
G06F2203/04105
A23K40/30
B29C55/04
G01S2205/01
G06F16/43
B01J35/56
H02J50/20
H01L33/145
C12N15/1065
C12N2310/20
B01D53/263
F02N2200/022
H04B5/0087
B33Y50/00
D07B2201/2043
A61L29/14
A46B7/044
H02P7/29
E05B45/12
H04B17/382
A23L27/20
Y10T29/49885
A47C1/12
G02B2027/0165
A61B17/12109
F41H5/0471
C04B38/0022
B01D1/221
E06B9/171
H04N9/888
C07D231/14
B60G17/0152
B60G2202/42
A47C4/286
E01C19/176
F02M59/48
H01J2237/221
H02J7/0063
H01M16/00
C09J7/00
A61F5/56
C04B2201/10
B01D39/2017
B32B27/28
A61M1/3427
B63C11/18
G01N2223/6116
B41K1/58
B63B2704/00
B60Y2200/92
A63F2300/8047
G06T2207/20092
E01C15/00
C08F2/001
H10K59/129
H01L27/0292
A46B13/02
F16K15/18
C04B33/34
H04Q1/144
F04C2/344
D21D5/24
G06F17/30876
A61B2017/00353
B23K26/127
H03M13/2792
C04B35/6261
B63B13/02
A41C1/00
B01D2253/108
B23K2101/42
B60W10/10
H04J11/0093
B60L58/30
F23R3/286
G06V20/58
B32B2457/20
H04L69/04
G06F2203/04112
G02B5/3033
D02J1/08
G06F17/30138
G07F11/10
B03B4/005
G01J3/108
Y10T83/8716
F24F3/153
F23Q2/32
B44C5/0407
C08K3/24
B65D47/2037
H04L9/00
E06B9/15
E21B47/01
B29C2949/08
B67B7/44
F16H61/30
B29D22/00
B65H21/00
B23B27/22
B64C3/54
C07C323/44
F25D23/065
F01D5/025
F01N13/001
H01H67/06
B29C73/02
G06F16/2471
H02G15/013
A61K49/0036
B60L2240/545
H01L23/3675
C03B37/0124
C12N2500/02
A61M2037/0023
A61M2037/0046
B25J19/021
H04N19/85
G06F3/0655
C22C38/10
A63B69/0059
H04L12/1822
G01V2210/244
Y10T409/307672
B23K35/286
G01J3/04
B23K35/325
A61B2017/2904
A61B2090/037
A61K49/0065
H04B1/71632
G06F9/44505
B65G47/71
H01L29/7889
B60L3/0069
A61M2025/0226
C09J7/02
A61N1/36135
A61N1/37217
C10N2040/42
H01L33/486
B67D3/0029
A61B1/31
H01L33/10
Y10T137/8593
A61H2230/10
F16C2300/34
Y10T29/49032
B81B2201/042
C09J163/00
B60S1/3887
A63F13/56
G02F1/133317
B01J2219/0801
H03K17/693
A61K47/59
C04B35/63428
B27G19/04
C12Q2525/307
C07C213/06
A61C3/025
A61K51/1251
C08G64/22
A47B47/005
A61K36/233
G01J5/10
A61K36/232
B67D1/0009
B67D1/0412
B60P1/34
B65G1/0478
H04W36/0064
G06N3/067
A61F2/2466
A61L2/238
G06F18/217
H02H3/343
B01D2258/014
H03K5/135
H04L41/0816
H04L43/0811
F02D41/1462
H01L2924/20753
Y10T428/24702
F42C19/00
G11C2013/0092
A61B8/485
H02K1/187
F05D2240/303
F16H37/12
B23D45/048
Y10S901/36
H02M1/0054
H01S5/028
B29C2045/1741
H05K13/08
H03F3/20
G06F3/06
C08G59/621
H04N23/611
H02K3/345
F16H2025/2481
H01L43/10
H01L2224/05157
A61B5/4504
G02B6/06
H01L2224/03462
A61H2201/1436
C23F13/005
H05K3/426
F24C15/2035
Y02P30/00
H04W36/0016
A61M1/1524
H04K3/224
C01B3/42
G03G15/04054
A61M60/40
A61B2017/2906
H03K19/17764
F16L1/10
G06Q10/047
H04L12/2856
A61B2017/0464
G11B20/1879
G06F21/31
C08F251/02
A43B17/026
Y10T29/49989
B01D2256/10
B25B27/06
C09K9/02
G06T2207/10012
G08B13/1427
A61N1/378
G06T2207/30024
B65H2403/73
E05B77/38
B60W2556/65
G01S19/37
G02F1/133621
G06V40/197
H04N1/00708
G06N3/0418
G05D1/24
H01L21/187
H01L27/11514
H02K33/02
B65D25/108
Y10T83/155
A61K39/001103
H04L2012/5614
H05K2201/09736
A61B5/0836
F02M63/0078
B22D11/0406
A61K31/4172
H01L2224/82101
B65D5/241
B65D5/2019
H01L24/40
B65H2801/31
C21B2400/08
F04C18/16
C12Y302/01091
A61B8/5253
G01N21/8806
H10N70/884
C07F15/0046
C12Q1/04
F16F7/123
B01D2257/404
H04N9/3114
H04M1/0216
B60L2240/507
G02B5/3008
C08G75/045
A61M25/003
C08G63/00
C09J9/00
H01J37/32669
C04B2111/00767
F15B2211/265
G02B17/0812
G06F2200/1633
H01M50/533
G06F17/241
A63B45/00
F16C2316/10
H01M8/0606
A61F2002/91591
B65D2575/329
A61F2013/00246
B01D46/69
B32B2307/584
G16B20/10
H04N19/96
H01H13/81
C09D5/1668
F25C5/182
A61H2201/123
B24D3/002
C07F7/0838
C07D211/66
H04B1/18
A63B21/0407
H04W36/
Query:
SELECT DISTINCT f.value:"code"::STRING AS "cpc_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   WHERE f.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Answer:
cpc_code
A01B35/18
A01B3/32
A01B35/10
A01B3/10
A01B35/28
A01B35/08
A01B33/12
A01B33/025
A01B33/028
A01B35/12
A01B39/26
A01B33/082
A01B33/14
A01B3/24
A01B3/36
A01B33/142
A01B33/106
A01B33/024
A01B33/144
A01B33/00
A01B39/22
A01B3/08
A01B33/08
A01B35/26
A01B35/225
A01B33/10
A01B33/06
A01B39/14
A01B33/146
A01B3/18
A01B33/16
A01B33/087
A01B39/06
A01B3/12
A01B39/10
A01B33/02
A01B35/20
A01B39/18
A01B39/19
A01B39/00
A01B35/00
A01B39/16
A01B33/04
A01B3/464
A01B35/24
A01B33/021
A01B3/30
A01B37/00
A01B3/46
A01B31/00
A01B35/32
A01B33/065
A01B35/22
A01B3/26
A01B35/14
A01B39/20
A01B3/50
A01B35/06
A01B3/74
A01B39/085
A01B35/04
A01B3/54
A01B39/163
A01B3/28
A01B33/103
A01B35/16
Query:
SELECT DISTINCT f.value:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f
   LIMIT 1000;
Answer:
Too long, hard cut:
assignee_name
PREC BIOSCIENCES INC
STANLEY WORKS LTD
CAMURUS AB
WWT SPOLKA Z OGRANICZONA ODPOWIEDZIALNOSCIA
EISEN EIKO
WISTRON NEWEB CORP
UST INC
UNIV ANGERS
CHUNG CHI Y
ZHU MIN
SUMNER MICHAEL
BERNARD MARC R
HRA PHARMA LAB
GANZHOU HEMAY PHARMACEUTICAL CO
SURROZEN OPERATING INC
KIMBERLY CLARK CO
VIGIL NEUROSCIENCE INC
ROCKWOOL INT
OMNISYSTEM CO LTD
AGCO DO BRASIL SOLUCOES AGRICOLAS LTDA
KOREA INST OCEAN SCI & TECH
MATHUR BHAVNA
VARTIAINEN PANU
KAN GEORGE L
SUN HAO
KOO YEON KWAN
ADVANCED BIONICS LLC
MICROELECTRONICS TECH INC
MARTIN DOMINIC R
BRUKER BIOSPIN AG
SOROCO PRIVATE LTD
NIKE INC
Turner Tackle LLC
WAGNER JOACHIM
TOOLTECH LLC
ATOTECH DEUTSCHLAND GMBH
AJINOMOTO KK
HIKMET RIFAT A M
AUYOUNG ALVIN
CHEVRON ORONITE SAS
UNIV MACAU
H4X EU
FUNDACION INSTITUTO DE INVESTIG SANITARIA FUNDACION JIMENEZ DIAZ
COGNEX CORP
WIRTGEN GMBH
AUE TEXTILMASCHINENBAU GMBH
OTKRYTOE AKTSIONERNOE OBSHCHESTVO INFORMATSIONNYE TEKH I KOMMUNIKATSIONNYE SISTEMY
ACTION ELIZABETH
RATKAY ALECSEU
EXXON RESEARCH ENGINEERING CO
FOSTER WHEELER ENERGY CORP
LAESSER FRANZ AG
KORPORATSIJA MASTERNEHT AOZT
HOWELL THOMAS A
SHIM JAE J
MEGURO TAKESHI
ARNEY SHANE R
UBE MAT IND LTD
POORNACHANDRAN RAJESH
OOI TETSUYA
SCHUMACHER DONALD J
DECKARD CARL
TAPIA MARIO G
PEREGO ANDREA
KAWANA TAKAHIRO
SERVIER LAB
GRINKEVICH ALEKSANDR VASIL EVICH
DVOEGLAZOV ALEKSEJ IVANOVICH
ASEA AB
SCHAEFER ELEKTROTECHNIK U SONDERMASCHINEN GMBH
ZIMMERMANN GISELA
SHINDENGEN ELECTRIC MFG CO
ATATUERK UENIVERSITESI BILIMSEL ARASTIRMA PROJELERI BIRIMI
LYUBEZNOV VALERIJ KONSTANTINOVICH
KODAMA NOBUTAKA
GUOZHU YE
HINTERMAIER WOLFGANG
MAURER JOHN H
PICHER PATRICK
LAMBA DIGVIJAY SINGH
LÉONARD FRANÇOIS
CARUELLE JEAN-PIERRE
ST MICROELECTRONICS ROUSSET
TERMINATOR IP LTD
TOTALENERGIES CORBION BV
KAISER GYPSUM COMPANY INC
LISTON JAMES A TRUSTEE
SYLVESTER RICHARD
WITTENBERGE NAEHMASCH VEB
BORG HOLDING A G
WARNER LAMBERT TECH
ORTH JANOSNE
FAIL SAFE IND INC
HIAB AB
MOBIPAYPOINT LTD
HEWLETT PACKARD DEVELOPMENT CO LP
ROBOPAC SPA
ROCHE DIAGNOSTICS OPERATIONS INC
HEINRICH GEORG GMBH MASCHF
BioVersys AG
JANSMA MICHAEL
BIOTA EUROPE LTD
VICENTE JOSE GERMAN
CELLULAR RES INC
JANSSEN PHARMACEUTICALS INC
DARNELL WAYNE
TECHNION RES & DEV FOUNDATION
ANALOGIC CORP
WEIR MINERALS AUSTRALIA LTD
FORMLABS INC
SUBARU CORP
LUKITO HARSOYO
MEEKER DAVID E
LARYNGEAL MASK CO LTD
MOLYNEUX STEPHEN
JOHNSON & JOHNSON SURGICAL VISION INC
BERTHIEZ C N M P
BASF PLANT SCIENCE CO GMBH
CQLT SAARGUMMI TECH SARL
HEFEI MIDEA REFRIGERATOR CO
FERROLI SPA
STEFFENS RALF
ZHANG JINGLIN
XIAMEN CHANGELIGHT CO LTD
MURATA TOSHIKI
SUMITOMO METAL MINING CO
SOLINAS MEDICAL INC
RADIABEAM TECH LLC
Evol Science LLC
MARTINEZ CANALES MONICA LUCIA
WAVE OPTICS LTD
JIANGSU SHEMAR ELECTRIC CO LTD
KANG MIN SOO
LUEDTKE OLIVER
BUONO JUAN C MR
FARGO KENDALL M
KELLER IGOR
MONOPANEL SA
ROLLERBLADE INC
GALLER KURT
TOLEDO ERAN
EL TAHER TODD
ISHITANI TOMOYA
MATERIALS & ELECTROCHEMICAL RES CORP
TERATRON GMBH
EUROPOLES GMBH & CO KG
WHITE IAN D
GOTFRIED YECHIEL
KESSLER MANFRED
STAPP SOEREN
EUROCATENE SRL
SEOK TAEK O
WOO DAE ENGINEERING CONSULTANT CO LTD
ELIESON CHAIMSONOVITZ PROSPER
MARSHALL & ILSLEY BANK
JAMES B BLACKBURN
BERACA SABARA QUIMICOS E INGRE
SWEETSER BERT M
LELAND ELECTRIC CO
NIPPON KOGAKU KK
BOGIE N
KELVINATOR CORP
REDINGTON COUNTERS INC
DANFOSS AS
STOCK EQUIPMENT CO
BISSETT & SONS LTD J
TAITO CORP
GROSS ISAK
TELEX CORP THE
TURNER BROTHERS ASBEST
HITACHI SOFTWARE ENG
REMINGTON TYPEWRITER CO
PEUGEOT
STIRN ALBERT L
JANSSEN VACCINES & PREVENTION BV
WARREN FASTENER CORP
MUELLER JOHANN
WHEELABRATOR CORP
PACIFIC MILLS
CANADIAN SAFETY FUSE COMPANY L
CARTIER JOSEPH GIDEON
OMARK INDUSTRIES INC
STICKEL CHARLES E A
NORGREN CO C A
HOLDEN ARTEMAS F
ARMSTRONG WHITWORTH CO ENG
CEBAL
WEA MFG INC
WILLIAM R BECKER
SICARI R
PERES DALMO JOSE
ALFRED CARRINGTON KENNEDY
CARL WALTHER OHG
KIOXIA CORP
BATTELLE ENERGY ALLIANCE LLC
SOLID INC
TG3D STUDIO
LIXIL SUZUKI SHUTTER CORP
EMPRESSA NAC DE MINERIA ENAMI
VELCRO IP HOLDINGS LLC
MATSUMOTO AYAKA
LODZKA FAB MASZYN JEDWABNI
ALLEN GROUP
SANNER FRIEDR GMBH CO KG
SINGAPORE CHARTERED IND
BEHR GMBH & CO KG
SPATTI GIOVANNI
BOMBAY TEXTILE RES ASS BTRA
SUZUKI MASAMI
WOONGJIN CHEMICAL CO LTD
Convida Wireless LLC
HEATON JEREMIAH
SONOS INC
REMEDEE LABS
BYSTRONIC MASCH
AFP ADVANCED FOOD PRODUCTS LLC
CHR HANSEN AS
THEKKADATH GOVINDANUNNY
SHANGHAI GUIMU ROBOT CO LTD
DEUTSCHE REICHSBAHN
TELO GENOMICS HOLDINGS CORP
POTOMAC PHOTONICS INC
TRIGEM COMPUTER INC
PARK MAN KI
UNIV FLORIDA STATE
MUSIL FRANTISEK
NGUYEN THIEN NHON DIANA
METAL IND RES & DEV CT
DAIKIN FLUOROCHEMICALS CHINA CO LTD
HOWARD DANE
LEPPIN HANS
PEUCKERT KLAUS
KIRCHNER RUDI
MITSUMI ELECTRIC CO LTD
REXROTH INDRAMAT GMBH
DYNAVAX TECH CORP
PROGRESSIVE TOOL & IND CO
MUROTA WATARU
PITCHER CHARLES SPENCER
REVIVE ENVIRONMENTAL TECHNOLOGY LLC
DROSTE RENATE
VRACAR VIKTOR
THE REGENTS OF UNIV OF CALIFORNIA
GEISER TOBIAS
YANG BONG HYUN
MITSUBISHI HITACHI POWER SYSTEMS ENV SOLUTIONS LTD
UNIV OHIO STATE
JEONG DONG HUN
SANKEI YAKUHIN KK
TAIWAN SEMICONDUCTOR MFG
YEH CHIH-KANG
HILL CLYDE D
YANG CHENG-CHUAN

Query:
SELECT DISTINCT f.value:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Answer:
assignee_name
TRECKER FRANCIS J
KUHN SA
GEORGE A KELLY PLOW COMPANY
GUERBET FRANCOIS
JIM ALEX SMITH
BOTVID SETTERGREN ANDERS GOSTA
LEMKEN GMBH & CO KG
SIGFRID ANDERSON ANDERS
ZHANG LIJIN
NIEMEYER SOEHNE STAHL PFLUG
ARWAC LTD
WALLNER KLAUS
WILLIAM HENRY HONY FROST
ELEOS ROBOTICS INC
SJOEHOLMS MEKANISKA AB
SAMSUNG SDI CO LTD
GUIZHOU SPACEFLIGHT SMART AGRICULTURE LTD COMPANY
SAPHIR MASCHB GMBH
Liu Yueshang
GLASIER HAROLD H
AMAZONEN WERKE DREYER H
UNIV JIANGSU
QUINSTAR CORP
DAEHO FARMING MACHINERY CO LTD
SHEPPARD RICHARD H
CAMPBELL CLARENCE L
CHOATE STOREY NORMAN
ARTHUR BROOKS SPURR
LEINFELDER DIPL-LANDW HERMANN
KORSMEYER ERNEST H
MARTIN DOMINIC R
GERBER HUBERT
WANG XUEDONG
GERBER MAURICE
NEW ZEALAND INVENTIONS DEV
LG ELECTRONICS INC
EDWARDS JOHN W
EDMOND HEE
RICHARD CO
CHONGQING TIANJI IND CO LTD
PREC PLANTING LLC
AUGUST SETTERGREN OTTO GORAN
CHONGQING YUBAO AGRICULTURE EXPL CO LTD
MCKAY RALPH LTD
INT HARVESTER GREAT BRITAIN
BULLS CO LTD
TWOSE OF TIVERTON LTD
HUBEI SHUANGYU MACHINERY TECH CO LTD
FISHER VAN E
KUBOTA KK
CHRISTOPHER H R WOODWARD
HUBER FRANZ FERDINAND
UNIV HEILONGJIANG SCI & TECH
LEIJENAAR SYTZE
CNH IND AMERICA LLC
WALTER ROWAN JAMES
UNIV CHUNG ANG IND
KIM JAE KEUN
DAIYO TANGO CO LTD
SAMSUNG KWANGJU ELECTRONICS CO
WILLIAM DREFKE
SOUTHERN PLOW COMPANY
KIM BYUNG SUB
AMAZONEN-WERKE H DREYER GMBH & CO KG
TEXAS INDUSTRIES INC
HARRELL DANNY H
RUDOLPH HASSON PAUL
LIM HEON HO
HOLGER LETH
LELY NV C VAN DER
DEERE & CO
CHO SUNG GU
HUNAN BIOLOGICAL & ELECTROMECHANICAL POLYTECHNIC
CHRISTEN ARNE JENSEN
MARTIN CHARLES H
PATENT CONCERN NV
UNIV TONGJI
OTULAK PRZEMYSLAW PRO CNC
SALGE HENRY F
KIM JONG JIN
CARLUCCI JAMES J
EMPR IMPORT EXPORT Y DISTRIB P
ALLEN SAMUEL L
AGSOILWORKS TECH COMPANY LLC
DALIAN TIANZU ECOLOGICAL AGRICULTURE TECH DEVELOPMENT CO LTD
UNIV SYDNEY
BETEK GMBH & CO KG
Query:
SELECT DISTINCT "publication_date"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "publication_date" IS NOT NULL
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_date
19800815
20120215
20220202
20240306
19950120
19991125
20100422
20050414
20191219
20110206
20061012
20110331
20131020
19980107
20170718
19850329
20140820
19881125
20211026
20040825
20191127
19830406
20061003
19990401
20050614
20180620
20060222
20220718
20160302
20170909
20080905
20121004
19061225
19731016
19661206
19710629
18650613
19691016
19351224
20050510
18900506
18911215
19940615
19620816
19820209
19711103
19680131
19900720
19801230
19240923
19250609
19521223
19630917
19700623
19710105
19050620
19340625
19881007
19710930
19921002
19791019
19880325
19840411
19890301
20030212
20220418
20220715
19940330
20141227
19860710
20011201
19701027
20000901
20060710
20100820
20240110
19850606
20170828
20220321
20230605
19831117
19870130
20020304
19820208
19950719
19821026
20150804
19820609
19950608
20020522
20200217
20230502
19800128
20000329
19800702
18961128
19930308
19921228
19980615
20020323
20041015
19860322
20051019
20040804
19961211
20030929
20210113
19871012
19860903
19970510
19950605
19921218
19921211
20080625
20220328
20020810
20010920
19200203
19440808
19490913
19661129
19370622
18840205
19750408
19220926
19441024
18980105
19590731
19790315
20000511
20050204
20041101
20200911
20190902
19821216
19830910
19730108
19771019
19760629
19870306
19741016
19820504
18660821
19800612
19871124
19820720
19980317
19590609
19500331
19050217
19500207
19320524
19070226
19580731
18981018
19180709
18960704
19800715
19880716
19810828
20060125
19861226
19930705
19930208
19780622
19951106
19990322
19771101
19950202
20110506
19900606
19741010
19740525
19741108
19850612
19520909
19540803
19621106
19491004
19281113
19670411
19221016
18991216
19030122
19270125
19820802
19760506
19770519
19681009
20220218
20230324
20231229
19660901
20030409
19920621
19890905
20141215
19900511
20060929
20030703
20120117
20181028
19761030
19960902
19761009
19461227
20021127
18940316
19290801
19990521
20081230
19890601
19600419
19610428
19700613
19310421
19710608
19501129
19310709
20040323
19711021
19690828
19740712
19810902
18670122
19440620
19100104
18860302
18850825
19160501
19310609
19321108
19800705
19241209
18981130
19711124
19790804
19580315
19280112
19961105
19180910
19130708
19760113
19860128
20020706
18900114
18880710
18820905
19060415
18831106
19341105
19710201
19080922
19711013
19250813
19520430
20130308
20240513
20060401
19720929
19721214
20010623
19760327
18910421
19431102
19480511
19680301
18841129
19670421
19750615
19430408
19250206
19481021
19301224
19850105
20031209
19940705
20210116
20051202
19960227
19960308
20010126
19310407
19590119
19101212
19200113
19810818
19780417
19851021
20090501
18421109
19471216
19481026
19030825
19990312
19851215
20140829
20190208
19140304
19700625
19680914
19800130
19840919
19990520
20150722
20190529
20010523
20090101
20100121
20040415
20080306
20061019
20040624
20110922
20180913
20040426
20170924
20210603
20240530
20151203
19810622
20131231
20240711
20231012
20160628
20190402
20131002
19860521
19901024
20020313
19720804
19790803
19971120
20031007
20180912
20080430
20090710
20221018
20170515
19800331
20010420
20210223
20240322
19950921
19961031
19830622
20090618
20200414
20171228
20150528
18840729
18780514
19540323
19680123
19520415
19711221
18591004
19620904
19540629
19031031
19221114
18930411
19700315
19661031
19640630
19750821
19890608
19950321
19950706
19680708
20001212
19900821
19300121
19310317
19360721
19711026
19210322
19770901
19590318
19640930
19790419
19840818
19761122
19790116
19831118
19680731
19841115
19970218
19801112
19900613
19710819
19710826
20240904
20160412
20131112
20210420
19920515
20140305
20040915
20031028
20080326
20051116
20031001
20041012
20101217
20120703
20120622
20190409
20230711
20210305
20020228
19880521
19940112
20040928
20111213
20210127
20160203
20211117
20230509
20221114
20240814
20240319
20120930
20000706
19920815
20190729
19940623
19720217
19730528
20010917
20030421
19810806
19780904
20220801
20030522
19791122
19900228
19990730
19941225
19671104
19741026
19791201
19910403
19931112
19910409
19701030
19851031
20170103
19980218
19920708
20050907
20090902
19951101
20020206
20201115
19780629
20111031
20210216
20000814
20240618
19840207
19920221
20240820
19860411
20170814
19830413
19910314
20011029
20070425
20201222
19610711
19130826
19221219
18870705
19590714
19550412
19710323
19710628
19160516
19750630
19840702
19801104
19711230
19730322
19771229
20010103
20220530
19960108
19801110
19620824
19860929
19860630
19941004
19250601
19330403
19750115
19970905
19870921
19391024
19441219
19220207
19510206
19300408
19440111
19360512
19051031
19020114
19450202
18940508
19210517
18810628
19780516
19640612
19140908
19410819
19810227
19910805
19910301
20020402
19840319
19840921
20011020
19780524
19840430
19920507
19730518
19731001
19540810
20061226
19150802
19281030
19650928
18951231
19080602
18990413
19020812
18810906
19371224
19681115
19780608
19631215
19550720
19010409
19200429
19800701
20000608
19890316
19990126
19960201
20021226
19970102
19900609
19971003
199806
Query:
SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS
   WHERE "country_code" IS NOT NULL
   LIMIT 1000;
Answer:
country_code
DO
UA
MW
HR
SA
MN
AU
CU
KR
RO
EP
ZA
JP
HU
DZ
WO
LT
PL
CR
EG
PA
RS
HK
TN
GT
US
DD
DE
PH
GR
IE
EA
ES
CS
MY
LV
TR
BG
AT
IL
TW
MT
MD
ZW
IT
CY
OA
MX
GE
EE
NO
CO
SI
AR
KE
FI
DK
SK
IS
CA
JO
MA
CZ
HN
SV
FR
SU
BR
ID
LU
NL
BE
NI
IN
EC
CL
PT
NZ
CH
PE
KZ
YU
ZM
RU
SE
AP
SM
ME
SG
GB
CN
MC
BA
Query:
SELECT DISTINCT "country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Answer:
country_code
HU
JP
AU
BE
RU
US
DE
NL
AT
IL
CA
PL
KR
IT
GB
EP
ZA
NO
CN
FR
Query:
SELECT DISTINCT "publication_number"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") c
   WHERE c.value:"code"::STRING LIKE 'A01B3%'
   LIMIT 1000;
Answer:
publication_number
AU-7115874-A
CN-108289407-A
CN-106973572-B
CA-3089518-A1
EP-3474651-C0
DE-102017102683-A1
KR-102484290-B1
US-159642-A
CN-108575125-A
CN-114916261-A
FR-508965-A
CA-2977468-A1
CN-116671357-A
CN-109392332-A
KR-102593393-B1
US-5845717-A
KR-101378314-B1
US-1412308-A
GB-2039201-B
KR-200149462-Y1
US-694931-A
IL-268624-A
CN-100366901-C
NL-7909063-A
GB-2598141-A
DE-1963184-U
DE-140654-C
CN-113761309-A
US-828171-A
GB-696973-A
CA-997451-A
KR-20020067218-A
NO-910950-L
EP-3586579-A1
KR-101169320-B1
US-10375891-B2
US-220177-A
US-3963079-A
CN-109005687-A
IT-8519066-A1
KR-200473688-Y1
CN-107072143-A
KR-100626846-B1
ZA-808003-B
US-3129772-A
US-1081539-A
US-2545590-A
US-1636048-A
US-376176-A
US-395573-A
US-231385-A
HU-E050035-T2
US-290366-A
US-2039702-A
KR-200386017-Y1
RU-191537-U1
US-5267618-A
NO-153631-B
BE-826346-A
PL-440426-A1
NL-183071-C
DE-8707829-U1
FR-2287837-B1
KR-20130063834-A
US-1545136-A
AT-A720679-A
BE-727862-A
US-469659-A
KR-20010029583-A
US-3054462-A
US-5669452-A
GB-2090713-B
DE-829523-C
US-5407014-A
FR-2943502-A1
US-1860534-A
GB-792883-A
KR-20070101567-A
BE-872468-A
JP-S6342702-Y2
JP-6998053-B2
US-2784656-A
AU-2016269849-A1
CN-114651538-A
US-2843032-A
KR-100191418-B1
JP-6910281-B2
CN-115362764-A
GB-2089182-B
KR-101593221-B1
CN-113796181-A
CN-107646212-A
US-130700-A
DE-463858-C
KR-20020000597-A
BE-1007083-A5
AU-2002301383-B2
CN-104040083-B
US-2597821-A
DE-102010019819-B4
CN-105325075-A
CA-2945250-A1
GB-436304-A
CA-2543900-A1
US-2888084-A
KR-900006618-B1
US-2019324472-A1
US-2031188-A
US-1093294-A
IT-1166526-B
FR-960102-A
KR-200487998-Y1
US-501724-A
IT-1064821-B
US-2024164239-A1
US-1471180-A
KR-200194260-Y1
US-530054-A
CN-107094377-A
Query:
SELECT DISTINCT f.value:"name"::STRING AS "assignee_name",
                   f.value:"country"::STRING AS "assignee_country"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f
   LIMIT 1000;
Answer:
Too long, hard cut:
assignee_name,assignee_country
FUJI KIKO KK,
SORMUNEN GRANT,
HYGIEIA INC,
SYSVIEW TECH INC,
YUAN KUN-I,
LIN YUNG-PING,
CHENG JUNG-FU,
FLOOD MICHAEL A,
SULLIVAN MATTHEW T,
LIU CHUNQING,
GAPWAVES AB,
YABUUCHI YASUHIRO,
CEDARS SINAI MEDICAL CENTER,
SENSORMATIC ELECTRONICS LLC,
UNITED MICROELECTRONICS CENTRE HONG KONG LTD,
UNIV OF WASHINGTON,
XWPHARMA LTD,
PECHINEY EMBALLAGE FLEXIBLE EU,
PAYRANGE INC,
POLYVISION CORP,
MICKELER SIEGFRIED,
CONSEJO NACIONAL DE INVESTIGACIONES CIENTIFICAS Y TECN CONICET,
MARS INC,
HRABE,
K NIHA MISS,
OLEJNIK VINCENT,
SUIKOH TOP LINE CO LTD,
ALFA LAVAL AB,
THOREL JEAN NOEL,
LIPTON ALLAN,
MORTON INT INC,
LEE JUNG SIK,
BB BIO CO LTD,
SCHUETZ GMBH MESSTECHNIK,
FLUCK ISTVANNE HORVATH KATALIN,
DAVID EVENWELL,
FLINNER JOHN,
RICHMOND THOMAS GORDON,
CIBA LTD,
JOHNS MANVILLE,
BURKETT SAMUEL E,
JONES BEYER ARTHUR,
FARES JAMES J,
HUNTINGTON JOSEPH D,
BOEHRINGER & SOEHNE GMBH,
VEEDER ROOT INC,
UNITED SHOE MACHINERY CO,
HOOVER BALL & BEARING CO,
BENY FRIEDRICH AUGUST,
CLIMAX ENGINEERING COMPANY,
BAERMANN MAX,
CHEM FAB VORMALS SANDOZ,
KOHAN DENSHI KOGYO,
ASTRA TECH AB,
AB VOLVO,
ELECTROLUX LTD,
SAMUEL WILLIAMS,
TAISEI SHIZAI KK,
TOSHIBA LIGHTING & TECHNOLOGY,
SONY ELECTRONICS INC,
GESTETNER MFG LTD,
KLEIN ERNEST,
DETROIT HARVESTER CO,
KIPENI SU A,
TORRENCE JAMES FREDERICK,
HERBERT HOLMES ROY,
BRUECHSEL HEINRICH,
OSBORN ALDEN E,
WESTINGHOUSE ELECTRIC & MFG CO,
ROSS ORRIN E,
WELDING RESEARCH INC,
MCFARLAND CLYDE L,
SHLESINGER JR BERNARD E,
CAWLEY ALOYSIUS J,
MICROSEAL CORP,
EMIL J GRICHNIK,
HARPER J RANSBURG COMPANY,
VACUUM OIL COMPANY INC,
BRITISH NUCLEAR DESIGN CONSTR,
JACOBSEN I,
BEKAERT SA NV,
NOKIA MOBILE PHONES LTD,
STANDUN,
MEYER JOHN,
JENSENS GEORG SOLVSMEDIE,
HARRIS GEORGE,
BODE & CO GEB,
HOSTETLER DEWEY L,
KOEHLER UTA,
KIM DEOK JUNG,
THYSSEN KRUPP AUTOMOTIVE AG,
SANT ANDREA NOVARA SPA,
MANZONI GIULIO,
OBJECTVIDEO INC,
ANGUS ANDREW,
UNIV SOGANG IND UNIV COOP FOUN,
NEC ELECTRONICS CORP,
MILNER SCOTT T,
ORTNER JR ROBERT C,
RAPPAPORT ALON,
AMERICAN EXPRESS TRAVEL RELATE,
NAKAI YOSHIHIRO,
TURZI ANTOINE,
TAYLOR DAVID STIRLING,
TARNOWSKI LYNN A,
JOHNSON DAVID A,
BRIZZIO GUILLERMO EVER,
SANDHILLS PUBLISHING CO,
UNIV SEOUL NAT R & DB FOUND,
HANWHA CORP,
RIBLETT EDWARD L,
OHTSUKA TOSHIHIKO,
LEVY SHMUEL,
ISHIGE HIROYUKI,
DRESSER RAND CO,
MAZDA MOTOR,
TFH PUBLICATIONS INC,
GUNAL OZLEM,
PUROHIT SIBASIS,
GILEAD SCIENCE INC,
GLASTON FINLAND OY,
CHINA NOVARTIS INSTITUTES FOR BIOMEDICAL RES,
NOVA RICHARD C,
CARBONCURE TECH INC,
UNIV KING ABDULLAH SCI & TECH,
FACEBOOK TECH LLC,
SADEGHI MOHAMMAD ALI,
ECOPURO LLC,
KITTY HAWK CORP,
DAIFUKU KK,
INSTYTUT MASZ PRZEPLYWOWYCH IM ROBERTA SZEWALSKIEGO POLSKIEJ AKADEMII NAUK,
CONNEC LTD,
NITTO SEIKI KK,
CHEMOCENTRYX INC,
GM GLOBAL TECH OPERATIONS INC,
CLAAS E SYSTEMS GMBH,
INNOVATIVE CONSTRUCTIONS AUSTRALIA PTY LTD,
LEAD OPTO TECH CO LTD,
CABKA GROUP GMBH,
IBM UK,
HOPE CITY,
CLARA FOODS CO,
Moehringer Palmwood GmbH,
UNIV RICE WILLIAM M,
HOHENTHANNER CLAUS-RUPERT,
PHOENIX AG,
BUCHLI JACOB,
ROLLMECH AUTOMOTIVE SANAYI VE TICARET ANONIM SIRKETI,
TEON THERAPEUTICS INC,
BAY WORX LABORATORIES LLC,
LAASER CRITICAL COMMUNICATIONS CORP,
SCHLUMBERGER HOLDINGS,
RAJAMANI VIGNESH,
MARSHALL SIONA JANE MS,
WEGMANN AUTOMOTIVE GMBH,
SKF KUGELLAGERFABRIKEN GMBH,
ELECTROFLO METERS CO LTD,
SIKA FINANZ AG,
BUSCH JAEGER DURENER METALL WE,
BRISTOL MYERS CO,
ILFORD LTD,
OMG ACQUISITION HOLDINGS II INC,
UNITED METAL HOSE COMPANY,
ANDERSON IRVIN M,
CHEMICOLLOID LAB,
VOEST AG,
IRIS DOROTHY MITCHELL,
DUFAYLITE DEV LTD,
ELEVATOR GMBH,
CHEMSTRAND CORP,
FANTAYE GIRUM,
IPEX TECH INC,
GLIDEWELL JAMES R DENTAL CERAMICS INC,
UNIV KENT STATE OHIO,
DING KUNLUN,
BETONSON B V,
CLAAS OHG,
CORDIS CORP,
MUHR & BENDER KG,
PETTE ANTONIO,
ANELT KALIBRA MILOSLAV,
GTP SCHAEFER GIESTECHNISCHE PR,
LEO PHARMA AS,
META SYSTEM SPA,
PRECISION BIOLOGICS INC,
GLOFISH LLC,
PANASONIC ECO SYS GUANGDONG CO,
TAICANG YUEBO ELECTRIC TECH CO LTD,
FINNKETJU INVEST OY,
EASY GREEN TECH S R L,
NUOVA CARPENTERIA ODOLESE S P A,
1/1TORAY IND INC,
VALQUA LTD,
LOPEZ GONZALEZ RODOLFO,
SEQUENT MEDICAL INC,
THYSSENKRUPP PRESTA STEERTEC,
LOGAN KAITLYN MARIE,
MERTENS ERWIN,
STIFTUNG A WEGENER INST POLAR,
Sparkfield GmbH,
YOUN JUNG-HOON,
CEBIX AB,
ESCARCEGA ANTHONY J,
INFOLENZ CORP,
DO TRI,
MODU LTD,
BABA HIROYUKI,
ZIEMAN JONATHAN J,
TAGA KAZUYA,
PIETSCH KAI-OVE,
VANTAGE SURGICAL SYSTEMS INC,
NELL PETER,
UNIV GEORGIA STATE RES FOUND INC,
CHEN SAMUEL,
BMIC LLC,
KLAUKE GMBH GUSTAV,
PPL CORP,
TECH PHARMACY SERVICES LLC,
VISTERRA INC,
RADIANT OPTO ELECTRONICS SUZHOU CO LTD,
VERDANT ROBOTICS INC,
INST DE CERCETARI PENTRU COMPO,
ALLIED CORP,
PGXHEALTH LLC,
LI HUSHENG,
WEIDMUELLER INTERFACE GMBH & CO KG,
NINA MEDICAL LTD,
ONCOTHERAPY SCIENCE INC,
SAGEM,
LWB REFRACTORIES GMBH,
ANELLO ANGELO,
YONGKANG FEISHENG INTELLIGENT TECHNOLOGY CO LTD,
TENOVA SPA,
SAMYANG CORP,
LENNOSTI,
VRNII KONSERVNOJ I OVOSHCHESUS,
FOKKER ELMO B V,
GARLAND COMMERCIAL RANGES LTD,
HERMELING KATHARINA MAG,
CHARONNAT MARCEL,
MELLO C,
INFINITESIMA LTD,
KOBRA FORMEN GMBH,
TIEMANN JOS
Query:
SELECT DISTINCT "publication_date"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c
    WHERE c.value:"code"::STRING LIKE 'A01B3%'
      AND "publication_date" IS NOT NULL
    LIMIT 1000;
Answer:
publication_date
19860120
19910913
20140327
20220118
20190301
20191031
20060920
20211217
18720820
19231016
20221122
18831218
19360218
19841114
19620918
19750630
20190812
20071017
19131216
19850225
20160215
19020304
19580402
19880718
18750209
19820922
19580715
18920223
20190813
20020822
18790930
20180118
20230104
20210728
20220624
19931207
20130617
19900915
20071011
19320531
19990615
19500413
20170818
20200101
20160217
20050519
20190222
19820611
19820331
20220819
20180411
20080206
20231025
19970923
20170829
19981208
0
18890101
18800817
19280803
20230607
19870917
18880110
19520520
20220223
20190801
19760115
19760615
19530909
19270719
19201028
18930718
19060807
19801215
18941127
19950418
19690716
19790601
20170825
20020105
20170423
20140718
20180928
20201130
19640421
20180717
19870506
19860710
19840919
20000901
20180202
19950307
19250707
19140414
20211207
19360505
20180504
19570312
20230901
20010406
19881108
19220411
19670629
20230828
20191024
19760921
20050607
20101001
20140918
19510320
20120730
20181218
20240523
19800620
19590526
19351009
20180816
19520128
End Exploring Related Columns
Task: For patent class A01B3, I want to analyze the information of the top 3 assignees based on the total number of applications. Please provide the following five pieces of information: the name of this assignee,  total number of applications, the year with the most applications, the number of applications in that year, and the country code with the most applications during that year.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: Sure, here's the requested information in CSV format:

```csv
assignee_name,total_applications,year_with_most_applications,applications_in_that_year,country_code
Assignee A,total_applications_A:int,year_A:int,applications_in_year_A:int,country_code_A:str
Assignee B,total_applications_B:int,year_B:int,applications_in_year_B:int,country_code_B:str
Assignee C,total_applications_C:int,year_C:int,applications_in_year_C:int,country_code_C:str
```

**Brief Explanation:**

- **assignee_name**: The names of the top 3 assignees in patent class **A01B3**. Placeholder strings (`Assignee A`, `Assignee B`, `Assignee C`).
  
- **total_applications**: The total number of applications filed by each assignee in class **A01B3**. Integers representing the counts.

- **year_with_most_applications**: The year each assignee filed the most applications in class **A01B3**. Integers representing years (e.g., `2020`).

- **applications_in_that_year**: The number of applications filed by the assignee in that peak year. Integers representing counts.

- **country_code**: The country code where the assignee filed the most applications during that peak year. Placeholder strings representing country codes (e.g., `US`, `JP`, `CN`).

*Note:* The values are placeholders since actual data is not available. They indicate the expected data types and conditions for each field as per the task description..
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
Please refrain from adding any conditions that are not explicitly specified in the task.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
Be careful one country may have different names in different columns in a database.
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
Be careful of information in nested JSON columns. e.g.1. When it comes to active users, it refers to has engagement_time_msec parameter rather than directly counting users. So the right query is: SELECT DISTINCT USER_PSEUDO_ID FROM all_user_activity, LATERAL FLATTEN(input => event_params) AS flattened_params WHERE flattened_params.value:key = 'engagement_time_msec'
e.g. When it comes to top-selling product, you should pay attention to hits2.value:"eCommerceAction":"action_type"::INTEGER = 6 where 6 means sold product.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When counting for rows of a column, ensure they are distinct: SELECT COUNT(DISTINCT col_name) FROM table;
Keep all decimals to four decimal places.

2025-01-16 03:11:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 03:11:51 - root - INFO - ```sql
WITH base_data AS (
    SELECT
        t."publication_number",
        t."publication_date",
        t."country_code",
        f_assignee.value:"name"::STRING AS "assignee_name",
        f_cpc.value:"code"::STRING AS "cpc_code"
    FROM
        PATENTS.PATENTS.PUBLICATIONS t
    LEFT JOIN
        LATERAL FLATTEN(input => t."assignee_harmonized") f_assignee ON TRUE
    LEFT JOIN
        LATERAL FLATTEN(input => t."cpc") f_cpc ON TRUE
    WHERE
        f_cpc.value:"code"::STRING LIKE 'A01B3%'
        AND f_assignee.value:"name"::STRING IS NOT NULL
),
assignee_total AS (
    SELECT
        "assignee_name",
        COUNT(DISTINCT "publication_number") AS "total_applications"
    FROM
        base_data
    GROUP BY
        "assignee_name"
),
top_assignees AS (
    SELECT
        "assignee_name",
        "total_applications"
    FROM
        assignee_total
    ORDER BY
        "total_applications" DESC
    LIMIT 3
),
assignee_yearly AS (
    SELECT
        "assignee_name",
        EXTRACT(year FROM 
            CASE 
                WHEN "publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ("publication_date"/1000000)
                WHEN "publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ("publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ("publication_date")
            END
        ) AS "year",
        COUNT(DISTINCT "publication_number") AS "applications_in_year"
    FROM
        base_data
    WHERE
        "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY
        "assignee_name", "year"
),
assignee_peak_year AS (
    SELECT
        "assignee_name",
        "year" AS "year_with_most_applications",
        "applications_in_year",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "year" ASC) AS rn
    FROM
        assignee_yearly
    WHERE
        "year" IS NOT NULL
),
assignee_country_in_peak_year AS (
    SELECT
        bd."assignee_name",
        bd."country_code",
        COUNT(DISTINCT bd."publication_number") AS "country_applications"
    FROM
        base_data bd
    JOIN assignee_peak_year py ON bd."assignee_name" = py."assignee_name" AND py.rn = 1
    WHERE
        EXTRACT(year FROM 
            CASE 
                WHEN bd."publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000000)
                WHEN bd."publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ(bd."publication_date")
            END
        ) = py."year_with_most_applications"
    GROUP BY
        bd."assignee_name", bd."country_code"
),
assignee_peak_country AS (
    SELECT
        "assignee_name",
        "country_code",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "country_applications" DESC) AS rn
    FROM
        assignee_country_in_peak_year
)
SELECT
    ta."assignee_name",
    ta."total_applications",
    py."year_with_most_applications",
    py."applications_in_year",
    pc."country_code"
FROM
    top_assignees ta
JOIN
    assignee_peak_year py ON ta."assignee_name" = py."assignee_name" AND py.rn = 1
JOIN
    assignee_peak_country pc ON ta."assignee_name" = pc."assignee_name" AND pc.rn = 1
ORDER BY
    ta."total_applications" DESC;
```
2025-01-16 03:11:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:11:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:11:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:11:53 - snowflake.connector.connection - INFO - closed
2025-01-16 03:11:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:11:53 - root - INFO - itercount: 1
2025-01-16 03:11:53 - root - INFO - 000002 (0A000): 01b9bdbf-0004-7b0e-0001-11c300c9e1ba: Unsupported feature 'lateral table function called with OUTER JOIN syntax or a join predicate (ON clause)'.
2025-01-16 03:11:53 - root - INFO - Input sql:
WITH base_data AS (
    SELECT
        t."publication_number",
        t."publication_date",
        t."country_code",
        f_assignee.value:"name"::STRING AS "assignee_name",
        f_cpc.value:"code"::STRING AS "cpc_code"
    FROM
        PATENTS.PATENTS.PUBLICATIONS t
    LEFT JOIN
        LATERAL FLATTEN(input => t."assignee_harmonized") f_assignee ON TRUE
    LEFT JOIN
        LATERAL FLATTEN(input => t."cpc") f_cpc ON TRUE
    WHERE
        f_cpc.value:"code"::STRING LIKE 'A01B3%'
        AND f_assignee.value:"name"::STRING IS NOT NULL
),
assignee_total AS (
    SELECT
        "assignee_name",
        COUNT(DISTINCT "publication_number") AS "total_applications"
    FROM
        base_data
    GROUP BY
        "assignee_name"
),
top_assignees AS (
    SELECT
        "assignee_name",
        "total_applications"
    FROM
        assignee_total
    ORDER BY
        "total_applications" DESC
    LIMIT 3
),
assignee_yearly AS (
    SELECT
        "assignee_name",
        EXTRACT(year FROM 
            CASE 
                WHEN "publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ("publication_date"/1000000)
                WHEN "publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ("publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ("publication_date")
            END
        ) AS "year",
        COUNT(DISTINCT "publication_number") AS "applications_in_year"
    FROM
        base_data
    WHERE
        "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY
        "assignee_name", "year"
),
assignee_peak_year AS (
    SELECT
        "assignee_name",
        "year" AS "year_with_most_applications",
        "applications_in_year",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "year" ASC) AS rn
    FROM
        assignee_yearly
    WHERE
        "year" IS NOT NULL
),
assignee_country_in_peak_year AS (
    SELECT
        bd."assignee_name",
        bd."country_code",
        COUNT(DISTINCT bd."publication_number") AS "country_applications"
    FROM
        base_data bd
    JOIN assignee_peak_year py ON bd."assignee_name" = py."assignee_name" AND py.rn = 1
    WHERE
        EXTRACT(year FROM 
            CASE 
                WHEN bd."publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000000)
                WHEN bd."publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ(bd."publication_date")
            END
        ) = py."year_with_most_applications"
    GROUP BY
        bd."assignee_name", bd."country_code"
),
assignee_peak_country AS (
    SELECT
        "assignee_name",
        "country_code",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "country_applications" DESC) AS rn
    FROM
        assignee_country_in_peak_year
)
SELECT
    ta."assignee_name",
    ta."total_applications",
    py."year_with_most_applications",
    py."applications_in_year",
    pc."country_code"
FROM
    top_assignees ta
JOIN
    assignee_peak_year py ON ta."assignee_name" = py."assignee_name" AND py.rn = 1
JOIN
    assignee_peak_country pc ON ta."assignee_name" = pc."assignee_name" AND pc.rn = 1
ORDER BY
    ta."total_applications" DESC;
The error information is:
000002 (0A000): 01b9bdbf-0004-7b0e-0001-11c300c9e1ba: Unsupported feature 'lateral table function called with OUTER JOIN syntax or a join predicate (ON clause)'.
Please correct it and output only 1 complete SQL query.Be careful of using JOIN and LEFT JOIN. JOIN: The length of the result corresponds to the intersection of the two tables based on the ON condition. LEFT JOIN: The result will include all rows from the left table.
e.g. 1 Assess whether different genetic variants affect the log10-transformed TP53 expression levels in TCGA-BRCA samples using sequencing and mutation data: SELECT COUNT(*) FROM (SELECT * FROM expression_data e JOIN mutation_data m ON e."case_barcode" = m."case_barcode"); In this case we just need their intersection to count specific samples, so we shouldn't use LEFT JOIN.e.g. 2 List each musical style with the number of times it appears as a preference. You should write a query like: SELECT * FROM "MUSICAL_STYLES" s JOIN "MUSICAL_PREFERENCES" p ON s."StyleID" = p."StyleID", for the task is to get the intersection of style and preference.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'

2025-01-16 03:12:22 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 03:12:22 - root - INFO - ```sql
WITH base_data AS (
    SELECT
        t."publication_number",
        t."publication_date",
        t."country_code",
        f_assignee.value:"name"::STRING AS "assignee_name",
        f_cpc.value:"code"::STRING AS "cpc_code"
    FROM
        PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f_assignee,
        LATERAL FLATTEN(input => t."cpc") f_cpc
    WHERE
        f_cpc.value:"code"::STRING LIKE 'A01B3%'
        AND f_assignee.value:"name"::STRING IS NOT NULL
),
assignee_total AS (
    SELECT
        "assignee_name",
        COUNT(DISTINCT "publication_number") AS "total_applications"
    FROM
        base_data
    GROUP BY
        "assignee_name"
),
top_assignees AS (
    SELECT
        "assignee_name",
        "total_applications"
    FROM
        assignee_total
    ORDER BY
        "total_applications" DESC NULLS LAST
    LIMIT 3
),
assignee_yearly AS (
    SELECT
        "assignee_name",
        EXTRACT(year FROM 
            CASE 
                WHEN "publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ("publication_date"/1000000)
                WHEN "publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ("publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ("publication_date")
            END
        ) AS "year",
        COUNT(DISTINCT "publication_number") AS "applications_in_year"
    FROM
        base_data
    WHERE
        "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY
        "assignee_name", "year"
),
assignee_peak_year AS (
    SELECT
        "assignee_name",
        "year" AS "year_with_most_applications",
        "applications_in_year",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "year" ASC) AS rn
    FROM
        assignee_yearly
    WHERE
        "year" IS NOT NULL
),
assignee_country_in_peak_year AS (
    SELECT
        bd."assignee_name",
        bd."country_code",
        COUNT(DISTINCT bd."publication_number") AS "country_applications"
    FROM
        base_data bd
    JOIN assignee_peak_year py ON bd."assignee_name" = py."assignee_name" AND py.rn = 1
    WHERE
        EXTRACT(year FROM 
            CASE 
                WHEN bd."publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000000)
                WHEN bd."publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ(bd."publication_date")
            END
        ) = py."year_with_most_applications"
    GROUP BY
        bd."assignee_name", bd."country_code"
),
assignee_peak_country AS (
    SELECT
        "assignee_name",
        "country_code",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "country_applications" DESC NULLS LAST) AS rn
    FROM
        assignee_country_in_peak_year
)
SELECT
    ta."assignee_name",
    ta."total_applications",
    py."year_with_most_applications",
    py."applications_in_year",
    pc."country_code"
FROM
    top_assignees ta
JOIN
    assignee_peak_year py ON ta."assignee_name" = py."assignee_name" AND py.rn = 1
JOIN
    assignee_peak_country pc ON ta."assignee_name" = pc."assignee_name" AND pc.rn = 1
ORDER BY
    ta."total_applications" DESC NULLS LAST;
```
2025-01-16 03:12:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:12:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:12:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:12:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 03:12:24 - snowflake.connector.connection - INFO - closed
2025-01-16 03:12:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:12:24 - root - INFO - itercount: 2
2025-01-16 03:12:24 - root - INFO - 0
2025-01-16 03:12:24 - root - INFO - results: 
assignee_name,total_applications,year_with_most_applications,applications_in_year,country_code
LELY NV C VAN DER,5,1970,5,IT
DEERE & CO,4,1970,4,EP
AMAZONEN WERKE DREYER H,2,1970,2,GB


2025-01-16 03:12:24 - root - INFO - Please check the answer again by reviewing For patent class A01B3, I want to analyze the information of the top 3 assignees based on the total number of applications. Please provide the following five pieces of information: the name of this assignee,  total number of applications, the year with the most applications, the number of applications in that year, and the country code with the most applications during that year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Sure, here's the requested information in CSV format:

```csv
assignee_name,total_applications,year_with_most_applications,applications_in_that_year,country_code
Assignee A,total_applications_A:int,year_A:int,applications_in_year_A:int,country_code_A:str
Assignee B,total_applications_B:int,year_B:int,applications_in_year_B:int,country_code_B:str
Assignee C,total_applications_C:int,year_C:int,applications_in_year_C:int,country_code_C:str
```

**Brief Explanation:**

- **assignee_name**: The names of the top 3 assignees in patent class **A01B3**. Placeholder strings (`Assignee A`, `Assignee B`, `Assignee C`).
  
- **total_applications**: The total number of applications filed by each assignee in class **A01B3**. Integers representing the counts.

- **year_with_most_applications**: The year each assignee filed the most applications in class **A01B3**. Integers representing years (e.g., `2020`).

- **applications_in_that_year**: The number of applications filed by the assignee in that peak year. Integers representing counts.

- **country_code**: The country code where the assignee filed the most applications during that peak year. Placeholder strings representing country codes (e.g., `US`, `JP`, `CN`).

*Note:* The values are placeholders since actual data is not available. They indicate the expected data types and conditions for each field as per the task description. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
assignee_name,total_applications,year_with_most_applications,applications_in_year,country_code
LELY NV C VAN DER,5,1970,5,IT
DEERE & CO,4,1970,4,EP
AMAZONEN WERKE DREYER H,2,1970,2,GB
Current sql:
WITH base_data AS (
    SELECT
        t."publication_number",
        t."publication_date",
        t."country_code",
        f_assignee.value:"name"::STRING AS "assignee_name",
        f_cpc.value:"code"::STRING AS "cpc_code"
    FROM
        PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f_assignee,
        LATERAL FLATTEN(input => t."cpc") f_cpc
    WHERE
        f_cpc.value:"code"::STRING LIKE 'A01B3%'
        AND f_assignee.value:"name"::STRING IS NOT NULL
),
assignee_total AS (
    SELECT
        "assignee_name",
        COUNT(DISTINCT "publication_number") AS "total_applications"
    FROM
        base_data
    GROUP BY
        "assignee_name"
),
top_assignees AS (
    SELECT
        "assignee_name",
        "total_applications"
    FROM
        assignee_total
    ORDER BY
        "total_applications" DESC NULLS LAST
    LIMIT 3
),
assignee_yearly AS (
    SELECT
        "assignee_name",
        EXTRACT(year FROM 
            CASE 
                WHEN "publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ("publication_date"/1000000)
                WHEN "publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ("publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ("publication_date")
            END
        ) AS "year",
        COUNT(DISTINCT "publication_number") AS "applications_in_year"
    FROM
        base_data
    WHERE
        "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY
        "assignee_name", "year"
),
assignee_peak_year AS (
    SELECT
        "assignee_name",
        "year" AS "year_with_most_applications",
        "applications_in_year",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "year" ASC) AS rn
    FROM
        assignee_yearly
    WHERE
        "year" IS NOT NULL
),
assignee_country_in_peak_year AS (
    SELECT
        bd."assignee_name",
        bd."country_code",
        COUNT(DISTINCT bd."publication_number") AS "country_applications"
    FROM
        base_data bd
    JOIN assignee_peak_year py ON bd."assignee_name" = py."assignee_name" AND py.rn = 1
    WHERE
        EXTRACT(year FROM 
            CASE 
                WHEN bd."publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000000)
                WHEN bd."publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ(bd."publication_date")
            END
        ) = py."year_with_most_applications"
    GROUP BY
        bd."assignee_name", bd."country_code"
),
assignee_peak_country AS (
    SELECT
        "assignee_name",
        "country_code",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "country_applications" DESC NULLS LAST) AS rn
    FROM
        assignee_country_in_peak_year
)
SELECT
    ta."assignee_name",
    ta."total_applications",
    py."year_with_most_applications",
    py."applications_in_year",
    pc."country_code"
FROM
    top_assignees ta
JOIN
    assignee_peak_year py ON ta."assignee_name" = py."assignee_name" AND py.rn = 1
JOIN
    assignee_peak_country pc ON ta."assignee_name" = pc."assignee_name" AND pc.rn = 1
ORDER BY
    ta."total_applications" DESC NULLS LAST;When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'

2025-01-16 03:12:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 03:12:55 - root - INFO - ```sql
WITH base_data AS (
    SELECT
        t."publication_number",
        t."publication_date",
        t."country_code",
        f_assignee.value:"name"::STRING AS "assignee_name",
        f_cpc.value:"code"::STRING AS "cpc_code"
    FROM
        PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee_harmonized") f_assignee,
        LATERAL FLATTEN(input => t."cpc") f_cpc
    WHERE
        f_cpc.value:"code"::STRING LIKE 'A01B3%'
        AND f_assignee.value:"name"::STRING IS NOT NULL
),
assignee_total AS (
    SELECT
        "assignee_name",
        COUNT(DISTINCT "publication_number") AS "total_applications"
    FROM
        base_data
    GROUP BY
        "assignee_name"
),
top_assignees AS (
    SELECT
        "assignee_name",
        "total_applications"
    FROM
        assignee_total
    ORDER BY
        "total_applications" DESC NULLS LAST
    LIMIT 3
),
assignee_yearly AS (
    SELECT
        "assignee_name",
        EXTRACT(year FROM 
            CASE 
                WHEN "publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ("publication_date"/1000000)
                WHEN "publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ("publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ("publication_date")
            END
        ) AS "year",
        COUNT(DISTINCT "publication_number") AS "applications_in_year"
    FROM
        base_data
    WHERE
        "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY
        "assignee_name", "year"
),
assignee_peak_year AS (
    SELECT
        "assignee_name",
        "year" AS "year_with_most_applications",
        "applications_in_year",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "year" ASC) AS rn
    FROM
        assignee_yearly
    WHERE
        "year" IS NOT NULL
),
assignee_country_in_peak_year AS (
    SELECT
        bd."assignee_name",
        bd."country_code",
        COUNT(DISTINCT bd."publication_number") AS "country_applications"
    FROM
        base_data bd
    JOIN assignee_peak_year py ON bd."assignee_name" = py."assignee_name" AND py.rn = 1
    WHERE
        EXTRACT(year FROM 
            CASE 
                WHEN bd."publication_date" >= 1e15 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000000)
                WHEN bd."publication_date" >= 1e12 THEN TO_TIMESTAMP_NTZ(bd."publication_date"/1000)
                ELSE TO_TIMESTAMP_NTZ(bd."publication_date")
            END
        ) = py."year_with_most_applications"
    GROUP BY
        bd."assignee_name", bd."country_code"
),
assignee_peak_country AS (
    SELECT
        "assignee_name",
        "country_code",
        ROW_NUMBER() OVER (PARTITION BY "assignee_name" ORDER BY "country_applications" DESC NULLS LAST) AS rn
    FROM
        assignee_country_in_peak_year
)
SELECT
    ta."assignee_name",
    ta."total_applications",
    py."year_with_most_applications",
    py."applications_in_year",
    pc."country_code"
FROM
    top_assignees ta
JOIN
    assignee_peak_year py ON ta."assignee_name" = py."assignee_name" AND py.rn = 1
JOIN
    assignee_peak_country pc ON ta."assignee_name" = pc."assignee_name" AND pc.rn = 1
ORDER BY
    ta."total_applications" DESC NULLS LAST;
```
2025-01-16 03:12:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 03:12:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 03:12:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 03:12:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 03:12:57 - snowflake.connector.connection - INFO - closed
2025-01-16 03:12:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 03:12:57 - root - INFO - itercount: 3
2025-01-16 03:12:57 - root - INFO - 0
2025-01-16 03:12:57 - root - INFO - Total iteration counts: 3
