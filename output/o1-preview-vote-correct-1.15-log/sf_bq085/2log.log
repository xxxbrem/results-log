2025-01-16 02:08:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:10:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:10:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 253
2025-01-16 02:10:13 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:14 - root - INFO - SQL:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY";
Results:
country_region
US
Uzbekistan
Yemen
Zimbabwe
Andorra
Angola
Armenia
Benin
Botswana
Brazil
Cabo Verde
Cameroon
Chad
Chile
Comoros
Czechia
Fiji
Gabon
Greece
MS Zaandam
Mexico
Niger
Nigeria
Sao Tome and Principe
Congo (Kinshasa)
Costa Rica
Djibouti
Ghana
Ireland
Kenya
Kosovo
Liechtenstein
Morocco
Nepal
Nicaragua
Sudan
Tanzania
Jersey
Gibraltar
Zambia
Canada
Lithuania
Monaco
Croatia
Cuba
"Korea, South"
Lesotho
Madagascar
Sri Lanka
Sweden
Spain
Turkey
Tunisia
Nauru
Mainland China
"Bahamas, The"
Palestine
Mozambique
Thailand
Hong Kong
North Ireland
Vatican City
Channel Islands
United Arab Emirates
Winter Olympics 2022
Albania
Argentina
Bangladesh
Azerbaijan
Belize
Bosnia and Herzegovina
Brunei
Bulgaria
El Salvador
Indonesia
Italy
Malaysia
Saint Kitts and Nevis
China
Dominica
France
Guatemala
Honduras
Iceland
Jordan
Kazakhstan
Mali
Mauritius
Moldova
Romania
Senegal
Tajikistan
Rwanda
Saint Lucia
Palau
Tonga
Ivory Coast
Reunion
Estonia
Kyrgyzstan
Kuwait
Libya
Netherlands
Pakistan
Philippines
Portugal
San Marino
Seychelles
Togo
Germany
Serbia
Somalia
Summer Olympics 2020
Puerto Rico
"Gambia, The"
Trinidad and Tobago
Tuvalu
Aruba
Cape Verde
The Gambia
Republic of Ireland
Iran (Islamic Republic of)
Taipei and environs
Macao SAR
Saint Martin
Curacao
Vietnam
West Bank and Gaza
Afghanistan
Algeria
Austria
Bahamas
Australia
Barbados
Belarus
Belgium
Burkina Faso
Colombia
Finland
Guinea
Hungary
India
Luxembourg
Bhutan
Guinea-Bissau
Israel
Jamaica
Japan
Laos
Maldives
Namibia
New Zealand
Norway
Oman
Peru
Switzerland
Eswatini
Lebanon
Saint Vincent and the Grenadines
Others
Macau
Western Sahara
Republic of the Congo
Malta
Mauritania
Mongolia
Poland
Russia
Slovenia
Taiwan*
Timor-Leste
Dominican Republic
Gambia
North Macedonia
Antarctica
South Korea
Cruise Ship
Guadeloupe
Martinique
French Guiana
Greenland
occupied Palestinian territory
East Timor
Guam
The Bahamas
Saint Barthelemy
 Azerbaijan
St. Martin
Viet Nam
Cayman Islands
Uganda
Ukraine
United Kingdom
Uruguay
Vanuatu
Venezuela
Bahrain
Antigua and Barbuda
Bolivia
Burundi
Cambodia
Central African Republic
Cote d'Ivoire
Denmark
Diamond Princess
Ecuador
Guyana
Iran
Iraq
Latvia
Cyprus
Georgia
Liberia
Malawi
Marshall Islands
Panama
Paraguay
Qatar
South Sudan
Saudi Arabia
Singapore
Taiwan
UK
Mayotte
Faroe Islands
Burma
Equatorial Guinea
Eritrea
Egypt
Ethiopia
Grenada
Haiti
Holy See
Micronesia
Montenegro
Papua New Guinea
South Africa
Suriname
Syria
Samoa
Sierra Leone
Slovakia
Kiribati
"Korea, North"
Guernsey
Czech Republic
Congo (Brazzaville)
Solomon Islands
""
Republic of Korea
Hong Kong SAR
Russian Federation
Republic of Moldova

2025-01-16 02:10:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1143
2025-01-16 02:10:15 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:16 - root - INFO - SQL:
SELECT DISTINCT "date"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   ORDER BY "date";
Results:
Too long, hard cut:
date
2020-01-22
2020-01-23
2020-01-24
2020-01-25
2020-01-26
2020-01-27
2020-01-28
2020-01-29
2020-01-30
2020-01-31
2020-02-01
2020-02-02
2020-02-03
2020-02-04
2020-02-05
2020-02-06
2020-02-07
2020-02-08
2020-02-09
2020-02-10
2020-02-11
2020-02-12
2020-02-13
2020-02-14
2020-02-15
2020-02-16
2020-02-17
2020-02-18
2020-02-19
2020-02-20
2020-02-21
2020-02-22
2020-02-23
2020-02-24
2020-02-25
2020-02-26
2020-02-27
2020-02-28
2020-02-29
2020-03-01
2020-03-02
2020-03-03
2020-03-04
2020-03-05
2020-03-06
2020-03-07
2020-03-08
2020-03-09
2020-03-10
2020-03-11
2020-03-12
2020-03-13
2020-03-14
2020-03-15
2020-03-16
2020-03-17
2020-03-18
2020-03-19
2020-03-20
2020-03-21
2020-03-22
2020-03-23
2020-03-24
2020-03-25
2020-03-26
2020-03-27
2020-03-28
2020-03-29
2020-03-30
2020-03-31
2020-04-01
2020-04-02
2020-04-03
2020-04-04
2020-04-05
2020-04-06
2020-04-07
2020-04-08
2020-04-09
2020-04-10
2020-04-11
2020-04-12
2020-04-13
2020-04-14
2020-04-15
2020-04-16
2020-04-17
2020-04-18
2020-04-19
2020-04-20
2020-04-21
2020-04-22
2020-04-23
2020-04-24
2020-04-25
2020-04-26
2020-04-27
2020-04-28
2020-04-29
2020-04-30
2020-05-01
2020-05-02
2020-05-03
2020-05-04
2020-05-05
2020-05-06
2020-05-07
2020-05-08
2020-05-09
2020-05-10
2020-05-11
2020-05-12
2020-05-13
2020-05-14
2020-05-15
2020-05-16
2020-05-17
2020-05-18
2020-05-19
2020-05-20
2020-05-21
2020-05-22
2020-05-23
2020-05-24
2020-05-25
2020-05-26
2020-05-27
2020-05-28
2020-05-29
2020-05-30
2020-05-31
2020-06-01
2020-06-02
2020-06-03
2020-06-04
2020-06-05
2020-06-06
2020-06-07
2020-06-08
2020-06-09
2020-06-10
2020-06-11
2020-06-12
2020-06-13
2020-06-14
2020-06-15
2020-06-16
2020-06-17
2020-06-18
2020-06-19
2020-06-20
2020-06-21
2020-06-22
2020-06-23
2020-06-24
2020-06-25
2020-06-26
2020-06-27
2020-06-28
2020-06-29
2020-06-30
2020-07-01
2020-07-02
2020-07-03
2020-07-04
2020-07-05
2020-07-06
2020-07-07
2020-07-08
2020-07-09
2020-07-10
2020-07-11
2020-07-12
2020-07-13
2020-07-14
2020-07-15
2020-07-16
2020-07-17
2020-07-18
2020-07-19
2020-07-20
2020-07-21
2020-07-22
2020-07-23
2020-07-24
2020-07-25
2020-07-26
2020-07-27
2020-07-28
2020-07-29
2020-07-30
2020-07-31
2020-08-01
2020-08-02
2020-08-03
2020-08-04
2020-08-05
2020-08-06
2020-08-07
2020-08-08
2020-08-09
2020-08-10
2020-08-11
2020-08-12
2020-08-13
2020-08-14
2020-08-15
2020-08-16
2020-08-17
2020-08-18
2020-08-19
2020-08-20
2020-08-21
2020-08-22
2020-08-23
2020-08-24
2020-08-25
2020-08-26
2020-08-27
2020-08-28
2020-08-29
2020-08-30
2020-08-31
2020-09-01
2020-09-02
2020-09-03
2020-09-04
2020-09-05
2020-09-06
2020-09-07
2020-09-08
2020-09-09
2020-09-10
2020-09-11
2020-09-12
2020-09-13
2020-09-14
2020-09-15
2020-09-16
2020-09-17
2020-09-18
2020-09-19
2020-09-20
2020-09-21
2020-09-22
2020-09-23
2020-09-24
2020-09-25
2020-09-26
2020-09-27
2020-09-28
2020-09-29
2020-09-30
2020-10-01
2020-10-02
2020-10-03
2020-10-04
2020-10-05
2020-10-06
2020-10-07
2020-10-08
2020-10-09
2020-10-10
2020-10-11
2020-10-12
2020-10-13
2020-10-14
2020-10-15
2020-10-16
2020-10-17
2020-10-18
2020-10-19
2020-10-20
2020-10-21
2020-10-22
2020-10-23
2020-10-24
2020-10-25
2020-10-26
2020-10-27
2020-10-28
2020-10-29
2020-10-30
2020-10-31
2020-11-01
2020-11-02
2020-11-03
2020-11-04
2020-11-05
2020-11-06
2020-11-07
2020-11-08
2020-11-09
2020-11-10
2020-11-11
2020-11-12
2020-11-13
2020-11-14
2020-11-15
2020-11-16
2020-11-17
2020-11-18
2020-11-19
2020-11-20
2020-11-21
2020-11-22
2020-11-23
2020-11-24
2020-11-25
2020-11-26
2020-11-27
2020-11-28
2020-11-29
2020-11-30
2020-12-01
2020-12-02
2020-12-03
2020-12-04
2020-12-05
2020-12-06
2020-12-07
2020-12-08
2020-12-09
2020-12-10
2020-12-11
2020-12-12
2020-12-13
2020-12-14
2020-12-15
2020-12-16
2020-12-17
2020-12-18
2020-12-19
2020-12-20
2020-12-21
2020-12-22
2020-12-23
2020-12-24
2020-12-25
2020-12-26
2020-12-27
2020-12-28
2020-12-29
2020-12-30
2020-12-31
2021-01-01
2021-01-02
2021-01-03
2021-01-04
2021-01-05
2021-01-06
2021-01-07
2021-01-08
2021-01-09
2021-01-10
2021-01-11
2021-01-12
2021-01-13
2021-01-14
2021-01-15
2021-01-16
2021-01-17
2021-01-18
2021-01-19
2021-01-20
2021-01-21
2021-01-22
2021-01-23
2021-01-24
2021-01-25
2021-01-26
2021-01-27
2021-01-28
2021-01-29
2021-01-30
2021-01-31
2021-02-01
2021-02-02
2021-02-03
2021-02-04
2021-02-05
2021-02-06
2021-02-07
2021-02-08
2021-02-09
2021-02-10
2021-02-11
2021-02-12
2021-02-13
2021-02-14
2021-02-15
2021-02-16
2021-02-17
2021-02-18
2021-02-19
2021-02-20
2021-02-21
2021-02-22
2021-02-23
2021-02-24
2021-02-25
2021-02-26
2021-02-27
2021-02-28
2021-03-01
2021-03-02
2021-03-03
2021-03-04
2021-03-05
2021-03-06
2021-03-07
2021-03-08
2021-03-09
2021-03-10
2021-03-11
2021-03-12
2021-03-13
2021-03-14
2021-03-15
2021-03-16
2021-03-17
2021-03-18
2021-03-19
2021-03-20
2021-03-21
2021-03-22
2021-03-23
2021-03-24
2021-03-25
2021-03-26
2021-03-27
2021-03-28
2021-03-29
2021-03-30
2021-03-31
2021-04-01
2021-04-02
2021-04-03
2021-04-04
2021-04-05
2021-04-06
2021-04-07
2021-04-08
2021-04-09
2021-04-10
2021-04-11
2021-04-12
2021-04-13
2021-04-14
2021-04-15
2021-04-16
2021-04-17
2021-04-18
2021-04-19
2

2025-01-16 02:10:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3081
2025-01-16 02:10:17 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:18 - root - INFO - SQL:
SELECT "country_region", "confirmed"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20';
Results:
Too long, hard cut:
country_region,confirmed
US,17
US,114
US,52
US,598
US,1
US,54
US,12
US,46
US,915
US,1
US,34
US,7
US,83
US,100
US,3
US,85
US,41
US,4
US,61
US,70
US,1
US,218
US,50
US,1193
US,7
US,687
US,6
US,61
US,4
US,7
US,2
US,3
US,421
US,1
US,40
US,42
US,32
US,30
US,2
US,5
US,1042
US,327
US,4
US,79
US,84
US,6
US,15
US,1
US,7
US,14
US,10
US,17
US,155
US,0
US,6
US,134
US,16
US,8
US,1
US,19
US,35
US,23
US,1098
US,95
US,18
US,1
US,9
US,202
US,2
US,21
US,7
US,2
US,1536
US,7
US,12
US,2
US,593
US,38
US,1
US,2
US,512
US,4
US,5
US,2
US,12
US,68
US,13
US,146
US,12
US,6
US,2
US,3
US,5
US,410
US,1
US,44
US,1
US,23
US,24
US,1
US,12
US,28
US,69
US,10
US,19
US,17
US,20
US,117
US,130
US,4
US,1875
US,1511
US,7
US,4
US,15
US,8
US,0
US,1
US,22
US,4
US,3
US,632
US,6
US,6
US,6
US,93
US,26
US,4
US,140
US,7
US,255
US,44
US,6
US,3
US,0
US,5
US,57
US,85
US,3
US,21
US,55
US,15
US,225
US,36
US,1
US,298
US,1
US,1
US,2
US,15
US,76
US,18
US,5
US,26
US,126
US,73
US,5
US,15
US,37
US,62
US,4
US,23
US,4
US,8
US,3
US,28
US,4
US,314
US,4
US,13011
US,138
US,111
US,1945
US,387
US,566
US,10
US,164
US,24
US,1
US,1015
US,32
US,203
US,66
US,3
US,1
US,1
US,3
US,259
US,6
US,2
US,476
US,14
US,5
US,0
US,5
US,10
US,22
US,46
US,24
US,85
US,3
US,4
US,4
US,4
US,24
US,3
US,33
US,154
US,6
US,81
US,94
US,2
US,1
US,233
US,24
US,352
US,0
US,7
US,7
US,57
US,1
US,1
US,29
US,13
US,7
US,42
US,25
US,7
US,37
US,40
US,20
US,1
US,315
US,170
US,1
US,6
US,28
US,218
US,1731
US,67
US,1
US,4
US,3
US,9
US,23
US,199
US,101
US,4078
US,14
US,7
US,9
US,20
US,13
US,285
US,0
US,36
US,12
US,35
US,5
US,11
US,32
US,12
US,26
US,1886
US,2
US,5
US,55
US,4
US,33
US,30
US,11
US,47
US,8
US,48
US,70
US,2
US,63
US,9
US,1663
US,9
US,1
US,14
US,1
US,12
US,72
US,24
US,1
US,180
US,161
US,16
US,0
US,80
US,212
US,34
US,1276
US,52
US,12
US,324
US,11
US,15
US,2
US,23
US,8
US,12
US,80
US,6
US,61
US,1
US,148
US,42
US,6
US,21
US,1
US,21
US,21
US,6
US,114
US,1
US,19
US,27
US,33
US,2255
US,3
US,1
US,298
US,6
US,58
US,13
US,9
US,13
US,75
US,7
US,8
US,187
US,36
US,212
US,6
US,144
US,4
US,1
US,37
US,39
US,14
US,2
US,305
US,6
US,7
US,1
US,2
US,335
US,14
US,30
US,16
US,15
US,3
US,1
US,28
US,4
US,3
US,1
US,5
US,24
US,14
US,13
US,1
US,87
US,1
US,22
US,4
US,53
US,4
US,246
US,11
US,10
US,11
US,8
US,24
US,43
US,23
US,1
US,34
US,36
US,134
US,26
US,5
US,0
US,17
US,73
US,14
US,38
US,257
US,35
US,95
US,8
US,4
US,392
US,11
US,4
US,391
US,12
US,139
US,8
US,41
US,6
US,1
US,185
US,127
US,7
US,9
US,3
US,25
US,21
US,22
US,14
US,75
US,73
US,78
US,12
US,317
US,7
US,16
US,24
US,14
US,10
US,1
US,166
US,30
US,915
US,25
US,8
US,36
US,331
US,4
US,3
US,45
US,7
US,1
US,43
US,2
US,1
US,20
US,7
US,385
US,17
US,13
US,3
US,6
US,27
US,79
US,19
US,3
US,33
US,86
US,171
US,50
US,10
US,5
US,14
US,9
US,120
US,18
US,27
US,4
US,177
US,18
US,1
US,2998
US,26
US,1
US,296
US,16
US,24
US,114
US,2
US,29
US,6
US,6
US,19
US,1
US,249
US,20
US,1
US,20
US,3
US,5
US,1
US,62
US,26
US,59
US,4
US,5
US,5
US,5
US,3
US,540
US,7
US,11
US,11
US,3
US,12
US,71
US,72
US,8
US,44
US,324
US,7
US,45
US,19
US,42
US,2
US,104
US,11
US,51
US,26
US,11
US,3
US,49
US,1196
US,28
US,11
US,337
US,13
US,64
US,83
US,20
US,47
US,16
US,46
US,16
US,5
US,5
US,23
US,470
US,527
US,26
US,8
US,145
US,5
US,40
US,116
US,111
US,14
US,208
US,1
US,27
US,182
US,59
US,3
US,43
US,71
US,4
US,1
US,26
US,9
US,707
US,9
US,5
US,13
US,22101
US,4
US,4
US,2
US,1
US,23
US,46
US,1
US,25
US,75
US,16
US,3
US,5
US,6
US,24
US,33
US,1
US,169
US,1
US,32
US,8
US,2
US,44
US,2
US,36
US,4
US,14
US,4
US,13
US,6
US,6
US,29
US,6
US,37
US,16
US,3
US,68
US,6
US,125
US,142
US,3
US,6
US,1
US,4
US,1
US,8
US,20
US,2
US,44
US,51
US,2
US,3
US,380
US,338
US,113
US,186
US,58
US,10
US,2
US,3
US,10
US,4
US,2
US,2
US,20
US,10
US,1577
US,10
US,124
US,51
US,21
US,3
US,26
US,1
US,52
US,2
US,2512
US,364
US,28
US,15
US,57
US,69
US,386
US,94
US,1675
US,23
US,34
US,130
US,2
US,242
US,3
US,45
US,172
US,13
US,0
US,158
US,1
US,46
US,1521
US,55
US,13
US,3
US,12
US,24
US,238
US,13
US,12
US,68
US,61
US,168
US,4
US,3
US,15
US,2
US,114
US,2
US,49
US,122
US,86
US,2545
US,22
US,13
US,1
US,593
US,1784
US,13
US,64
US,7
US,1
US,2
US,1
US,0
US,1
US,1
US,3
US,46
US,22
US,1
US,8
US,2927
US,1
US,4
US,1
US,19
US,18
US,18
US,19
US,73
US,1
US,23
US,71
US,9
US,23
US,88
US,1436
US,368
US,243
US,12
US,43
US,2
US,291
US,15
US,23
US,32
US,8
US,6
US,1761
US,16
US,46
US,23
US,19
US,10
US,9
US,26
US,435
US,2284
US,896
US,1
US,28
US,485
US,173
US,1534
US,1
US,95
US,3
US,90
US,22
US,4
US,58
US,10
US,1
US,58
US,12
US,7
US,1
US,27
US,4
US,36
US,731
US,531
US,23
US,7
US,2
US,164
US,12
US,8
US,90
US,69
US,22
US,14
US,21
US,1
US,11
US,13
US,2192
US,37
US,60
US,16
US,315
US,5153
US,10729
US,20
US,2
US,2
US,100
US,43
US,3
US,79
US,1925
US,21
US,8320
US,99
US,25
US,1
US,1
US,24
US,19
US,8
US,4
US,1
US,62
US,41
US,3
US,143
US,15
US,22
US,6
US,219
US,13
US,67
US,46
US,15
US,5
US,55
US,4
US,1
US,11
US,41
US,76
US,37
US,2
US,153
US,2
US,126
US,142
US,4
US,2
US,1
US,68
US,65
US,6
US,180
US,7
US,147
US,211
US,126
US,783
US,1
US,8
US,18
US,1
US,2
US,12
US,5
US,90
US,1
US,12
US,13
US,83
US,13
US,181


2025-01-16 02:10:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:19 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:10:54 - root - INFO - Apologies for the error in the SQL query. There was a mismatched quotation mark in the date condition, and the country name `'United States'` is represented as `'US'` in the `"country_region"` column. Here's the corrected SQL query:

```sql
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY "country_region";
```

In this query:

- Corrected the date condition by matching the single quotation marks around `'2020-04-20'`.
- Updated `'United States'` to `'US'` to match the values in the `"country_region"` column.
- Used `SUM("confirmed")` and `GROUP BY "country_region"` to aggregate the total confirmed cases per country, as there may be multiple records per country.

To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the specified countries, here is the data in the requested format:

```csv
country,total_confirmed_cases,cases_per_100000
US,num:int,num:float
France,num:int,num:float
China,num:int,num:float
Italy,num:int,num:float
Spain,num:int,num:float
Germany,num:int,num:float
Iran,num:int,num:float
```

**Explanation:**

- **country**: The name of the country.
- **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
- **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population.

**Note:** The `cases_per_100000` is calculated using the formula:

```
cases_per_100000 = (total_confirmed_cases / population_2020) * 100,000
```

Since the actual numerical values and population data are not provided in the task description, placeholders are used to indicate the expected data types:

- `num:int` indicates an integer value representing the case count.
- `num:float` indicates a floating-point number representing cases per 100,000 people.
2025-01-16 02:10:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 02:10:55 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:56 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY "country_region";
Results:
country_region,total_confirmed_cases
US,784326
Spain,200210
China,83817
France,156480
Germany,147065
Italy,181228
Iran,83505

2025-01-16 02:10:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-16 02:10:57 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:58 - root - INFO - SQL:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "country_region" LIKE '%United%';
Results:
country_region
United Arab Emirates
United Kingdom

2025-01-16 02:10:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:10:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 222
2025-01-16 02:10:59 - snowflake.connector.connection - INFO - closed
2025-01-16 02:10:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:10:59 - root - INFO - SQL:
SELECT DISTINCT "indicator_code", "indicator_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" LIKE '%population%';
Results:
Too long, hard cut:
indicator_code,indicator_name
SH.STA.SUIC.FE.P5,"Suicide mortality rate, female (per 100,000 female population)"
SL.EMP.TOTL.SP.NE.ZS,"Employment to population ratio, 15+, total (%) (national estimate)"
SP.POP.0014.TO.ZS,Population ages 0-14 (% of total population)
EG.ELC.ACCS.UR.ZS,"Access to electricity, urban (% of urban population)"
SP.POP.0014.FE.ZS,"Population ages 0-14, female (% of female population)"
EN.POP.EL5M.RU.ZS,Rural population living in areas where elevation is below 5 meters (% of total population)
per_sa_allsa.cov_q1_tot,Coverage of social safety net programs in poorest quintile (% of population)
SP.POP.0014.MA.ZS,"Population ages 0-14, male (% of male population)"
SP.POP.3539.MA.5Y,"Population ages 35-39, male (% of male population)"
SL.TLF.ADVN.MA.ZS,"Labor force with advanced education, male (% of male working-age population with advanced education)"
SL.TLF.BASC.FE.ZS,"Labor force with basic education, female (% of female working-age population with basic education)"
SH.STA.POIS.P5.MA,"Mortality rate attributed to unintentional poisoning, male (per 100,000 male population)"
SP.POP.5054.MA.5Y,"Population ages 50-54, male (% of male population)"
SP.POP.5559.FE.5Y,"Population ages 55-59, female (% of female population)"
SP.POP.5559.MA.5Y,"Population ages 55-59, male (% of male population)"
SH.H2O.BASW.RU.ZS,"People using at least basic drinking water services, rural (% of rural population)"
SL.EMP.1524.SP.MA.NE.ZS,"Employment to population ratio, ages 15-24, male (%) (national estimate)"
SE.PRM.NINT.MA.ZS,"Net intake rate in grade 1, male (% of official school-age population)"
SH.STA.BASS.UR.ZS,"People using at least basic sanitation services, urban (% of urban population)"
SP.POP.1564.TO.ZS,Population ages 15-64 (% of total population)
SH.MLR.INCD.P3,"Incidence of malaria (per 1,000 population at risk)"
SL.TLF.CACT.ZS,"Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate)"
SE.SEC.CUAT.LO.ZS,"Educational attainment, at least completed lower secondary, population 25+, total (%) (cumulative)"
SL.EMP.TOTL.SP.MA.NE.ZS,"Employment to population ratio, 15+, male (%) (national estimate)"
SH.STA.SMSS.RU.ZS,"People using safely managed sanitation services, rural (% of rural population)"
SE.SEC.CUAT.UP.FE.ZS,"Educational attainment, at least completed upper secondary, population 25+, female (%) (cumulative)"
per_sa_allsa.cov_pop_tot,Coverage of social safety net programs (% of population)
per_sa_allsa.cov_q5_tot,Coverage of social safety net programs in richest quintile (% of population)
SI.SPR.PCAP,"Survey mean consumption or income per capita, total population (2011 PPP $ per day)"
FX.OWN.TOTL.MA.ZS,"Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)"
SI.SPR.PC40.ZG,"Annualized average growth rate in per capita real survey mean consumption or income, bottom 40% of population (%)"
SH.SGR.PROC.P5,"Number of surgical procedures (per 100,000 population)"
SP.POP.1519.MA.5Y,"Population ages 15-19, male (% of male population)"
SP.POP.65UP.TO.ZS,Population ages 65 and above (% of total population)
SL.TLF.INTM.FE.ZS,"Labor force with intermediate education, female (% of female working-age population with intermediate education)"
SE.PRM.NINT.FE.ZS,"Net intake rate in grade 1, female (% of official school-age population)"
SL.TLF.ADVN.ZS,Labor force with advanced education (% of total working-age population with advanced education)
SH.STA.HYGN.RU.ZS,"People with basic handwashing facilities including soap and water, rural (% of rural population)"
SI.SPR.PC40,"Survey mean consumption or income per capita, bottom 40% of population (2011 PPP $ per day)"
per_lm_alllm.cov_q4_tot,Coverage of unemployment benefits and ALMP in 4th quintile (% of population)
SH.CON.1524.MA.ZS,"Condom use, population ages 15-24, male (% of males ages 15-24)"
SH.CON.1524.FE.ZS,"Condom use, population ages 15-24, female (% of females ages 15-24)"
SP.POP.4549.MA.5Y,"Population ages 45-49, male (% of male population)"
SP.URB.GROW,Urban population growth (annual %)
SP.POP.DPND.YG,"Age dependency ratio, young (% of working-age population)"
SL.TLF.CACT.FE.NE.ZS,"Labor force participation rate, female (% of female population ages 15+) (national estimate)"
SP.POP.2529.MA.5Y,"Population ages 25-29, male (% of male population)"
SP.POP.6569.MA.5Y,"Population ages 65-69, male (% of male population)"
SP.POP.80UP.MA.5Y,"Population ages 80 and above, male (% of male population)"
EN.URB.MCTY.TL.ZS,Population in urban agglomerations of more than 1 million (% of total population)
SE.TER.CUAT.DO.ZS,"Educational attainment, Doctoral or equivalent, population 25+, total (%) (cumulative)"
SL.UEM.NEET.MA.ZS,"Share of youth not in education, employment or training, male (% of male youth population)"
SL.TLF.BASC.ZS,Labor force with basic education (% of total working-age population with basic education)
SP.POP.0004.FE.5Y,"Population ages 00-04, female (% 

2025-01-16 02:10:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:10:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:10:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:11:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 61
2025-01-16 02:11:01 - snowflake.connector.connection - INFO - closed
2025-01-16 02:11:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:11:01 - root - INFO - SQL:
SELECT DISTINCT "year"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL'
   ORDER BY "year" DESC;
Results:
year
2020
2019
2018
2017
2016
2015
2014
2013
2012
2011
2010
2009
2008
2007
2006
2005
2004
2003
2002
2001
2000
1999
1998
1997
1996
1995
1994
1993
1992
1991
1990
1989
1988
1987
1986
1985
1984
1983
1982
1981
1980
1979
1978
1977
1976
1975
1974
1973
1972
1971
1970
1969
1968
1967
1966
1965
1964
1963
1962
1961
1960

2025-01-16 02:11:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:11:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:11:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:11:03 - snowflake.connector.connection - INFO - closed
2025-01-16 02:11:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:12:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:12:07 - root - INFO - Apologies for the error in your SQL query. The issue arises from a mismatched quotation mark in the condition for `"indicator_code"`. Specifically, the string literal `'SP.POP.TOTL"` starts with a single quote but ends with a double quote, causing a syntax error.

Here's the corrected SQL query:

```sql
SELECT "country_name", "value"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
```

**Explanation of the Correction:**

- The string `'SP.POP.TOTL"` should be enclosed entirely within single quotes `'`, so it should be `'SP.POP.TOTL'`.
- Ensure that all quotation marks are correctly matched and that string literals are enclosed in single quotes.

**Next Steps:**

1. **Verify Country Names in the Population Data:**

   To ensure that the country names in your query match those in the `"country_name"` column of the `"INDICATORS_DATA"` table, it's a good idea to retrieve the distinct country names for the population indicator in 2020.

   ```sql
   SELECT DISTINCT "country_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020;
   ```

   This will help you confirm the exact country names to use in your `IN` clause.

2. **Retrieve Population Data for 2020:**

   Using the corrected query, you can obtain the 2020 population data for the specified countries:

   ```sql
   SELECT "country_name", "value" AS "population_2020"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
   ```

3. **Retrieve Total Confirmed Cases on April 20, 2020:**

   Since the COVID-19 case data uses `"country_region"` values like `'US'` instead of `'United States'`, we'll need to map these values for consistency.

   ```sql
   SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   GROUP BY "country_region";
   ```

4. **Map Country Names for Consistency:**

   Create a mapping between `"country_region"` values in the COVID-19 data and `"country_name"` values in the population data:

   | COVID-19 `"country_region"` | Population `"country_name"` |
   |-----------------------------|-----------------------------|
   | US                          | United States               |
   | Others                      | Same as `"country_region"`  |

5. **Combine the Data to Calculate Cases per 100,000 People:**

   Use a Common Table Expression (CTE) or subqueries to join the COVID-19 case data with the population data and perform the calculation.

   ```sql
   WITH cases AS (
     SELECT
       CASE
         WHEN "country_region" = 'US' THEN 'United States'
         ELSE "country_region"
       END AS "country",
       SUM("confirmed") AS "total_confirmed_cases"
     FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
     WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
     GROUP BY "country_region"
   ),
   population AS (
     SELECT "country_name" AS "country", "value" AS "population_2020"
     FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
     WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   )
   SELECT
     c."country",
     c."total_confirmed_cases",
     p."population_2020",
     ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
   FROM cases c
   JOIN population p ON c."country" = p."country";
   ```

   **Note:** Adjust the `ROUND` function as necessary to retain four decimal places.

6. **Expected Output Format:**

   Based on the above queries, you can present the data in the following format:

   ```csv
   country,total_confirmed_cases,cases_per_100000
   United States,num:int,num:float
   France,num:int,num:float
   China,num:int,num:float
   Italy,num:int,num:float
   Spain,num:int,num:float
   Germany,num:int,num:float
   Iran,num:int,num:float
   ```

   **Explanation of Columns:**

   - **country**: The name of the country.
   - **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
   - **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population. This value is rounded to four decimal places.

7. **Placeholders for Values:**

   Since actual numerical values cannot be inferred from the task description, placeholders are used:

   - `num:int` indicates an integer value (e.g., `784326`).
   - `num:float` indicates a floating-point number (e.g., `237.6543`).

**Summary:**

- Corrected the SQL syntax error by properly enclosing string literals in single quotes.
- Verified and adjusted country names to ensure consistency between datasets.
- Provided SQL queries to retrieve and combine the necessary data.
- Presented the expected output format with placeholders for the values.

**Final Note:**

Ensure that you replace the placeholders with actual data retrieved from your database when executing the queries. If you encounter any further errors or need additional assistance, feel free to ask.
2025-01-16 02:12:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:12:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:12:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:12:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 02:12:08 - snowflake.connector.connection - INFO - closed
2025-01-16 02:12:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:12:09 - root - INFO - SQL:
WITH cases AS (
     SELECT
       CASE
         WHEN "country_region" = 'US' THEN 'United States'
         ELSE "country_region"
       END AS "country",
       SUM("confirmed") AS "total_confirmed_cases"
     FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
     WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
     GROUP BY "country_region"
   ),
   population AS (
     SELECT "country_name" AS "country", "value" AS "population_2020"
     FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
     WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   )
   SELECT
     c."country",
     c."total_confirmed_cases",
     p."population_2020",
     ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
   FROM cases c
   JOIN population p ON c."country" = p."country";
Results:
country,total_confirmed_cases,population_2020,cases_per_100000
China,83817,1410929362.0,5.9406
Italy,181228,59554023.0,304.3086
Spain,200210,47351567.0,422.816
Germany,147065,83240525.0,176.6748
United States,784326,329484123.0,238.0467
France,156480,67391582.0,232.1952

2025-01-16 02:12:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:12:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:12:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:12:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 02:12:10 - snowflake.connector.connection - INFO - closed
2025-01-16 02:12:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:12:11 - root - INFO - SQL:
SELECT "country_name", "value"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
Results:
country_name,value
United States,328329953.0
Spain,47133521.0
Italy,59729081.0
China,1407745000.0
France,67248926.0
Germany,83092962.0

2025-01-16 02:12:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:12:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:12:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:12:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-16 02:12:12 - snowflake.connector.connection - INFO - closed
2025-01-16 02:12:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:12:55 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:12:55 - root - INFO - ```sql
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      WHEN "country_region" = 'Iran' THEN 'Iran, Islamic Rep.'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT "country_name" AS "country", "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  p."population_2020",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
```

This SQL query retrieves the total number of confirmed COVID-19 cases and calculates the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the countries specified: United States, France, China, Italy, Spain, Germany, and Iran.

**Corrections and Adjustments Made:**

- **Included Iran's Correct Country Name:**
  - In the population data, Iran is listed as `'Iran, Islamic Rep.'`, whereas in the COVID-19 data, it is listed as `'Iran'`. To ensure a successful join between the two datasets, the `CASE` statement in the `cases` CTE maps `'Iran'` to `'Iran, Islamic Rep.'`.

- **Ensured All Columns Have Values:**
  - By properly aligning the country names between the two datasets, we avoid empty values in the result set.

- **Output Only One SQL Query:**
  - The entire data retrieval and calculation are performed within this single SQL query, as requested.

**Explanation of the Query:**

- **Common Table Expression (CTE) `cases`:**
  - Selects the total confirmed cases for each country on April 20, 2020.
  - Maps `'US'` to `'United States'` and `'Iran'` to `'Iran, Islamic Rep.'` to match the country names in the population data.
  - Aggregates the confirmed cases using `SUM("confirmed")` and groups by `"country_region"`.

- **CTE `population`:**
  - Retrieves the 2020 population for each specified country from the `"INDICATORS_DATA"` table where the indicator code is `'SP.POP.TOTL'` (Total Population).
  - Includes `'Iran, Islamic Rep.'` to match Iran's name in the population data.

- **Final `SELECT` Statement:**
  - Joins the `cases` and `population` CTEs on the `"country"` field.
  - Calculates the number of cases per 100,000 people using the formula:
    ```
    cases_per_100000 = (total_confirmed_cases / population_2020) * 100000
    ```
    and rounds the result to four decimal places using the `ROUND` function.

**Note:**

- Ensure that the country names in both datasets match after the mapping to avoid empty columns or missing data.
- This query assumes that all necessary data is present in the tables referenced and that there are no null values for the population figures.

**Sample Output Format:**

The query will produce results similar to the following:

| country          | total_confirmed_cases | population_2020 | cases_per_100000 |
|------------------|-----------------------|-----------------|------------------|
| United States    | num:int               | num:int         | num:float        |
| France           | num:int               | num:int         | num:float        |
| China            | num:int               | num:int         | num:float        |
| Italy            | num:int               | num:int         | num:float        |
| Spain            | num:int               | num:int         | num:float        |
| Germany          | num:int               | num:int         | num:float        |
| Iran, Islamic Rep.| num:int              | num:int         | num:float        |

Replace `num:int` and `num:float` with the actual numerical values retrieved from your database.
2025-01-16 02:12:55 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:12:55 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:12:55 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:12:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 02:12:57 - snowflake.connector.connection - INFO - closed
2025-01-16 02:12:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:12:57 - root - INFO - SQL:
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      WHEN "country_region" = 'Iran' THEN 'Iran, Islamic Rep.'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT "country_name" AS "country", "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  p."population_2020",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
Results:
country,total_confirmed_cases,population_2020,cases_per_100000
China,83817,1410929362.0,5.9406
Italy,181228,59554023.0,304.3086
United States,784326,329484123.0,238.0467
"Iran, Islamic Rep.",83505,83992953.0,99.4191
Spain,200210,47351567.0,422.816
Germany,147065,83240525.0,176.6748
France,156480,67391582.0,232.1952

2025-01-16 02:12:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:12:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:12:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:12:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-16 02:12:59 - snowflake.connector.connection - INFO - closed
2025-01-16 02:12:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:12:59 - root - INFO - SQL:
SELECT DISTINCT "country"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
    WHERE "country" LIKE '%United%';
Results:
country
United Arab Emirates
United States
United Kingdom

2025-01-16 02:12:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:12:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:12:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:13:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-16 02:13:00 - snowflake.connector.connection - INFO - closed
2025-01-16 02:13:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:13:53 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:13:53 - root - INFO - ```sql
SELECT
  c."country_region" AS "country",
  SUM(c."confirmed") AS "total_confirmed_cases",
  p."value" AS "population_2020",
  ROUND((SUM(c."confirmed") / p."value") * 100000, 4) AS "cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" p
ON
  (c."country_region" = p."country_name"
   OR (c."country_region" = 'US' AND p."country_name" = 'United States')
   OR (c."country_region" = 'Iran' AND p."country_name" = 'Iran, Islamic Rep.'))
WHERE
  c."date" = '2020-04-20"
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  AND p."indicator_code" = 'SP.POP.TOTL' AND p."year" = 2020
GROUP BY
  c."country_region", p."value";
```
2025-01-16 02:13:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:13:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:13:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:13:54 - snowflake.connector.connection - INFO - closed
2025-01-16 02:13:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:14:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:14:38 - root - INFO - ```sql
SELECT
  c."country_region" AS "country",
  SUM(c."confirmed") AS "total_confirmed_cases",
  p."value" AS "population_2020",
  ROUND((SUM(c."confirmed") / p."value") * 100000, 4) AS "cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" p
ON
  (c."country_region" = p."country_name"
   OR (c."country_region" = 'US' AND p."country_name" = 'United States')
   OR (c."country_region" = 'Iran' AND p."country_name" = 'Iran, Islamic Rep.'))
WHERE
  c."date" = '2020-04-20'
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  AND p."indicator_code" = 'SP.POP.TOTL'
  AND p."year" = 2020
GROUP BY
  c."country_region", p."value";
```
2025-01-16 02:14:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:14:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:14:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:14:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 02:14:39 - snowflake.connector.connection - INFO - closed
2025-01-16 02:14:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:14:40 - root - INFO - SQL:
SELECT
  c."country_region" AS "country",
  SUM(c."confirmed") AS "total_confirmed_cases",
  p."value" AS "population_2020",
  ROUND((SUM(c."confirmed") / p."value") * 100000, 4) AS "cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" p
ON
  (c."country_region" = p."country_name"
   OR (c."country_region" = 'US' AND p."country_name" = 'United States')
   OR (c."country_region" = 'Iran' AND p."country_name" = 'Iran, Islamic Rep.'))
WHERE
  c."date" = '2020-04-20'
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  AND p."indicator_code" = 'SP.POP.TOTL'
  AND p."year" = 2020
GROUP BY
  c."country_region", p."value";
Results:
country,total_confirmed_cases,population_2020,cases_per_100000
China,83817,1410929362.0,5.9406
Italy,181228,59554023.0,304.3086
Iran,83505,83992953.0,99.4191
Spain,200210,47351567.0,422.816
US,784326,329484123.0,238.0467
France,156480,67391582.0,232.1952
Germany,147065,83240525.0,176.6748

2025-01-16 02:14:40 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:14:40 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:14:40 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:14:41 - snowflake.connector.cursor - INFO - Number of results in first chunk: 48
2025-01-16 02:14:41 - snowflake.connector.connection - INFO - closed
2025-01-16 02:14:41 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:14:42 - root - INFO - SQL:
SELECT "country_region", "province_state", "confirmed"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
Results:
country_region,province_state,confirmed
China,Anhui,991
China,Beijing,593
China,Chongqing,579
France,French Guiana,97
France,French Polynesia,56
China,Fujian,355
China,Gansu,139
France,Guadeloupe,148
China,Guangdong,1581
China,Guangxi,254
China,Guizhou,147
China,Hainan,168
China,Hebei,328
China,Heilongjiang,905
China,Henan,1276
China,Hong Kong,1025
China,Hubei,68128
China,Hunan,1019
China,Inner Mongolia,194
China,Jiangsu,653
China,Jiangxi,937
China,Jilin,104
China,Liaoning,146
China,Macau,45
France,Martinique,163
France,Mayotte,271
France,New Caledonia,18
China,Ningxia,75
China,Qinghai,18
France,Reunion,408
France,Saint Barthelemy,6
France,Saint Pierre and Miquelon,1
China,Shaanxi,256
China,Shandong,787
China,Shanghai,638
China,Shanxi,197
China,Sichuan,561
France,St Martin,37
China,Tianjin,189
China,Tibet,1
China,Xinjiang,76
China,Yunnan,184
China,Zhejiang,1268
France,,155275
Germany,,147065
Iran,,83505
Italy,,181228
Spain,,200210

2025-01-16 02:14:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:14:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:14:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:14:43 - snowflake.connector.cursor - INFO - Number of results in first chunk: 265
2025-01-16 02:14:43 - snowflake.connector.connection - INFO - closed
2025-01-16 02:14:43 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:14:43 - root - INFO - SQL:
SELECT DISTINCT "country_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA";
Results:
country_name
South Asia
Sudan
Belgium
IDA & IBRD total
Latin America & Caribbean
Greenland
Guam
Mongolia
Mozambique
Timor-Leste
Bermuda
Bhutan
Israel
Jamaica
Uzbekistan
"Venezuela, RB"
West Bank and Gaza
Kenya
Nauru
Nepal
New Zealand
Niger
Cabo Verde
Canada
Lower middle income
Lithuania
"Macao SAR, China"
Chad
Afghanistan
American Samoa
OECD members
Fiji
Heavily indebted poor countries (HIPC)
Chile
Cameroon
Dominican Republic
Sweden
Gibraltar
"Korea, Dem. People's Rep."
Lebanon
Djibouti
Cayman Islands
Maldives
Croatia
Brazil
"Egypt, Arab Rep."
Sint Maarten (Dutch part)
Guinea-Bissau
Sub-Saharan Africa (excluding high income)
Upper middle income
Aruba
Syrian Arab Republic
IDA blend
Germany
Belize
Italy
Turks and Caicos Islands
Ukraine
Kazakhstan
Burundi
Least developed countries: UN classification
Low & middle income
Cambodia
Middle East & North Africa (excluding high income)
Africa Western and Central
East Asia & Pacific (excluding high income)
Russian Federation
Serbia
Palau
Central African Republic
World
Other small states
Ethiopia
Faroe Islands
Euro area
Malawi
Mali
Bolivia
Malaysia
United Kingdom
Vanuatu
Bulgaria
Czech Republic
Kyrgyz Republic
French Polynesia
Slovak Republic
South Sudan
Jordan
Senegal
Myanmar
Papua New Guinea
Small states
South Asia (IDA & IBRD)
Sub-Saharan Africa
Australia
Austria
"Bahamas, The"
Barbados
Belarus
Switzerland
High income
IBRD only
Ghana
Greece
Ireland
Zambia
Kosovo
Namibia
Nicaragua
Nigeria
Burkina Faso
Latin America & the Caribbean (IDA & IBRD countries)
Oman
Angola
Middle East & North Africa (IDA & IBRD countries)
Middle income
Finland
Slovenia
Peru
Turkey
Monaco
"Yemen, Rep."
Algeria
Armenia
Europe & Central Asia (IDA & IBRD countries)
Malta
Cuba
Costa Rica
India
Mexico
Thailand
Europe & Central Asia
Sri Lanka
Norway
Bangladesh
St. Kitts and Nevis
St. Lucia
St. Vincent and the Grenadines
Late-demographic dividend
Georgia
Tajikistan
Togo
Trinidad and Tobago
Montenegro
Bosnia and Herzegovina
"Iran, Islamic Rep."
Turkmenistan
Kiribati
Brunei Darussalam
Latin America & Caribbean (excluding high income)
Denmark
Lao PDR
Liberia
Africa Eastern and Southern
East Asia & Pacific
East Asia & Pacific (IDA & IBRD countries)
San Marino
China
Post-demographic dividend
Fragile and conflict affected situations
Pakistan
El Salvador
Dominica
Singapore
"Congo, Dem. Rep."
Albania
Pacific island small states
Estonia
European Union
Solomon Islands
Somalia
Romania
Cote d'Ivoire
Guatemala
"Hong Kong SAR, China"
Hungary
Sub-Saharan Africa (IDA & IBRD countries)
St. Martin (French part)
"Micronesia, Fed. Sts."
Benin
Botswana
Isle of Man
United States
Vietnam
Virgin Islands (U.S.)
Zimbabwe
New Caledonia
British Virgin Islands
Lesotho
Liechtenstein
Luxembourg
Caribbean small states
Early-demographic dividend
North Macedonia
Northern Mariana Islands
Comoros
Andorra
North America
Eswatini
Gabon
Europe & Central Asia (excluding high income)
Madagascar
Mauritania
Spain
Guinea
Colombia
Tanzania
Japan
Low income
Sao Tome and Principe
Channel Islands
Poland
"Congo, Rep."
"Korea, Rep."
Morocco
Tunisia
Haiti
Iceland
Pre-demographic dividend
Azerbaijan
Bahrain
Suriname
IDA only
IDA total
"Gambia, The"
Grenada
Tonga
Mauritius
Moldova
Tuvalu
Uganda
United Arab Emirates
Uruguay
Middle East & North Africa
Latvia
Arab World
Central Europe and the Baltics
Rwanda
Saudi Arabia
Seychelles
Sierra Leone
Antigua and Barbuda
Eritrea
Marshall Islands
Puerto Rico
Qatar
Curacao
Cyprus
Guyana
Argentina
Honduras
Netherlands
Panama
Iraq
Kuwait
Libya
Samoa
France
Portugal
Ecuador
Philippines
Paraguay
South Africa
Equatorial Guinea
Indonesia

2025-01-16 02:14:43 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:14:43 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:14:43 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:14:45 - snowflake.connector.cursor - INFO - Number of results in first chunk: 4
2025-01-16 02:14:45 - snowflake.connector.connection - INFO - closed
2025-01-16 02:14:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:14:45 - root - INFO - SQL:
SELECT DISTINCT EXTRACT(YEAR FROM "date") AS "year"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    ORDER BY "year" DESC;
Results:
year
2023
2022
2021
2020

2025-01-16 02:14:45 - root - INFO - itercount: 0
2025-01-16 02:14:45 - root - INFO - Database Name: COVID19_JHU_WORLD_BANK
Schema Name: COVID19_JHU_CSSE
DDL describes table information.
,0
table_name,CONFIRMED_CASES
description,
DDL,"create or replace TABLE CONFIRMED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,1
table_name,DEATHS
description,
DDL,"create or replace TABLE DEATHS (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,2
table_name,RECOVERED_CASES
description,
DDL,"create or replace TABLE RECOVERED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,3
table_name,SUMMARY
description,
DDL,"create or replace TABLE SUMMARY (
	""province_state"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""date"" DATE,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location_geom"" BINARY(8388608),
	""confirmed"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""recovered"" VARCHAR(16777216),
	""active"" NUMBER(38,0),
	""fips"" VARCHAR(16777216),
	""admin2"" VARCHAR(16777216),
	""combined_key"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_GLOBAL_POPULATION
DDL describes table information.
,0
table_name,POPULATION_BY_COUNTRY
description,
DDL,"create or replace TABLE POPULATION_BY_COUNTRY (
	""country"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""year_1960"" NUMBER(38,0),
	""year_1961"" NUMBER(38,0),
	""year_1962"" NUMBER(38,0),
	""year_1963"" NUMBER(38,0),
	""year_1964"" NUMBER(38,0),
	""year_1965"" NUMBER(38,0),
	""year_1966"" NUMBER(38,0),
	""year_1967"" NUMBER(38,0),
	""year_1968"" NUMBER(38,0),
	""year_1969"" NUMBER(38,0),
	""year_1970"" NUMBER(38,0),
	""year_1971"" NUMBER(38,0),
	""year_1972"" NUMBER(38,0),
	""year_1973"" NUMBER(38,0),
	""year_1974"" NUMBER(38,0),
	""year_1975"" NUMBER(38,0),
	""year_1976"" NUMBER(38,0),
	""year_1977"" NUMBER(38,0),
	""year_1978"" NUMBER(38,0),
	""year_1979"" NUMBER(38,0),
	""year_1980"" NUMBER(38,0),
	""year_1981"" NUMBER(38,0),
	""year_1982"" NUMBER(38,0),
	""year_1983"" NUMBER(38,0),
	""year_1984"" NUMBER(38,0),
	""year_1985"" NUMBER(38,0),
	""year_1986"" NUMBER(38,0),
	""year_1987"" NUMBER(38,0),
	""year_1988"" NUMBER(38,0),
	""year_1989"" NUMBER(38,0),
	""year_1990"" NUMBER(38,0),
	""year_1991"" NUMBER(38,0),
	""year_1992"" NUMBER(38,0),
	""year_1993"" NUMBER(38,0),
	""year_1994"" NUMBER(38,0),
	""year_1995"" NUMBER(38,0),
	""year_1996"" NUMBER(38,0),
	""year_1997"" NUMBER(38,0),
	""year_1998"" NUMBER(38,0),
	""year_1999"" NUMBER(38,0),
	""year_2000"" NUMBER(38,0),
	""year_2001"" NUMBER(38,0),
	""year_2002"" NUMBER(38,0),
	""year_2003"" NUMBER(38,0),
	""year_2004"" NUMBER(38,0),
	""year_2005"" NUMBER(38,0),
	""year_2006"" NUMBER(38,0),
	""year_2007"" NUMBER(38,0),
	""year_2008"" NUMBER(38,0),
	""year_2009"" NUMBER(38,0),
	""year_2010"" NUMBER(38,0),
	""year_2011"" NUMBER(38,0),
	""year_2012"" NUMBER(38,0),
	""year_2013"" NUMBER(38,0),
	""year_2014"" NUMBER(38,0),
	""year_2015"" NUMBER(38,0),
	""year_2016"" NUMBER(38,0),
	""year_2017"" NUMBER(38,0),
	""year_2018"" NUMBER(38,0),
	""year_2019"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_HEALTH_POPULATION
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0)
);"

,2
table_name,HEALTH_NUTRITION_POPULATION
description,
DDL,"create or replace TABLE HEALTH_NUTRITION_POPULATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" NUMBER(38,0),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,4
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_DEBT
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_Income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,INTERNATIONAL_DEBT
description,
DDL,"create or replace TABLE INTERNATIONAL_DEBT (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_EDUCATION
DDL describes table information.
,0
table_name,INTERNATIONAL_EDUCATION
description,
DDL,"create or replace TABLE INTERNATIONAL_EDUCATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_two_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_WDI
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,INDICATORS_DATA
description,
DDL,"create or replace TABLE INDICATORS_DATA (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIME
description,
DDL,"create or replace TABLE SERIES_TIME (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" VARCHAR(16777216),
	""latest_trade_data"" VARCHAR(16777216)
);"

,5
table_name,FOOTNOTES
description,
DDL,"create or replace TABLE FOOTNOTES (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}
Begin Exploring Related Columns
To address the task of providing the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the specified countries, we need to identify the relevant tables, columns, and conditions.

**Relevant Tables and Columns:**

1. **Table:** `"COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"`
   - `"country_region"`: Used to specify the country names.
   - `"date"`: Used to filter data for April 20, 2020.
   - `"confirmed"`: The total number of confirmed COVID-19 cases.

2. **Table:** `"COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"`
   - `"country_name"`: Used to specify the country names.
   - `"indicator_code"`: Used to identify the population indicator (e.g., `'SP.POP.TOTL'` for total population).
   - `"year"`: Used to filter data for the year 2020.
   - `"value"`: The population value.

3. **Table:** `"COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"`
   - `"country"`: Used to specify the country names.
   - `"year_2019"`: Population data for the year 2019 (used if 2020 data is unavailable).

**Conditions that May Be Used:**

- Filter `"country_region"` or `"country_name"` to include only the specified countries:
  - `'United States'`
  - `'France'`
  - `'China'`
  - `'Italy'`
  - `'Spain'`
  - `'Germany'`
  - `'Iran'`
- Filter `"date"` to `'2020-04-20'` in the `"SUMMARY"` table.
- Filter `"indicator_code"` to `'SP.POP.TOTL'` in the `"INDICATORS_DATA"` table.
- Filter `"year"` to `2020` or `2019` in the `"INDICATORS_DATA"` table.

**SQL Queries to Explore the Data:**

1. **Retrieve distinct country names from the `"SUMMARY"` table:**
   ```sql
   SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY";
   ```

2. **Retrieve available dates from the `"SUMMARY"` table:**
   ```sql
   SELECT DISTINCT "date"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   ORDER BY "date";
   ```

3. **Retrieve total confirmed cases for all countries on April 20, 2020:**
   ```sql
   SELECT "country_region", "confirmed"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20';
   ```

4. **Retrieve total confirmed cases for specified countries on April 20, 2020:**
   ```sql
   SELECT "country_region", "confirmed"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20" AND "country_region" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
   ```

5. **Check how `'United States'` is represented in the `"country_region"` column:**
   ```sql
   SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "country_region" LIKE '%United%';
   ```

6. **Retrieve population indicator codes from the `"INDICATORS_DATA"` table:**
   ```sql
   SELECT DISTINCT "indicator_code", "indicator_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" LIKE '%population%';
   ```

7. **Retrieve available years for the total population indicator in the `"INDICATORS_DATA"` table:**
   ```sql
   SELECT DISTINCT "year"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL'
   ORDER BY "year" DESC;
   ```

8. **Retrieve 2020 population data for specified countries (if available):**
   ```sql
   SELECT "country_name", "value"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL" AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
   ```

9. **Retrieve 2019 population data for specified countries (if 2020 data is unavailable):**
   ```sql
   SELECT "country_name", "value"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
   ```

10. **Retrieve population data from the `"POPULATION_BY_COUNTRY"` table for specified countries:**
    ```sql
    SELECT "country", "year_2019"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
    WHERE "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
    ```

11. **Check how `'United States'` is represented in the `"country"` column of the `"POPULATION_BY_COUNTRY"` table:**
    ```sql
    SELECT DISTINCT "country"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
    WHERE "country" LIKE '%United%';
    ```

12. **Retrieve available indicators related to death rates from the `"INDICATORS_DATA"` table:**
    ```sql
    SELECT DISTINCT "indicator_code", "indicator_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE "indicator_name" LIKE '%death rate%';
    ```

13. **Retrieve total confirmed cases along with province/state for specified countries on April 20, 2020:**
    ```sql
    SELECT "country_region", "province_state", "confirmed"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
    ```

14. **Retrieve distinct country names from the `"INDICATORS_DATA"` table:**
    ```sql
    SELECT DISTINCT "country_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA";
    ```

15. **Retrieve available years in the `"SUMMARY"` table:**
    ```sql
    SELECT DISTINCT EXTRACT(YEAR FROM "date") AS "year"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    ORDER BY "year" DESC;
    ```

By exploring these queries, we can understand the structure and contents of the relevant tables and columns. This allows us to identify how to extract and calculate the required data for the specified countries on the specified date.Query:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY";
Answer:
country_region
US
Uzbekistan
Yemen
Zimbabwe
Andorra
Angola
Armenia
Benin
Botswana
Brazil
Cabo Verde
Cameroon
Chad
Chile
Comoros
Czechia
Fiji
Gabon
Greece
MS Zaandam
Mexico
Niger
Nigeria
Sao Tome and Principe
Congo (Kinshasa)
Costa Rica
Djibouti
Ghana
Ireland
Kenya
Kosovo
Liechtenstein
Morocco
Nepal
Nicaragua
Sudan
Tanzania
Jersey
Gibraltar
Zambia
Canada
Lithuania
Monaco
Croatia
Cuba
"Korea, South"
Lesotho
Madagascar
Sri Lanka
Sweden
Spain
Turkey
Tunisia
Nauru
Mainland China
"Bahamas, The"
Palestine
Mozambique
Thailand
Hong Kong
North Ireland
Vatican City
Channel Islands
United Arab Emirates
Winter Olympics 2022
Albania
Argentina
Bangladesh
Azerbaijan
Belize
Bosnia and Herzegovina
Brunei
Bulgaria
El Salvador
Indonesia
Italy
Malaysia
Saint Kitts and Nevis
China
Dominica
France
Guatemala
Honduras
Iceland
Jordan
Kazakhstan
Mali
Mauritius
Moldova
Romania
Senegal
Tajikistan
Rwanda
Saint Lucia
Palau
Tonga
Ivory Coast
Reunion
Estonia
Kyrgyzstan
Kuwait
Libya
Netherlands
Pakistan
Philippines
Portugal
San Marino
Seychelles
Togo
Germany
Serbia
Somalia
Summer Olympics 2020
Puerto Rico
"Gambia, The"
Trinidad and Tobago
Tuvalu
Aruba
Cape Verde
The Gambia
Republic of Ireland
Iran (Islamic Republic of)
Taipei and environs
Macao SAR
Saint Martin
Curacao
Vietnam
West Bank and Gaza
Afghanistan
Algeria
Austria
Bahamas
Australia
Barbados
Belarus
Belgium
Burkina Faso
Colombia
Finland
Guinea
Hungary
India
Luxembourg
Bhutan
Guinea-Bissau
Israel
Jamaica
Japan
Laos
Maldives
Namibia
New Zealand
Norway
Oman
Peru
Switzerland
Eswatini
Lebanon
Saint Vincent and the Grenadines
Others
Macau
Western Sahara
Republic of the Congo
Malta
Mauritania
Mongolia
Poland
Russia
Slovenia
Taiwan*
Timor-Leste
Dominican Republic
Gambia
North Macedonia
Antarctica
South Korea
Cruise Ship
Guadeloupe
Martinique
French Guiana
Greenland
occupied Palestinian territory
East Timor
Guam
The Bahamas
Saint Barthelemy
 Azerbaijan
St. Martin
Viet Nam
Cayman Islands
Uganda
Ukraine
United Kingdom
Uruguay
Vanuatu
Venezuela
Bahrain
Antigua and Barbuda
Bolivia
Burundi
Cambodia
Central African Republic
Cote d'Ivoire
Denmark
Diamond Princess
Ecuador
Guyana
Iran
Iraq
Latvia
Cyprus
Georgia
Liberia
Malawi
Marshall Islands
Panama
Paraguay
Qatar
South Sudan
Saudi Arabia
Singapore
Taiwan
UK
Mayotte
Faroe Islands
Burma
Equatorial Guinea
Eritrea
Egypt
Ethiopia
Grenada
Haiti
Holy See
Micronesia
Montenegro
Papua New Guinea
South Africa
Suriname
Syria
Samoa
Sierra Leone
Slovakia
Kiribati
"Korea, North"
Guernsey
Czech Republic
Congo (Brazzaville)
Solomon Islands
""
Republic of Korea
Hong Kong SAR
Russian Federation
Republic of Moldova
Query:
SELECT DISTINCT "date"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   ORDER BY "date";
Answer:
Too long, hard cut:
date
2020-01-22
2020-01-23
2020-01-24
2020-01-25
2020-01-26
2020-01-27
2020-01-28
2020-01-29
2020-01-30
2020-01-31
2020-02-01
2020-02-02
2020-02-03
2020-02-04
2020-02-05
2020-02-06
2020-02-07
2020-02-08
2020-02-09
2020-02-10
2020-02-11
2020-02-12
2020-02-13
2020-02-14
2020-02-15
2020-02-16
2020-02-17
2020-02-18
2020-02-19
2020-02-20
2020-02-21
2020-02-22
2020-02-23
2020-02-24
2020-02-25
2020-02-26
2020-02-27
2020-02-28
2020-02-29
2020-03-01
2020-03-02
2020-03-03
2020-03-04
2020-03-05
2020-03-06
2020-03-07
2020-03-08
2020-03-09
2020-03-10
2020-03-11
2020-03-12
2020-03-13
2020-03-14
2020-03-15
2020-03-16
2020-03-17
2020-03-18
2020-03-19
2020-03-20
2020-03-21
2020-03-22
2020-03-23
2020-03-24
2020-03-25
2020-03-26
2020-03-27
2020-03-28
2020-03-29
2020-03-30
2020-03-31
2020-04-01
2020-04-02
2020-04-03
2020-04-04
2020-04-05
2020-04-06
2020-04-07
2020-04-08
2020-04-09
2020-04-10
2020-04-11
2020-04-12
2020-04-13
2020-04-14
2020-04-15
2020-04-16
2020-04-17
2020-04-18
2020-04-19
2020-04-20
2020-04-21
2020-04-22
2020-04-23
2020-04-24
2020-04-25
2020-04-26
2020-04-27
2020-04-28
2020-04-29
2020-04-30
2020-05-01
2020-05-02
2020-05-03
2020-05-04
2020-05-05
2020-05-06
2020-05-07
2020-05-08
2020-05-09
2020-05-10
2020-05-11
2020-05-12
2020-05-13
2020-05-14
2020-05-15
2020-05-16
2020-05-17
2020-05-18
2020-05-19
2020-05-20
2020-05-21
2020-05-22
2020-05-23
2020-05-24
2020-05-25
2020-05-26
2020-05-27
2020-05-28
2020-05-29
2020-05-30
2020-05-31
2020-06-01
2020-06-02
2020-06-03
2020-06-04
2020-06-05
2020-06-06
2020-06-07
2020-06-08
2020-06-09
2020-06-10
2020-06-11
2020-06-12
2020-06-13
2020-06-14
2020-06-15
2020-06-16
2020-06-17
2020-06-18
2020-06-19
2020-06-20
2020-06-21
2020-06-22
2020-06-23
2020-06-24
2020-06-25
2020-06-26
2020-06-27
2020-06-28
2020-06-29
2020-06-30
2020-07-01
2020-07-02
2020-07-03
2020-07-04
2020-07-05
2020-07-06
2020-07-07
2020-07-08
2020-07-09
2020-07-10
2020-07-11
2020-07-12
2020-07-13
2020-07-14
2020-07-15
2020-07-16
2020-07-17
2020-07-18
2020-07-19
2020-07-20
2020-07-21
2020-07-22
2020-07-23
2020-07-24
2020-07-25
2020-07-26
2020-07-27
2020-07-28
2020-07-29
2020-07-30
2020-07-31
2020-08-01
2020-08-02
2020-08-03
2020-08-04
2020-08-05
2020-08-06
2020-08-07
2020-08-08
2020-08-09
2020-08-10
2020-08-11
2020-08-12
2020-08-13
2020-08-14
2020-08-15
2020-08-16
2020-08-17
2020-08-18
2020-08-19
2020-08-20
2020-08-21
2020-08-22
2020-08-23
2020-08-24
2020-08-25
2020-08-26
2020-08-27
2020-08-28
2020-08-29
2020-08-30
2020-08-31
2020-09-01
2020-09-02
2020-09-03
2020-09-04
2020-09-05
2020-09-06
2020-09-07
2020-09-08
2020-09-09
2020-09-10
2020-09-11
2020-09-12
2020-09-13
2020-09-14
2020-09-15
2020-09-16
2020-09-17
2020-09-18
2020-09-19
2020-09-20
2020-09-21
2020-09-22
2020-09-23
2020-09-24
2020-09-25
2020-09-26
2020-09-27
2020-09-28
2020-09-29
2020-09-30
2020-10-01
2020-10-02
2020-10-03
2020-10-04
2020-10-05
2020-10-06
2020-10-07
2020-10-08
2020-10-09
2020-10-10
2020-10-11
2020-10-12
2020-10-13
2020-10-14
2020-10-15
2020-10-16
2020-10-17
2020-10-18
2020-10-19
2020-10-20
2020-10-21
2020-10-22
2020-10-23
2020-10-24
2020-10-25
2020-10-26
2020-10-27
2020-10-28
2020-10-29
2020-10-30
2020-10-31
2020-11-01
2020-11-02
2020-11-03
2020-11-04
2020-11-05
2020-11-06
2020-11-07
2020-11-08
2020-11-09
2020-11-10
2020-11-11
2020-11-12
2020-11-13
2020-11-14
2020-11-15
2020-11-16
2020-11-17
2020-11-18
2020-11-19
2020-11-20
2020-11-21
2020-11-22
2020-11-23
2020-11-24
2020-11-25
2020-11-26
2020-11-27
2020-11-28
2020-11-29
2020-11-30
2020-12-01
2020-12-02
2020-12-03
2020-12-04
2020-12-05
2020-12-06
2020-12-07
2020-12-08
2020-12-09
2020-12-10
2020-12-11
2020-12-12
2020-12-13
2020-12-14
2020-12-15
2020-12-16
2020-12-17
2020-12-18
2020-12-19
2020-12-20
2020-12-21
2020-12-22
2020-12-23
2020-12-24
2020-12-25
2020-12-26
2020-12-27
2020-12-28
2020-12-29
2020-12-30
2020-12-31
2021-01-01
2021-01-02
2021-01-03
2021-01-04
2021-01-05
2021-01-06
2021-01-07
2021-01-08
2021-01-09
2021-01-10
2021-01-11
2021-01-12
2021-01-13
2021-01-14
2021-01-15
2021-01-16
2021-01-17
2021-01-18
2021-01-19
2021-01-20
2021-01-21
2021-01-22
2021-01-23
2021-01-24
2021-01-25
2021-01-26
2021-01-27
2021-01-28
2021-01-29
2021-01-30
2021-01-31
2021-02-01
2021-02-02
2021-02-03
2021-02-04
2021-02-05
2021-02-06
2021-02-07
2021-02-08
2021-02-09
2021-02-10
2021-02-11
2021-02-12
2021-02-13
2021-02-14
2021-02-15
2021-02-16
2021-02-17
2021-02-18
2021-02-19
2021-02-20
2021-02-21
2021-02-22
2021-02-23
2021-02-24
2021-02-25
2021-02-26
2021-02-27
2021-02-28
2021-03-01
2021-03-02
2021-03-03
2021-03-04
2021-03-05
2021-03-06
2021-03-07
2021-03-08
2021-03-09
2021-03-10
2021-03-11
2021-03-12
2021-03-13
2021-03-14
2021-03-15
2021-03-16
2021-03-17
2021-03-18
2021-03-19
2021-03-20
2021-03-21
2021-03-22
2021-03-23
2021-03-24
2021-03-25
2021-03-26
2021-03-27
2021-03-28
2021-03-29
2021-03-30
2021-03-31
2021-04-01
2021-04-02
2021-04-03
2021-04-04
2021-04-05
2021-04-06
2021-04-07
2021-04-08
2021-04-09
2021-04-10
2021-04-11
2021-04-12
2021-04-13
2021-04-14
2021-04-15
2021-04-16
2021-04-17
2021-04-18
2021-04-19
2
Query:
SELECT "country_region", "confirmed"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "date" = '2020-04-20';
Answer:
Too long, hard cut:
country_region,confirmed
US,17
US,114
US,52
US,598
US,1
US,54
US,12
US,46
US,915
US,1
US,34
US,7
US,83
US,100
US,3
US,85
US,41
US,4
US,61
US,70
US,1
US,218
US,50
US,1193
US,7
US,687
US,6
US,61
US,4
US,7
US,2
US,3
US,421
US,1
US,40
US,42
US,32
US,30
US,2
US,5
US,1042
US,327
US,4
US,79
US,84
US,6
US,15
US,1
US,7
US,14
US,10
US,17
US,155
US,0
US,6
US,134
US,16
US,8
US,1
US,19
US,35
US,23
US,1098
US,95
US,18
US,1
US,9
US,202
US,2
US,21
US,7
US,2
US,1536
US,7
US,12
US,2
US,593
US,38
US,1
US,2
US,512
US,4
US,5
US,2
US,12
US,68
US,13
US,146
US,12
US,6
US,2
US,3
US,5
US,410
US,1
US,44
US,1
US,23
US,24
US,1
US,12
US,28
US,69
US,10
US,19
US,17
US,20
US,117
US,130
US,4
US,1875
US,1511
US,7
US,4
US,15
US,8
US,0
US,1
US,22
US,4
US,3
US,632
US,6
US,6
US,6
US,93
US,26
US,4
US,140
US,7
US,255
US,44
US,6
US,3
US,0
US,5
US,57
US,85
US,3
US,21
US,55
US,15
US,225
US,36
US,1
US,298
US,1
US,1
US,2
US,15
US,76
US,18
US,5
US,26
US,126
US,73
US,5
US,15
US,37
US,62
US,4
US,23
US,4
US,8
US,3
US,28
US,4
US,314
US,4
US,13011
US,138
US,111
US,1945
US,387
US,566
US,10
US,164
US,24
US,1
US,1015
US,32
US,203
US,66
US,3
US,1
US,1
US,3
US,259
US,6
US,2
US,476
US,14
US,5
US,0
US,5
US,10
US,22
US,46
US,24
US,85
US,3
US,4
US,4
US,4
US,24
US,3
US,33
US,154
US,6
US,81
US,94
US,2
US,1
US,233
US,24
US,352
US,0
US,7
US,7
US,57
US,1
US,1
US,29
US,13
US,7
US,42
US,25
US,7
US,37
US,40
US,20
US,1
US,315
US,170
US,1
US,6
US,28
US,218
US,1731
US,67
US,1
US,4
US,3
US,9
US,23
US,199
US,101
US,4078
US,14
US,7
US,9
US,20
US,13
US,285
US,0
US,36
US,12
US,35
US,5
US,11
US,32
US,12
US,26
US,1886
US,2
US,5
US,55
US,4
US,33
US,30
US,11
US,47
US,8
US,48
US,70
US,2
US,63
US,9
US,1663
US,9
US,1
US,14
US,1
US,12
US,72
US,24
US,1
US,180
US,161
US,16
US,0
US,80
US,212
US,34
US,1276
US,52
US,12
US,324
US,11
US,15
US,2
US,23
US,8
US,12
US,80
US,6
US,61
US,1
US,148
US,42
US,6
US,21
US,1
US,21
US,21
US,6
US,114
US,1
US,19
US,27
US,33
US,2255
US,3
US,1
US,298
US,6
US,58
US,13
US,9
US,13
US,75
US,7
US,8
US,187
US,36
US,212
US,6
US,144
US,4
US,1
US,37
US,39
US,14
US,2
US,305
US,6
US,7
US,1
US,2
US,335
US,14
US,30
US,16
US,15
US,3
US,1
US,28
US,4
US,3
US,1
US,5
US,24
US,14
US,13
US,1
US,87
US,1
US,22
US,4
US,53
US,4
US,246
US,11
US,10
US,11
US,8
US,24
US,43
US,23
US,1
US,34
US,36
US,134
US,26
US,5
US,0
US,17
US,73
US,14
US,38
US,257
US,35
US,95
US,8
US,4
US,392
US,11
US,4
US,391
US,12
US,139
US,8
US,41
US,6
US,1
US,185
US,127
US,7
US,9
US,3
US,25
US,21
US,22
US,14
US,75
US,73
US,78
US,12
US,317
US,7
US,16
US,24
US,14
US,10
US,1
US,166
US,30
US,915
US,25
US,8
US,36
US,331
US,4
US,3
US,45
US,7
US,1
US,43
US,2
US,1
US,20
US,7
US,385
US,17
US,13
US,3
US,6
US,27
US,79
US,19
US,3
US,33
US,86
US,171
US,50
US,10
US,5
US,14
US,9
US,120
US,18
US,27
US,4
US,177
US,18
US,1
US,2998
US,26
US,1
US,296
US,16
US,24
US,114
US,2
US,29
US,6
US,6
US,19
US,1
US,249
US,20
US,1
US,20
US,3
US,5
US,1
US,62
US,26
US,59
US,4
US,5
US,5
US,5
US,3
US,540
US,7
US,11
US,11
US,3
US,12
US,71
US,72
US,8
US,44
US,324
US,7
US,45
US,19
US,42
US,2
US,104
US,11
US,51
US,26
US,11
US,3
US,49
US,1196
US,28
US,11
US,337
US,13
US,64
US,83
US,20
US,47
US,16
US,46
US,16
US,5
US,5
US,23
US,470
US,527
US,26
US,8
US,145
US,5
US,40
US,116
US,111
US,14
US,208
US,1
US,27
US,182
US,59
US,3
US,43
US,71
US,4
US,1
US,26
US,9
US,707
US,9
US,5
US,13
US,22101
US,4
US,4
US,2
US,1
US,23
US,46
US,1
US,25
US,75
US,16
US,3
US,5
US,6
US,24
US,33
US,1
US,169
US,1
US,32
US,8
US,2
US,44
US,2
US,36
US,4
US,14
US,4
US,13
US,6
US,6
US,29
US,6
US,37
US,16
US,3
US,68
US,6
US,125
US,142
US,3
US,6
US,1
US,4
US,1
US,8
US,20
US,2
US,44
US,51
US,2
US,3
US,380
US,338
US,113
US,186
US,58
US,10
US,2
US,3
US,10
US,4
US,2
US,2
US,20
US,10
US,1577
US,10
US,124
US,51
US,21
US,3
US,26
US,1
US,52
US,2
US,2512
US,364
US,28
US,15
US,57
US,69
US,386
US,94
US,1675
US,23
US,34
US,130
US,2
US,242
US,3
US,45
US,172
US,13
US,0
US,158
US,1
US,46
US,1521
US,55
US,13
US,3
US,12
US,24
US,238
US,13
US,12
US,68
US,61
US,168
US,4
US,3
US,15
US,2
US,114
US,2
US,49
US,122
US,86
US,2545
US,22
US,13
US,1
US,593
US,1784
US,13
US,64
US,7
US,1
US,2
US,1
US,0
US,1
US,1
US,3
US,46
US,22
US,1
US,8
US,2927
US,1
US,4
US,1
US,19
US,18
US,18
US,19
US,73
US,1
US,23
US,71
US,9
US,23
US,88
US,1436
US,368
US,243
US,12
US,43
US,2
US,291
US,15
US,23
US,32
US,8
US,6
US,1761
US,16
US,46
US,23
US,19
US,10
US,9
US,26
US,435
US,2284
US,896
US,1
US,28
US,485
US,173
US,1534
US,1
US,95
US,3
US,90
US,22
US,4
US,58
US,10
US,1
US,58
US,12
US,7
US,1
US,27
US,4
US,36
US,731
US,531
US,23
US,7
US,2
US,164
US,12
US,8
US,90
US,69
US,22
US,14
US,21
US,1
US,11
US,13
US,2192
US,37
US,60
US,16
US,315
US,5153
US,10729
US,20
US,2
US,2
US,100
US,43
US,3
US,79
US,1925
US,21
US,8320
US,99
US,25
US,1
US,1
US,24
US,19
US,8
US,4
US,1
US,62
US,41
US,3
US,143
US,15
US,22
US,6
US,219
US,13
US,67
US,46
US,15
US,5
US,55
US,4
US,1
US,11
US,41
US,76
US,37
US,2
US,153
US,2
US,126
US,142
US,4
US,2
US,1
US,68
US,65
US,6
US,180
US,7
US,147
US,211
US,126
US,783
US,1
US,8
US,18
US,1
US,2
US,12
US,5
US,90
US,1
US,12
US,13
US,83
US,13
US,181

Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed_cases"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY "country_region";
Answer:
country_region,total_confirmed_cases
US,784326
Spain,200210
China,83817
France,156480
Germany,147065
Italy,181228
Iran,83505
Query:
SELECT DISTINCT "country_region"
   FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
   WHERE "country_region" LIKE '%United%';
Answer:
country_region
United Arab Emirates
United Kingdom
Query:
SELECT DISTINCT "indicator_code", "indicator_name"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_name" LIKE '%population%';
Answer:
Too long, hard cut:
indicator_code,indicator_name
SH.STA.SUIC.FE.P5,"Suicide mortality rate, female (per 100,000 female population)"
SL.EMP.TOTL.SP.NE.ZS,"Employment to population ratio, 15+, total (%) (national estimate)"
SP.POP.0014.TO.ZS,Population ages 0-14 (% of total population)
EG.ELC.ACCS.UR.ZS,"Access to electricity, urban (% of urban population)"
SP.POP.0014.FE.ZS,"Population ages 0-14, female (% of female population)"
EN.POP.EL5M.RU.ZS,Rural population living in areas where elevation is below 5 meters (% of total population)
per_sa_allsa.cov_q1_tot,Coverage of social safety net programs in poorest quintile (% of population)
SP.POP.0014.MA.ZS,"Population ages 0-14, male (% of male population)"
SP.POP.3539.MA.5Y,"Population ages 35-39, male (% of male population)"
SL.TLF.ADVN.MA.ZS,"Labor force with advanced education, male (% of male working-age population with advanced education)"
SL.TLF.BASC.FE.ZS,"Labor force with basic education, female (% of female working-age population with basic education)"
SH.STA.POIS.P5.MA,"Mortality rate attributed to unintentional poisoning, male (per 100,000 male population)"
SP.POP.5054.MA.5Y,"Population ages 50-54, male (% of male population)"
SP.POP.5559.FE.5Y,"Population ages 55-59, female (% of female population)"
SP.POP.5559.MA.5Y,"Population ages 55-59, male (% of male population)"
SH.H2O.BASW.RU.ZS,"People using at least basic drinking water services, rural (% of rural population)"
SL.EMP.1524.SP.MA.NE.ZS,"Employment to population ratio, ages 15-24, male (%) (national estimate)"
SE.PRM.NINT.MA.ZS,"Net intake rate in grade 1, male (% of official school-age population)"
SH.STA.BASS.UR.ZS,"People using at least basic sanitation services, urban (% of urban population)"
SP.POP.1564.TO.ZS,Population ages 15-64 (% of total population)
SH.MLR.INCD.P3,"Incidence of malaria (per 1,000 population at risk)"
SL.TLF.CACT.ZS,"Labor force participation rate, total (% of total population ages 15+) (modeled ILO estimate)"
SE.SEC.CUAT.LO.ZS,"Educational attainment, at least completed lower secondary, population 25+, total (%) (cumulative)"
SL.EMP.TOTL.SP.MA.NE.ZS,"Employment to population ratio, 15+, male (%) (national estimate)"
SH.STA.SMSS.RU.ZS,"People using safely managed sanitation services, rural (% of rural population)"
SE.SEC.CUAT.UP.FE.ZS,"Educational attainment, at least completed upper secondary, population 25+, female (%) (cumulative)"
per_sa_allsa.cov_pop_tot,Coverage of social safety net programs (% of population)
per_sa_allsa.cov_q5_tot,Coverage of social safety net programs in richest quintile (% of population)
SI.SPR.PCAP,"Survey mean consumption or income per capita, total population (2011 PPP $ per day)"
FX.OWN.TOTL.MA.ZS,"Account ownership at a financial institution or with a mobile-money-service provider, male (% of population ages 15+)"
SI.SPR.PC40.ZG,"Annualized average growth rate in per capita real survey mean consumption or income, bottom 40% of population (%)"
SH.SGR.PROC.P5,"Number of surgical procedures (per 100,000 population)"
SP.POP.1519.MA.5Y,"Population ages 15-19, male (% of male population)"
SP.POP.65UP.TO.ZS,Population ages 65 and above (% of total population)
SL.TLF.INTM.FE.ZS,"Labor force with intermediate education, female (% of female working-age population with intermediate education)"
SE.PRM.NINT.FE.ZS,"Net intake rate in grade 1, female (% of official school-age population)"
SL.TLF.ADVN.ZS,Labor force with advanced education (% of total working-age population with advanced education)
SH.STA.HYGN.RU.ZS,"People with basic handwashing facilities including soap and water, rural (% of rural population)"
SI.SPR.PC40,"Survey mean consumption or income per capita, bottom 40% of population (2011 PPP $ per day)"
per_lm_alllm.cov_q4_tot,Coverage of unemployment benefits and ALMP in 4th quintile (% of population)
SH.CON.1524.MA.ZS,"Condom use, population ages 15-24, male (% of males ages 15-24)"
SH.CON.1524.FE.ZS,"Condom use, population ages 15-24, female (% of females ages 15-24)"
SP.POP.4549.MA.5Y,"Population ages 45-49, male (% of male population)"
SP.URB.GROW,Urban population growth (annual %)
SP.POP.DPND.YG,"Age dependency ratio, young (% of working-age population)"
SL.TLF.CACT.FE.NE.ZS,"Labor force participation rate, female (% of female population ages 15+) (national estimate)"
SP.POP.2529.MA.5Y,"Population ages 25-29, male (% of male population)"
SP.POP.6569.MA.5Y,"Population ages 65-69, male (% of male population)"
SP.POP.80UP.MA.5Y,"Population ages 80 and above, male (% of male population)"
EN.URB.MCTY.TL.ZS,Population in urban agglomerations of more than 1 million (% of total population)
SE.TER.CUAT.DO.ZS,"Educational attainment, Doctoral or equivalent, population 25+, total (%) (cumulative)"
SL.UEM.NEET.MA.ZS,"Share of youth not in education, employment or training, male (% of male youth population)"
SL.TLF.BASC.ZS,Labor force with basic education (% of total working-age population with basic education)
SP.POP.0004.FE.5Y,"Population ages 00-04, female (% 
Query:
SELECT DISTINCT "year"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL'
   ORDER BY "year" DESC;
Answer:
year
2020
2019
2018
2017
2016
2015
2014
2013
2012
2011
2010
2009
2008
2007
2006
2005
2004
2003
2002
2001
2000
1999
1998
1997
1996
1995
1994
1993
1992
1991
1990
1989
1988
1987
1986
1985
1984
1983
1982
1981
1980
1979
1978
1977
1976
1975
1974
1973
1972
1971
1970
1969
1968
1967
1966
1965
1964
1963
1962
1961
1960
Query:
WITH cases AS (
     SELECT
       CASE
         WHEN "country_region" = 'US' THEN 'United States'
         ELSE "country_region"
       END AS "country",
       SUM("confirmed") AS "total_confirmed_cases"
     FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
     WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
     GROUP BY "country_region"
   ),
   population AS (
     SELECT "country_name" AS "country", "value" AS "population_2020"
     FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
     WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
   )
   SELECT
     c."country",
     c."total_confirmed_cases",
     p."population_2020",
     ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
   FROM cases c
   JOIN population p ON c."country" = p."country";
Answer:
country,total_confirmed_cases,population_2020,cases_per_100000
China,83817,1410929362.0,5.9406
Italy,181228,59554023.0,304.3086
Spain,200210,47351567.0,422.816
Germany,147065,83240525.0,176.6748
United States,784326,329484123.0,238.0467
France,156480,67391582.0,232.1952
Query:
SELECT "country_name", "value"
   FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
   WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
Answer:
country_name,value
United States,328329953.0
Spain,47133521.0
Italy,59729081.0
China,1407745000.0
France,67248926.0
Germany,83092962.0
Query:
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      WHEN "country_region" = 'Iran' THEN 'Iran, Islamic Rep.'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT "country_name" AS "country", "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  p."population_2020",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
Answer:
country,total_confirmed_cases,population_2020,cases_per_100000
China,83817,1410929362.0,5.9406
Italy,181228,59554023.0,304.3086
United States,784326,329484123.0,238.0467
"Iran, Islamic Rep.",83505,83992953.0,99.4191
Spain,200210,47351567.0,422.816
Germany,147065,83240525.0,176.6748
France,156480,67391582.0,232.1952
Query:
SELECT DISTINCT "country"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
    WHERE "country" LIKE '%United%';
Answer:
country
United Arab Emirates
United States
United Kingdom
Query:
SELECT
  c."country_region" AS "country",
  SUM(c."confirmed") AS "total_confirmed_cases",
  p."value" AS "population_2020",
  ROUND((SUM(c."confirmed") / p."value") * 100000, 4) AS "cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA" p
ON
  (c."country_region" = p."country_name"
   OR (c."country_region" = 'US' AND p."country_name" = 'United States')
   OR (c."country_region" = 'Iran' AND p."country_name" = 'Iran, Islamic Rep.'))
WHERE
  c."date" = '2020-04-20'
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  AND p."indicator_code" = 'SP.POP.TOTL'
  AND p."year" = 2020
GROUP BY
  c."country_region", p."value";
Answer:
country,total_confirmed_cases,population_2020,cases_per_100000
China,83817,1410929362.0,5.9406
Italy,181228,59554023.0,304.3086
Iran,83505,83992953.0,99.4191
Spain,200210,47351567.0,422.816
US,784326,329484123.0,238.0467
France,156480,67391582.0,232.1952
Germany,147065,83240525.0,176.6748
Query:
SELECT "country_region", "province_state", "confirmed"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    WHERE "date" = '2020-04-20' AND "country_region" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran');
Answer:
country_region,province_state,confirmed
China,Anhui,991
China,Beijing,593
China,Chongqing,579
France,French Guiana,97
France,French Polynesia,56
China,Fujian,355
China,Gansu,139
France,Guadeloupe,148
China,Guangdong,1581
China,Guangxi,254
China,Guizhou,147
China,Hainan,168
China,Hebei,328
China,Heilongjiang,905
China,Henan,1276
China,Hong Kong,1025
China,Hubei,68128
China,Hunan,1019
China,Inner Mongolia,194
China,Jiangsu,653
China,Jiangxi,937
China,Jilin,104
China,Liaoning,146
China,Macau,45
France,Martinique,163
France,Mayotte,271
France,New Caledonia,18
China,Ningxia,75
China,Qinghai,18
France,Reunion,408
France,Saint Barthelemy,6
France,Saint Pierre and Miquelon,1
China,Shaanxi,256
China,Shandong,787
China,Shanghai,638
China,Shanxi,197
China,Sichuan,561
France,St Martin,37
China,Tianjin,189
China,Tibet,1
China,Xinjiang,76
China,Yunnan,184
China,Zhejiang,1268
France,,155275
Germany,,147065
Iran,,83505
Italy,,181228
Spain,,200210
Query:
SELECT DISTINCT "country_name"
    FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA";
Answer:
country_name
South Asia
Sudan
Belgium
IDA & IBRD total
Latin America & Caribbean
Greenland
Guam
Mongolia
Mozambique
Timor-Leste
Bermuda
Bhutan
Israel
Jamaica
Uzbekistan
"Venezuela, RB"
West Bank and Gaza
Kenya
Nauru
Nepal
New Zealand
Niger
Cabo Verde
Canada
Lower middle income
Lithuania
"Macao SAR, China"
Chad
Afghanistan
American Samoa
OECD members
Fiji
Heavily indebted poor countries (HIPC)
Chile
Cameroon
Dominican Republic
Sweden
Gibraltar
"Korea, Dem. People's Rep."
Lebanon
Djibouti
Cayman Islands
Maldives
Croatia
Brazil
"Egypt, Arab Rep."
Sint Maarten (Dutch part)
Guinea-Bissau
Sub-Saharan Africa (excluding high income)
Upper middle income
Aruba
Syrian Arab Republic
IDA blend
Germany
Belize
Italy
Turks and Caicos Islands
Ukraine
Kazakhstan
Burundi
Least developed countries: UN classification
Low & middle income
Cambodia
Middle East & North Africa (excluding high income)
Africa Western and Central
East Asia & Pacific (excluding high income)
Russian Federation
Serbia
Palau
Central African Republic
World
Other small states
Ethiopia
Faroe Islands
Euro area
Malawi
Mali
Bolivia
Malaysia
United Kingdom
Vanuatu
Bulgaria
Czech Republic
Kyrgyz Republic
French Polynesia
Slovak Republic
South Sudan
Jordan
Senegal
Myanmar
Papua New Guinea
Small states
South Asia (IDA & IBRD)
Sub-Saharan Africa
Australia
Austria
"Bahamas, The"
Barbados
Belarus
Switzerland
High income
IBRD only
Ghana
Greece
Ireland
Zambia
Kosovo
Namibia
Nicaragua
Nigeria
Burkina Faso
Latin America & the Caribbean (IDA & IBRD countries)
Oman
Angola
Middle East & North Africa (IDA & IBRD countries)
Middle income
Finland
Slovenia
Peru
Turkey
Monaco
"Yemen, Rep."
Algeria
Armenia
Europe & Central Asia (IDA & IBRD countries)
Malta
Cuba
Costa Rica
India
Mexico
Thailand
Europe & Central Asia
Sri Lanka
Norway
Bangladesh
St. Kitts and Nevis
St. Lucia
St. Vincent and the Grenadines
Late-demographic dividend
Georgia
Tajikistan
Togo
Trinidad and Tobago
Montenegro
Bosnia and Herzegovina
"Iran, Islamic Rep."
Turkmenistan
Kiribati
Brunei Darussalam
Latin America & Caribbean (excluding high income)
Denmark
Lao PDR
Liberia
Africa Eastern and Southern
East Asia & Pacific
East Asia & Pacific (IDA & IBRD countries)
San Marino
China
Post-demographic dividend
Fragile and conflict affected situations
Pakistan
El Salvador
Dominica
Singapore
"Congo, Dem. Rep."
Albania
Pacific island small states
Estonia
European Union
Solomon Islands
Somalia
Romania
Cote d'Ivoire
Guatemala
"Hong Kong SAR, China"
Hungary
Sub-Saharan Africa (IDA & IBRD countries)
St. Martin (French part)
"Micronesia, Fed. Sts."
Benin
Botswana
Isle of Man
United States
Vietnam
Virgin Islands (U.S.)
Zimbabwe
New Caledonia
British Virgin Islands
Lesotho
Liechtenstein
Luxembourg
Caribbean small states
Early-demographic dividend
North Macedonia
Northern Mariana Islands
Comoros
Andorra
North America
Eswatini
Gabon
Europe & Central Asia (excluding high income)
Madagascar
Mauritania
Spain
Guinea
Colombia
Tanzania
Japan
Low income
Sao Tome and Principe
Channel Islands
Poland
"Congo, Rep."
"Korea, Rep."
Morocco
Tunisia
Haiti
Iceland
Pre-demographic dividend
Azerbaijan
Bahrain
Suriname
IDA only
IDA total
"Gambia, The"
Grenada
Tonga
Mauritius
Moldova
Tuvalu
Uganda
United Arab Emirates
Uruguay
Middle East & North Africa
Latvia
Arab World
Central Europe and the Baltics
Rwanda
Saudi Arabia
Seychelles
Sierra Leone
Antigua and Barbuda
Eritrea
Marshall Islands
Puerto Rico
Qatar
Curacao
Cyprus
Guyana
Argentina
Honduras
Netherlands
Panama
Iraq
Kuwait
Libya
Samoa
France
Portugal
Ecuador
Philippines
Paraguay
South Africa
Equatorial Guinea
Indonesia
Query:
SELECT DISTINCT EXTRACT(YEAR FROM "date") AS "year"
    FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
    ORDER BY "year" DESC;
Answer:
year
2023
2022
2021
2020
End Exploring Related Columns
Task: Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the United States, France, China, Italy, Spain, Germany, and Iran, the data is presented below:

```csv
country,total_confirmed_cases,cases_per_100000
United States,num:int,num:float
France,num:int,num:float
China,num:int,num:float
Italy,num:int,num:float
Spain,num:int,num:float
Germany,num:int,num:float
Iran,num:int,num:float
```

In this table:

- **country**: The name of the country.
- **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
- **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population. This value is a floating-point number rounded to four decimal places.

Since the actual numerical values are not provided in the task description, placeholders are used to indicate the expected data types:
- `num:int` indicates an integer value representing the case count.
- `num:float` indicates a floating-point number representing cases per 100,000 people..
Here are some useful tips for answering:
When calculating distances between two geometries, use `ST_MakePoint(x, y)` to make a point and `ST_Distance(geometry1 GEOMETRY, geometry2 GEOMETRY)` to compute. No need to convert from meters to miles unless requested. Don't use Haversine like 2 * 6371000 * ASIN(...), use ST_DISTANCE for more precise results.
Please refrain from adding any conditions that are not explicitly specified in the task.
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
Be careful one country may have different names in different columns in a database.
When handling TO_TIMESTAMP_NTZ conversions, use query like: SELECT CASE WHEN "date" >= 1e15 THEN TO_TIMESTAMP_NTZ("date" / 1000000) WHEN "date" >= 1e12 THEN TO_TIMESTAMP_NTZ("date" / 1000) ELSE TO_TIMESTAMP_NTZ("date") END AS parsed_timestamp FROM my_table;
Be careful of information in nested JSON columns. e.g.1. When it comes to active users, it refers to has engagement_time_msec parameter rather than directly counting users. So the right query is: SELECT DISTINCT USER_PSEUDO_ID FROM all_user_activity, LATERAL FLATTEN(input => event_params) AS flattened_params WHERE flattened_params.value:key = 'engagement_time_msec'
e.g. When it comes to top-selling product, you should pay attention to hits2.value:"eCommerceAction":"action_type"::INTEGER = 6 where 6 means sold product.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When counting for rows of a column, ensure they are distinct: SELECT COUNT(DISTINCT col_name) FROM table;
Keep all decimals to four decimal places.

2025-01-16 02:15:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:15:16 - root - INFO - To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the United States, France, China, Italy, Spain, Germany, and Iran, the following SQL query can be used:

```sql
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      WHEN "country_region" = 'Iran' THEN 'Iran, Islamic Rep.'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT "country_name" AS "country", "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
```

This query calculates:

- **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
- **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population, rounded to four decimal places.
2025-01-16 02:15:16 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:15:16 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:15:16 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:15:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 02:15:18 - snowflake.connector.connection - INFO - closed
2025-01-16 02:15:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:15:18 - root - INFO - itercount: 1
2025-01-16 02:15:18 - root - INFO - 0
2025-01-16 02:15:18 - root - INFO - results: 
country,total_confirmed_cases,cases_per_100000
China,83817,5.9406
Italy,181228,304.3086
United States,784326,238.0467
"Iran, Islamic Rep.",83505,99.4191
Spain,200210,422.816
Germany,147065,176.6748
France,156480,232.1952


2025-01-16 02:15:18 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the United States, France, China, Italy, Spain, Germany, and Iran, the data is presented below:

```csv
country,total_confirmed_cases,cases_per_100000
United States,num:int,num:float
France,num:int,num:float
China,num:int,num:float
Italy,num:int,num:float
Spain,num:int,num:float
Germany,num:int,num:float
Iran,num:int,num:float
```

In this table:

- **country**: The name of the country.
- **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
- **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population. This value is a floating-point number rounded to four decimal places.

Since the actual numerical values are not provided in the task description, placeholders are used to indicate the expected data types:
- `num:int` indicates an integer value representing the case count.
- `num:float` indicates a floating-point number representing cases per 100,000 people. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
country,total_confirmed_cases,cases_per_100000
China,83817,5.9406
Italy,181228,304.3086
United States,784326,238.0467
"Iran, Islamic Rep.",83505,99.4191
Spain,200210,422.816
Germany,147065,176.6748
France,156480,232.1952
Current sql:
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      WHEN "country_region" = 'Iran' THEN 'Iran, Islamic Rep.'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT "country_name" AS "country", "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
2025-01-16 02:15:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:15:51 - root - INFO - To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the United States, France, China, Italy, Spain, Germany, and Iran, the data is presented below:

```csv
country,total_confirmed_cases,cases_per_100000
United States,784326,238.0467
France,156480,232.1952
China,83817,5.9406
Italy,181228,304.3086
Spain,200210,422.8160
Germany,147065,176.6748
Iran,83505,99.4191
```

```sql
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT
    CASE
      WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
      ELSE "country_name"
    END AS "country",
    "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
```
2025-01-16 02:15:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:15:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:15:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:15:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 02:15:53 - snowflake.connector.connection - INFO - closed
2025-01-16 02:15:53 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:15:53 - root - INFO - itercount: 2
2025-01-16 02:15:53 - root - INFO - 0
2025-01-16 02:15:53 - root - INFO - results: 
country,total_confirmed_cases,cases_per_100000
China,83817,5.9406
Italy,181228,304.3086
United States,784326,238.0467
Iran,83505,99.4191
Spain,200210,422.816
Germany,147065,176.6748
France,156480,232.1952


2025-01-16 02:15:53 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the United States, France, China, Italy, Spain, Germany, and Iran, the data is presented below:

```csv
country,total_confirmed_cases,cases_per_100000
United States,num:int,num:float
France,num:int,num:float
China,num:int,num:float
Italy,num:int,num:float
Spain,num:int,num:float
Germany,num:int,num:float
Iran,num:int,num:float
```

In this table:

- **country**: The name of the country.
- **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
- **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population. This value is a floating-point number rounded to four decimal places.

Since the actual numerical values are not provided in the task description, placeholders are used to indicate the expected data types:
- `num:int` indicates an integer value representing the case count.
- `num:float` indicates a floating-point number representing cases per 100,000 people. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
country,total_confirmed_cases,cases_per_100000
China,83817,5.9406
Italy,181228,304.3086
United States,784326,238.0467
Iran,83505,99.4191
Spain,200210,422.816
Germany,147065,176.6748
France,156480,232.1952
Current sql:
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT
    CASE
      WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
      ELSE "country_name"
    END AS "country",
    "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
2025-01-16 02:16:37 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-16 02:16:37 - root - INFO - To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2020 population) on April 20, 2020, for the United States, France, China, Italy, Spain, Germany, and Iran, the data is presented below:

```csv
country,total_confirmed_cases,cases_per_100000
United States,num:int,num:float
France,num:int,num:float
China,num:int,num:float
Italy,num:int,num:float
Spain,num:int,num:float
Germany,num:int,num:float
Iran,num:int,num:float
```

In this table:

- **country**: The name of the country.
- **total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020.
- **cases_per_100000**: The number of cases per 100,000 people, calculated using the 2020 population. This value is a floating-point number rounded to four decimal places.

Here is the final SQL query:

```sql
WITH cases AS (
  SELECT
    CASE
      WHEN "country_region" = 'US' THEN 'United States'
      ELSE "country_region"
    END AS "country",
    SUM("confirmed") AS "total_confirmed_cases"
  FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
  WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
  GROUP BY "country_region"
),
population AS (
  SELECT
    CASE
      WHEN "country_name" = 'Iran, Islamic Rep.' THEN 'Iran'
      ELSE "country_name"
    END AS "country",
    "value" AS "population_2020"
  FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
  WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2020 AND "country_name" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran, Islamic Rep.')
)
SELECT
  c."country",
  c."total_confirmed_cases",
  ROUND((c."total_confirmed_cases" / p."population_2020") * 100000, 4) AS "cases_per_100000"
FROM cases c
JOIN population p ON c."country" = p."country";
```
2025-01-16 02:16:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.38-x86_64-with-glibc2.31
2025-01-16 02:16:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-16 02:16:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-16 02:16:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-16 02:16:39 - snowflake.connector.connection - INFO - closed
2025-01-16 02:16:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-16 02:16:39 - root - INFO - itercount: 3
2025-01-16 02:16:39 - root - INFO - 0
2025-01-16 02:16:39 - root - INFO - Total iteration counts: 3
