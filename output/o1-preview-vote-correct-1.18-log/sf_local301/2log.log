2025-01-19 16:10:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 16:11:02 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 16:11:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:04 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 16:11:04 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:04 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:04 - root - INFO - SQL:
SELECT DISTINCT "calendar_year"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Results:
calendar_year
2020
2019
2018

2025-01-19 16:11:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-19 16:11:06 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:06 - root - INFO - SQL:
SELECT DISTINCT "month_number"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Results:
month_number
8
7
5
4
3
9
6

2025-01-19 16:11:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-19 16:11:08 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:08 - root - INFO - SQL:
SELECT DISTINCT "week_number"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Results:
week_number
36
35
34
33
32
31
30
29
27
26
25
24
23
22
20
19
18
17
16
15
14
28
21
13

2025-01-19 16:11:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-19 16:11:09 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:10 - root - INFO - SQL:
SELECT DISTINCT "week_date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Results:
week_date
2020-08-31
2020-08-24
2020-08-17
2020-08-10
2020-08-03
2020-07-27
2020-07-20
2020-07-13
2020-07-06
2020-06-29
2020-06-22
2020-06-15
2020-06-08
2020-05-25
2020-05-11
2020-06-01
2020-05-04
2020-04-27
2020-04-20
2020-04-06
2020-03-30
2020-03-23
2019-08-19
2019-08-12
2019-07-29
2019-07-08
2019-08-26
2019-07-01
2019-06-24
2019-06-17
2019-06-10
2019-05-20
2019-04-29
2019-04-22
2019-04-15
2019-04-08
2018-08-27
2018-08-13
2018-07-16
2018-05-28
2018-05-21
2018-06-11
2018-04-09
2020-05-18
2020-04-13
2019-09-02
2019-08-05
2019-07-15
2019-07-22
2019-05-27
2019-05-13
2019-04-01
2019-03-25
2018-09-03
2018-08-20
2018-07-30
2018-07-23
2018-07-09
2018-07-02
2018-06-25
2018-06-18
2018-06-04
2018-05-07
2018-04-30
2018-04-23
2018-04-16
2019-06-03
2018-08-06
2018-05-14
2018-04-02
2018-03-26
2019-05-06

2025-01-19 16:11:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 72
2025-01-19 16:11:11 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:11 - root - INFO - SQL:
SELECT DISTINCT "week_date_formatted"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Results:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26

2025-01-19 16:11:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 951
2025-01-19 16:11:13 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:13 - root - INFO - SQL:
SELECT "week_number", "sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "month_number" = 6
   LIMIT 1000;
Results:
Too long, hard cut:
week_number,sales
26,4784320
26,980247
26,610184
26,9058
26,2430726
26,4494
26,411615
26,1498072
26,42924
26,14335
26,3053553
26,3402800
26,98731
26,1539
26,41931
26,5977
26,2303157
26,4781297
26,26129
26,9957
26,13031
26,4080
26,2306973
26,413182
26,17831
26,12307
26,20453
26,77985
26,24996545
26,33563
26,23649
26,55407
26,307
26,2234500
26,27885
26,3347
26,8297875
26,793
26,120340
26,8577
26,33831
26,7356
26,289806
26,62243
26,1626236
26,163954
26,75114
26,8360
26,57084
26,7758
26,1103704
26,8636
26,33131
26,2547864
26,577
26,102674
26,149138
26,822356
26,109946
26,4242076
26,10552
26,7651
26,184592
26,1672173
26,78511
26,2849696
26,26683
26,8738789
26,26824
26,608274
26,3499
26,21378
26,71114
26,18917331
26,27001
26,186687
26,495391
26,198274
26,23955
26,362831
26,180084
26,73791
26,70410
26,17804
26,886397
26,7339088
26,293192
26,14113
26,18254
26,11552
26,12842306
26,2056991
26,36666
26,11898455
26,3812138
26,2995554
26,20224
26,680840
26,15158401
26,2203439
26,31522
26,9473
26,181791
26,45843
26,257011
26,15290107
26,5052582
26,2126186
26,26513
26,21468
26,1360266
26,4671
26,31719
26,1228824
26,16287
26,7479
26,1044691
26,64697
26,12781
26,6080231
26,938392
26,193426
26,2589
26,527867
26,8045
26,1947375
26,16995
26,1029085
26,865735
26,189722
26,490531
26,31208
26,255432
26,2144210
26,3565999
26,76181
26,1109831
26,880686
26,387252
26,19202
26,148551
26,427332
26,1512
26,2008147
26,24546
26,1710862
26,8792
26,4334
26,270323
26,46239
26,32404
26,305064
26,273410
26,6105
26,7767057
26,1868502
26,351
26,1662
26,3805316
26,57987
26,1521003
26,6587
26,82190
26,1207888
26,814784
26,13030
26,13684262
26,28555
26,10405
26,4490049
26,24295
26,24061
26,2568012
26,3739885
26,3587807
26,2770
26,463048
26,18376
26,885815
26,200901
26,15435775
26,3903411
26,1363225
26,1524
26,12284532
26,1678010
26,23466
26,2513401
26,457754
26,1305
26,300916
26,54056
26,52609
26,24949
26,3363509
26,440274
26,43259
26,440
26,781083
26,1171
26,633015
26,6255
26,119007
26,17581490
26,136428
26,2367537
26,4742107
26,291230
26,346
26,969548
26,833039
26,673560
26,4510759
26,1073
26,35723
26,5985851
26,6412949
26,4914683
26,2826
26,2346
26,210460
26,108496
26,46154511
26,314869
26,302838
26,886488
26,430708
26,52896
26,35581
26,152531
26,44370
26,25017
26,4896922
26,45790
26,750447
26,46194251
26,516576
26,62201935
25,850432
25,197694
25,48079
25,259145
25,1356
25,1955977
25,47811
25,1662663
25,9473
25,2843857
25,23047
25,67618
25,23077
25,371060
25,15160887
25,32768
25,997110
25,828629
25,961163
25,959705
25,902
25,7330858
25,271923
25,6678
25,210278
25,2584766
25,85501
25,10315
25,421769
25,15602
25,2579875
25,456644
25,3881100
25,860
25,1211160
25,1666337
25,7861845
25,9017
25,3537336
25,19658
25,15311
25,425500
25,34585
25,79162
25,2357121
25,18209
25,8134
25,2265293
25,803668
25,795835
25,664600
25,1658568
25,13484
25,327
25,1058214
25,1107562
25,4870238
25,315628
25,13646
25,488271
25,28212
25,44510
25,31776
25,5340
25,2573164
25,3661933
25,302317
25,11600
25,1030
25,17059012
25,145593
25,5946149
25,5118566
25,15883778
25,41548
25,2840
25,847409
25,26297
25,22527
25,197425
25,414396
25,820352
25,4518036
25,1996
25,4019488
25,826425
25,3112868
25,19322
25,2219349
25,122037
25,1433817
25,254111
25,24270
25,9378
25,13722765
25,29986
25,32007
25,3809105
25,16771
25,189337
25,2266992
25,416233
25,19742
25,42166
25,5115228
25,45611
25,5126
25,61254136
25,1330225
25,15812417
25,946829
25,207222
25,28100
25,618063
25,3941
25,23680
25,11955
25,453266
25,214792
25,60353
25,880765
25,41134
25,527226
25,12695412
25,208196
25,12443714
25,1612884
25,28471
25,80241
25,3441752
25,1482
25,31762
25,3773
25,305528
25,40363
25,3441435
25,90633
25,585020
25,44482
25,651
25,963560
25,6486448
25,3837630
25,824225
25,11620945
25,3849727
25,13047
25,4254
25,72819
25,2051876
25,44907107
25,4679278
25,812
25,302549
25,6023914
25,56398
25,136090
25,8886725
25,104999
25,25928
25,28658
25,1120194
25,7525
25,1086293
25,1881965
25,21373
25,387
25,18755
25,2067
25,9278
25,5904
25,104743
25,102178
25,29102
25,39321
25,4679260
25,261018
25,23965
25,439
25,39276
25,522977
25,559317
25,25347367
25,38763
25,9878
25,606125
25,69800
25,4424311
25,334947
25,212302
25,9987
25,80
25,57252
25,83426
25,9134
25,80628
25,278976
25,166890
25,76496
25,18651
25,8464278
25,3273
25,2486017
25,5845
25,55071
25,1394355
25,4092
25,19556
25,45742866
25,188761
25,540429
25,80615
25,21662
25,675620
25,29865
25,171013
25,18867353
25,3006562
25,3772
25,61451
25,10829
25,306649
25,2126689
25,2499
25,2094249
25,11301
25,1506931
25,12594
25,146373
25,112501
25,30354
25,2199296
25,1483
25,4916648
25,409931
25,2009778
25,36241
25,9418
24,8872
24,599428
24,3376
24,9067
24,1106388
24,11342
24,26129
24,4981850
24,2503852
24,7784
24,37087
24,21396
24,25158
24,11434
24,5089
24,13407541
24,147672
24,2295726
24,4348
24,24241
24,75934
24,16319647
24,28537
24,10046
24,425176
24,18162
24,3833
24,315
24,1112686
24,18746
24,7553
24,14155
24,204864
24,20648
24,6992
24,874977
24,8892
24,19120
24,45937
24,590

2025-01-19 16:11:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 13
2025-01-19 16:11:15 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:15 - root - INFO - SQL:
SELECT DISTINCT "week_number", "week_date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "month_number" IN (5,6,7)
   ORDER BY "week_number"
   LIMIT 1000;
Results:
week_number,week_date
19,2018-05-07
20,2018-05-14
21,2018-05-21
22,2018-05-28
23,2018-06-04
24,2018-06-11
25,2018-06-18
26,2018-06-25
27,2018-07-02
28,2018-07-09
29,2018-07-16
30,2018-07-23
31,2018-07-30

2025-01-19 16:11:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 24
2025-01-19 16:11:17 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:17 - root - INFO - SQL:
SELECT "week_number", SUM("sales") AS "total_sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018
   GROUP BY "week_number"
   ORDER BY "week_number"
   LIMIT 1000;
Results:
week_number,total_sales
13,536755452
14,541167115
15,529574544
16,526355503
17,536075195
18,539632290
19,534072854
20,527788555
21,522377362
22,544417653
23,525086015
24,533259779
25,524368733
26,525737676
27,532366710
28,546769795
29,541086855
30,547653578
31,539321534
32,549636536
33,543535235
34,544330787
35,553039709
36,552971362

2025-01-19 16:11:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 949
2025-01-19 16:11:18 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:19 - root - INFO - SQL:
SELECT "week_number", "sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 20 AND 23
   LIMIT 1000;
Results:
Too long, hard cut:
week_number,sales
23,856954
23,17430358
23,90749
23,338624
23,608
23,11888324
23,3860699
23,3156
23,4119
23,1611020
23,193013
23,304043
23,20111
23,190508
23,8557
23,479062
23,660944
23,46330
23,3278
23,208182
23,25295650
23,27450
23,102197
23,383314
23,574447
23,9098
23,68874
23,2129350
23,19407
23,324667
23,52156
23,3658363
23,18960302
23,35244
23,12739
23,3090
23,4528994
23,965704
23,1152276
23,40963
23,1061363
23,550332
23,16291305
23,1457
23,6437696
23,20366
23,1336703
23,494802
23,607760
23,5344
23,3809465
23,402367
23,7721
23,42021
23,5119429
23,111185
23,1057671
23,292374
23,31994
23,9916
23,2791326
23,50960
23,73568
23,3710
23,266610
23,2486850
23,69228
23,800087
23,663412
23,393291
23,7913
23,869539
23,19187
23,24085
23,191161
23,1037209
23,1341643
23,17652
23,15921694
23,9027
23,3605
23,7369145
23,9022027
23,2986
23,35954
23,3380788
23,1841
23,23315
23,47601107
23,11115
23,49018
23,2101527
23,177194
23,281226
23,394845
23,27136
23,27151
23,1665650
23,19649
23,3933619
23,2972
23,4631754
23,2184400
23,23367
23,16316
23,2329823
23,1150047
23,237733
23,266010
23,18084
23,29609
23,4725136
23,46317
23,964865
23,186052
23,8738062
23,3093577
23,1125
23,1631288
23,69615
23,4584414
23,1042963
23,3548973
23,1924468
23,20452
23,166
23,2254951
23,589621
23,27111
23,866909
23,30454
23,4217
23,4950802
23,1417
23,7321
23,63074384
23,37373
23,15095995
23,55807
23,11810
23,721566
23,30436
23,267182
23,7843
23,2079950
23,897
23,215433
23,58389
23,4228448
23,195120
23,701349
23,32389
23,109452
23,31594
23,289
23,5812133
23,1392
23,9197
23,10787
23,72380
23,30155
23,2686875
23,1807
23,13351676
23,6012
23,2433
23,3691016
23,1307
23,143841
23,749
23,82832
23,812605
23,8876
23,3394128
23,107912
23,182710
23,45603939
23,11893
23,464256
23,11305312
23,10713
23,267449
23,488696
23,36945
23,1430325
23,912720
23,125463
23,5942
23,2609117
23,1816121
23,816880
23,20404
23,43208
23,1637433
23,314628
23,128650
23,2288325
23,23237
23,1971041
23,20124
23,44199
23,23084
23,7809982
23,12067
23,12709
23,24814
23,173530
23,930704
23,13444926
23,25270
23,64934
23,2048224
23,5031450
23,32955
23,5941108
23,72732
23,165882
23,9053
23,3675214
23,56417
23,781760
23,12048
23,27541
23,2543396
23,457234
23,1480
23,45486
23,70614
23,11448
23,728035
23,1883
23,182468
23,44894
23,2438662
23,364634
23,18949
23,435243
22,857575
22,830383
22,43034
22,402822
22,17808
22,1438
22,10163
22,91863
22,318004
22,737
22,12146474
22,18235
22,30909
22,656497
22,3071
22,53804
22,786982
22,10187
22,30942
22,44086
22,577899
22,972624
22,81985
22,26449
22,957400
22,67463
22,2326315
22,38039
22,9366
22,193306
22,25524
22,4152648
22,2394158
22,181582
22,26995
22,27661
22,3152502
22,1116797
22,8126
22,1379571
22,40082
22,7060800
22,10353
22,1829187
22,83148
22,1698018
22,425238
22,69503
22,202206
22,1673914
22,55376
22,365
22,5316774
22,2004277
22,29721
22,14562
22,65199
22,28404
22,1032258
22,1077330
22,22626
22,16671869
22,1670773
22,1314
22,40833
22,2836
22,702821
22,8842
22,1453692
22,32089
22,1644
22,32193
22,18529
22,5921454
22,952619
22,211301
22,2102
22,1105510
22,3701240
22,521
22,1693322
22,2205
22,16555964
22,2231123
22,376951
22,13909975
22,788576
22,3993638
22,7583169
22,4732694
22,239687
22,217140
22,2433165
22,1148273
22,999755
22,64232172
22,42878
22,66483
22,18714
22,4759954
22,2223083
22,412447
22,7996654
22,8860
22,3001
22,36997
22,2176941
22,285777
22,19709
22,417832
22,3742256
22,3841
22,9276681
22,463544
22,1251588
22,4137
22,15353024
22,27832
22,77918
22,881980
22,14407
22,529834
22,28255
22,64986
22,639864
22,5601
22,6996
22,315994
22,5299
22,32948
22,79663
22,835812
22,330393
22,2405
22,11355
22,53756
22,606987
22,5062331
22,7460
22,674759
22,3406278
22,28157
22,6127882
22,2551781
22,2499600
22,190814
22,2544642
22,112813
22,34705
22,5064106
22,102999
22,1581
22,117423
22,37566
22,8866637
22,169284
22,2701754
22,572145
22,1867
22,3278109
22,29596
22,27200
22,33395
22,46741
22,24621
22,205215
22,17663982
22,11977
22,190133
22,1457927
22,11976
22,2198177
22,21534
22,40
22,44028
22,4581513
22,2006
22,1096227
22,8017
22,13702321
22,28801
22,275421
22,63149
22,2683360
22,12221
22,72543
22,46899443
22,332124
22,7000
22,146653
22,9265
22,324465
22,19766899
22,25936971
22,908950
22,32827
22,228815
22,266701
22,1651
22,166673
22,7045
22,2326746
22,110972
22,10454
22,12385273
22,1731029
22,429109
22,25654
22,3500242
22,1998
22,48166047
22,5170653
22,10294
22,2988108
22,311280
22,3792541
22,72314
22,149134
22,1465
22,601405
22,566401
22,1148910
22,209584
22,3754776
22,4490779
22,2475
22,16177
22,76060
22,67708
22,10382
22,15432
22,7897
22,3959951
22,567321
22,322146
22,113183
22,24015
21,27476
21,21068
21,7781097
21,15907
21,40773
21,2172498
21,372903
21,2149075
21,20920
21,1586
21,10170
21,17997
21,2199
21,62492
21,19333
21,2144631
21,820002
21,2919
21,451
21,7490
21,660500
21,4658478
21,169166
21,20306
21,30578
21,2264303
21,469536
21,34346
21,43782
21,19220
21,66910
21,8842
21,2491437
21,108399
21,14001
21,67817
21,3284958
21,311368
21,630759
21,2847

2025-01-19 16:11:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:11:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:11:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:11:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 951
2025-01-19 16:11:20 - snowflake.connector.connection - INFO - closed
2025-01-19 16:11:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:11:20 - root - INFO - SQL:
SELECT "week_number", "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 24 AND 27
    LIMIT 1000;
Results:
Too long, hard cut:
week_number,sales
27,61516
27,417290
27,311
27,58179
27,20606
27,8640
27,1103996
27,2261211
27,16067
27,3976
27,595119
27,35136
27,4940
27,9579773
27,2101076
27,10932
27,10532
27,1028
27,1458781
27,34843
27,3594
27,72197
27,17549
27,2488231
27,1064605
27,114424
27,972231
27,21479
27,2060
27,9815
27,150798
27,8538
27,3391
27,1738
27,312208
27,58519
27,12400256
27,90096
27,1668196
27,36824
27,29844
27,378137
27,805
27,72772
27,823945
27,78681
27,298344
27,12688
27,26988
27,1772871
27,66012
27,19694
27,2162174
27,587483
27,21970
27,882433
27,31410
27,172531
27,72305
27,19430
27,392751
27,3734124
27,151164
27,35977
27,2657739
27,61358
27,1321934
27,44909
27,32363
27,6701
27,2829134
27,167142
27,77161
27,17367
27,11773858
27,2017
27,193448
27,2409638
27,4965183
27,3414909
27,75
27,317247
27,4873913
27,138990
27,24498
27,823507
27,732475
27,243203
27,55827
27,23875
27,4199507
27,140318
27,25804
27,25516
27,2114505
27,4948129
27,391032
27,4301452
27,24254378
27,1004596
27,798980
27,45067
27,47126
27,2011882
27,1705994
27,6484
27,824361
27,12104
27,51161
27,24549
27,418
27,4721225
27,8281
27,602088
27,8221
27,14914829
27,6363287
27,24290
27,18812
27,14472389
27,783794
27,13526914
27,29442
27,161419
27,81007
27,2903970
27,19856184
27,3030975
27,8383
27,40597
27,15915
27,641145
27,207980
27,999039
27,271097
27,3721612
27,6992004
27,4421584
27,981
27,44734
27,121519
27,24133
27,1257
27,2525138
27,61291
27,907660
27,1191148
27,1359459
27,6128351
27,29076
27,15129284
27,32708
27,49236
27,1642965
27,3758
27,3413981
27,617176
27,4570
27,7681
27,497846
27,4669146
27,263286
27,104972
27,3992057
27,508396
27,968454
27,120046
27,7685867
27,47672971
27,2403843
27,873396
27,212819
27,38691
27,3760995
27,4419
27,9077
27,1050236
27,27245
27,7492
27,10131
27,3384911
27,1302
27,71943
27,925549
27,6014139
27,10597
27,3922
27,2012819
27,28954
27,5008521
27,9293
27,435727
27,30940
27,16227
27,47410247
27,289279
27,1610525
27,316366
27,16615371
27,1331199
27,894
27,3916
27,42732
27,2239658
27,644857
27,1643822
27,62124771
27,35453
27,7935
27,4895
27,509700
27,204574
27,409548
27,17450
27,8920939
27,98577
27,15830
27,2514058
27,443661
27,563
27,456939
27,10334
27,183867
27,214183
27,4260
27,24309
27,267940
27,182416
27,10758
27,326471
27,485057
27,3927517
27,2498131
27,306634
27,27395
27,17675530
27,82263
26,4784320
26,980247
26,610184
26,9058
26,2430726
26,4494
26,411615
26,1498072
26,42924
26,14335
26,3053553
26,3402800
26,98731
26,1539
26,41931
26,5977
26,2303157
26,4781297
26,26129
26,9957
26,13031
26,4080
26,2306973
26,413182
26,17831
26,12307
26,20453
26,77985
26,24996545
26,33563
26,23649
26,55407
26,307
26,2234500
26,27885
26,3347
26,8297875
26,793
26,120340
26,8577
26,33831
26,7356
26,289806
26,62243
26,1626236
26,163954
26,75114
26,8360
26,57084
26,7758
26,1103704
26,8636
26,33131
26,2547864
26,577
26,102674
26,149138
26,822356
26,109946
26,4242076
26,10552
26,7651
26,184592
26,1672173
26,78511
26,2849696
26,26683
26,8738789
26,26824
26,608274
26,3499
26,21378
26,71114
26,18917331
26,27001
26,186687
26,495391
26,198274
26,23955
26,362831
26,180084
26,73791
26,70410
26,17804
26,886397
26,7339088
26,293192
26,14113
26,18254
26,11552
26,12842306
26,2056991
26,36666
26,11898455
26,3812138
26,2995554
26,20224
26,680840
26,15158401
26,2203439
26,31522
26,9473
26,181791
26,45843
26,257011
26,15290107
26,5052582
26,2126186
26,26513
26,21468
26,1360266
26,4671
26,31719
26,1228824
26,16287
26,7479
26,1044691
26,64697
26,12781
26,6080231
26,938392
26,193426
26,2589
26,527867
26,8045
26,1947375
26,16995
26,1029085
26,865735
26,189722
26,490531
26,31208
26,255432
26,2144210
26,3565999
26,76181
26,1109831
26,880686
26,387252
26,19202
26,148551
26,427332
26,1512
26,2008147
26,24546
26,1710862
26,8792
26,4334
26,270323
26,46239
26,32404
26,305064
26,273410
26,6105
26,7767057
26,1868502
26,351
26,1662
26,3805316
26,57987
26,1521003
26,6587
26,82190
26,1207888
26,814784
26,13030
26,13684262
26,28555
26,10405
26,4490049
26,24295
26,24061
26,2568012
26,3739885
26,3587807
26,2770
26,463048
26,18376
26,885815
26,200901
26,15435775
26,3903411
26,1363225
26,1524
26,12284532
26,1678010
26,23466
26,2513401
26,457754
26,1305
26,300916
26,54056
26,52609
26,24949
26,3363509
26,440274
26,43259
26,440
26,781083
26,1171
26,633015
26,6255
26,119007
26,17581490
26,136428
26,2367537
26,4742107
26,291230
26,346
26,969548
26,833039
26,673560
26,4510759
26,1073
26,35723
26,5985851
26,6412949
26,4914683
26,2826
26,2346
26,210460
26,108496
26,46154511
26,314869
26,302838
26,886488
26,430708
26,52896
26,35581
26,152531
26,44370
26,25017
26,4896922
26,45790
26,750447
26,46194251
26,516576
26,62201935
25,850432
25,197694
25,48079
25,259145
25,1356
25,1955977
25,47811
25,1662663
25,9473
25,2843857
25,23047
25,67618
25,23077
25,371060
25,15160887
25,32768
25,997110
25,828629
25,961163
25,959705
25,902
25,7330858
25,271923
25,6678
25,210278
25,2584766
25,85501
25,10315
25,421769
25,15602
25,2579875
25,456644
25,3881100
25,860
25,1211160
25,1666337
25,7861845
25,9017
25,35

2025-01-19 16:11:20 - root - INFO - itercount: 0
2025-01-19 16:11:20 - root - INFO - Database Name: BANK_SALES_TRADING
Schema Name: BANK_SALES_TRADING
DDL describes table information.
,0
table_name,INTEREST_MAP
description,
DDL,"create or replace TABLE INTEREST_MAP (
	""id"" NUMBER(38,0),
	""interest_name"" VARCHAR(16777216),
	""interest_summary"" VARCHAR(16777216),
	""created_at"" VARCHAR(16777216),
	""last_modified"" VARCHAR(16777216)
);"

,1
table_name,INTEREST_METRICS
description,
DDL,"create or replace TABLE INTEREST_METRICS (
	""_month"" FLOAT,
	""_year"" FLOAT,
	""month_year"" VARCHAR(16777216),
	""interest_id"" FLOAT,
	""composition"" FLOAT,
	""index_value"" FLOAT,
	""ranking"" NUMBER(38,0),
	""percentile_ranking"" FLOAT
);"

,2
table_name,BITCOIN_PRICES
description,
DDL,"create or replace TABLE BITCOIN_PRICES (
	""ticker"" VARCHAR(16777216),
	""market_date"" VARCHAR(16777216),
	""price"" FLOAT,
	""open"" FLOAT,
	""high"" FLOAT,
	""low"" FLOAT,
	""volume"" VARCHAR(16777216),
	""change"" VARCHAR(16777216)
);"

,3
table_name,SHOPPING_CART_CAMPAIGN_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_CAMPAIGN_IDENTIFIER (
	""campaign_id"" NUMBER(38,0),
	""products"" VARCHAR(16777216),
	""campaign_name"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,4
table_name,SHOPPING_CART_EVENT_IDENTIFIER
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENT_IDENTIFIER (
	""event_type"" NUMBER(38,0),
	""event_name"" VARCHAR(16777216)
);"

,5
table_name,VEG_CAT
description,
DDL,"create or replace TABLE VEG_CAT (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""category_code"" NUMBER(38,0),
	""category_name"" VARCHAR(16777216)
);"

,6
table_name,VEG_WHSLE_DF
description,
DDL,"create or replace TABLE VEG_WHSLE_DF (
	""index"" NUMBER(38,0),
	""whsle_date"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""whsle_px_rmb-kg"" FLOAT
);"

,7
table_name,BITCOIN_TRANSACTIONS
description,
DDL,"create or replace TABLE BITCOIN_TRANSACTIONS (
	""txn_id"" NUMBER(38,0),
	""member_id"" VARCHAR(16777216),
	""ticker"" VARCHAR(16777216),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""quantity"" FLOAT,
	""percentage_fee"" FLOAT,
	""txn_time"" VARCHAR(16777216)
);"

,8
table_name,SHOPPING_CART_EVENTS
description,
DDL,"create or replace TABLE SHOPPING_CART_EVENTS (
	""visit_id"" VARCHAR(16777216),
	""cookie_id"" VARCHAR(16777216),
	""page_id"" NUMBER(38,0),
	""event_type"" NUMBER(38,0),
	""sequence_number"" NUMBER(38,0),
	""event_time"" VARCHAR(16777216)
);"

,9
table_name,VEG_LOSS_RATE_DF
description,
DDL,"create or replace TABLE VEG_LOSS_RATE_DF (
	""index"" NUMBER(38,0),
	""item_code"" NUMBER(38,0),
	""item_name"" VARCHAR(16777216),
	""loss_rate_%"" FLOAT
);"

,10
table_name,CUSTOMER_NODES
description,
DDL,"create or replace TABLE CUSTOMER_NODES (
	""customer_id"" NUMBER(38,0),
	""region_id"" NUMBER(38,0),
	""node_id"" NUMBER(38,0),
	""start_date"" VARCHAR(16777216),
	""end_date"" VARCHAR(16777216)
);"

,11
table_name,WEEKLY_SALES
description,
DDL,"create or replace TABLE WEEKLY_SALES (
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0)
);"

,12
table_name,BITCOIN_MEMBERS
description,
DDL,"create or replace TABLE BITCOIN_MEMBERS (
	""member_id"" VARCHAR(16777216),
	""first_name"" VARCHAR(16777216),
	""region"" VARCHAR(16777216)
);"

,13
table_name,CLEANED_WEEKLY_SALES
description,
DDL,"create or replace TABLE CLEANED_WEEKLY_SALES (
	""week_date_formatted"" VARCHAR(16777216),
	""week_date"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""platform"" VARCHAR(16777216),
	""segment"" VARCHAR(16777216),
	""customer_type"" VARCHAR(16777216),
	""transactions"" NUMBER(38,0),
	""sales"" NUMBER(38,0),
	""week_number"" NUMBER(38,0),
	""month_number"" NUMBER(38,0),
	""calendar_year"" NUMBER(38,0),
	""age_band"" VARCHAR(16777216),
	""demographic"" VARCHAR(16777216),
	""avg_transaction"" FLOAT
);"

,14
table_name,CUSTOMER_REGIONS
description,
DDL,"create or replace TABLE CUSTOMER_REGIONS (
	""region_id"" NUMBER(38,0),
	""region_name"" VARCHAR(16777216)
);"

,15
table_name,CUSTOMER_TRANSACTIONS
description,
DDL,"create or replace TABLE CUSTOMER_TRANSACTIONS (
	""customer_id"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_type"" VARCHAR(16777216),
	""txn_amount"" NUMBER(38,0)
);"

,16
table_name,SHOPPING_CART_USERS
description,
DDL,"create or replace TABLE SHOPPING_CART_USERS (
	""user_id"" NUMBER(38,0),
	""cookie_id"" VARCHAR(16777216),
	""start_date"" VARCHAR(16777216)
);"

,17
table_name,VEG_TXN_DF
description,
DDL,"create or replace TABLE VEG_TXN_DF (
	""index"" NUMBER(38,0),
	""txn_date"" VARCHAR(16777216),
	""txn_time"" VARCHAR(16777216),
	""item_code"" NUMBER(38,0),
	""qty_sold(kg)"" FLOAT,
	""unit_selling_px_rmb/kg"" FLOAT,
	""sale/return"" VARCHAR(16777216),
	""discount(%)"" NUMBER(38,0),
	""day_of_week"" VARCHAR(16777216)
);"

,18
table_name,SHOPPING_CART_PAGE_HIERARCHY
description,
DDL,"create or replace TABLE SHOPPING_CART_PAGE_HIERARCHY (
	""page_id"" NUMBER(38,0),
	""page_name"" VARCHAR(16777216),
	""product_category"" VARCHAR(16777216),
	""product_id"" FLOAT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}
Begin Exploring Related Columns
Sure! Let's consider the relevant tables, columns, and potential usage for the task.

**Relevant Table:**
- **"CLEANED_WEEKLY_SALES"**

**Relevant Columns and Potential Usage:**
- **"calendar_year"**: Used to filter data for the years 2018, 2019, and 2020.
- **"week_number"**: Helps identify the weeks before and after June 15.
- **"month_number"**: Used to confirm the months around June (month 6).
- **"week_date"**: May provide the starting date of each week for more precise filtering.
- **"week_date_formatted"**: Possibly formatted date for easier date operations.
- **"sales"**: The sales amount; required to calculate total sales and percentage changes.
- **"transactions"**: Number of transactions; might be useful for additional analysis.
- **Conditions that may be used**:
  - `"calendar_year" IN (2018, 2019, 2020)`
  - Filtering weeks based on `"week_number"` to get four weeks before and after June 15.
  - Using `"month_number"` to focus on June and adjacent months.

---

Here are 10 simple SQL queries to understand the data:

1. **Get distinct years available in the data:**
   ```sql
   SELECT DISTINCT "calendar_year"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
   ```

2. **Get distinct month numbers:**
   ```sql
   SELECT DISTINCT "month_number"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
   ```

3. **Get distinct week numbers:**
   ```sql
   SELECT DISTINCT "week_number"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
   ```

4. **View sample week dates to understand the format:**
   ```sql
   SELECT DISTINCT "week_date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
   ```

5. **View sample formatted week dates:**
   ```sql
   SELECT DISTINCT "week_date_formatted"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
   ```

6. **Get sales data for June 2018:**
   ```sql
   SELECT "week_number", "sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "month_number" = 6
   LIMIT 1000;
   ```

7. **Get week numbers around mid-June for 2018:**
   ```sql
   SELECT DISTINCT "week_number", "week_date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "month_number" IN (5,6,7)
   ORDER BY "week_number"
   LIMIT 1000;
   ```

8. **Get total sales per week for 2018:**
   ```sql
   SELECT "week_number", SUM("sales") AS "total_sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018
   GROUP BY "week_number"
   ORDER BY "week_number"
   LIMIT 1000;
   ```

9. **Check sales data four weeks before June 15, 2018:**
   ```sql
   SELECT "week_number", "sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 20 AND 23
   LIMIT 1000;
   ```

10. **Check sales data four weeks after June 15, 2018:**
    ```sql
    SELECT "week_number", "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 24 AND 27
    LIMIT 1000;
    ```

These queries help in understanding the structure of the data, the format of dates, and the week numbers corresponding to our period of interest. This information is essential to accurately calculate the percentage changes in sales around mid-June for the years 2018, 2019, and 2020.Query:
SELECT DISTINCT "calendar_year"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Answer:
calendar_year
2020
2019
2018
Query:
SELECT DISTINCT "month_number"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Answer:
month_number
8
7
5
4
3
9
6
Query:
SELECT DISTINCT "week_number"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Answer:
week_number
36
35
34
33
32
31
30
29
27
26
25
24
23
22
20
19
18
17
16
15
14
28
21
13
Query:
SELECT DISTINCT "week_date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Answer:
week_date
2020-08-31
2020-08-24
2020-08-17
2020-08-10
2020-08-03
2020-07-27
2020-07-20
2020-07-13
2020-07-06
2020-06-29
2020-06-22
2020-06-15
2020-06-08
2020-05-25
2020-05-11
2020-06-01
2020-05-04
2020-04-27
2020-04-20
2020-04-06
2020-03-30
2020-03-23
2019-08-19
2019-08-12
2019-07-29
2019-07-08
2019-08-26
2019-07-01
2019-06-24
2019-06-17
2019-06-10
2019-05-20
2019-04-29
2019-04-22
2019-04-15
2019-04-08
2018-08-27
2018-08-13
2018-07-16
2018-05-28
2018-05-21
2018-06-11
2018-04-09
2020-05-18
2020-04-13
2019-09-02
2019-08-05
2019-07-15
2019-07-22
2019-05-27
2019-05-13
2019-04-01
2019-03-25
2018-09-03
2018-08-20
2018-07-30
2018-07-23
2018-07-09
2018-07-02
2018-06-25
2018-06-18
2018-06-04
2018-05-07
2018-04-30
2018-04-23
2018-04-16
2019-06-03
2018-08-06
2018-05-14
2018-04-02
2018-03-26
2019-05-06
Query:
SELECT DISTINCT "week_date_formatted"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   LIMIT 1000;
Answer:
week_date_formatted
2020-8-31
2020-8-24
2020-8-17
2020-8-10
2020-8-3
2020-7-27
2020-7-20
2020-7-13
2020-7-6
2020-6-29
2020-6-22
2020-6-15
2020-6-8
2020-5-25
2020-5-18
2020-5-11
2020-4-13
2020-4-6
2019-9-2
2019-8-26
2019-8-19
2019-7-29
2019-7-15
2019-7-1
2019-8-12
2019-7-8
2019-6-24
2019-5-20
2019-5-13
2019-5-6
2019-4-29
2019-4-22
2019-4-15
2019-4-8
2019-4-1
2018-9-3
2018-8-6
2018-7-2
2018-6-4
2018-5-28
2018-5-21
2018-4-23
2018-4-2
2020-6-1
2020-5-4
2020-4-27
2020-4-20
2020-3-23
2019-8-5
2019-7-22
2019-6-17
2019-6-10
2019-5-27
2018-8-27
2018-8-20
2018-8-13
2018-7-30
2018-7-23
2018-7-16
2018-7-9
2018-6-11
2018-5-14
2018-4-30
2018-4-16
2020-3-30
2019-6-3
2019-3-25
2018-6-25
2018-6-18
2018-5-7
2018-4-9
2018-3-26
Query:
SELECT "week_number", "sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "month_number" = 6
   LIMIT 1000;
Answer:
Too long, hard cut:
week_number,sales
26,4784320
26,980247
26,610184
26,9058
26,2430726
26,4494
26,411615
26,1498072
26,42924
26,14335
26,3053553
26,3402800
26,98731
26,1539
26,41931
26,5977
26,2303157
26,4781297
26,26129
26,9957
26,13031
26,4080
26,2306973
26,413182
26,17831
26,12307
26,20453
26,77985
26,24996545
26,33563
26,23649
26,55407
26,307
26,2234500
26,27885
26,3347
26,8297875
26,793
26,120340
26,8577
26,33831
26,7356
26,289806
26,62243
26,1626236
26,163954
26,75114
26,8360
26,57084
26,7758
26,1103704
26,8636
26,33131
26,2547864
26,577
26,102674
26,149138
26,822356
26,109946
26,4242076
26,10552
26,7651
26,184592
26,1672173
26,78511
26,2849696
26,26683
26,8738789
26,26824
26,608274
26,3499
26,21378
26,71114
26,18917331
26,27001
26,186687
26,495391
26,198274
26,23955
26,362831
26,180084
26,73791
26,70410
26,17804
26,886397
26,7339088
26,293192
26,14113
26,18254
26,11552
26,12842306
26,2056991
26,36666
26,11898455
26,3812138
26,2995554
26,20224
26,680840
26,15158401
26,2203439
26,31522
26,9473
26,181791
26,45843
26,257011
26,15290107
26,5052582
26,2126186
26,26513
26,21468
26,1360266
26,4671
26,31719
26,1228824
26,16287
26,7479
26,1044691
26,64697
26,12781
26,6080231
26,938392
26,193426
26,2589
26,527867
26,8045
26,1947375
26,16995
26,1029085
26,865735
26,189722
26,490531
26,31208
26,255432
26,2144210
26,3565999
26,76181
26,1109831
26,880686
26,387252
26,19202
26,148551
26,427332
26,1512
26,2008147
26,24546
26,1710862
26,8792
26,4334
26,270323
26,46239
26,32404
26,305064
26,273410
26,6105
26,7767057
26,1868502
26,351
26,1662
26,3805316
26,57987
26,1521003
26,6587
26,82190
26,1207888
26,814784
26,13030
26,13684262
26,28555
26,10405
26,4490049
26,24295
26,24061
26,2568012
26,3739885
26,3587807
26,2770
26,463048
26,18376
26,885815
26,200901
26,15435775
26,3903411
26,1363225
26,1524
26,12284532
26,1678010
26,23466
26,2513401
26,457754
26,1305
26,300916
26,54056
26,52609
26,24949
26,3363509
26,440274
26,43259
26,440
26,781083
26,1171
26,633015
26,6255
26,119007
26,17581490
26,136428
26,2367537
26,4742107
26,291230
26,346
26,969548
26,833039
26,673560
26,4510759
26,1073
26,35723
26,5985851
26,6412949
26,4914683
26,2826
26,2346
26,210460
26,108496
26,46154511
26,314869
26,302838
26,886488
26,430708
26,52896
26,35581
26,152531
26,44370
26,25017
26,4896922
26,45790
26,750447
26,46194251
26,516576
26,62201935
25,850432
25,197694
25,48079
25,259145
25,1356
25,1955977
25,47811
25,1662663
25,9473
25,2843857
25,23047
25,67618
25,23077
25,371060
25,15160887
25,32768
25,997110
25,828629
25,961163
25,959705
25,902
25,7330858
25,271923
25,6678
25,210278
25,2584766
25,85501
25,10315
25,421769
25,15602
25,2579875
25,456644
25,3881100
25,860
25,1211160
25,1666337
25,7861845
25,9017
25,3537336
25,19658
25,15311
25,425500
25,34585
25,79162
25,2357121
25,18209
25,8134
25,2265293
25,803668
25,795835
25,664600
25,1658568
25,13484
25,327
25,1058214
25,1107562
25,4870238
25,315628
25,13646
25,488271
25,28212
25,44510
25,31776
25,5340
25,2573164
25,3661933
25,302317
25,11600
25,1030
25,17059012
25,145593
25,5946149
25,5118566
25,15883778
25,41548
25,2840
25,847409
25,26297
25,22527
25,197425
25,414396
25,820352
25,4518036
25,1996
25,4019488
25,826425
25,3112868
25,19322
25,2219349
25,122037
25,1433817
25,254111
25,24270
25,9378
25,13722765
25,29986
25,32007
25,3809105
25,16771
25,189337
25,2266992
25,416233
25,19742
25,42166
25,5115228
25,45611
25,5126
25,61254136
25,1330225
25,15812417
25,946829
25,207222
25,28100
25,618063
25,3941
25,23680
25,11955
25,453266
25,214792
25,60353
25,880765
25,41134
25,527226
25,12695412
25,208196
25,12443714
25,1612884
25,28471
25,80241
25,3441752
25,1482
25,31762
25,3773
25,305528
25,40363
25,3441435
25,90633
25,585020
25,44482
25,651
25,963560
25,6486448
25,3837630
25,824225
25,11620945
25,3849727
25,13047
25,4254
25,72819
25,2051876
25,44907107
25,4679278
25,812
25,302549
25,6023914
25,56398
25,136090
25,8886725
25,104999
25,25928
25,28658
25,1120194
25,7525
25,1086293
25,1881965
25,21373
25,387
25,18755
25,2067
25,9278
25,5904
25,104743
25,102178
25,29102
25,39321
25,4679260
25,261018
25,23965
25,439
25,39276
25,522977
25,559317
25,25347367
25,38763
25,9878
25,606125
25,69800
25,4424311
25,334947
25,212302
25,9987
25,80
25,57252
25,83426
25,9134
25,80628
25,278976
25,166890
25,76496
25,18651
25,8464278
25,3273
25,2486017
25,5845
25,55071
25,1394355
25,4092
25,19556
25,45742866
25,188761
25,540429
25,80615
25,21662
25,675620
25,29865
25,171013
25,18867353
25,3006562
25,3772
25,61451
25,10829
25,306649
25,2126689
25,2499
25,2094249
25,11301
25,1506931
25,12594
25,146373
25,112501
25,30354
25,2199296
25,1483
25,4916648
25,409931
25,2009778
25,36241
25,9418
24,8872
24,599428
24,3376
24,9067
24,1106388
24,11342
24,26129
24,4981850
24,2503852
24,7784
24,37087
24,21396
24,25158
24,11434
24,5089
24,13407541
24,147672
24,2295726
24,4348
24,24241
24,75934
24,16319647
24,28537
24,10046
24,425176
24,18162
24,3833
24,315
24,1112686
24,18746
24,7553
24,14155
24,204864
24,20648
24,6992
24,874977
24,8892
24,19120
24,45937
24,590
Query:
SELECT DISTINCT "week_number", "week_date"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "month_number" IN (5,6,7)
   ORDER BY "week_number"
   LIMIT 1000;
Answer:
week_number,week_date
19,2018-05-07
20,2018-05-14
21,2018-05-21
22,2018-05-28
23,2018-06-04
24,2018-06-11
25,2018-06-18
26,2018-06-25
27,2018-07-02
28,2018-07-09
29,2018-07-16
30,2018-07-23
31,2018-07-30
Query:
SELECT "week_number", SUM("sales") AS "total_sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018
   GROUP BY "week_number"
   ORDER BY "week_number"
   LIMIT 1000;
Answer:
week_number,total_sales
13,536755452
14,541167115
15,529574544
16,526355503
17,536075195
18,539632290
19,534072854
20,527788555
21,522377362
22,544417653
23,525086015
24,533259779
25,524368733
26,525737676
27,532366710
28,546769795
29,541086855
30,547653578
31,539321534
32,549636536
33,543535235
34,544330787
35,553039709
36,552971362
Query:
SELECT "week_number", "sales"
   FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
   WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 20 AND 23
   LIMIT 1000;
Answer:
Too long, hard cut:
week_number,sales
23,856954
23,17430358
23,90749
23,338624
23,608
23,11888324
23,3860699
23,3156
23,4119
23,1611020
23,193013
23,304043
23,20111
23,190508
23,8557
23,479062
23,660944
23,46330
23,3278
23,208182
23,25295650
23,27450
23,102197
23,383314
23,574447
23,9098
23,68874
23,2129350
23,19407
23,324667
23,52156
23,3658363
23,18960302
23,35244
23,12739
23,3090
23,4528994
23,965704
23,1152276
23,40963
23,1061363
23,550332
23,16291305
23,1457
23,6437696
23,20366
23,1336703
23,494802
23,607760
23,5344
23,3809465
23,402367
23,7721
23,42021
23,5119429
23,111185
23,1057671
23,292374
23,31994
23,9916
23,2791326
23,50960
23,73568
23,3710
23,266610
23,2486850
23,69228
23,800087
23,663412
23,393291
23,7913
23,869539
23,19187
23,24085
23,191161
23,1037209
23,1341643
23,17652
23,15921694
23,9027
23,3605
23,7369145
23,9022027
23,2986
23,35954
23,3380788
23,1841
23,23315
23,47601107
23,11115
23,49018
23,2101527
23,177194
23,281226
23,394845
23,27136
23,27151
23,1665650
23,19649
23,3933619
23,2972
23,4631754
23,2184400
23,23367
23,16316
23,2329823
23,1150047
23,237733
23,266010
23,18084
23,29609
23,4725136
23,46317
23,964865
23,186052
23,8738062
23,3093577
23,1125
23,1631288
23,69615
23,4584414
23,1042963
23,3548973
23,1924468
23,20452
23,166
23,2254951
23,589621
23,27111
23,866909
23,30454
23,4217
23,4950802
23,1417
23,7321
23,63074384
23,37373
23,15095995
23,55807
23,11810
23,721566
23,30436
23,267182
23,7843
23,2079950
23,897
23,215433
23,58389
23,4228448
23,195120
23,701349
23,32389
23,109452
23,31594
23,289
23,5812133
23,1392
23,9197
23,10787
23,72380
23,30155
23,2686875
23,1807
23,13351676
23,6012
23,2433
23,3691016
23,1307
23,143841
23,749
23,82832
23,812605
23,8876
23,3394128
23,107912
23,182710
23,45603939
23,11893
23,464256
23,11305312
23,10713
23,267449
23,488696
23,36945
23,1430325
23,912720
23,125463
23,5942
23,2609117
23,1816121
23,816880
23,20404
23,43208
23,1637433
23,314628
23,128650
23,2288325
23,23237
23,1971041
23,20124
23,44199
23,23084
23,7809982
23,12067
23,12709
23,24814
23,173530
23,930704
23,13444926
23,25270
23,64934
23,2048224
23,5031450
23,32955
23,5941108
23,72732
23,165882
23,9053
23,3675214
23,56417
23,781760
23,12048
23,27541
23,2543396
23,457234
23,1480
23,45486
23,70614
23,11448
23,728035
23,1883
23,182468
23,44894
23,2438662
23,364634
23,18949
23,435243
22,857575
22,830383
22,43034
22,402822
22,17808
22,1438
22,10163
22,91863
22,318004
22,737
22,12146474
22,18235
22,30909
22,656497
22,3071
22,53804
22,786982
22,10187
22,30942
22,44086
22,577899
22,972624
22,81985
22,26449
22,957400
22,67463
22,2326315
22,38039
22,9366
22,193306
22,25524
22,4152648
22,2394158
22,181582
22,26995
22,27661
22,3152502
22,1116797
22,8126
22,1379571
22,40082
22,7060800
22,10353
22,1829187
22,83148
22,1698018
22,425238
22,69503
22,202206
22,1673914
22,55376
22,365
22,5316774
22,2004277
22,29721
22,14562
22,65199
22,28404
22,1032258
22,1077330
22,22626
22,16671869
22,1670773
22,1314
22,40833
22,2836
22,702821
22,8842
22,1453692
22,32089
22,1644
22,32193
22,18529
22,5921454
22,952619
22,211301
22,2102
22,1105510
22,3701240
22,521
22,1693322
22,2205
22,16555964
22,2231123
22,376951
22,13909975
22,788576
22,3993638
22,7583169
22,4732694
22,239687
22,217140
22,2433165
22,1148273
22,999755
22,64232172
22,42878
22,66483
22,18714
22,4759954
22,2223083
22,412447
22,7996654
22,8860
22,3001
22,36997
22,2176941
22,285777
22,19709
22,417832
22,3742256
22,3841
22,9276681
22,463544
22,1251588
22,4137
22,15353024
22,27832
22,77918
22,881980
22,14407
22,529834
22,28255
22,64986
22,639864
22,5601
22,6996
22,315994
22,5299
22,32948
22,79663
22,835812
22,330393
22,2405
22,11355
22,53756
22,606987
22,5062331
22,7460
22,674759
22,3406278
22,28157
22,6127882
22,2551781
22,2499600
22,190814
22,2544642
22,112813
22,34705
22,5064106
22,102999
22,1581
22,117423
22,37566
22,8866637
22,169284
22,2701754
22,572145
22,1867
22,3278109
22,29596
22,27200
22,33395
22,46741
22,24621
22,205215
22,17663982
22,11977
22,190133
22,1457927
22,11976
22,2198177
22,21534
22,40
22,44028
22,4581513
22,2006
22,1096227
22,8017
22,13702321
22,28801
22,275421
22,63149
22,2683360
22,12221
22,72543
22,46899443
22,332124
22,7000
22,146653
22,9265
22,324465
22,19766899
22,25936971
22,908950
22,32827
22,228815
22,266701
22,1651
22,166673
22,7045
22,2326746
22,110972
22,10454
22,12385273
22,1731029
22,429109
22,25654
22,3500242
22,1998
22,48166047
22,5170653
22,10294
22,2988108
22,311280
22,3792541
22,72314
22,149134
22,1465
22,601405
22,566401
22,1148910
22,209584
22,3754776
22,4490779
22,2475
22,16177
22,76060
22,67708
22,10382
22,15432
22,7897
22,3959951
22,567321
22,322146
22,113183
22,24015
21,27476
21,21068
21,7781097
21,15907
21,40773
21,2172498
21,372903
21,2149075
21,20920
21,1586
21,10170
21,17997
21,2199
21,62492
21,19333
21,2144631
21,820002
21,2919
21,451
21,7490
21,660500
21,4658478
21,169166
21,20306
21,30578
21,2264303
21,469536
21,34346
21,43782
21,19220
21,66910
21,8842
21,2491437
21,108399
21,14001
21,67817
21,3284958
21,311368
21,630759
21,2847
Query:
SELECT "week_number", "sales"
    FROM "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE "calendar_year" = 2018 AND "week_number" BETWEEN 24 AND 27
    LIMIT 1000;
Answer:
Too long, hard cut:
week_number,sales
27,61516
27,417290
27,311
27,58179
27,20606
27,8640
27,1103996
27,2261211
27,16067
27,3976
27,595119
27,35136
27,4940
27,9579773
27,2101076
27,10932
27,10532
27,1028
27,1458781
27,34843
27,3594
27,72197
27,17549
27,2488231
27,1064605
27,114424
27,972231
27,21479
27,2060
27,9815
27,150798
27,8538
27,3391
27,1738
27,312208
27,58519
27,12400256
27,90096
27,1668196
27,36824
27,29844
27,378137
27,805
27,72772
27,823945
27,78681
27,298344
27,12688
27,26988
27,1772871
27,66012
27,19694
27,2162174
27,587483
27,21970
27,882433
27,31410
27,172531
27,72305
27,19430
27,392751
27,3734124
27,151164
27,35977
27,2657739
27,61358
27,1321934
27,44909
27,32363
27,6701
27,2829134
27,167142
27,77161
27,17367
27,11773858
27,2017
27,193448
27,2409638
27,4965183
27,3414909
27,75
27,317247
27,4873913
27,138990
27,24498
27,823507
27,732475
27,243203
27,55827
27,23875
27,4199507
27,140318
27,25804
27,25516
27,2114505
27,4948129
27,391032
27,4301452
27,24254378
27,1004596
27,798980
27,45067
27,47126
27,2011882
27,1705994
27,6484
27,824361
27,12104
27,51161
27,24549
27,418
27,4721225
27,8281
27,602088
27,8221
27,14914829
27,6363287
27,24290
27,18812
27,14472389
27,783794
27,13526914
27,29442
27,161419
27,81007
27,2903970
27,19856184
27,3030975
27,8383
27,40597
27,15915
27,641145
27,207980
27,999039
27,271097
27,3721612
27,6992004
27,4421584
27,981
27,44734
27,121519
27,24133
27,1257
27,2525138
27,61291
27,907660
27,1191148
27,1359459
27,6128351
27,29076
27,15129284
27,32708
27,49236
27,1642965
27,3758
27,3413981
27,617176
27,4570
27,7681
27,497846
27,4669146
27,263286
27,104972
27,3992057
27,508396
27,968454
27,120046
27,7685867
27,47672971
27,2403843
27,873396
27,212819
27,38691
27,3760995
27,4419
27,9077
27,1050236
27,27245
27,7492
27,10131
27,3384911
27,1302
27,71943
27,925549
27,6014139
27,10597
27,3922
27,2012819
27,28954
27,5008521
27,9293
27,435727
27,30940
27,16227
27,47410247
27,289279
27,1610525
27,316366
27,16615371
27,1331199
27,894
27,3916
27,42732
27,2239658
27,644857
27,1643822
27,62124771
27,35453
27,7935
27,4895
27,509700
27,204574
27,409548
27,17450
27,8920939
27,98577
27,15830
27,2514058
27,443661
27,563
27,456939
27,10334
27,183867
27,214183
27,4260
27,24309
27,267940
27,182416
27,10758
27,326471
27,485057
27,3927517
27,2498131
27,306634
27,27395
27,17675530
27,82263
26,4784320
26,980247
26,610184
26,9058
26,2430726
26,4494
26,411615
26,1498072
26,42924
26,14335
26,3053553
26,3402800
26,98731
26,1539
26,41931
26,5977
26,2303157
26,4781297
26,26129
26,9957
26,13031
26,4080
26,2306973
26,413182
26,17831
26,12307
26,20453
26,77985
26,24996545
26,33563
26,23649
26,55407
26,307
26,2234500
26,27885
26,3347
26,8297875
26,793
26,120340
26,8577
26,33831
26,7356
26,289806
26,62243
26,1626236
26,163954
26,75114
26,8360
26,57084
26,7758
26,1103704
26,8636
26,33131
26,2547864
26,577
26,102674
26,149138
26,822356
26,109946
26,4242076
26,10552
26,7651
26,184592
26,1672173
26,78511
26,2849696
26,26683
26,8738789
26,26824
26,608274
26,3499
26,21378
26,71114
26,18917331
26,27001
26,186687
26,495391
26,198274
26,23955
26,362831
26,180084
26,73791
26,70410
26,17804
26,886397
26,7339088
26,293192
26,14113
26,18254
26,11552
26,12842306
26,2056991
26,36666
26,11898455
26,3812138
26,2995554
26,20224
26,680840
26,15158401
26,2203439
26,31522
26,9473
26,181791
26,45843
26,257011
26,15290107
26,5052582
26,2126186
26,26513
26,21468
26,1360266
26,4671
26,31719
26,1228824
26,16287
26,7479
26,1044691
26,64697
26,12781
26,6080231
26,938392
26,193426
26,2589
26,527867
26,8045
26,1947375
26,16995
26,1029085
26,865735
26,189722
26,490531
26,31208
26,255432
26,2144210
26,3565999
26,76181
26,1109831
26,880686
26,387252
26,19202
26,148551
26,427332
26,1512
26,2008147
26,24546
26,1710862
26,8792
26,4334
26,270323
26,46239
26,32404
26,305064
26,273410
26,6105
26,7767057
26,1868502
26,351
26,1662
26,3805316
26,57987
26,1521003
26,6587
26,82190
26,1207888
26,814784
26,13030
26,13684262
26,28555
26,10405
26,4490049
26,24295
26,24061
26,2568012
26,3739885
26,3587807
26,2770
26,463048
26,18376
26,885815
26,200901
26,15435775
26,3903411
26,1363225
26,1524
26,12284532
26,1678010
26,23466
26,2513401
26,457754
26,1305
26,300916
26,54056
26,52609
26,24949
26,3363509
26,440274
26,43259
26,440
26,781083
26,1171
26,633015
26,6255
26,119007
26,17581490
26,136428
26,2367537
26,4742107
26,291230
26,346
26,969548
26,833039
26,673560
26,4510759
26,1073
26,35723
26,5985851
26,6412949
26,4914683
26,2826
26,2346
26,210460
26,108496
26,46154511
26,314869
26,302838
26,886488
26,430708
26,52896
26,35581
26,152531
26,44370
26,25017
26,4896922
26,45790
26,750447
26,46194251
26,516576
26,62201935
25,850432
25,197694
25,48079
25,259145
25,1356
25,1955977
25,47811
25,1662663
25,9473
25,2843857
25,23047
25,67618
25,23077
25,371060
25,15160887
25,32768
25,997110
25,828629
25,961163
25,959705
25,902
25,7330858
25,271923
25,6678
25,210278
25,2584766
25,85501
25,10315
25,421769
25,15602
25,2579875
25,456644
25,3881100
25,860
25,1211160
25,1666337
25,7861845
25,9017
25,35
End Exploring Related Columns
Task: For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Year,Percentage_Change_in_Sales
2018,percentage_change_2018:float
2019,percentage_change_2019:float
2020,percentage_change_2020:float
```

We calculated the percentage change in sales between the four weeks before June 15 and the four weeks after June 15 for each year (2018, 2019, and 2020)..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BANK_SALES_TRADING': {'BANK_SALES_TRADING': ['BITCOIN_MEMBERS', 'BITCOIN_PRICES', 'BITCOIN_TRANSACTIONS', 'CLEANED_WEEKLY_SALES', 'CUSTOMER_NODES', 'CUSTOMER_REGIONS', 'CUSTOMER_TRANSACTIONS', 'INTEREST_MAP', 'INTEREST_METRICS', 'SHOPPING_CART_CAMPAIGN_IDENTIFIER', 'SHOPPING_CART_EVENTS', 'SHOPPING_CART_EVENT_IDENTIFIER', 'SHOPPING_CART_PAGE_HIERARCHY', 'SHOPPING_CART_USERS', 'VEG_CAT', 'VEG_LOSS_RATE_DF', 'VEG_TXN_DF', 'VEG_WHSLE_DF', 'WEEKLY_SALES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-19 16:12:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 16:12:06 - root - INFO - ```sql
WITH sales_data AS (
    SELECT 
        "calendar_year",
        TO_DATE("week_date", 'YYYY-MM-DD') AS "week_start_date",
        "sales"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020)
),
dates AS (
    SELECT
        "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD') AS "june15",
        DATEADD('day', -28, TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD')) AS "date_before",
        DATEADD('day', 27, TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD')) AS "date_after"
    FROM
        (SELECT DISTINCT "calendar_year" FROM sales_data)
),
sales_before AS (
    SELECT
        s."calendar_year",
        SUM(s."sales") AS "total_sales_before"
    FROM
        sales_data s
        JOIN dates d ON s."calendar_year" = d."calendar_year"
    WHERE
        s."week_start_date" BETWEEN d."date_before" AND DATEADD('day', -1, d."june15")
    GROUP BY
        s."calendar_year"
),
sales_after AS (
    SELECT
        s."calendar_year",
        SUM(s."sales") AS "total_sales_after"
    FROM
        sales_data s
        JOIN dates d ON s."calendar_year" = d."calendar_year"
    WHERE
        s."week_start_date" BETWEEN d."june15" AND d."date_after"
    GROUP BY
        s."calendar_year"
)
SELECT
    s_before."calendar_year" AS "Year",
    ROUND(((s_after."total_sales_after" - s_before."total_sales_before") / s_before."total_sales_before") * 100, 4) AS "Percentage_Change_in_Sales"
FROM
    sales_before s_before
    JOIN sales_after s_after ON s_before."calendar_year" = s_after."calendar_year"
ORDER BY
    "Year";
```
2025-01-19 16:12:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:12:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:12:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:12:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 16:12:08 - snowflake.connector.connection - INFO - closed
2025-01-19 16:12:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:12:08 - root - INFO - itercount: 1
2025-01-19 16:12:08 - root - INFO - 0
2025-01-19 16:12:08 - root - INFO - results: 
Year,Percentage_Change_in_Sales
2018,0.1930
2019,0.1038
2020,-1.1460


2025-01-19 16:12:08 - root - INFO - Please check the answer again by reviewing For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Year,Percentage_Change_in_Sales
2018,percentage_change_2018:float
2019,percentage_change_2019:float
2020,percentage_change_2020:float
```

We calculated the percentage change in sales between the four weeks before June 15 and the four weeks after June 15 for each year (2018, 2019, and 2020). The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Percentage_Change_in_Sales
2018,0.1930
2019,0.1038
2020,-1.1460
Current sql:
WITH sales_data AS (
    SELECT 
        "calendar_year",
        TO_DATE("week_date", 'YYYY-MM-DD') AS "week_start_date",
        "sales"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020)
),
dates AS (
    SELECT
        "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD') AS "june15",
        DATEADD('day', -28, TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD')) AS "date_before",
        DATEADD('day', 27, TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD')) AS "date_after"
    FROM
        (SELECT DISTINCT "calendar_year" FROM sales_data)
),
sales_before AS (
    SELECT
        s."calendar_year",
        SUM(s."sales") AS "total_sales_before"
    FROM
        sales_data s
        JOIN dates d ON s."calendar_year" = d."calendar_year"
    WHERE
        s."week_start_date" BETWEEN d."date_before" AND DATEADD('day', -1, d."june15")
    GROUP BY
        s."calendar_year"
),
sales_after AS (
    SELECT
        s."calendar_year",
        SUM(s."sales") AS "total_sales_after"
    FROM
        sales_data s
        JOIN dates d ON s."calendar_year" = d."calendar_year"
    WHERE
        s."week_start_date" BETWEEN d."june15" AND d."date_after"
    GROUP BY
        s."calendar_year"
)
SELECT
    s_before."calendar_year" AS "Year",
    ROUND(((s_after."total_sales_after" - s_before."total_sales_before") / s_before."total_sales_before") * 100, 4) AS "Percentage_Change_in_Sales"
FROM
    sales_before s_before
    JOIN sales_after s_after ON s_before."calendar_year" = s_after."calendar_year"
ORDER BY
    "Year";
2025-01-19 16:12:39 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 16:12:39 - root - INFO - ```sql
WITH sales_data AS (
    SELECT 
        "calendar_year",
        TO_DATE("week_date", 'YYYY-MM-DD') AS "week_start_date",
        "sales"
    FROM
        "BANK_SALES_TRADING"."BANK_SALES_TRADING"."CLEANED_WEEKLY_SALES"
    WHERE
        "calendar_year" IN (2018, 2019, 2020)
),
dates AS (
    SELECT
        "calendar_year",
        TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD') AS "june15",
        DATEADD('day', -28, TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD')) AS "date_before",
        DATEADD('day', 27, TO_DATE(CONCAT("calendar_year", '-06-15'), 'YYYY-MM-DD')) AS "date_after"
    FROM
        (SELECT DISTINCT "calendar_year" FROM sales_data)
),
sales_before AS (
    SELECT
        s."calendar_year",
        SUM(s."sales") AS "total_sales_before"
    FROM
        sales_data s
        JOIN dates d ON s."calendar_year" = d."calendar_year"
    WHERE
        s."week_start_date" BETWEEN d."date_before" AND DATEADD('day', -1, d."june15")
    GROUP BY
        s."calendar_year"
),
sales_after AS (
    SELECT
        s."calendar_year",
        SUM(s."sales") AS "total_sales_after"
    FROM
        sales_data s
        JOIN dates d ON s."calendar_year" = d."calendar_year"
    WHERE
        s."week_start_date" BETWEEN d."june15" AND d."date_after"
    GROUP BY
        s."calendar_year"
)
SELECT
    s_before."calendar_year" AS "Year",
    ROUND(((s_after."total_sales_after" - s_before."total_sales_before") / s_before."total_sales_before") * 100, 4) AS "Percentage_Change_in_Sales"
FROM
    sales_before s_before
    JOIN sales_after s_after ON s_before."calendar_year" = s_after."calendar_year"
ORDER BY
    "Year";
```
2025-01-19 16:12:39 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 16:12:39 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 16:12:39 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 16:12:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 16:12:40 - snowflake.connector.connection - INFO - closed
2025-01-19 16:12:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 16:12:41 - root - INFO - itercount: 2
2025-01-19 16:12:41 - root - INFO - 0
2025-01-19 16:12:41 - root - INFO - Total iteration counts: 2
