2025-01-19 00:53:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:54:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:54:32 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:54:32 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:54:32 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:54:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 00:54:34 - snowflake.connector.connection - INFO - closed
2025-01-19 00:54:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:54:34 - root - INFO - SQL:
SELECT DISTINCT "state_fips_code", "state_name"
   FROM BLS.GEO_US_BOUNDARIES.STATES
   WHERE "state_name" = 'Utah'
   LIMIT 1000;
Results:
state_fips_code,state_name
49,Utah

2025-01-19 00:54:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:54:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:54:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:54:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:54:36 - snowflake.connector.connection - INFO - closed
2025-01-19 00:54:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:54:36 - root - INFO - SQL:
SELECT DISTINCT "county_fips_code", "county_name"
   FROM BLS.GEO_US_BOUNDARIES.COUNTIES
   WHERE "state_fips_code" = '49'
   LIMIT 1000;
Results:
county_fips_code,county_name
49017,Garfield
49037,San Juan
49055,Wayne
49039,Sanpete
49033,Rich
49001,Beaver
49013,Duchesne
49041,Sevier
49027,Millard
49019,Grand
49051,Wasatch
49057,Weber
49029,Morgan
49007,Carbon
49049,Utah
49023,Juab
49053,Washington
49045,Tooele
49035,Salt Lake
49047,Uintah
49015,Emery
49025,Kane
49021,Iron
49003,Box Elder
49005,Cache
49031,Piute
49009,Daggett
49043,Summit
49011,Davis

2025-01-19 00:54:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:54:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:54:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:54:38 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:54:38 - snowflake.connector.connection - INFO - closed
2025-01-19 00:54:38 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:54:38 - root - INFO - SQL:
SELECT DISTINCT "geoid", "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Results:
geoid,area_fips,month3_emplvl_23_construction
49035,49035,33012.0
49057,49057,5419.0
49011,49011,6711.0
49053,49053,3969.0
49049,49049,9981.0
49005,49005,2076.0
49013,49013,247.0
49047,49047,451.0
49019,49019,260.0
49041,49041,382.0
49039,49039,319.0
49023,49023,145.0
49003,49003,897.0
49007,49007,239.0
49045,49045,532.0
49027,49027,65.0
49037,49037,217.0
49015,49015,254.0
49001,49001,107.0
49051,49051,593.0
49033,49033,27.0
49025,49025,113.0
49055,49055,88.0
49009,49009,
49031,49031,
49043,49043,1264.0
49021,49021,825.0
49029,49029,271.0
49017,49017,58.0

2025-01-19 00:54:38 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:54:38 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:54:38 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:54:40 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:54:40 - snowflake.connector.connection - INFO - closed
2025-01-19 00:54:40 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:54:41 - root - INFO - SQL:
SELECT DISTINCT "geoid", "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2018_Q4
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Results:
geoid,area_fips,month3_emplvl_23_construction
49053,49053,7772.0
49005,49005,2829.0
49011,49011,10704.0
49035,49035,40043.0
49057,49057,6922.0
49003,49003,1685.0
49021,49021,1288.0
49019,49019,295.0
49051,49051,1398.0
49043,49043,1854.0
49049,49049,24427.0
49039,49039,509.0
49045,49045,943.0
49047,49047,825.0
49029,49029,566.0
49025,49025,130.0
49007,49007,323.0
49023,49023,291.0
49037,49037,230.0
49055,49055,142.0
49031,49031,0.0
49009,49009,0.0
49017,49017,35.0
49033,49033,66.0
49001,49001,132.0
49013,49013,409.0
49041,49041,399.0
49027,49027,86.0
49015,49015,393.0

2025-01-19 00:54:41 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:54:41 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:54:41 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:54:42 - snowflake.connector.connection - INFO - closed
2025-01-19 00:54:42 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:55:07 - root - INFO - The error message you're encountering:

```
Cannot perform SELECT. This session does not have a current database. Call 'USE DATABASE', or use a qualified name.
```

indicates that your SQL session does not have a default database selected, so it doesn't know which `information_schema` to query. The `information_schema` is database-specific, and without specifying the database, the system cannot proceed.

**To resolve this issue, you have two options:**

---

### **Option 1: Specify the Database in Your Query**

Modify your query to include the database name before `INFORMATION_SCHEMA`. This way, you're explicitly telling the system which database's information schema to use.

**Revised Query:**

```sql
SELECT DISTINCT column_name
FROM BLS.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'BLS_QCEW' AND table_name = '_2000_Q1'
  AND column_name ILIKE '%construction%'
LIMIT 1000;
```

**Explanation:**

- By changing `information_schema.columns` to `BLS.INFORMATION_SCHEMA.COLUMNS`, you specify that you're querying the `information_schema` of the `BLS` database.
- This fully qualified table name removes ambiguity and informs the system exactly where to look for the schema information.

---

### **Option 2: Set the Current Database for Your Session**

Before running your query, set the default database for your session using the `USE DATABASE` command. After setting the database, you can run your original query without modifications.

**Step 1: Set the Database**

```sql
USE DATABASE BLS;
```

**Step 2: Run Your Original Query**

```sql
SELECT DISTINCT column_name
FROM information_schema.columns
WHERE table_schema = 'BLS_QCEW' AND table_name = '_2000_Q1'
  AND column_name ILIKE '%construction%'
LIMIT 1000;
```

**Explanation:**

- The `USE DATABASE BLS;` command sets `BLS` as your default database for the session.
- After setting the database, `information_schema` references the schema of the `BLS` database by default.
- There's no need to modify your original query when using this approach.

---

### **Additional Information**

- **Reason for the Error:** The system requires knowledge of which database's schema you're querying. Without a specified or default database, it cannot proceed.
- **When to Fully Qualify:** If you're working with multiple databases or want to avoid setting a default database, fully qualifying table names is a good practice.
- **Session Defaults:** Setting the default database may be preferable in interactive sessions or scripts where multiple queries will reference the same database.

---

**Proceeding with the Revised Query (Option 1):**

```sql
SELECT DISTINCT column_name
FROM BLS.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'BLS_QCEW' AND table_name = '_2000_Q1'
  AND column_name ILIKE '%construction%'
LIMIT 1000;
```

**Expected Results:**

This query will return a list of column names from the `_2000_Q1` table in the `BLS_QCEW` schema within the `BLS` database that include the word "construction" (case-insensitive). The `LIMIT 1000` ensures that you retrieve up to 1000 distinct column names matching the condition.

---

Feel free to choose the option that best fits your workflow. If you continue to experience issues, please ensure that:

- You have the necessary permissions to access the `BLS` database and its schemas.
- The database and schema names are correctly spelled and exist in your environment.
2025-01-19 00:55:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 12
2025-01-19 00:55:09 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:10 - root - INFO - SQL:
SELECT DISTINCT column_name
FROM BLS.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'BLS_QCEW' AND table_name = '_2000_Q1'
  AND column_name ILIKE '%construction%'
LIMIT 1000;
Results:
COLUMN_NAME
lq_avg_wkly_wage_1012_construction
lq_month3_emplvl_1012_construction
lq_avg_wkly_wage_23_construction
lq_qtrly_estabs_1012_construction
avg_wkly_wage_23_construction
avg_wkly_wage_1012_construction
month3_emplvl_23_construction
month3_emplvl_1012_construction
qtrly_estabs_1012_construction
lq_qtrly_estabs_23_construction
qtrly_estabs_23_construction
lq_month3_emplvl_23_construction

2025-01-19 00:55:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 00:55:11 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:12 - root - INFO - SQL:
SELECT "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" = '49001'
   LIMIT 1000;
Results:
month3_emplvl_23_construction
107.0

2025-01-19 00:55:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 00:55:13 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:14 - root - INFO - SQL:
SELECT "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2018_Q4
   WHERE "area_fips" = '49001'
   LIMIT 1000;
Results:
month3_emplvl_23_construction
132.0

2025-01-19 00:55:14 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:14 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:14 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:15 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:15 - root - INFO - SQL:
SELECT DISTINCT "area_fips"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Results:
area_fips
49035
49057
49011
49053
49049
49005
49013
49047
49019
49041
49039
49023
49003
49007
49045
49027
49037
49001
49029
49051
49033
49025
49009
49031
49055
49017
49043
49021
49015

2025-01-19 00:55:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:17 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:17 - root - INFO - SQL:
SELECT "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q2
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Results:
area_fips,month3_emplvl_23_construction
49057,5893.0
49049,10870.0
49035,36086.0
49011,7438.0
49053,4272.0
49005,2392.0
49043,1503.0
49021,984.0
49003,975.0
49007,295.0
49013,297.0
49045,686.0
49027,92.0
49047,517.0
49019,320.0
49041,412.0
49039,404.0
49023,184.0
49015,310.0
49037,204.0
49001,120.0
49029,316.0
49051,637.0
49025,150.0
49033,46.0
49055,103.0
49017,89.0
49009,
49031,

2025-01-19 00:55:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:19 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:19 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:19 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:19 - root - INFO - SQL:
SELECT "area_fips", "month3_emplvl_23_construction"
    FROM BLS.BLS_QCEW._2018_Q2
    WHERE "area_fips" LIKE '49%'
    LIMIT 1000;
Results:
area_fips,month3_emplvl_23_construction
49057,7093.0
49049,25228.0
49035,40902.0
49039,470.0
49003,1572.0
49021,1281.0
49051,1385.0
49019,310.0
49005,2940.0
49053,7714.0
49011,11128.0
49043,1875.0
49013,510.0
49007,334.0
49041,388.0
49023,307.0
49017,36.0
49047,826.0
49029,585.0
49045,981.0
49025,120.0
49037,250.0
49055,158.0
49031,0.0
49009,0.0
49015,374.0
49001,170.0
49027,119.0
49033,81.0

2025-01-19 00:55:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 2
2025-01-19 00:55:20 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:21 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:21 - root - INFO - SQL:
SELECT "area_fips"
    FROM BLS.BLS_QCEW._2000_Q1
    WHERE "area_fips" LIKE '49%' AND "month3_emplvl_23_construction" IS NULL
    LIMIT 1000;
Results:
area_fips
49009
49031

2025-01-19 00:55:21 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:21 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:21 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:23 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:23 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:23 - root - INFO - SQL:
SELECT "area_fips", AVG("month3_emplvl_23_construction") AS avg_employment_2000
    FROM (
      SELECT * FROM BLS.BLS_QCEW._2000_Q1 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q2 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q3 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q4
    ) AS t
    WHERE "area_fips" LIKE '49%'
    GROUP BY "area_fips"
    LIMIT 1000;
Results:
area_fips,AVG_EMPLOYMENT_2000
49035,34824.25
49057,5669.75
49011,7098.25
49053,4129.5
49049,10466.25
49043,1431.75
49013,312.75
49047,514.0
49019,290.75
49023,172.25
49021,893.25
49003,953.75
49007,268.75
49027,74.5
49037,208.0
49015,277.75
49029,290.0
49051,624.0
49025,131.5
49055,94.0
49017,80.0
49009,
49031,
49005,2227.25
49041,391.0
49001,109.5
49033,36.75
49039,371.25
49045,602.0

2025-01-19 00:55:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:25 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:26 - root - INFO - SQL:
SELECT "area_fips", AVG("month3_emplvl_23_construction") AS avg_employment_2018
    FROM (
      SELECT * FROM BLS.BLS_QCEW._2018_Q1 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q2 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q3 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q4
    ) AS t
    WHERE "area_fips" LIKE '49%'
    GROUP BY "area_fips"
    LIMIT 1000;
Results:
area_fips,AVG_EMPLOYMENT_2018
49049,24692.25
49011,10776.0
49035,40227.0
49051,1347.0
49021,1256.5
49003,1627.5
49057,6906.0
49043,1802.5
49053,7616.25
49047,815.25
49019,302.25
49029,559.0
49025,122.5
49007,339.25
49023,293.5
49055,143.25
49027,104.0
49031,4.0
49015,385.25
49013,449.25
49037,239.25
49009,1.5
49017,37.75
49005,2815.5
49045,942.75
49001,153.75
49033,67.75
49039,468.25
49041,383.5

2025-01-19 00:55:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:27 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:28 - root - INFO - SQL:
SELECT c."county_name", q."area_fips"
    FROM BLS.GEO_US_BOUNDARIES.COUNTIES c
    JOIN BLS.BLS_QCEW._2000_Q1 q ON c."county_fips_code" = q."area_fips"
    WHERE c."state_fips_code" = '49'
    LIMIT 1000;
Results:
county_name,area_fips
Salt Lake,49035
Weber,49057
Davis,49011
Washington,49053
Utah,49049
Cache,49005
Summit,49043
Duchesne,49013
Uintah,49047
Grand,49019
Sevier,49041
Sanpete,49039
Juab,49023
Iron,49021
Box Elder,49003
Carbon,49007
Tooele,49045
Millard,49027
San Juan,49037
Emery,49015
Beaver,49001
Morgan,49029
Wasatch,49051
Rich,49033
Kane,49025
Wayne,49055
Garfield,49017
Daggett,49009
Piute,49031

2025-01-19 00:55:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:55:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:55:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:55:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 29
2025-01-19 00:55:29 - snowflake.connector.connection - INFO - closed
2025-01-19 00:55:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:55:29 - root - INFO - SQL:
SELECT "area_fips", "qtrly_estabs_23_construction"
    FROM BLS.BLS_QCEW._2000_Q1
    WHERE "area_fips" LIKE '49%'
    LIMIT 1000;
Results:
area_fips,qtrly_estabs_23_construction
49035,3929.0
49057,781.0
49011,861.0
49053,624.0
49049,1636.0
49005,446.0
49043,306.0
49013,60.0
49047,93.0
49019,45.0
49041,75.0
49039,80.0
49023,29.0
49021,184.0
49003,147.0
49007,53.0
49045,92.0
49027,28.0
49037,33.0
49015,31.0
49001,24.0
49029,49.0
49051,163.0
49033,11.0
49025,32.0
49055,15.0
49017,17.0
49009,
49031,

2025-01-19 00:55:29 - root - INFO - itercount: 0
2025-01-19 00:55:29 - root - INFO - Database Name: BLS
Schema Name: BLS
DDL describes table information.
,0
table_name,CPI_U
description,
DDL,"create or replace TABLE CPI_U (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""survey_abbreviation"" VARCHAR(16777216),
	""seasonal_code"" VARCHAR(16777216),
	""periodicity_code"" VARCHAR(16777216),
	""area_code"" VARCHAR(16777216),
	""area_name"" VARCHAR(16777216),
	""item_code"" VARCHAR(16777216),
	""item_name"" VARCHAR(16777216),
	""date"" DATE
);"

,1
table_name,UNEMPLOYMENT_CPS_SERIES
description,
DDL,"create or replace TABLE UNEMPLOYMENT_CPS_SERIES (
	""series_id"" VARCHAR(16777216),
	""lfst_code"" NUMBER(38,0),
	""periodicity_code"" VARCHAR(16777216),
	""series_title"" VARCHAR(16777216),
	""absn_code"" NUMBER(38,0),
	""activity_code"" NUMBER(38,0),
	""ages_code"" NUMBER(38,0),
	""class_code"" NUMBER(38,0),
	""duration_code"" NUMBER(38,0),
	""education_code"" NUMBER(38,0),
	""entr_code"" NUMBER(38,0),
	""expr_code"" NUMBER(38,0),
	""hheader_code"" NUMBER(38,0),
	""hour_code"" NUMBER(38,0),
	""indy_code"" NUMBER(38,0),
	""jdes_code"" NUMBER(38,0),
	""look_code"" NUMBER(38,0),
	""mari_code"" NUMBER(38,0),
	""mjhs_code"" NUMBER(38,0),
	""occupation_code"" NUMBER(38,0),
	""orig_code"" NUMBER(38,0),
	""pcts_code"" NUMBER(38,0),
	""race_code"" NUMBER(38,0),
	""rjnw_code"" NUMBER(38,0),
	""rnlf_code"" NUMBER(38,0),
	""rwns_code"" NUMBER(38,0),
	""seek_code"" NUMBER(38,0),
	""sexs_code"" NUMBER(38,0),
	""tdat_code"" NUMBER(38,0),
	""vets_code"" NUMBER(38,0),
	""wkst_code"" NUMBER(38,0),
	""born_code"" NUMBER(38,0),
	""chld_code"" NUMBER(38,0),
	""disa_code"" NUMBER(38,0),
	""seasonal"" VARCHAR(16777216),
	""footnote_codes"" VARCHAR(16777216),
	""begin_year"" NUMBER(38,0),
	""begin_period"" VARCHAR(16777216),
	""end_year"" NUMBER(38,0),
	""end_period"" VARCHAR(16777216),
	""cert_code"" NUMBER(38,0)
);"

,2
table_name,C_CPI_U
description,
DDL,"create or replace TABLE C_CPI_U (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""survey_abbreviation"" VARCHAR(16777216),
	""seasonal_code"" VARCHAR(16777216),
	""periodicity_code"" VARCHAR(16777216),
	""area_code"" VARCHAR(16777216),
	""area_name"" VARCHAR(16777216),
	""item_code"" VARCHAR(16777216),
	""item_name"" VARCHAR(16777216),
	""date"" DATE
);"

,3
table_name,EMPLOYMENT_HOURS_EARNINGS
description,
DDL,"create or replace TABLE EMPLOYMENT_HOURS_EARNINGS (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""date"" DATE,
	""series_title"" VARCHAR(16777216)
);"

,4
table_name,CPSAAT18
description,
DDL,"create or replace TABLE CPSAAT18 (
	""year"" NUMBER(38,0),
	""sector"" VARCHAR(16777216),
	""subsector"" VARCHAR(16777216),
	""industry_group"" VARCHAR(16777216),
	""industry"" VARCHAR(16777216),
	""total_employed_in_thousands"" NUMBER(38,0),
	""percent_women"" FLOAT,
	""percent_white"" FLOAT,
	""percent_black_or_african_american"" FLOAT,
	""percent_asian"" FLOAT,
	""percent_hispanic_or_latino"" FLOAT
);"

,5
table_name,EMPLOYMENT_HOURS_EARNINGS_SERIES
description,
DDL,"create or replace TABLE EMPLOYMENT_HOURS_EARNINGS_SERIES (
	""series_id"" VARCHAR(16777216),
	""supersector_code"" NUMBER(38,0),
	""industry_code"" NUMBER(38,0),
	""data_type_code"" NUMBER(38,0),
	""seasonal"" VARCHAR(16777216),
	""series_title"" VARCHAR(16777216),
	""footnote_codes"" VARCHAR(16777216),
	""begin_year"" NUMBER(38,0),
	""begin_period"" VARCHAR(16777216),
	""end_year"" NUMBER(38,0),
	""end_period"" VARCHAR(16777216)
);"

,6
table_name,UNEMPLOYMENT_CPS
description,
DDL,"create or replace TABLE UNEMPLOYMENT_CPS (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""date"" DATE,
	""series_title"" VARCHAR(16777216)
);"

,7
table_name,WM
description,
DDL,"create or replace TABLE WM (
	""series_id"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""period"" VARCHAR(16777216),
	""value"" FLOAT,
	""footnote_codes"" VARCHAR(16777216),
	""date"" DATE,
	""series_title"" VARCHAR(16777216)
);"

,8
table_name,WM_SERIES
description,
DDL,"create or replace TABLE WM_SERIES (
	""series_id"" VARCHAR(16777216),
	""seasonal"" VARCHAR(16777216),
	""area_code"" NUMBER(38,0),
	""ownership_code"" NUMBER(38,0),
	""estimate_code"" NUMBER(38,0),
	""industry_code"" NUMBER(38,0),
	""occupation_code"" NUMBER(38,0),
	""subcell_code"" NUMBER(38,0),
	""datatype_code"" NUMBER(38,0),
	""level_code"" NUMBER(38,0),
	""series_title"" VARCHAR(16777216),
	""footnote_codes"" VARCHAR(16777216),
	""begin_year"" NUMBER(38,0),
	""begin_period"" VARCHAR(16777216),
	""end_year"" NUMBER(38,0),
	""end_period"" VARCHAR(16777216)
);"

Database Name: BLS
Schema Name: BLS_QCEW
DDL describes table information.
,0
table_name,_1990_Q2
description,
DDL,"create or replace TABLE _1990_Q2 (
	""geoid"" VARCHAR(16777216),
	""area_fips"" VARCHAR(16777216),
	""qtrly_estabs_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""avg_wkly_wage_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""month3_emplvl_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""lq_avg_wkly_wage_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""lq_qtrly_estabs_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""lq_month3_emplvl_11_agriculture_forestry_fishing_and_hunting"" FLOAT,
	""qtrly_estabs_1024_professional_and_business_services"" FLOAT,
	""avg_wkly_wage_1024_professional_and_business_services"" FLOAT,
	""month3_emplvl_1024_professional_and_business_services"" FLOAT,
	""lq_avg_wkly_wage_1024_professional_and_business_services"" FLOAT,
	""lq_qtrly_estabs_1024_professional_and_business_services"" FLOAT,
	""lq_month3_emplvl_1024_professional_and_business_services"" FLOAT,
	""qtrly_estabs_61_educational_services"" FLOAT,
	""avg_wkly_wage_61_educational_services"" FLOAT,
	""month3_emplvl_61_educational_services"" FLOAT,
	""lq_avg_wkly_wage_61_educational_services"" FLOAT,
	""lq_qtrly_estabs_61_educational_services"" FLOAT,
	""lq_month3_emplvl_61_educational_services"" FLOAT,
	""qtrly_estabs_53_real_estate_and_rental_and_leasing"" FLOAT,
	""avg_wkly_wage_53_real_estate_and_rental_and_leasing"" FLOAT,
	""month3_emplvl_53_real_estate_and_rental_and_leasing"" FLOAT,
	""lq_avg_wkly_wage_53_real_estate_and_rental_and_leasing"" FLOAT,
	""lq_qtrly_estabs_53_real_estate_and_rental_and_leasing"" FLOAT,
	""lq_month3_emplvl_53_real_estate_and_rental_and_leasing"" FLOAT,
	""qtrly_estabs_1023_financial_activities"" FLOAT,
	""avg_wkly_wage_1023_financial_activities"" FLOAT,
	""month3_emplvl_1023_financial_activities"" FLOAT,
	""lq_avg_wkly_wage_1023_financial_activities"" FLOAT,
	""lq_qtrly_estabs_1023_financial_activities"" FLOAT,
	""lq_month3_emplvl_1023_financial_activities"" FLOAT,
	""qtrly_estabs_31_33_manufacturing"" FLOAT,
	""avg_wkly_wage_31_33_manufacturing"" FLOAT,
	""month3_emplvl_31_33_manufacturing"" FLOAT,
	""lq_avg_wkly_wage_31_33_manufacturing"" FLOAT,
	""lq_qtrly_estabs_31_33_manufacturing"" FLOAT,
	""lq_month3_emplvl_31_33_manufacturing"" FLOAT,
	""qtrly_estabs_23_construction"" FLOAT,
	""avg_wkly_wage_23_construction"" FLOAT,
	""month3_emplvl_23_construction"" FLOAT,
	""lq_avg_wkly_wage_23_construction"" FLOAT,
	""lq_qtrly_estabs_23_construction"" FLOAT,
	""lq_month3_emplvl_23_construction"" FLOAT,
	""qtrly_estabs_1029_unclassified"" FLOAT,
	""avg_wkly_wage_1029_unclassified"" FLOAT,
	""month3_emplvl_1029_unclassified"" FLOAT,
	""lq_avg_wkly_wage_1029_unclassified"" FLOAT,
	""lq_qtrly_estabs_1029_unclassified"" FLOAT,
	""lq_month3_emplvl_1029_unclassified"" FLOAT,
	""qtrly_estabs_71_arts_entertainment_and_recreation"" FLOAT,
	""avg_wkly_wage_71_arts_entertainment_and_recreation"" FLOAT,
	""month3_emplvl_71_arts_entertainment_and_recreation"" FLOAT,
	""lq_avg_wkly_wage_71_arts_entertainment_and_recreation"" FLOAT,
	""lq_qtrly_estabs_71_arts_entertainment_and_recreation"" FLOAT,
	""lq_month3_emplvl_71_arts_entertainment_and_recreation"" FLOAT,
	""qtrly_estabs_1011_natural_resources_and_mining"" FLOAT,
	""avg_wkly_wage_1011_natural_resources_and_mining"" FLOAT,
	""month3_emplvl_1011_natural_resources_and_mining"" FLOAT,
	""lq_avg_wkly_wage_1011_natural_resources_and_mining"" FLOAT,
	""lq_qtrly_estabs_1011_natural_resources_and_mining"" FLOAT,
	""lq_month3_emplvl_1011_natural_resources_and_mining"" FLOAT,
	""qtrly_estabs_54_professional_and_technical_services"" FLOAT,
	""avg_wkly_wage_54_professional_and_technical_services"" FLOAT,
	""month3_emplvl_54_professional_and_technical_services"" FLOAT,
	""lq_avg_wkly_wage_54_professional_and_technical_services"" FLOAT,
	""lq_qtrly_estabs_54_professional_and_technical_services"" FLOAT,
	""lq_month3_emplvl_54_professional_and_technical_services"" FLOAT,
	""qtrly_estabs_1026_leisure_and_hospitality"" FLOAT,
	""avg_wkly_wage_1026_leisure_and_hospitality"" FLOAT,
	""month3_emplvl_1026_leisure_and_hospitality"" FLOAT,
	""lq_avg_wkly_wage_1026_leisure_and_hospitality"" FLOAT,
	""lq_qtrly_estabs_1026_leisure_and_hospitality"" FLOAT,
	""lq_month3_emplvl_1026_leisure_and_hospitality"" FLOAT,
	""qtrly_estabs_1022_information"" FLOAT,
	""avg_wkly_wage_1022_information"" FLOAT,
	""month3_emplvl_1022_information"" FLOAT,
	""lq_avg_wkly_wage_1022_information"" FLOAT,
	""lq_qtrly_estabs_1022_information"" FLOAT,
	""lq_month3_emplvl_1022_information"" FLOAT,
	""qtrly_estabs_72_accommodation_and_food_services"" FLOAT,
	""avg_wkly_wage_72_accommodation_and_food_services"" FLOAT,
	""month3_emplvl_72_accommodation_and_food_services"" FLOAT,
	""lq_avg_wkly_wage_72_accommodation_and_food_services"" FLOAT,
	""lq_qtrly_estabs_72_accommodation_and_food_services"" FLOAT,
	""lq_month3_emplvl_72_accommodation_and_food_services"" FLOAT,
	""qtrly_estabs_22_utilities"" FLOAT,
	""avg_wkly_wage_22_utilities"" FLOAT,
	""month3_emplvl_22_utilities"" FLOAT,
	""lq_avg_wkly_wage_22_utilities"" FLOAT,
	""lq_qtrly_estabs_22_utilities"" FLOAT,
	""lq_month3_emplvl_22_utilities"" FLOAT,
	""qtrly_estabs_42_wholesale_trade"" FLOAT,
	""avg_wkly_wage_42_wholesale_trade"" FLOAT,
	""month3_emplvl_42_wholesale_trade"" FLOAT,
	""lq_avg_wkly_wage_42_wholesale_trade"" FLOAT,
	""lq_qtrly_estabs_42_wholesale_trade"" FLOAT,
	""lq_month3_emplvl_42_wholesale_trade"" FLOAT,
	""qtrly_estabs_10_total_all_industries"" FLOAT,
	""avg_wkly_wage_10_total_all_industries"" FLOAT,
	""month3_emplvl_10_total_all_industries"" FLOAT,
	""lq_avg_wkly_wage_10_total_all_industries"" FLOAT,
	""lq_qtrly_estabs_10_total_all_industries"" FLOAT,
	""lq_month3_emplvl_10_total_all_industries"" FLOAT,
	""qtrly_estabs_81_other_services_except_public_administration"" FLOAT,
	""avg_wkly_wage_81_other_services_except_public_administration"" FLOAT,
	""month3_emplvl_81_other_services_except_public_administration"" FLOAT,
	""lq_avg_wkly_wage_81_other_services_except_public_administration"" FLOAT,
	""lq_qtrly_estabs_81_other_services_except_public_administration"" FLOAT,
	""lq_month3_emplvl_81_other_services_except_public_administration"" FLOAT,
	""qtrly_estabs_52_finance_and_insurance"" FLOAT,
	""avg_wkly_wage_52_finance_and_insurance"" FLOAT,
	""month3_emplvl_52_finance_and_insurance"" FLOAT,
	""lq_avg_wkly_wage_52_finance_and_insurance"" FLOAT,
	""lq_qtrly_estabs_52_finance_and_insurance"" FLOAT,
	""lq_month3_emplvl_52_finance_and_insurance"" FLOAT,
	""qtrly_estabs_44_45_retail_trade"" FLOAT,
	""avg_wkly_wage_44_45_retail_trade"" FLOAT,
	""month3_emplvl_44_45_retail_trade"" FLOAT,
	""lq_avg_wkly_wage_44_45_retail_trade"" FLOAT,
	""lq_qtrly_estabs_44_45_retail_trade"" FLOAT,
	""lq_month3_emplvl_44_45_retail_trade"" FLOAT,
	""qtrly_estabs_1013_manufacturing"" FLOAT,
	""avg_wkly_wage_1013_manufacturing"" FLOAT,
	""month3_emplvl_1013_manufacturing"" FLOAT,
	""lq_avg_wkly_wage_1013_manufacturing"" FLOAT,
	""lq_qtrly_estabs_1013_manufacturing"" FLOAT,
	""lq_month3_emplvl_1013_manufacturing"" FLOAT,
	""qtrly_estabs_1027_other_services"" FLOAT,
	""avg_wkly_wage_1027_other_services"" FLOAT,
	""month3_emplvl_1027_other_services"" FLOAT,
	""lq_avg_wkly_wage_1027_other_services"" FLOAT,
	""lq_qtrly_estabs_1027_other_services"" FLOAT,
	""lq_month3_emplvl_1027_other_services"" FLOAT,
	""qtrly_estabs_1025_education_and_health_services"" FLOAT,
	""avg_wkly_wage_1025_education_and_health_services"" FLOAT,
	""month3_emplvl_1025_education_and_health_services"" FLOAT,
	""lq_avg_wkly_wage_1025_education_and_health_services"" FLOAT,
	""lq_qtrly_estabs_1025_education_and_health_services"" FLOAT,
	""lq_month3_emplvl_1025_education_and_health_services"" FLOAT,
	""qtrly_estabs_51_information"" FLOAT,
	""avg_wkly_wage_51_information"" FLOAT,
	""month3_emplvl_51_information"" FLOAT,
	""lq_avg_wkly_wage_51_information"" FLOAT,
	""lq_qtrly_estabs_51_information"" FLOAT,
	""lq_month3_emplvl_51_information"" FLOAT,
	""qtrly_estabs_62_health_care_and_social_assistance"" FLOAT,
	""avg_wkly_wage_62_health_care_and_social_assistance"" FLOAT,
	""month3_emplvl_62_health_care_and_social_assistance"" FLOAT,
	""lq_avg_wkly_wage_62_health_care_and_social_assistance"" FLOAT,
	""lq_qtrly_estabs_62_health_care_and_social_assistance"" FLOAT,
	""lq_month3_emplvl_62_health_care_and_social_assistance"" FLOAT,
	""qtrly_estabs_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""avg_wkly_wage_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""month3_emplvl_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""lq_avg_wkly_wage_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""lq_qtrly_estabs_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""lq_month3_emplvl_21_mining_quarrying_and_oil_and_gas_extraction"" FLOAT,
	""qtrly_estabs_55_management_of_companies_and_enterprises"" FLOAT,
	""avg_wkly_wage_55_management_of_companies_and_enterprises"" FLOAT,
	""month3_emplvl_55_management_of_companies_and_enterprises"" FLOAT,
	""lq_avg_wkly_wage_55_management_of_companies_and_enterprises"" FLOAT,
	""lq_qtrly_estabs_55_management_of_companies_and_enterprises"" FLOAT,
	""lq_month3_emplvl_55_management_of_companies_and_enterprises"" FLOAT,
	""qtrly_estabs_1012_construction"" FLOAT,
	""avg_wkly_wage_1012_construction"" FLOAT,
	""month3_emplvl_1012_construction"" FLOAT,
	""lq_avg_wkly_wage_1012_construction"" FLOAT,
	""lq_qtrly_estabs_1012_construction"" FLOAT,
	""lq_month3_emplvl_1012_construction"" FLOAT,
	""qtrly_estabs_56_administrative_and_waste_services"" FLOAT,
	""avg_wkly_wage_56_administrative_and_waste_services"" FLOAT,
	""month3_emplvl_56_administrative_and_waste_services"" FLOAT,
	""lq_avg_wkly_wage_56_administrative_and_waste_services"" FLOAT,
	""lq_qtrly_estabs_56_administrative_and_waste_services"" FLOAT,
	""lq_month3_emplvl_56_administrative_and_waste_services"" FLOAT,
	""qtrly_estabs_1021_trade_transportation_and_utilities"" FLOAT,
	""avg_wkly_wage_1021_trade_transportation_and_utilities"" FLOAT,
	""month3_emplvl_1021_trade_transportation_and_utilities"" FLOAT,
	""lq_avg_wkly_wage_1021_trade_transportation_and_utilities"" FLOAT,
	""lq_qtrly_estabs_1021_trade_transportation_and_utilities"" FLOAT,
	""lq_month3_emplvl_1021_trade_transportation_and_utilities"" FLOAT,
	""qtrly_estabs_99_unclassified"" FLOAT,
	""avg_wkly_wage_99_unclassified"" FLOAT,
	""month3_emplvl_99_unclassified"" FLOAT,
	""lq_avg_wkly_wage_99_unclassified"" FLOAT,
	""lq_qtrly_estabs_99_unclassified"" FLOAT,
	""lq_month3_emplvl_99_unclassified"" FLOAT,
	""qtrly_estabs_48_49_transportation_and_warehousing"" FLOAT,
	""avg_wkly_wage_48_49_transportation_and_warehousing"" FLOAT,
	""month3_emplvl_48_49_transportation_and_warehousing"" FLOAT,
	""lq_avg_wkly_wage_48_49_transportation_and_warehousing"" FLOAT,
	""lq_qtrly_estabs_48_49_transportation_and_warehousing"" FLOAT,
	""lq_month3_emplvl_48_49_transportation_and_warehousing"" FLOAT
);"

Some other tables have the similar structure: ['_1990_Q2', '_1992_Q1', '_1992_Q3', '_1993_Q1', '_1995_Q4', '_1996_Q4', '_1999_Q1', '_2002_Q1', '_2007_Q3', '_2009_Q4', '_2014_Q1', '_1994_Q1', '_1994_Q4', '_1998_Q4', '_2004_Q4', '_2005_Q2', '_2007_Q4', '_2010_Q3', '_2011_Q4', '_2013_Q2', '_2017_Q1', '_2017_Q2', '_2018_Q1', '_2008_Q2', '_2009_Q1', '_2016_Q3', '_2016_Q4', '_2019_Q2', '_2000_Q2', '_2003_Q3', '_1997_Q1', '_2010_Q4', '_2005_Q4', '_2006_Q4', '_1990_Q3', '_1991_Q1', '_1991_Q3', '_1991_Q4', '_1993_Q3', '_1995_Q2', '_1996_Q3', '_1997_Q4', '_1999_Q3', '_2000_Q4', '_2002_Q3', '_2003_Q4', '_2005_Q3', '_2007_Q1', '_2008_Q4', '_2011_Q1', '_2011_Q2', '_1994_Q2', '_1994_Q3', '_1999_Q2', '_2011_Q3', '_2012_Q1', '_2015_Q3', '_2015_Q4', '_2016_Q1', '_2018_Q3', '_2005_Q1', '_2000_Q1', '_2001_Q4', '_2018_Q4', '_2006_Q1', '_2010_Q1', '_2015_Q1', '_2018_Q2', '_1990_Q1', '_1990_Q4', '_1992_Q2', '_1992_Q4', '_1993_Q2', '_1996_Q2', '_2010_Q2', '_2013_Q1', '_2014_Q2', '_2016_Q2', '_1996_Q1', '_1998_Q2', '_2003_Q1', '_2006_Q2', '_2007_Q2', '_2014_Q4', '_2017_Q3', '_2019_Q1', '_1999_Q4', '_2012_Q2', '_2012_Q3', '_2014_Q3', '_2017_Q4', '_2000_Q3', '_2009_Q2', '_2013_Q3', '_1997_Q3', '_2004_Q1', '_2012_Q4', '_2008_Q3', '_1991_Q2', '_1995_Q3', '_1997_Q2', '_1998_Q1', '_1998_Q3', '_2001_Q2', '_2002_Q2', '_2004_Q3', '_2008_Q1', '_1993_Q4', '_1995_Q1', '_2001_Q1', '_2002_Q4', '_2003_Q2', '_2004_Q2', '_2006_Q3', '_2001_Q3', '_2013_Q4', '_2009_Q3', '_2015_Q2']
Database Name: BLS
Schema Name: GEO_US_BOUNDARIES
DDL describes table information.
,0
table_name,ADJACENT_COUNTIES
description,
DDL,"create or replace TABLE ADJACENT_COUNTIES (
	""county"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""neighbors"" VARIANT,
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,1
table_name,NWS_FORECAST_REGIONS
description,
DDL,"create or replace TABLE NWS_FORECAST_REGIONS (
	""state"" VARCHAR(16777216),
	""cwa"" VARCHAR(16777216),
	""time_zone"" VARCHAR(16777216),
	""fe_area"" VARCHAR(16777216),
	""zone"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""state_zone"" VARCHAR(16777216),
	""lon"" FLOAT,
	""lat"" FLOAT,
	""shortname"" VARCHAR(16777216),
	""shape_geometry"" BINARY(8388608)
);"

,2
table_name,CSA
description,
DDL,"create or replace TABLE CSA (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""msa_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""csa_geom"" BINARY(8388608)
);"

,3
table_name,URBAN_AREAS
description,
DDL,"create or replace TABLE URBAN_AREAS (
	""geo_id"" VARCHAR(16777216),
	""urban_area_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""area_lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""type"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""urban_area_geom"" BINARY(8388608)
);"

,4
table_name,ADJACENT_STATES
description,
DDL,"create or replace TABLE ADJACENT_STATES (
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""neighbors_state"" VARIANT,
	""neighbors_fips_code"" VARIANT
);"

,5
table_name,CBSA
description,
DDL,"create or replace TABLE CBSA (
	""geo_id"" VARCHAR(16777216),
	""csa_geo_id"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""msa_indicator"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""cbsa_geom"" BINARY(8388608)
);"

,6
table_name,COUNTIES
description,
DDL,"create or replace TABLE COUNTIES (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""county_fips_code"" VARCHAR(16777216),
	""county_gnis_code"" VARCHAR(16777216),
	""county_name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""csa_fips_code"" VARCHAR(16777216),
	""cbsa_fips_code"" VARCHAR(16777216),
	""met_div_fips_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""county_geom"" BINARY(8388608)
);"

,7
table_name,STATES
description,
DDL,"create or replace TABLE STATES (
	""geo_id"" VARCHAR(16777216),
	""region_code"" VARCHAR(16777216),
	""division_code"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_gnis_code"" VARCHAR(16777216),
	""state"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""state_geom"" BINARY(8388608)
);"

,8
table_name,ZIP_CODES
description,
DDL,"create or replace TABLE ZIP_CODES (
	""zip_code"" VARCHAR(16777216),
	""city"" VARCHAR(16777216),
	""county"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""state_code"" VARCHAR(16777216),
	""state_name"" VARCHAR(16777216),
	""fips_class_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_lat"" FLOAT,
	""internal_point_lon"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""zip_code_geom"" BINARY(8388608)
);"

,9
table_name,CONGRESS_DISTRICT_116
description,
DDL,"create or replace TABLE CONGRESS_DISTRICT_116 (
	""geo_id"" VARCHAR(16777216),
	""state_fips_code"" VARCHAR(16777216),
	""district_fips_code"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""congress_session"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""functional_status"" BOOLEAN,
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""int_point_geom"" BINARY(8388608),
	""district_geom"" BINARY(8388608)
);"

Some other tables have the similar structure: ['CONGRESS_DISTRICT_116', 'CONGRESS_DISTRICT_115']
,10
table_name,NATIONAL_OUTLINE
description,
DDL,"create or replace TABLE NATIONAL_OUTLINE (
	""us_outline_geom"" BINARY(8388608),
	""aff_geo_id"" VARCHAR(16777216),
	""geo_id"" VARCHAR(16777216),
	""name"" VARCHAR(16777216)
);"

,11
table_name,RAILWAYS
description,
DDL,"create or replace TABLE RAILWAYS (
	""geo_id"" NUMBER(38,0),
	""full_name"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""railway_geom"" VARCHAR(16777216)
);"

,12
table_name,CNECTA
description,
DDL,"create or replace TABLE CNECTA (
	""geo_id"" VARCHAR(16777216),
	""cnecta_fips_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""name_lsad"" VARCHAR(16777216),
	""lsad"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" NUMBER(38,0),
	""area_water_meters"" NUMBER(38,0),
	""int_point_lat"" FLOAT,
	""int_point_lon"" FLOAT,
	""cnecta_geom"" BINARY(8388608)
);"

,13
table_name,COASTLINE
description,
DDL,"create or replace TABLE COASTLINE (
	""name"" VARCHAR(16777216),
	""coastline_geom"" BINARY(8388608)
);"

,14
table_name,METROPOLITAN_DIVISIONS
description,
DDL,"create or replace TABLE METROPOLITAN_DIVISIONS (
	""geo_id"" VARCHAR(16777216),
	""csa_code"" VARCHAR(16777216),
	""cbsa_code"" VARCHAR(16777216),
	""metdiv_code"" VARCHAR(16777216),
	""name"" VARCHAR(16777216),
	""lsad_name"" VARCHAR(16777216),
	""lsad_code"" VARCHAR(16777216),
	""mtfcc_feature_class_code"" VARCHAR(16777216),
	""area_land_meters"" FLOAT,
	""area_water_meters"" FLOAT,
	""internal_point_latitude"" FLOAT,
	""internal_point_longitude"" FLOAT,
	""internal_point_geom"" BINARY(8388608),
	""metdiv_geom"" BINARY(8388608)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'BLS': {'BLS': ['CPI_U', 'CPSAAT18', 'C_CPI_U', 'EMPLOYMENT_HOURS_EARNINGS', 'EMPLOYMENT_HOURS_EARNINGS_SERIES', 'UNEMPLOYMENT_CPS', 'UNEMPLOYMENT_CPS_SERIES', 'WM', 'WM_SERIES'], 'BLS_QCEW': ['_1990_Q1', '_1990_Q2', '_1990_Q3', '_1990_Q4', '_1991_Q1', '_1991_Q2', '_1991_Q3', '_1991_Q4', '_1992_Q1', '_1992_Q2', '_1992_Q3', '_1992_Q4', '_1993_Q1', '_1993_Q2', '_1993_Q3', '_1993_Q4', '_1994_Q1', '_1994_Q2', '_1994_Q3', '_1994_Q4', '_1995_Q1', '_1995_Q2', '_1995_Q3', '_1995_Q4', '_1996_Q1', '_1996_Q2', '_1996_Q3', '_1996_Q4', '_1997_Q1', '_1997_Q2', '_1997_Q3', '_1997_Q4', '_1998_Q1', '_1998_Q2', '_1998_Q3', '_1998_Q4', '_1999_Q1', '_1999_Q2', '_1999_Q3', '_1999_Q4', '_2000_Q1', '_2000_Q2', '_2000_Q3', '_2000_Q4', '_2001_Q1', '_2001_Q2', '_2001_Q3', '_2001_Q4', '_2002_Q1', '_2002_Q2', '_2002_Q3', '_2002_Q4', '_2003_Q1', '_2003_Q2', '_2003_Q3', '_2003_Q4', '_2004_Q1', '_2004_Q2', '_2004_Q3', '_2004_Q4', '_2005_Q1', '_2005_Q2', '_2005_Q3', '_2005_Q4', '_2006_Q1', '_2006_Q2', '_2006_Q3', '_2006_Q4', '_2007_Q1', '_2007_Q2', '_2007_Q3', '_2007_Q4', '_2008_Q1', '_2008_Q2', '_2008_Q3', '_2008_Q4', '_2009_Q1', '_2009_Q2', '_2009_Q3', '_2009_Q4', '_2010_Q1', '_2010_Q2', '_2010_Q3', '_2010_Q4', '_2011_Q1', '_2011_Q2', '_2011_Q3', '_2011_Q4', '_2012_Q1', '_2012_Q2', '_2012_Q3', '_2012_Q4', '_2013_Q1', '_2013_Q2', '_2013_Q3', '_2013_Q4', '_2014_Q1', '_2014_Q2', '_2014_Q3', '_2014_Q4', '_2015_Q1', '_2015_Q2', '_2015_Q3', '_2015_Q4', '_2016_Q1', '_2016_Q2', '_2016_Q3', '_2016_Q4', '_2017_Q1', '_2017_Q2', '_2017_Q3', '_2017_Q4', '_2018_Q1', '_2018_Q2', '_2018_Q3', '_2018_Q4', '_2019_Q1', '_2019_Q2'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

1. **Table:** `BLS.GEO_US_BOUNDARIES.STATES`
   - **Column:** `"state_name"`: To find the FIPS code for Utah.
   - **Column:** `"state_fips_code"`: Will be used to identify Utah's FIPS code.

2. **Table:** `BLS.GEO_US_BOUNDARIES.COUNTIES`
   - **Column:** `"state_fips_code"`: To filter counties within Utah.
   - **Column:** `"county_fips_code"`: Unique FIPS code for each county.
   - **Column:** `"county_name"`: Names of counties in Utah.

3. **Tables:** `BLS.BLS_QCEW._2000_Q1` to `_2000_Q4` and `_2018_Q1` to `_2018_Q4`
   - **Column:** `"geoid"`: Geographic identifier for counties.
   - **Column:** `"area_fips"`: FIPS code for the area, matching with county FIPS codes.
   - **Column:** `"month3_emplvl_23_construction"`: Employment level in construction in the third month of each quarter.
   - **Conditions:** Filter data for Utah counties using `"area_fips"`.

**Conditions That May Be Used:**

- Filter by `"state_fips_code"` equal to Utah's FIPS code.
- Join data on `"area_fips"` matching `"county_fips_code"`.
- Aggregate employment data by county and year.
- Calculate percentage increase from 2000 to 2018 for each county.

**SQL Queries to Understand the Data:**

1. **Find Utah's State FIPS Code:**

   ```sql
   SELECT DISTINCT "state_fips_code", "state_name"
   FROM BLS.GEO_US_BOUNDARIES.STATES
   WHERE "state_name" = 'Utah'
   LIMIT 1000;
   ```

2. **List All Counties in Utah:**

   ```sql
   SELECT DISTINCT "county_fips_code", "county_name"
   FROM BLS.GEO_US_BOUNDARIES.COUNTIES
   WHERE "state_fips_code" = '49'
   LIMIT 1000;
   ```

3. **Explore Construction Employment in 2000 Q1:**

   ```sql
   SELECT DISTINCT "geoid", "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
   ```

4. **Explore Construction Employment in 2018 Q4:**

   ```sql
   SELECT DISTINCT "geoid", "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2018_Q4
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
   ```

5. **Check Available Industries in Quarterly Tables:**

   ```sql
   SELECT DISTINCT column_name
   FROM information_schema.columns
   WHERE table_schema = 'BLS_QCEW' AND table_name = '_2000_Q1'
   AND column_name ILIKE '%construction%'
   LIMIT 1000;
   ```

6. **Verify Data for a Specific County in 2000 Q1:**

   ```sql
   SELECT "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" = '49001'
   LIMIT 1000;
   ```

7. **Verify Data for the Same County in 2018 Q4:**

   ```sql
   SELECT "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2018_Q4
   WHERE "area_fips" = '49001'
   LIMIT 1000;
   ```

8. **List All Area FIPS Codes for Utah Counties:**

   ```sql
   SELECT DISTINCT "area_fips"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
   ```

9. **Check Employment Levels Across All Quarters in 2000:**

   ```sql
   SELECT "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q2
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
   ```

10. **Check Employment Levels Across All Quarters in 2018:**

    ```sql
    SELECT "area_fips", "month3_emplvl_23_construction"
    FROM BLS.BLS_QCEW._2018_Q2
    WHERE "area_fips" LIKE '49%'
    LIMIT 1000;
    ```

11. **Find Counties with Missing Data in 2000 or 2018:**

    ```sql
    SELECT "area_fips"
    FROM BLS.BLS_QCEW._2000_Q1
    WHERE "area_fips" LIKE '49%' AND "month3_emplvl_23_construction" IS NULL
    LIMIT 1000;
    ```

12. **Get Average Employment in Construction for 2000:**

    ```sql
    SELECT "area_fips", AVG("month3_emplvl_23_construction") AS avg_employment_2000
    FROM (
      SELECT * FROM BLS.BLS_QCEW._2000_Q1 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q2 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q3 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q4
    ) AS t
    WHERE "area_fips" LIKE '49%'
    GROUP BY "area_fips"
    LIMIT 1000;
    ```

13. **Get Average Employment in Construction for 2018:**

    ```sql
    SELECT "area_fips", AVG("month3_emplvl_23_construction") AS avg_employment_2018
    FROM (
      SELECT * FROM BLS.BLS_QCEW._2018_Q1 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q2 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q3 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q4
    ) AS t
    WHERE "area_fips" LIKE '49%'
    GROUP BY "area_fips"
    LIMIT 1000;
    ```

14. **Match Area FIPS with County Names:**

    ```sql
    SELECT c."county_name", q."area_fips"
    FROM BLS.GEO_US_BOUNDARIES.COUNTIES c
    JOIN BLS.BLS_QCEW._2000_Q1 q ON c."county_fips_code" = q."area_fips"
    WHERE c."state_fips_code" = '49'
    LIMIT 1000;
    ```

15. **Check Number of Establishments in Construction in 2000 Q1:**

    ```sql
    SELECT "area_fips", "qtrly_estabs_23_construction"
    FROM BLS.BLS_QCEW._2000_Q1
    WHERE "area_fips" LIKE '49%'
    LIMIT 1000;
    ```

**Note:** These queries are designed to explore the data related to construction employment in Utah counties for the years 2000 and 2018. They help in understanding the structure of the data, available columns, and how the data can be filtered and joined to perform the required analysis.Query:
SELECT DISTINCT "state_fips_code", "state_name"
   FROM BLS.GEO_US_BOUNDARIES.STATES
   WHERE "state_name" = 'Utah'
   LIMIT 1000;
Answer:
state_fips_code,state_name
49,Utah
Query:
SELECT DISTINCT "county_fips_code", "county_name"
   FROM BLS.GEO_US_BOUNDARIES.COUNTIES
   WHERE "state_fips_code" = '49'
   LIMIT 1000;
Answer:
county_fips_code,county_name
49017,Garfield
49037,San Juan
49055,Wayne
49039,Sanpete
49033,Rich
49001,Beaver
49013,Duchesne
49041,Sevier
49027,Millard
49019,Grand
49051,Wasatch
49057,Weber
49029,Morgan
49007,Carbon
49049,Utah
49023,Juab
49053,Washington
49045,Tooele
49035,Salt Lake
49047,Uintah
49015,Emery
49025,Kane
49021,Iron
49003,Box Elder
49005,Cache
49031,Piute
49009,Daggett
49043,Summit
49011,Davis
Query:
SELECT DISTINCT "geoid", "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Answer:
geoid,area_fips,month3_emplvl_23_construction
49035,49035,33012.0
49057,49057,5419.0
49011,49011,6711.0
49053,49053,3969.0
49049,49049,9981.0
49005,49005,2076.0
49013,49013,247.0
49047,49047,451.0
49019,49019,260.0
49041,49041,382.0
49039,49039,319.0
49023,49023,145.0
49003,49003,897.0
49007,49007,239.0
49045,49045,532.0
49027,49027,65.0
49037,49037,217.0
49015,49015,254.0
49001,49001,107.0
49051,49051,593.0
49033,49033,27.0
49025,49025,113.0
49055,49055,88.0
49009,49009,
49031,49031,
49043,49043,1264.0
49021,49021,825.0
49029,49029,271.0
49017,49017,58.0
Query:
SELECT DISTINCT "geoid", "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2018_Q4
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Answer:
geoid,area_fips,month3_emplvl_23_construction
49053,49053,7772.0
49005,49005,2829.0
49011,49011,10704.0
49035,49035,40043.0
49057,49057,6922.0
49003,49003,1685.0
49021,49021,1288.0
49019,49019,295.0
49051,49051,1398.0
49043,49043,1854.0
49049,49049,24427.0
49039,49039,509.0
49045,49045,943.0
49047,49047,825.0
49029,49029,566.0
49025,49025,130.0
49007,49007,323.0
49023,49023,291.0
49037,49037,230.0
49055,49055,142.0
49031,49031,0.0
49009,49009,0.0
49017,49017,35.0
49033,49033,66.0
49001,49001,132.0
49013,49013,409.0
49041,49041,399.0
49027,49027,86.0
49015,49015,393.0
Query:
SELECT DISTINCT column_name
FROM BLS.INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'BLS_QCEW' AND table_name = '_2000_Q1'
  AND column_name ILIKE '%construction%'
LIMIT 1000;
Answer:
COLUMN_NAME
lq_avg_wkly_wage_1012_construction
lq_month3_emplvl_1012_construction
lq_avg_wkly_wage_23_construction
lq_qtrly_estabs_1012_construction
avg_wkly_wage_23_construction
avg_wkly_wage_1012_construction
month3_emplvl_23_construction
month3_emplvl_1012_construction
qtrly_estabs_1012_construction
lq_qtrly_estabs_23_construction
qtrly_estabs_23_construction
lq_month3_emplvl_23_construction
Query:
SELECT "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" = '49001'
   LIMIT 1000;
Answer:
month3_emplvl_23_construction
107.0
Query:
SELECT "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2018_Q4
   WHERE "area_fips" = '49001'
   LIMIT 1000;
Answer:
month3_emplvl_23_construction
132.0
Query:
SELECT DISTINCT "area_fips"
   FROM BLS.BLS_QCEW._2000_Q1
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Answer:
area_fips
49035
49057
49011
49053
49049
49005
49013
49047
49019
49041
49039
49023
49003
49007
49045
49027
49037
49001
49029
49051
49033
49025
49009
49031
49055
49017
49043
49021
49015
Query:
SELECT "area_fips", "month3_emplvl_23_construction"
   FROM BLS.BLS_QCEW._2000_Q2
   WHERE "area_fips" LIKE '49%'
   LIMIT 1000;
Answer:
area_fips,month3_emplvl_23_construction
49057,5893.0
49049,10870.0
49035,36086.0
49011,7438.0
49053,4272.0
49005,2392.0
49043,1503.0
49021,984.0
49003,975.0
49007,295.0
49013,297.0
49045,686.0
49027,92.0
49047,517.0
49019,320.0
49041,412.0
49039,404.0
49023,184.0
49015,310.0
49037,204.0
49001,120.0
49029,316.0
49051,637.0
49025,150.0
49033,46.0
49055,103.0
49017,89.0
49009,
49031,
Query:
SELECT "area_fips", "month3_emplvl_23_construction"
    FROM BLS.BLS_QCEW._2018_Q2
    WHERE "area_fips" LIKE '49%'
    LIMIT 1000;
Answer:
area_fips,month3_emplvl_23_construction
49057,7093.0
49049,25228.0
49035,40902.0
49039,470.0
49003,1572.0
49021,1281.0
49051,1385.0
49019,310.0
49005,2940.0
49053,7714.0
49011,11128.0
49043,1875.0
49013,510.0
49007,334.0
49041,388.0
49023,307.0
49017,36.0
49047,826.0
49029,585.0
49045,981.0
49025,120.0
49037,250.0
49055,158.0
49031,0.0
49009,0.0
49015,374.0
49001,170.0
49027,119.0
49033,81.0
Query:
SELECT "area_fips"
    FROM BLS.BLS_QCEW._2000_Q1
    WHERE "area_fips" LIKE '49%' AND "month3_emplvl_23_construction" IS NULL
    LIMIT 1000;
Answer:
area_fips
49009
49031
Query:
SELECT "area_fips", AVG("month3_emplvl_23_construction") AS avg_employment_2000
    FROM (
      SELECT * FROM BLS.BLS_QCEW._2000_Q1 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q2 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q3 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2000_Q4
    ) AS t
    WHERE "area_fips" LIKE '49%'
    GROUP BY "area_fips"
    LIMIT 1000;
Answer:
area_fips,AVG_EMPLOYMENT_2000
49035,34824.25
49057,5669.75
49011,7098.25
49053,4129.5
49049,10466.25
49043,1431.75
49013,312.75
49047,514.0
49019,290.75
49023,172.25
49021,893.25
49003,953.75
49007,268.75
49027,74.5
49037,208.0
49015,277.75
49029,290.0
49051,624.0
49025,131.5
49055,94.0
49017,80.0
49009,
49031,
49005,2227.25
49041,391.0
49001,109.5
49033,36.75
49039,371.25
49045,602.0
Query:
SELECT "area_fips", AVG("month3_emplvl_23_construction") AS avg_employment_2018
    FROM (
      SELECT * FROM BLS.BLS_QCEW._2018_Q1 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q2 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q3 UNION ALL
      SELECT * FROM BLS.BLS_QCEW._2018_Q4
    ) AS t
    WHERE "area_fips" LIKE '49%'
    GROUP BY "area_fips"
    LIMIT 1000;
Answer:
area_fips,AVG_EMPLOYMENT_2018
49049,24692.25
49011,10776.0
49035,40227.0
49051,1347.0
49021,1256.5
49003,1627.5
49057,6906.0
49043,1802.5
49053,7616.25
49047,815.25
49019,302.25
49029,559.0
49025,122.5
49007,339.25
49023,293.5
49055,143.25
49027,104.0
49031,4.0
49015,385.25
49013,449.25
49037,239.25
49009,1.5
49017,37.75
49005,2815.5
49045,942.75
49001,153.75
49033,67.75
49039,468.25
49041,383.5
Query:
SELECT c."county_name", q."area_fips"
    FROM BLS.GEO_US_BOUNDARIES.COUNTIES c
    JOIN BLS.BLS_QCEW._2000_Q1 q ON c."county_fips_code" = q."area_fips"
    WHERE c."state_fips_code" = '49'
    LIMIT 1000;
Answer:
county_name,area_fips
Salt Lake,49035
Weber,49057
Davis,49011
Washington,49053
Utah,49049
Cache,49005
Summit,49043
Duchesne,49013
Uintah,49047
Grand,49019
Sevier,49041
Sanpete,49039
Juab,49023
Iron,49021
Box Elder,49003
Carbon,49007
Tooele,49045
Millard,49027
San Juan,49037
Emery,49015
Beaver,49001
Morgan,49029
Wasatch,49051
Rich,49033
Kane,49025
Wayne,49055
Garfield,49017
Daggett,49009
Piute,49031
Query:
SELECT "area_fips", "qtrly_estabs_23_construction"
    FROM BLS.BLS_QCEW._2000_Q1
    WHERE "area_fips" LIKE '49%'
    LIMIT 1000;
Answer:
area_fips,qtrly_estabs_23_construction
49035,3929.0
49057,781.0
49011,861.0
49053,624.0
49049,1636.0
49005,446.0
49043,306.0
49013,60.0
49047,93.0
49019,45.0
49041,75.0
49039,80.0
49023,29.0
49021,184.0
49003,147.0
49007,53.0
49045,92.0
49027,28.0
49037,33.0
49015,31.0
49001,24.0
49029,49.0
49051,163.0
49033,11.0
49025,32.0
49055,15.0
49017,17.0
49009,
49031,
End Exploring Related Columns
Task: Which Utah county has witnessed the greatest percentage increase of construction jobs from 2000 to 2018? And what is the corresponding increase rate?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: Based on the data from 2000 to 2018, Washington County in Utah experienced the greatest percentage increase in construction jobs, with a corresponding increase rate of 275%.

```csv
County,Percentage_increase
Washington,275.0
(Attention: answer in one row)
```.
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'BLS': {'BLS': ['CPI_U', 'CPSAAT18', 'C_CPI_U', 'EMPLOYMENT_HOURS_EARNINGS', 'EMPLOYMENT_HOURS_EARNINGS_SERIES', 'UNEMPLOYMENT_CPS', 'UNEMPLOYMENT_CPS_SERIES', 'WM', 'WM_SERIES'], 'BLS_QCEW': ['_1990_Q1', '_1990_Q2', '_1990_Q3', '_1990_Q4', '_1991_Q1', '_1991_Q2', '_1991_Q3', '_1991_Q4', '_1992_Q1', '_1992_Q2', '_1992_Q3', '_1992_Q4', '_1993_Q1', '_1993_Q2', '_1993_Q3', '_1993_Q4', '_1994_Q1', '_1994_Q2', '_1994_Q3', '_1994_Q4', '_1995_Q1', '_1995_Q2', '_1995_Q3', '_1995_Q4', '_1996_Q1', '_1996_Q2', '_1996_Q3', '_1996_Q4', '_1997_Q1', '_1997_Q2', '_1997_Q3', '_1997_Q4', '_1998_Q1', '_1998_Q2', '_1998_Q3', '_1998_Q4', '_1999_Q1', '_1999_Q2', '_1999_Q3', '_1999_Q4', '_2000_Q1', '_2000_Q2', '_2000_Q3', '_2000_Q4', '_2001_Q1', '_2001_Q2', '_2001_Q3', '_2001_Q4', '_2002_Q1', '_2002_Q2', '_2002_Q3', '_2002_Q4', '_2003_Q1', '_2003_Q2', '_2003_Q3', '_2003_Q4', '_2004_Q1', '_2004_Q2', '_2004_Q3', '_2004_Q4', '_2005_Q1', '_2005_Q2', '_2005_Q3', '_2005_Q4', '_2006_Q1', '_2006_Q2', '_2006_Q3', '_2006_Q4', '_2007_Q1', '_2007_Q2', '_2007_Q3', '_2007_Q4', '_2008_Q1', '_2008_Q2', '_2008_Q3', '_2008_Q4', '_2009_Q1', '_2009_Q2', '_2009_Q3', '_2009_Q4', '_2010_Q1', '_2010_Q2', '_2010_Q3', '_2010_Q4', '_2011_Q1', '_2011_Q2', '_2011_Q3', '_2011_Q4', '_2012_Q1', '_2012_Q2', '_2012_Q3', '_2012_Q4', '_2013_Q1', '_2013_Q2', '_2013_Q3', '_2013_Q4', '_2014_Q1', '_2014_Q2', '_2014_Q3', '_2014_Q4', '_2015_Q1', '_2015_Q2', '_2015_Q3', '_2015_Q4', '_2016_Q1', '_2016_Q2', '_2016_Q3', '_2016_Q4', '_2017_Q1', '_2017_Q2', '_2017_Q3', '_2017_Q4', '_2018_Q1', '_2018_Q2', '_2018_Q3', '_2018_Q4', '_2019_Q1', '_2019_Q2'], 'GEO_US_BOUNDARIES': ['ADJACENT_COUNTIES', 'ADJACENT_STATES', 'CBSA', 'CNECTA', 'COASTLINE', 'CONGRESS_DISTRICT_115', 'CONGRESS_DISTRICT_116', 'COUNTIES', 'CSA', 'METROPOLITAN_DIVISIONS', 'NATIONAL_OUTLINE', 'NWS_FORECAST_REGIONS', 'RAILWAYS', 'STATES', 'URBAN_AREAS', 'ZIP_CODES']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-19 00:56:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:56:33 - root - INFO - ```sql
WITH emp_2000 AS (
  SELECT
    "area_fips",
    AVG("month3_emplvl_23_construction") AS "avg_employment_2000"
  FROM (
    SELECT * FROM BLS.BLS_QCEW._2000_Q1
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q2
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q3
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q4
  ) AS t
  WHERE "area_fips" LIKE '49%'
  GROUP BY "area_fips"
),
emp_2018 AS (
  SELECT
    "area_fips",
    AVG("month3_emplvl_23_construction") AS "avg_employment_2018"
  FROM (
    SELECT * FROM BLS.BLS_QCEW._2018_Q1
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q2
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q3
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q4
  ) AS t
  WHERE "area_fips" LIKE '49%'
  GROUP BY "area_fips"
),
emp_growth AS (
  SELECT
    e2000."area_fips",
    e2000."avg_employment_2000",
    e2018."avg_employment_2018",
    ROUND(((e2018."avg_employment_2018" - e2000."avg_employment_2000") / e2000."avg_employment_2000") * 100, 4) AS "Percentage_increase"
  FROM emp_2000 e2000
  JOIN emp_2018 e2018 ON e2000."area_fips" = e2018."area_fips"
  WHERE e2000."avg_employment_2000" IS NOT NULL AND e2000."avg_employment_2000" > 0
),
county_names AS (
  SELECT DISTINCT
    "county_fips_code",
    "county_name"
  FROM BLS.GEO_US_BOUNDARIES.COUNTIES
  WHERE "state_fips_code" = '49'
)
SELECT
  cn."county_name" AS "County",
  eg."Percentage_increase"
FROM emp_growth eg
JOIN county_names cn ON cn."county_fips_code" = eg."area_fips"
ORDER BY eg."Percentage_increase" DESC NULLS LAST
LIMIT 1;
```

Based on the data from 2000 to 2018, **Utah County** in Utah experienced the greatest percentage increase in construction jobs, with a corresponding increase rate of approximately **136.0194%**.

```csv
County,Percentage_increase
Utah,136.0194
(Attention: answer in one row)
```
2025-01-19 00:56:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:56:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:56:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:56:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 00:56:35 - snowflake.connector.connection - INFO - closed
2025-01-19 00:56:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:56:36 - root - INFO - itercount: 1
2025-01-19 00:56:36 - root - INFO - 0
2025-01-19 00:56:36 - root - INFO - results: 
County,Percentage_increase
Utah,135.9226


2025-01-19 00:56:36 - root - INFO - Please check the answer again by reviewing Which Utah county has witnessed the greatest percentage increase of construction jobs from 2000 to 2018? And what is the corresponding increase rate?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: Based on the data from 2000 to 2018, Washington County in Utah experienced the greatest percentage increase in construction jobs, with a corresponding increase rate of 275%.

```csv
County,Percentage_increase
Washington,275.0
(Attention: answer in one row)
``` The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
County,Percentage_increase
Utah,135.9226
Current sql:
WITH emp_2000 AS (
  SELECT
    "area_fips",
    AVG("month3_emplvl_23_construction") AS "avg_employment_2000"
  FROM (
    SELECT * FROM BLS.BLS_QCEW._2000_Q1
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q2
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q3
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q4
  ) AS t
  WHERE "area_fips" LIKE '49%'
  GROUP BY "area_fips"
),
emp_2018 AS (
  SELECT
    "area_fips",
    AVG("month3_emplvl_23_construction") AS "avg_employment_2018"
  FROM (
    SELECT * FROM BLS.BLS_QCEW._2018_Q1
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q2
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q3
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q4
  ) AS t
  WHERE "area_fips" LIKE '49%'
  GROUP BY "area_fips"
),
emp_growth AS (
  SELECT
    e2000."area_fips",
    e2000."avg_employment_2000",
    e2018."avg_employment_2018",
    ROUND(((e2018."avg_employment_2018" - e2000."avg_employment_2000") / e2000."avg_employment_2000") * 100, 4) AS "Percentage_increase"
  FROM emp_2000 e2000
  JOIN emp_2018 e2018 ON e2000."area_fips" = e2018."area_fips"
  WHERE e2000."avg_employment_2000" IS NOT NULL AND e2000."avg_employment_2000" > 0
),
county_names AS (
  SELECT DISTINCT
    "county_fips_code",
    "county_name"
  FROM BLS.GEO_US_BOUNDARIES.COUNTIES
  WHERE "state_fips_code" = '49'
)
SELECT
  cn."county_name" AS "County",
  eg."Percentage_increase"
FROM emp_growth eg
JOIN county_names cn ON cn."county_fips_code" = eg."area_fips"
ORDER BY eg."Percentage_increase" DESC NULLS LAST
LIMIT 1;
2025-01-19 00:57:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:57:25 - root - INFO - ```sql
WITH emp_2000 AS (
  SELECT
    "area_fips",
    AVG("month3_emplvl_23_construction") AS "avg_employment_2000"
  FROM (
    SELECT * FROM BLS.BLS_QCEW._2000_Q1
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q2
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q3
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2000_Q4
  ) AS t
  WHERE "area_fips" LIKE '49%'
  GROUP BY "area_fips"
),
emp_2018 AS (
  SELECT
    "area_fips",
    AVG("month3_emplvl_23_construction") AS "avg_employment_2018"
  FROM (
    SELECT * FROM BLS.BLS_QCEW._2018_Q1
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q2
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q3
    UNION ALL
    SELECT * FROM BLS.BLS_QCEW._2018_Q4
  ) AS t
  WHERE "area_fips" LIKE '49%'
  GROUP BY "area_fips"
),
emp_growth AS (
  SELECT
    e2000."area_fips",
    e2000."avg_employment_2000",
    e2018."avg_employment_2018",
    ROUND(((e2018."avg_employment_2018" - e2000."avg_employment_2000") / e2000."avg_employment_2000") * 100, 4) AS "Percentage_increase"
  FROM emp_2000 e2000
  JOIN emp_2018 e2018 ON e2000."area_fips" = e2018."area_fips"
  WHERE e2000."avg_employment_2000" IS NOT NULL AND e2000."avg_employment_2000" > 0
),
county_names AS (
  SELECT DISTINCT
    "county_fips_code",
    "county_name"
  FROM BLS.GEO_US_BOUNDARIES.COUNTIES
  WHERE "state_fips_code" = '49'
)
SELECT
  cn."county_name" AS "County",
  eg."Percentage_increase"
FROM emp_growth eg
JOIN county_names cn ON cn."county_fips_code" = eg."area_fips"
ORDER BY eg."Percentage_increase" DESC NULLS LAST
LIMIT 1;
```

Based on the data from 2000 to 2018, **Utah County** in Utah experienced the greatest percentage increase in construction jobs, with a corresponding increase rate of **135.9226%**.

```csv
County,Percentage_increase
Utah,135.9226
(Attention: answer in one row)
```
2025-01-19 00:57:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:57:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:57:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:57:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 00:57:27 - snowflake.connector.connection - INFO - closed
2025-01-19 00:57:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:57:27 - root - INFO - itercount: 2
2025-01-19 00:57:27 - root - INFO - 0
2025-01-19 00:57:27 - root - INFO - Total iteration counts: 2
