2025-01-18 23:35:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:35:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:35:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:35:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:35:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:35:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 253
2025-01-18 23:35:44 - snowflake.connector.connection - INFO - closed
2025-01-18 23:35:44 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:35:44 - root - INFO - SQL:
SELECT DISTINCT "country_region"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
LIMIT 1000;
Results:
country_region
US
Uzbekistan
Yemen
Zimbabwe
Andorra
Angola
Armenia
Benin
Botswana
Brazil
Cabo Verde
Cameroon
Chad
Comoros
Czechia
Fiji
Gabon
Greece
MS Zaandam
Niger
Nigeria
Chile
Congo (Kinshasa)
Costa Rica
Djibouti
Ghana
Ireland
Kenya
Kosovo
Liechtenstein
Mexico
Morocco
Nepal
Nicaragua
Sao Tome and Principe
Sudan
Tanzania
Jersey
Gibraltar
Zambia
Canada
Lithuania
Monaco
Croatia
Cuba
"Korea, South"
Lesotho
Madagascar
Nauru
Spain
Sri Lanka
Sweden
Turkey
Tunisia
Mainland China
"Bahamas, The"
Palestine
Vatican City
Mozambique
Thailand
Hong Kong
North Ireland
Channel Islands
Winter Olympics 2022
Albania
Argentina
United Arab Emirates
Azerbaijan
Bangladesh
Belize
Bosnia and Herzegovina
Brunei
Bulgaria
El Salvador
Indonesia
Italy
Malaysia
China
Dominica
France
Guatemala
Honduras
Iceland
Jordan
Kazakhstan
Mali
Mauritius
Moldova
Palau
Romania
Rwanda
Saint Kitts and Nevis
Saint Lucia
Senegal
Tajikistan
Tonga
Reunion
Estonia
Kyrgyzstan
Kuwait
Libya
Netherlands
Pakistan
Philippines
Portugal
Germany
San Marino
Serbia
Seychelles
Somalia
Summer Olympics 2020
Togo
"Gambia, The"
Puerto Rico
Trinidad and Tobago
Tuvalu
The Gambia
Aruba
Republic of Ireland
Iran (Islamic Republic of)
Taipei and environs
Macao SAR
Saint Martin
Curacao
Ivory Coast
Cape Verde
Vietnam
West Bank and Gaza
Afghanistan
Algeria
Antarctica
Austria
Australia
Bahamas
Barbados
Belarus
Belgium
Burkina Faso
Colombia
Finland
Guinea
India
Luxembourg
Bhutan
Guinea-Bissau
Israel
Jamaica
Japan
Laos
Maldives
Namibia
New Zealand
Norway
Oman
Peru
Eswatini
Lebanon
Saint Vincent and the Grenadines
Switzerland
Western Sahara
Others
Macau
Republic of the Congo
Hungary
Malta
Mauritania
Mongolia
Russia
Dominican Republic
Gambia
North Macedonia
Poland
Slovenia
Taiwan*
Timor-Leste
South Korea
Cruise Ship
Guadeloupe
Martinique
French Guiana
Greenland
occupied Palestinian territory
Guam
The Bahamas
Saint Barthelemy
 Azerbaijan
St. Martin
Viet Nam
Cayman Islands
East Timor
Uganda
Ukraine
United Kingdom
Uruguay
Vanuatu
Venezuela
Antigua and Barbuda
Bahrain
Burundi
Cambodia
Central African Republic
Cote d'Ivoire
Denmark
Diamond Princess
Ecuador
Eritrea
Guyana
Iran
Iraq
Latvia
Cyprus
Georgia
Liberia
Malawi
Marshall Islands
Panama
Paraguay
Qatar
"Korea, North"
Singapore
South Sudan
Taiwan
UK
Mayotte
Faroe Islands
Burma
Equatorial Guinea
Bolivia
Egypt
Ethiopia
Grenada
Haiti
Holy See
Kiribati
Micronesia
Montenegro
Papua New Guinea
Samoa
Saudi Arabia
Sierra Leone
Slovakia
South Africa
Suriname
Syria
Guernsey
Czech Republic
Congo (Brazzaville)
Solomon Islands
""
Republic of Korea
Hong Kong SAR
Russian Federation
Republic of Moldova

2025-01-18 23:35:44 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:35:44 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:35:44 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:35:46 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 23:35:46 - snowflake.connector.connection - INFO - closed
2025-01-18 23:35:46 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:35:46 - root - INFO - SQL:
SELECT "date", "country_region", "confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20'
LIMIT 1000;
Results:
Too long, hard cut:
date,country_region,confirmed
2020-04-20,US,17
2020-04-20,US,114
2020-04-20,US,52
2020-04-20,US,598
2020-04-20,US,1
2020-04-20,US,54
2020-04-20,US,12
2020-04-20,US,46
2020-04-20,US,915
2020-04-20,US,1
2020-04-20,US,34
2020-04-20,US,7
2020-04-20,US,83
2020-04-20,US,100
2020-04-20,US,3
2020-04-20,US,85
2020-04-20,US,41
2020-04-20,US,4
2020-04-20,US,61
2020-04-20,US,70
2020-04-20,US,1
2020-04-20,US,218
2020-04-20,US,50
2020-04-20,US,1193
2020-04-20,US,7
2020-04-20,US,687
2020-04-20,US,6
2020-04-20,US,61
2020-04-20,US,4
2020-04-20,US,7
2020-04-20,US,2
2020-04-20,US,3
2020-04-20,US,421
2020-04-20,US,1
2020-04-20,US,40
2020-04-20,US,42
2020-04-20,US,32
2020-04-20,US,30
2020-04-20,US,2
2020-04-20,US,5
2020-04-20,US,1042
2020-04-20,US,327
2020-04-20,US,4
2020-04-20,US,79
2020-04-20,US,84
2020-04-20,US,6
2020-04-20,US,15
2020-04-20,US,1
2020-04-20,US,7
2020-04-20,US,14
2020-04-20,US,10
2020-04-20,US,17
2020-04-20,US,155
2020-04-20,US,0
2020-04-20,US,6
2020-04-20,US,134
2020-04-20,US,16
2020-04-20,US,8
2020-04-20,US,1
2020-04-20,US,19
2020-04-20,US,35
2020-04-20,US,23
2020-04-20,US,1098
2020-04-20,US,95
2020-04-20,US,18
2020-04-20,US,1
2020-04-20,US,9
2020-04-20,US,202
2020-04-20,US,2
2020-04-20,US,21
2020-04-20,US,7
2020-04-20,US,2
2020-04-20,US,1536
2020-04-20,US,7
2020-04-20,US,12
2020-04-20,US,2
2020-04-20,US,593
2020-04-20,US,38
2020-04-20,US,1
2020-04-20,US,2
2020-04-20,US,512
2020-04-20,US,4
2020-04-20,US,5
2020-04-20,US,2
2020-04-20,US,12
2020-04-20,US,68
2020-04-20,US,13
2020-04-20,US,146
2020-04-20,US,12
2020-04-20,US,6
2020-04-20,US,2
2020-04-20,US,3
2020-04-20,US,5
2020-04-20,US,410
2020-04-20,US,1
2020-04-20,US,44
2020-04-20,US,1
2020-04-20,US,23
2020-04-20,US,24
2020-04-20,US,1
2020-04-20,US,12
2020-04-20,US,28
2020-04-20,US,69
2020-04-20,US,10
2020-04-20,US,19
2020-04-20,US,17
2020-04-20,US,20
2020-04-20,US,117
2020-04-20,US,130
2020-04-20,US,4
2020-04-20,US,1875
2020-04-20,US,1511
2020-04-20,US,7
2020-04-20,US,4
2020-04-20,US,15
2020-04-20,US,8
2020-04-20,US,0
2020-04-20,US,1
2020-04-20,US,22
2020-04-20,US,4
2020-04-20,US,3
2020-04-20,US,632
2020-04-20,US,6
2020-04-20,US,6
2020-04-20,US,6
2020-04-20,US,93
2020-04-20,US,26
2020-04-20,US,4
2020-04-20,US,140
2020-04-20,US,7
2020-04-20,US,255
2020-04-20,US,44
2020-04-20,US,6
2020-04-20,US,3
2020-04-20,US,0
2020-04-20,US,5
2020-04-20,US,57
2020-04-20,US,85
2020-04-20,US,3
2020-04-20,US,21
2020-04-20,US,55
2020-04-20,US,15
2020-04-20,US,225
2020-04-20,US,36
2020-04-20,US,1
2020-04-20,US,298
2020-04-20,US,1
2020-04-20,US,1
2020-04-20,US,2
2020-04-20,US,15
2020-04-20,US,76
2020-04-20,US,18
2020-04-20,US,5
2020-04-20,US,26
2020-04-20,US,126
2020-04-20,US,73
2020-04-20,US,5
2020-04-20,US,15
2020-04-20,US,37
2020-04-20,US,62
2020-04-20,US,4
2020-04-20,US,23
2020-04-20,US,4
2020-04-20,US,8
2020-04-20,US,3
2020-04-20,US,28
2020-04-20,US,4
2020-04-20,US,314
2020-04-20,US,4
2020-04-20,US,13011
2020-04-20,US,138
2020-04-20,US,111
2020-04-20,US,1945
2020-04-20,US,387
2020-04-20,US,566
2020-04-20,US,10
2020-04-20,US,164
2020-04-20,US,24
2020-04-20,US,1
2020-04-20,US,1015
2020-04-20,US,32
2020-04-20,US,203
2020-04-20,US,66
2020-04-20,US,3
2020-04-20,US,1
2020-04-20,US,1
2020-04-20,US,3
2020-04-20,US,259
2020-04-20,US,6
2020-04-20,US,2
2020-04-20,US,476
2020-04-20,US,14
2020-04-20,US,5
2020-04-20,US,0
2020-04-20,US,5
2020-04-20,US,10
2020-04-20,US,22
2020-04-20,US,46
2020-04-20,US,24
2020-04-20,US,85
2020-04-20,US,3
2020-04-20,US,4
2020-04-20,US,4
2020-04-20,US,4
2020-04-20,US,24
2020-04-20,US,3
2020-04-20,US,33
2020-04-20,US,154
2020-04-20,US,6
2020-04-20,US,81
2020-04-20,US,94
2020-04-20,US,2
2020-04-20,US,1
2020-04-20,US,233
2020-04-20,US,24
2020-04-20,US,352
2020-04-20,US,0
2020-04-20,US,7
2020-04-20,US,7
2020-04-20,US,57
2020-04-20,US,1
2020-04-20,US,1
2020-04-20,US,29
2020-04-20,US,13
2020-04-20,US,7
2020-04-20,US,42
2020-04-20,US,25
2020-04-20,US,7
2020-04-20,US,37
2020-04-20,US,40
2020-04-20,US,20
2020-04-20,US,1
2020-04-20,US,315
2020-04-20,US,170
2020-04-20,US,1
2020-04-20,US,6
2020-04-20,US,28
2020-04-20,US,218
2020-04-20,US,1731
2020-04-20,US,67
2020-04-20,US,1
2020-04-20,US,4
2020-04-20,US,3
2020-04-20,US,9
2020-04-20,US,23
2020-04-20,US,199
2020-04-20,US,101
2020-04-20,US,4078
2020-04-20,US,14
2020-04-20,US,7
2020-04-20,US,9
2020-04-20,US,20
2020-04-20,US,13
2020-04-20,US,285
2020-04-20,US,0
2020-04-20,US,36
2020-04-20,US,12
2020-04-20,US,35
2020-04-20,US,5
2020-04-20,US,11
2020-04-20,US,32
2020-04-20,US,12
2020-04-20,US,26
2020-04-20,US,1886
2020-04-20,US,2
2020-04-20,US,5
2020-04-20,US,55
2020-04-20,US,4
2020-04-20,US,33
2020-04-20,US,30
2020-04-20,US,11
2020-04-20,US,47
2020-04-20,US,8
2020-04-20,US,48
2020-04-20,US,70
2020-04-20,US,2
2020-04-20,US,63
2020-04-20,US,9
2020-04-20,US,1663
2020-04-20,US,9
2020-04-20,US,1
2020-04-20,US,14
2020-04-20,US,1
2020-04-20,US,12
2020-04-20,US,72
2020-04-20,US,24
2020-04-20,US,1
2020-04-20,US,180
2020-04-20,US,161
2020-04-20,US,16
2020-04-20,US,0
2020-04-20,US,80
2020-04-20,US,212
2020-04-20,US,34
2020-04-20,US,1276
2

2025-01-18 23:35:46 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:35:46 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:35:46 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:35:48 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-18 23:35:48 - snowflake.connector.connection - INFO - closed
2025-01-18 23:35:48 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:35:48 - root - INFO - SQL:
SELECT DISTINCT "country"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
LIMIT 1000;
Results:
country
Sint Maarten (Dutch part)
Not classified
West Bank and Gaza
Serbia
Cambodia
United Arab Emirates
Cyprus
Low income
Peru
Early-demographic dividend
Fiji
Chad
Middle East & North Africa (excluding high income)
Middle East & North Africa (IDA & IBRD countries)
Dominican Republic
Kenya
"Venezuela, RB"
Guinea
Pakistan
Latvia
Qatar
Nigeria
North Macedonia
Cabo Verde
Palau
Sao Tome and Principe
Pacific island small states
St. Martin (French part)
Faroe Islands
Ireland
Bhutan
Zambia
Isle of Man
Guatemala
Singapore
Finland
Montenegro
Barbados
Syrian Arab Republic
Costa Rica
St. Lucia
Afghanistan
Gibraltar
Low & middle income
Latin America & Caribbean (excluding high income)
World
Canada
Rwanda
Thailand
Solomon Islands
Japan
Albania
Andorra
South Asia
South Sudan
Azerbaijan
Jamaica
Portugal
Mali
"Congo, Dem. Rep."
IDA total
Zimbabwe
Sudan
OECD members
Maldives
Nauru
Namibia
South Africa
Pre-demographic dividend
Sierra Leone
Grenada
Mexico
Niger
Senegal
Trinidad and Tobago
Luxembourg
Indonesia
Cayman Islands
Ghana
Lower middle income
Saudi Arabia
Denmark
United States
Europe & Central Asia (IDA & IBRD countries)
"Yemen, Rep."
Least developed countries: UN classification
Central Europe and the Baltics
Brunei Darussalam
Philippines
Sri Lanka
China
Norway
Kosovo
Oman
Middle East & North Africa
East Asia & Pacific (IDA & IBRD countries)
San Marino
Poland
Fragile and conflict affected situations
Angola
Samoa
Honduras
Channel Islands
Burundi
Madagascar
"Macao SAR, China"
Mongolia
Other small states
Bahrain
United Kingdom
Moldova
Benin
Lebanon
Estonia
Middle income
Europe & Central Asia
Croatia
Mauritius
East Asia & Pacific
North America
Netherlands
Liberia
Lao PDR
Sub-Saharan Africa
Algeria
Armenia
Switzerland
Nepal
"Bahamas, The"
Hungary
Bulgaria
Brazil
Haiti
Germany
Europe & Central Asia (excluding high income)
Morocco
Liechtenstein
Ethiopia
Paraguay
High income
Late-demographic dividend
Tajikistan
Uruguay
Italy
Caribbean small states
Malta
"Korea, Dem. People’s Rep."
Post-demographic dividend
Lithuania
Bangladesh
Gabon
IDA blend
Panama
Vanuatu
Belgium
Spain
Euro area
IBRD only
Togo
Sub-Saharan Africa (excluding high income)
Puerto Rico
Greenland
Turkey
"Micronesia, Fed. Sts."
St. Kitts and Nevis
Slovenia
"Hong Kong SAR, China"
Small states
Tanzania
Tunisia
Marshall Islands
St. Vincent and the Grenadines
Vietnam
Equatorial Guinea
Burkina Faso
Dominica
Belarus
Austria
Antigua and Barbuda
Colombia
Chile
Kyrgyz Republic
Comoros
"Korea, Rep."
Belize
Russian Federation
Guyana
Ecuador
Turkmenistan
Malaysia
Cote d'Ivoire
Mauritania
Heavily indebted poor countries (HIPC)
New Zealand
Jordan
Sweden
Bosnia and Herzegovina
Nicaragua
Cameroon
South Asia (IDA & IBRD)
East Asia & Pacific (excluding high income)
IDA & IBRD total
British Virgin Islands
Arab World
Australia
Suriname
Tonga
"Congo, Rep."
Upper middle income
Lesotho
New Caledonia
Curacao
American Samoa
Iraq
Georgia
"Egypt, Arab Rep."
Turks and Caicos Islands
Aruba
IDA only
Sub-Saharan Africa (IDA & IBRD countries)
Tuvalu
Ukraine
Greece
Malawi
Czech Republic
Iceland
Latin America & the Caribbean (IDA & IBRD countries)
Latin America & Caribbean
Botswana
European Union
India
Libya
"Iran, Islamic Rep."
Israel
Seychelles
France
Mozambique
Eritrea
Myanmar
Kiribati
Argentina
Virgin Islands (U.S.)
Djibouti
Uzbekistan
Kuwait
Papua New Guinea
Eswatini
Uganda
Romania
Northern Mariana Islands
Slovak Republic
Somalia
Bermuda
Cuba
Monaco
Guam
Kazakhstan
Central African Republic
El Salvador
Timor-Leste
Guinea-Bissau
"Gambia, The"
Bolivia
French Polynesia

2025-01-18 23:35:48 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:35:48 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:35:48 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:35:50 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-18 23:35:50 - snowflake.connector.connection - INFO - closed
2025-01-18 23:35:50 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:36:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:36:30 - root - INFO - ```sql
SELECT
  c."country_region" AS "Country",
  SUM(c."confirmed") AS "Total_confirmed_cases",
  p."Population",
  (SUM(c."confirmed") / p."Population") * 100000 AS "Cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  (
    SELECT
      CASE "country_name"
        WHEN 'United States' THEN 'US'
        WHEN 'Iran, Islamic Rep.' THEN 'Iran'
        ELSE "country_name"
      END AS "Country",
      MAX("value") AS "Population"
    FROM
      "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE
      "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
    GROUP BY
      "country_name"
  ) p
ON c."country_region" = p."Country"
WHERE
  c."date" = '2020-04-20'
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
  c."country_region", p."Population";
```
2025-01-18 23:36:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:36:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:36:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:36:32 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:36:32 - snowflake.connector.connection - INFO - closed
2025-01-18 23:36:32 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:36:33 - root - INFO - SQL:
SELECT
  c."country_region" AS "Country",
  SUM(c."confirmed") AS "Total_confirmed_cases",
  p."Population",
  (SUM(c."confirmed") / p."Population") * 100000 AS "Cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  (
    SELECT
      CASE "country_name"
        WHEN 'United States' THEN 'US'
        WHEN 'Iran, Islamic Rep.' THEN 'Iran'
        ELSE "country_name"
      END AS "Country",
      MAX("value") AS "Population"
    FROM
      "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE
      "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
    GROUP BY
      "country_name"
  ) p
ON c."country_region" = p."Country"
WHERE
  c."date" = '2020-04-20'
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
  c."country_region", p."Population";
Results:
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88347463686932
Spain,200210,47133521.0,424.77200037739595
Italy,181228,59729081.0,303.41668909990426
China,83817,1407745000.0,5.953990246813166
Germany,147065,83092962.0,176.98851558571232
Iran,83505,82913893.0,100.71291671228126
France,156480,67248926.0,232.6877309535025

2025-01-18 23:36:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:36:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:36:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:36:34 - snowflake.connector.cursor - INFO - Number of results in first chunk: 185
2025-01-18 23:36:34 - snowflake.connector.connection - INFO - closed
2025-01-18 23:36:34 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:36:34 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20'
GROUP BY "country_region"
LIMIT 1000;
Results:
country_region,total_confirmed
China,83817
Netherlands,33588
Albania,584
Argentina,2941
Azerbaijan,1436
Bangladesh,2948
Bosnia and Herzegovina,1309
Brunei,138
El Salvador,218
Estonia,1535
Honduras,477
Somalia,237
Dominica,16
Germany,147065
Iceland,1773
Jordan,425
Kazakhstan,1852
Kuwait,1995
Rwanda,147
Saint Kitts and Nevis,15
San Marino,462
Senegal,377
Serbia,6630
Guatemala,289
Kyrgyzstan,568
Libya,51
Mauritius,328
Moldova,2548
Pakistan,8418
Philippines,6459
Portugal,20863
United Arab Emirates,7265
Malaysia,5425
France,156480
Belize,18
Bulgaria,929
Indonesia,6760
Romania,8936
Seychelles,11
Italy,181228
Mali,246
Saint Lucia,15
Togo,84
Trinidad and Tobago,114
US,784326
Canada,37658
Andorra,717
Angola,24
Armenia,1339
Benin,54
Botswana,20
Cameroon,1163
Chad,33
Chile,10507
Congo (Kinshasa),332
Croatia,1881
Greece,2245
Kosovo,510
Brazil,40743
Czechia,6900
Djibouti,846
Fiji,18
Gabon,120
Liechtenstein,81
Monaco,94
Mozambique,39
Nepal,31
Nicaragua,10
Niger,648
Tanzania,254
Zimbabwe,25
Cuba,1087
"Korea, South",10674
MS Zaandam,9
Sri Lanka,304
Sudan,107
Thailand,2792
Turkey,90980
Yemen,1
Cabo Verde,67
Ghana,1042
Ireland,15652
Lithuania,1326
Madagascar,121
Mexico,8261
Morocco,3046
Nigeria,665
Spain,200210
Sweden,14777
Tunisia,884
Costa Rica,662
Kenya,281
Sao Tome and Principe,4
Uzbekistan,1627
Zambia,65
Australia,6547
Afghanistan,1026
Algeria,2718
Austria,14795
Bahamas,60
Belarus,6264
Belgium,39983
Bhutan,5
Burkina Faso,581
Colombia,3977
Hungary,1984
Jamaica,223
Mauritania,7
Switzerland,27944
Guinea,622
Guinea-Bissau,50
India,18539
Israel,13713
Japan,10797
Luxembourg,3558
Maldives,69
Namibia,16
New Zealand,1440
North Macedonia,1225
Oman,1410
Russia,47121
Saint Vincent and the Grenadines,12
Malta,431
Vietnam,268
Western Sahara,6
Timor-Leste,22
Dominican Republic,4964
Laos,19
Barbados,75
Eswatini,24
Finland,3868
Gambia,10
Norway,7156
Peru,16325
West Bank and Gaza,449
Lebanon,677
Slovenia,1335
Mongolia,33
Poland,9593
Taiwan*,422
United Kingdom,125856
Denmark,7711
Antigua and Barbuda,23
Bahrain,1907
Bolivia,564
Burundi,5
Cambodia,122
Central African Republic,12
Cyprus,772
Diamond Princess,712
Equatorial Guinea,79
Grenada,14
Liberia,99
Malawi,17
Montenegro,312
Singapore,8014
Cote d'Ivoire,847
Ecuador,10128
Egypt,3333
Georgia,402
Guyana,65
Haiti,57
Panama,4467
Sierra Leone,43
Syria,39
Uruguay,535
Eritrea,39
Iran,83505
Iraq,1574
Papua New Guinea,7
Paraguay,208
Suriname,10
Uganda,56
Holy See,9
Burma,119
Congo (Brazzaville),160
Ethiopia,111
Slovakia,1173
Ukraine,5710
South Sudan,4
Venezuela,256
Qatar,6015
South Africa,3300
Latvia,739
Saudi Arabia,10484

2025-01-18 23:36:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:36:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:36:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:36:36 - snowflake.connector.connection - INFO - closed
2025-01-18 23:36:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:37:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:37:04 - root - INFO - It appears that there's a syntax error in your SQL query due to a mismatched quotation mark in the `WHERE` clause. Here's your original query:

```sql
SELECT "country_region", "province_state", "confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20" AND "country_region" = 'US'
LIMIT 1000;
```

**Issue:** The date value is not properly enclosed in single quotes. The opening quote is a single quote (`'`), but the closing quote is a double quote (`"`), causing a syntax error.

**Corrected Query:**

```sql
SELECT "country_region", "province_state", "confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'US'
LIMIT 1000;
```

**Explanation:**

- Ensure that string literals are enclosed with matching single quotes. In the `WHERE` clause, both the date and country should be enclosed in single quotes.
- Now, the corrected `WHERE` clause is:

  ```sql
  WHERE "date" = '2020-04-20' AND "country_region" = 'US'
  ```

**Next Steps:**

- Run the corrected query to retrieve the confirmed COVID-19 cases for each province/state in the United States on April 20, 2020.
  
If you intend to aggregate the total confirmed cases for the United States, you can use the following query:

```sql
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'US'
GROUP BY "country_region";
```

**Result:**

This will give you the total number of confirmed cases in the US on April 20, 2020.

Let me know if you need further assistance or additional adjustments to the query.
2025-01-18 23:37:04 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:37:04 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:37:04 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:37:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 23:37:06 - snowflake.connector.connection - INFO - closed
2025-01-18 23:37:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:37:06 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'US'
GROUP BY "country_region";
Results:
country_region,total_confirmed
US,784326

2025-01-18 23:37:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:37:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:37:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:37:07 - snowflake.connector.cursor - INFO - Number of results in first chunk: 6
2025-01-18 23:37:07 - snowflake.connector.connection - INFO - closed
2025-01-18 23:37:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:38:07 - root - INFO - ```sql
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    p."Population",
    (SUM(c."confirmed") / p."Population") * 100000 AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "value" IS NOT NULL
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
```
2025-01-18 23:38:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:38:09 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:09 - root - INFO - SQL:
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    p."Population",
    (SUM(c."confirmed") / p."Population") * 100000 AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "value" IS NOT NULL
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
Results:
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88347463686932
Spain,200210,47133521.0,424.77200037739595
Italy,181228,59729081.0,303.41668909990426
China,83817,1407745000.0,5.953990246813166
Germany,147065,83092962.0,176.98851558571232
Iran,83505,82913893.0,100.71291671228126
France,156480,67248926.0,232.6877309535025

2025-01-18 23:38:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-18 23:38:11 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:11 - root - INFO - SQL:
SELECT DISTINCT "indicator_name"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
LIMIT 1000;
Results:
Too long, hard cut:
indicator_name
Women Business and the Law Index Score (scale 1-100)
"Age dependency ratio, old (% of working-age population)"
CPIA efficiency of revenue mobilization rating (1=low to 6=high)
DEC alternative conversion factor (LCU per US$)
Electricity production from hydroelectric sources (% of total)
GDP per capita growth (annual %)
GNI (constant LCU)
Gross domestic savings (% of GDP)
Cereal yield (kg per hectare)
CO2 emissions from residential buildings and commercial and public services (% of total fuel combustion)
Coal rents (% of GDP)
"Communications, computer, etc. (% of service imports, BoP)"
Employment in agriculture (% of total employment) (modeled ILO estimate)
Insurance and financial services (% of commercial service imports)
Military expenditure (current USD)
"Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent)"
"Over-age students, primary, male (% of male enrollment)"
"Current account balance (BoP, current US$)"
"Foreign direct investment, net outflows (% of GDP)"
Merchandise imports from low- and middle-income economies in South Asia (% of total merchandise imports)
"Population ages 55-59, female (% of female population)"
"Industry (including construction), value added (annual % growth)"
"Population ages 60-64, female (% of female population)"
Renewable electricity output (% of total electricity output)
"Secondary income receipts (BoP, current US$)"
"Services, value added (annual % growth)"
Statistical Capacity Score (Overall Average) (scale 0 - 100)
Total greenhouse gas emissions (kt of CO2 equivalent)
"Bound rate, simple mean, all products (%)"
"CO2 emissions from electricity and heat production, total (% of total fuel combustion)"
CO2 emissions from liquid fuel consumption (kt)
GNI (current LCU)
"GNI per capita, Atlas method (current US$)"
Imports of goods and services (constant LCU)
"Industry (including construction), value added (current LCU)"
Monetary Sector credit to private sector (% GDP)
"Population ages 25-29, male (% of male population)"
"Population ages 65 and above, female"
"Population, female (% of total population)"
Renewable energy consumption (% of total final energy consumption)
"School enrollment, tertiary (% gross)"
"School enrollment, tertiary (gross), gender parity index (GPI)"
"Survival to age 65, female (% of cohort)"
Manufactures exports (% of merchandise exports)
"Travel services (% of service imports, BoP)"
"Primary completion rate, total (% of relevant age group)"
Average transaction cost of sending remittances to a specific country (%)
"Mortality rate, infant, female (per 1,000 live births)"
Net domestic credit (current LCU)
"Net incurrence of liabilities, total (% of GDP)"
Net secondary income (Net current transfers from abroad) (current LCU)
Prevalence of anemia among non-pregnant women (% of women ages 15-49)
Adjusted savings: particulate emission damage (% of GNI)
Consumer price index (2010 = 100)
"Employment in industry, male (% of male employment) (modeled ILO estimate)"
Interest payments (% of expense)
"School enrollment, primary and secondary (gross), gender parity index (GPI)"
"Secondary income, other sectors, payments (BoP, current US$)"
People using at least basic sanitation services (% of population)
"Government expenditure on education, total (% of government expenditure)"
"External debt stocks, total (DOD, current US$)"
"Employment in services, female (% of female employment) (modeled ILO estimate)"
"Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)"
Import unit value index (2000 = 100)
Land under cereal production (hectares)
"Manufacturing, value added (current LCU)"
"Age dependency ratio, young (% of working-age population)"
"Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)"
Methane emissions (kt of CO2 equivalent)
"Net ODA received (% of imports of goods, services and primary income)"
Prevalence of undernourishment (% of population)
"Probability of dying among youth ages 20-24 years (per 1,000)"
"School enrollment, tertiary, female (% gross)"
"Technical cooperation grants (BoP, current US$)"
"Trademark applications, direct nonresident"
"Trademark applications, nonresident, by count"
Tuberculosis treatment success rate (% of new cases)
Children out of school (% of primary school age)
CO2 emissions from gaseous fuel consumption (% of total)
"Computer, communications and other services (% of commercial service imports)"
"Employment to population ratio, 15+, male (%) (national estimate)"
Exports as a capacity to import (constant LCU)
"Foreign direct investment, net inflows (% of GDP)"
"Labor force, total"
"Population ages 00-04, male (% of male population)"
Refugee population by country or territory of asylum
"School enrollment, secondary, male (% net)"
"Share of tariff lines with international peaks, all products (%)"
"Share of tariff lines with international peaks, primary products (%)"
"Vulnerable employment,

2025-01-18 23:38:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 264
2025-01-18 23:38:13 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:13 - root - INFO - SQL:
SELECT "country_name", "indicator_code", "value", "year"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
LIMIT 1000;
Results:
Too long, hard cut:
country_name,indicator_code,value,year
Burundi,SP.POP.TOTL,11530577.0,2019
St. Lucia,SP.POP.TOTL,182795.0,2019
Greece,SP.POP.TOTL,10721582.0,2019
St. Martin (French part),SP.POP.TOTL,38002.0,2019
Ukraine,SP.POP.TOTL,44386203.0,2019
Cayman Islands,SP.POP.TOTL,64948.0,2019
Heavily indebted poor countries (HIPC),SP.POP.TOTL,801708019.0,2019
Maldives,SP.POP.TOTL,530957.0,2019
Moldova,SP.POP.TOTL,2664974.0,2019
Myanmar,SP.POP.TOTL,54045422.0,2019
Serbia,SP.POP.TOTL,6945235.0,2019
China,SP.POP.TOTL,1407745000.0,2019
South Sudan,SP.POP.TOTL,11062114.0,2019
Guyana,SP.POP.TOTL,782775.0,2019
Bolivia,SP.POP.TOTL,11513102.0,2019
Chile,SP.POP.TOTL,18952035.0,2019
Costa Rica,SP.POP.TOTL,5047561.0,2019
Dominican Republic,SP.POP.TOTL,10738957.0,2019
Ecuador,SP.POP.TOTL,17373657.0,2019
Guatemala,SP.POP.TOTL,16604026.0,2019
Jordan,SP.POP.TOTL,10101697.0,2019
Kenya,SP.POP.TOTL,52573967.0,2019
Mexico,SP.POP.TOTL,127575529.0,2019
Peru,SP.POP.TOTL,32510462.0,2019
Paraguay,SP.POP.TOTL,7044639.0,2019
El Salvador,SP.POP.TOTL,6453550.0,2019
Tunisia,SP.POP.TOTL,11694721.0,2019
Uruguay,SP.POP.TOTL,3461731.0,2019
Central African Republic,SP.POP.TOTL,4745179.0,2019
South Asia (IDA & IBRD),SP.POP.TOTL,1835776769.0,2019
Sierra Leone,SP.POP.TOTL,7813207.0,2019
Virgin Islands (U.S.),SP.POP.TOTL,106669.0,2019
Middle East & North Africa (excluding high income),SP.POP.TOTL,389457075.0,2019
Bangladesh,SP.POP.TOTL,163046173.0,2019
Europe & Central Asia (IDA & IBRD countries),SP.POP.TOTL,460788476.0,2019
Puerto Rico,SP.POP.TOTL,3193694.0,2019
Belgium,SP.POP.TOTL,11488980.0,2019
Dominica,SP.POP.TOTL,71808.0,2019
"Congo, Dem. Rep.",SP.POP.TOTL,86790568.0,2019
St. Kitts and Nevis,SP.POP.TOTL,52834.0,2019
Argentina,SP.POP.TOTL,44938712.0,2019
Brazil,SP.POP.TOTL,211049519.0,2019
Cameroon,SP.POP.TOTL,25876387.0,2019
Colombia,SP.POP.TOTL,50339443.0,2019
"Egypt, Arab Rep.",SP.POP.TOTL,100388076.0,2019
Honduras,SP.POP.TOTL,9746115.0,2019
Indonesia,SP.POP.TOTL,270625567.0,2019
India,SP.POP.TOTL,1366417756.0,2019
"Korea, Rep.",SP.POP.TOTL,51709098.0,2019
Sri Lanka,SP.POP.TOTL,21803000.0,2019
Morocco,SP.POP.TOTL,36471766.0,2019
Malaysia,SP.POP.TOTL,31949789.0,2019
Pakistan,SP.POP.TOTL,216565317.0,2019
Panama,SP.POP.TOTL,4246440.0,2019
Philippines,SP.POP.TOTL,108116622.0,2019
Senegal,SP.POP.TOTL,16296362.0,2019
Sweden,SP.POP.TOTL,10278887.0,2019
Thailand,SP.POP.TOTL,69625581.0,2019
Turkey,SP.POP.TOTL,83429607.0,2019
South Africa,SP.POP.TOTL,58558267.0,2019
Middle income,SP.POP.TOTL,5796189831.0,2019
Sub-Saharan Africa,SP.POP.TOTL,1106957870.0,2019
Monaco,SP.POP.TOTL,38967.0,2019
Somalia,SP.POP.TOTL,15442906.0,2019
Spain,SP.POP.TOTL,47133521.0,2019
Jamaica,SP.POP.TOTL,2948277.0,2019
Comoros,SP.POP.TOTL,850891.0,2019
Angola,SP.POP.TOTL,31825299.0,2019
Greenland,SP.POP.TOTL,56225.0,2019
Bosnia and Herzegovina,SP.POP.TOTL,3300998.0,2019
New Caledonia,SP.POP.TOTL,271300.0,2019
Slovenia,SP.POP.TOTL,2088385.0,2019
Cuba,SP.POP.TOTL,11333484.0,2019
Austria,SP.POP.TOTL,8879920.0,2019
"Iran, Islamic Rep.",SP.POP.TOTL,82913893.0,2019
Uganda,SP.POP.TOTL,44269587.0,2019
"Macao SAR, China",SP.POP.TOTL,640446.0,2019
Sudan,SP.POP.TOTL,42813237.0,2019
Georgia,SP.POP.TOTL,3720161.0,2019
Lithuania,SP.POP.TOTL,2794137.0,2019
Faroe Islands,SP.POP.TOTL,48677.0,2019
Finland,SP.POP.TOTL,5521606.0,2019
Marshall Islands,SP.POP.TOTL,58791.0,2019
South Asia,SP.POP.TOTL,1835776769.0,2019
Gibraltar,SP.POP.TOTL,33706.0,2019
Uzbekistan,SP.POP.TOTL,33580350.0,2019
Least developed countries: UN classification,SP.POP.TOTL,1033388868.0,2019
Palau,SP.POP.TOTL,18001.0,2019
Cote d'Ivoire,SP.POP.TOTL,25716554.0,2019
Australia,SP.POP.TOTL,25365745.0,2019
Belarus,SP.POP.TOTL,9419758.0,2019
Mongolia,SP.POP.TOTL,3225166.0,2019
Sao Tome and Principe,SP.POP.TOTL,215048.0,2019
Solomon Islands,SP.POP.TOTL,669821.0,2019
Cyprus,SP.POP.TOTL,1198574.0,2019
Kyrgyz Republic,SP.POP.TOTL,6456200.0,2019
Early-demographic dividend,SP.POP.TOTL,3290291029.0,2019
Turks and Caicos Islands,SP.POP.TOTL,38194.0,2019
United Kingdom,SP.POP.TOTL,66836327.0,2019
Namibia,SP.POP.TOTL,2494524.0,2019
Gabon,SP.POP.TOTL,2172578.0,2019
Bahrain,SP.POP.TOTL,1641164.0,2019
Barbados,SP.POP.TOTL,287021.0,2019
Sint Maarten (Dutch part),SP.POP.TOTL,40733.0,2019
Burkina Faso,SP.POP.TOTL,20321383.0,2019
Switzerland,SP.POP.TOTL,8575280.0,2019
Italy,SP.POP.TOTL,59729081.0,2019
San Marino,SP.POP.TOTL,33864.0,2019
North Macedonia,SP.POP.TOTL,2076694.0,2019
Vietnam,SP.POP.TOTL,96462108.0,2019
"Venezuela, RB",SP.POP.TOTL,28515829.0,2019
Upper middle income,SP.POP.TOTL,2510772964.0,2019
Romania,SP.POP.TOTL,19371648.0,2019
Guam,SP.POP.TOTL,167295.0,2019
Mauritania,SP.POP.TOTL,4525698.0,2019
IDA only,SP.POP.TOTL,1109120636.0,2019
Israel,SP.POP.TOTL,9054000.0,2019
Madagascar,SP.POP.TOTL,26969306.0,2019
Latin America & Caribbean (excluding high income),SP.POP.TOTL,589503742.0,2019
Lower middle income,SP.POP.TOTL,3285416867.0,2019
Canada,SP.POP.TOTL,37593384.0,2019
Sub-Saharan Africa (IDA & IBRD countries),SP.POP.TOTL,1106957870.0,2019
Bhutan,SP.POP.TOTL,

2025-01-18 23:38:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:38:15 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:15 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY "country_region"
LIMIT 1000;
Results:
country_region,total_confirmed
US,784326
Spain,200210
China,83817
France,156480
Germany,147065
Italy,181228
Iran,83505

2025-01-18 23:38:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 23:38:16 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:17 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:17 - root - INFO - SQL:
SELECT "country_name", "value"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "country_name" = 'United States'
LIMIT 1000;
Results:
country_name,value
United States,328329953.0

2025-01-18 23:38:17 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:17 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:17 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:18 - snowflake.connector.cursor - INFO - Number of results in first chunk: 199
2025-01-18 23:38:18 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:19 - root - INFO - SQL:
SELECT DISTINCT "province_state"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "country_region" = 'US'
LIMIT 1000;
Results:
province_state
Nevada
New York
Northern Mariana Islands
Oklahoma
Tennessee
Texas
Utah
Virginia
Virgin Islands
Indiana
"Santa Clara, CA"
"San Antonio, TX"
"Omaha, NE (From Diamond Princess)"
"Snohomish County, WA"
Chicago
"Westchester County, NY"
"New York City, NY"
"Orange County, CA"
"Bergen County, NJ"
"Hillsborough, FL"
"Fort Bend County, TX"
"Grant County, WA"
"Queens County, NY"
"Sarasota, FL"
"Umatilla, OR"
"San Diego County, CA"
US
"Harris County, TX"
"Washington County, OR"
"Travis, CA"
"Lackland, TX"
"Nassau County, NY"
"Montgomery County, PA"
"Lee County, FL"
"Washington, D.C."
"Berkshire County, MA"
"Carver County, MN"
"Charleston County, SC"
"Charlotte County, FL"
"Chatham County, NC"
"Cherokee County, GA"
"Delaware County, PA"
"Jefferson Parish, LA"
"Marion County, OR"
"Shasta County, CA"
"Marion County, IN"
"St. Louis County, MO"
"Wayne County, PA"
"Montgomery County, TX"
"Montgomery County, MD"
"Fresno County, CA"
"Santa Cruz County, CA"
Missouri
Puerto Rico
Recovered
California
Colorado
Delaware
District of Columbia
Grand Princess
Kansas
Minnesota
Mississippi
"Seattle, WA"
"Sacramento County, CA"
"Cook County, IL"
"Placer County, CA"
"Providence, RI"
" Norfolk County, MA"
"Wake County, NC"
"Ashland, NE"
"Santa Clara County, CA"
"Suffolk County, MA"
"Kershaw County, SC"
"Providence County, RI"
"Alameda County, CA"
"Hendricks County, IN"
"Manatee County, FL"
"Pinal County, AZ"
"Collin County, TX"
"Douglas County, OR"
"Fayette County, KY"
"Klamath County, OR"
"Riverside County, CA"
"Shelby County, TN"
"Tulsa County, OK"
"Harford County, MD"
"Hudson County, NJ"
"Jefferson County, KY"
"Johnson County, KS"
"Kittitas County, WA"
"Volusia County, FL"
"Unknown Location, MA"
Nebraska
New Jersey
Ohio
Oregon
Pennsylvania
Rhode Island
Arkansas
Connecticut
Idaho
Maryland
Guam
American Samoa
"Madison, WI"
"Orange, CA"
"Humboldt County, CA"
"Travis, CA (From Diamond Princess)"
United States Virgin Islands
"King County, WA"
"Grafton County, NH"
"San Francisco County, CA"
"Maricopa County, AZ"
West Virginia
Alabama
Kentucky
Iowa
"San Benito, CA"
"Tempe, AZ"
"Williamson County, TN"
Wisconsin
"Lackland, TX (From Diamond Princess)"
Louisiana
Unassigned Location (From Diamond Princess)
Grand Princess Cruise Ship
"Norfolk County, MA"
"Pierce County, WA"
"Cobb County, GA"
"Douglas County, CO"
"Jackson County, OR "
"Summit County, CO"
"Clark County, WA"
"Okaloosa County, FL"
"Plymouth County, MA"
"Rockingham County, NH"
"Spokane County, WA"
"Ulster County, NY"
"Yolo County, CA"
"Douglas County, NE"
"Saratoga County, NY"
"Polk County, GA"
"El Paso County, CO"
"Honolulu County, HI"
"Virgin Islands, U.S."
"Norwell County, MA"
Montana
New Hampshire
New Mexico
North Carolina
North Dakota
South Carolina
South Dakota
Washington
Wyoming
Vermont
Arizona
Diamond Princess
Florida
Hawaii
Maine
Michigan
Illinois
Massachusetts
"Chicago, IL"
"Boston, MA"
"Los Angeles, CA"
"Portland, OR"
"San Mateo, CA"
Alaska
Georgia
"Fulton County, GA"
"Berkeley, CA"
"Contra Costa County, CA"
"Santa Rosa County, FL"
"Sonoma County, CA"
"Clark County, NV"
"New York County, NY"
"Middlesex County, MA"
"Unassigned Location, WA"
"Rockland County, NY"
"Broward County, FL"
"Johnson County, IA"
"Denver County, CO"
"Fairfax County, VA"
"Harrison County, KY"
"Washoe County, NV"
"Fairfield County, CT"
"Jefferson County, WA"
"Spartanburg County, SC"
"Bennington County, VT"
"Davidson County, TN"
"Davis County, UT"
"Madera County, CA"
"Ramsey County, MN"
"Suffolk County, NY"
"Unassigned Location, VT"
Wuhan Evacuee
"Floyd County, GA"

2025-01-18 23:38:19 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:19 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:19 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 23:38:20 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:38:20 - root - INFO - SQL:
SELECT "country_region", "active"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'Italy'
LIMIT 1000;
Results:
country_region,active
Italy,108237

2025-01-18 23:38:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:38:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:38:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:38:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 23:38:22 - snowflake.connector.connection - INFO - closed
2025-01-18 23:38:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:39:25 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:39:25 - root - INFO - ```sql
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    COALESCE(p."Population", 82913906) AS "Population",
    (SUM(c."confirmed") / COALESCE(p."Population", 82913906)) * 100000 AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
LEFT JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
```
2025-01-18 23:39:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:39:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:39:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:39:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:39:26 - snowflake.connector.connection - INFO - closed
2025-01-18 23:39:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:39:27 - root - INFO - SQL:
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    COALESCE(p."Population", 82913906) AS "Population",
    (SUM(c."confirmed") / COALESCE(p."Population", 82913906)) * 100000 AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
LEFT JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
Results:
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88347463686932
Spain,200210,47133521.0,424.77200037739595
Italy,181228,59729081.0,303.41668909990426
China,83817,1407745000.0,5.953990246813166
Germany,147065,83092962.0,176.98851558571232
Iran,83505,82913893.0,100.71291671228126
France,156480,67248926.0,232.6877309535025

2025-01-18 23:39:27 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:39:27 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:39:27 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:39:28 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-18 23:39:28 - snowflake.connector.connection - INFO - closed
2025-01-18 23:39:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:39:29 - root - INFO - SQL:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" ILIKE '%Germany%'
GROUP BY "country_region"
LIMIT 1000;
Results:
country_region,total_confirmed
Germany,147065

2025-01-18 23:39:29 - root - INFO - itercount: 0
2025-01-18 23:39:29 - root - INFO - Database Name: COVID19_JHU_WORLD_BANK
Schema Name: COVID19_JHU_CSSE
DDL describes table information.
,0
table_name,CONFIRMED_CASES
description,
DDL,"create or replace TABLE CONFIRMED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,1
table_name,DEATHS
description,
DDL,"create or replace TABLE DEATHS (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,2
table_name,RECOVERED_CASES
description,
DDL,"create or replace TABLE RECOVERED_CASES (
	""province_or_state"" VARCHAR(16777216),
	""country_or_region"" VARCHAR(16777216),
	""latitude"" VARCHAR(16777216),
	""longitude"" VARCHAR(16777216),
	""location_geom"" VARCHAR(16777216),
	_1_22_20 VARCHAR(16777216),
	_1_23_20 VARCHAR(16777216),
	_1_24_20 VARCHAR(16777216),
	_1_25_20 VARCHAR(16777216),
	_1_26_20 VARCHAR(16777216),
	_1_27_20 VARCHAR(16777216),
	_1_28_20 VARCHAR(16777216),
	_1_29_20 VARCHAR(16777216),
	_1_30_20 VARCHAR(16777216),
	_1_31_20 VARCHAR(16777216),
	_2_1_20 VARCHAR(16777216),
	_2_2_20 VARCHAR(16777216),
	_2_3_20 VARCHAR(16777216),
	_2_4_20 VARCHAR(16777216),
	_2_5_20 VARCHAR(16777216),
	_2_6_20 VARCHAR(16777216),
	_2_7_20 VARCHAR(16777216),
	_2_8_20 VARCHAR(16777216),
	_2_9_20 VARCHAR(16777216),
	_2_10_20 VARCHAR(16777216),
	_2_11_20 VARCHAR(16777216),
	_2_12_20 VARCHAR(16777216),
	_2_13_20 VARCHAR(16777216),
	_2_14_20 VARCHAR(16777216),
	_2_15_20 VARCHAR(16777216),
	_2_16_20 VARCHAR(16777216),
	_2_17_20 VARCHAR(16777216),
	_2_18_20 VARCHAR(16777216),
	_2_19_20 VARCHAR(16777216),
	_2_20_20 VARCHAR(16777216),
	_2_21_20 VARCHAR(16777216),
	_2_22_20 VARCHAR(16777216),
	_2_23_20 VARCHAR(16777216),
	_2_24_20 VARCHAR(16777216),
	_2_25_20 VARCHAR(16777216),
	_2_26_20 VARCHAR(16777216),
	_2_27_20 VARCHAR(16777216),
	_2_28_20 VARCHAR(16777216),
	_2_29_20 VARCHAR(16777216),
	_3_1_20 VARCHAR(16777216),
	_3_2_20 VARCHAR(16777216),
	_3_3_20 VARCHAR(16777216),
	_3_4_20 VARCHAR(16777216),
	_3_5_20 VARCHAR(16777216),
	_3_6_20 VARCHAR(16777216),
	_3_7_20 VARCHAR(16777216),
	_3_8_20 VARCHAR(16777216),
	_3_9_20 VARCHAR(16777216),
	_3_10_20 VARCHAR(16777216),
	_3_11_20 VARCHAR(16777216),
	_3_12_20 VARCHAR(16777216),
	_3_13_20 VARCHAR(16777216),
	_3_14_20 VARCHAR(16777216),
	_3_15_20 VARCHAR(16777216),
	_3_16_20 VARCHAR(16777216),
	_3_17_20 VARCHAR(16777216),
	_3_18_20 VARCHAR(16777216),
	_3_19_20 VARCHAR(16777216),
	_3_20_20 VARCHAR(16777216),
	_3_21_20 VARCHAR(16777216),
	_3_22_20 VARCHAR(16777216),
	_3_23_20 VARCHAR(16777216),
	_3_24_20 VARCHAR(16777216),
	_3_25_20 VARCHAR(16777216),
	_3_26_20 VARCHAR(16777216),
	_3_27_20 VARCHAR(16777216),
	_3_28_20 VARCHAR(16777216),
	_3_29_20 VARCHAR(16777216),
	_3_30_20 VARCHAR(16777216),
	_3_31_20 VARCHAR(16777216),
	_4_1_20 VARCHAR(16777216),
	_4_2_20 VARCHAR(16777216),
	_4_3_20 VARCHAR(16777216),
	_4_4_20 VARCHAR(16777216),
	_4_5_20 VARCHAR(16777216),
	_4_6_20 VARCHAR(16777216),
	_4_7_20 VARCHAR(16777216),
	_4_8_20 VARCHAR(16777216),
	_4_9_20 VARCHAR(16777216),
	_4_10_20 VARCHAR(16777216),
	_4_11_20 VARCHAR(16777216),
	_4_12_20 VARCHAR(16777216),
	_4_13_20 VARCHAR(16777216),
	_4_14_20 VARCHAR(16777216),
	_4_15_20 VARCHAR(16777216),
	_4_16_20 VARCHAR(16777216),
	_4_17_20 VARCHAR(16777216),
	_4_18_20 VARCHAR(16777216),
	_4_19_20 VARCHAR(16777216),
	_4_20_20 VARCHAR(16777216),
	_4_21_20 VARCHAR(16777216),
	_4_22_20 VARCHAR(16777216),
	_4_23_20 VARCHAR(16777216),
	_4_24_20 VARCHAR(16777216),
	_4_25_20 VARCHAR(16777216),
	_4_26_20 VARCHAR(16777216),
	_4_27_20 VARCHAR(16777216),
	_4_28_20 VARCHAR(16777216),
	_4_29_20 VARCHAR(16777216),
	_4_30_20 VARCHAR(16777216),
	_5_1_20 VARCHAR(16777216),
	_5_2_20 VARCHAR(16777216),
	_5_3_20 VARCHAR(16777216),
	_5_4_20 VARCHAR(16777216),
	_5_5_20 VARCHAR(16777216),
	_5_6_20 VARCHAR(16777216),
	_5_7_20 VARCHAR(16777216),
	_5_8_20 VARCHAR(16777216),
	_5_9_20 VARCHAR(16777216),
	_5_10_20 VARCHAR(16777216),
	_5_11_20 VARCHAR(16777216),
	_5_12_20 VARCHAR(16777216),
	_5_13_20 VARCHAR(16777216),
	_5_14_20 VARCHAR(16777216),
	_5_15_20 VARCHAR(16777216),
	_5_16_20 VARCHAR(16777216),
	_5_17_20 VARCHAR(16777216),
	_5_18_20 VARCHAR(16777216),
	_5_19_20 VARCHAR(16777216),
	_5_20_20 VARCHAR(16777216),
	_5_21_20 VARCHAR(16777216),
	_5_22_20 VARCHAR(16777216),
	_5_23_20 VARCHAR(16777216),
	_5_24_20 VARCHAR(16777216),
	_5_25_20 VARCHAR(16777216),
	_5_26_20 VARCHAR(16777216),
	_5_27_20 VARCHAR(16777216),
	_5_28_20 VARCHAR(16777216),
	_5_29_20 VARCHAR(16777216),
	_5_30_20 VARCHAR(16777216),
	_5_31_20 VARCHAR(16777216),
	_6_1_20 VARCHAR(16777216),
	_6_2_20 VARCHAR(16777216),
	_6_3_20 VARCHAR(16777216),
	_6_4_20 VARCHAR(16777216),
	_6_5_20 VARCHAR(16777216),
	_6_6_20 VARCHAR(16777216),
	_6_7_20 VARCHAR(16777216),
	_6_8_20 VARCHAR(16777216),
	_6_9_20 VARCHAR(16777216),
	_6_10_20 VARCHAR(16777216),
	_6_11_20 VARCHAR(16777216),
	_6_12_20 VARCHAR(16777216),
	_6_13_20 VARCHAR(16777216),
	_6_14_20 VARCHAR(16777216),
	_6_15_20 VARCHAR(16777216),
	_6_16_20 VARCHAR(16777216),
	_6_17_20 VARCHAR(16777216),
	_6_18_20 VARCHAR(16777216),
	_6_19_20 VARCHAR(16777216),
	_6_20_20 VARCHAR(16777216),
	_6_21_20 VARCHAR(16777216),
	_6_22_20 VARCHAR(16777216),
	_6_23_20 VARCHAR(16777216),
	_6_24_20 VARCHAR(16777216),
	_6_25_20 VARCHAR(16777216),
	_6_26_20 VARCHAR(16777216),
	_6_27_20 VARCHAR(16777216),
	_6_28_20 VARCHAR(16777216),
	_6_29_20 VARCHAR(16777216),
	_6_30_20 VARCHAR(16777216),
	_7_1_20 VARCHAR(16777216),
	_7_2_20 VARCHAR(16777216),
	_7_3_20 VARCHAR(16777216),
	_7_4_20 VARCHAR(16777216),
	_7_5_20 VARCHAR(16777216),
	_7_6_20 VARCHAR(16777216),
	_7_7_20 VARCHAR(16777216),
	_7_8_20 VARCHAR(16777216),
	_7_9_20 VARCHAR(16777216),
	_7_10_20 VARCHAR(16777216),
	_7_11_20 VARCHAR(16777216),
	_7_12_20 VARCHAR(16777216),
	_7_13_20 VARCHAR(16777216),
	_7_14_20 VARCHAR(16777216),
	_7_15_20 VARCHAR(16777216),
	_7_16_20 VARCHAR(16777216),
	_7_17_20 VARCHAR(16777216),
	_7_18_20 VARCHAR(16777216),
	_7_19_20 VARCHAR(16777216),
	_7_20_20 VARCHAR(16777216),
	_7_21_20 VARCHAR(16777216),
	_7_22_20 VARCHAR(16777216),
	_7_23_20 VARCHAR(16777216),
	_7_24_20 VARCHAR(16777216),
	_7_25_20 VARCHAR(16777216),
	_7_26_20 VARCHAR(16777216),
	_7_27_20 VARCHAR(16777216),
	_7_28_20 VARCHAR(16777216),
	_7_29_20 VARCHAR(16777216),
	_7_30_20 VARCHAR(16777216),
	_7_31_20 VARCHAR(16777216),
	_8_1_20 VARCHAR(16777216),
	_8_2_20 VARCHAR(16777216),
	_8_3_20 VARCHAR(16777216),
	_8_4_20 VARCHAR(16777216),
	_8_5_20 VARCHAR(16777216),
	_8_6_20 VARCHAR(16777216),
	_8_7_20 VARCHAR(16777216),
	_8_8_20 VARCHAR(16777216),
	_8_9_20 VARCHAR(16777216),
	_8_10_20 VARCHAR(16777216),
	_8_11_20 VARCHAR(16777216),
	_8_12_20 VARCHAR(16777216),
	_8_13_20 VARCHAR(16777216),
	_8_14_20 VARCHAR(16777216),
	_8_15_20 VARCHAR(16777216),
	_8_16_20 VARCHAR(16777216),
	_8_17_20 VARCHAR(16777216),
	_8_18_20 VARCHAR(16777216),
	_8_19_20 VARCHAR(16777216),
	_8_20_20 VARCHAR(16777216),
	_8_21_20 VARCHAR(16777216),
	_8_22_20 VARCHAR(16777216),
	_8_23_20 VARCHAR(16777216),
	_8_24_20 VARCHAR(16777216),
	_8_25_20 VARCHAR(16777216),
	_8_26_20 VARCHAR(16777216),
	_8_27_20 VARCHAR(16777216),
	_8_28_20 VARCHAR(16777216),
	_8_29_20 VARCHAR(16777216),
	_8_30_20 VARCHAR(16777216),
	_8_31_20 VARCHAR(16777216),
	_9_1_20 VARCHAR(16777216),
	_9_2_20 VARCHAR(16777216),
	_9_3_20 VARCHAR(16777216),
	_9_4_20 VARCHAR(16777216),
	_9_5_20 VARCHAR(16777216),
	_9_6_20 VARCHAR(16777216),
	_9_7_20 VARCHAR(16777216),
	_9_8_20 VARCHAR(16777216),
	_9_9_20 VARCHAR(16777216),
	_9_10_20 VARCHAR(16777216),
	_9_11_20 VARCHAR(16777216),
	_9_12_20 VARCHAR(16777216),
	_9_13_20 VARCHAR(16777216),
	_9_14_20 VARCHAR(16777216),
	_9_15_20 VARCHAR(16777216),
	_9_16_20 VARCHAR(16777216),
	_9_17_20 VARCHAR(16777216),
	_9_18_20 VARCHAR(16777216),
	_9_19_20 VARCHAR(16777216),
	_9_20_20 VARCHAR(16777216),
	_9_21_20 VARCHAR(16777216),
	_9_22_20 VARCHAR(16777216),
	_9_23_20 VARCHAR(16777216),
	_9_24_20 VARCHAR(16777216),
	_9_25_20 VARCHAR(16777216),
	_9_26_20 VARCHAR(16777216),
	_9_27_20 VARCHAR(16777216),
	_9_28_20 VARCHAR(16777216),
	_9_29_20 VARCHAR(16777216),
	_9_30_20 VARCHAR(16777216),
	_10_1_20 VARCHAR(16777216),
	_10_2_20 VARCHAR(16777216),
	_10_3_20 VARCHAR(16777216),
	_10_4_20 VARCHAR(16777216),
	_10_5_20 VARCHAR(16777216),
	_10_6_20 VARCHAR(16777216),
	_10_7_20 VARCHAR(16777216),
	_10_8_20 VARCHAR(16777216),
	_10_9_20 VARCHAR(16777216),
	_10_10_20 VARCHAR(16777216),
	_10_11_20 VARCHAR(16777216),
	_10_12_20 VARCHAR(16777216),
	_10_13_20 VARCHAR(16777216),
	_10_14_20 VARCHAR(16777216),
	_10_15_20 VARCHAR(16777216),
	_10_16_20 VARCHAR(16777216),
	_10_17_20 VARCHAR(16777216),
	_10_18_20 VARCHAR(16777216),
	_10_19_20 VARCHAR(16777216),
	_10_20_20 VARCHAR(16777216),
	_10_21_20 VARCHAR(16777216),
	_10_22_20 VARCHAR(16777216),
	_10_23_20 VARCHAR(16777216),
	_10_24_20 VARCHAR(16777216),
	_10_25_20 VARCHAR(16777216),
	_10_26_20 VARCHAR(16777216),
	_10_27_20 VARCHAR(16777216),
	_10_28_20 VARCHAR(16777216),
	_10_29_20 VARCHAR(16777216),
	_10_30_20 VARCHAR(16777216),
	_10_31_20 VARCHAR(16777216),
	_11_1_20 VARCHAR(16777216),
	_11_2_20 VARCHAR(16777216),
	_11_3_20 VARCHAR(16777216),
	_11_4_20 VARCHAR(16777216),
	_11_5_20 VARCHAR(16777216),
	_11_6_20 VARCHAR(16777216),
	_11_7_20 VARCHAR(16777216),
	_11_8_20 VARCHAR(16777216),
	_11_9_20 VARCHAR(16777216),
	_11_10_20 VARCHAR(16777216),
	_11_11_20 VARCHAR(16777216),
	_11_12_20 VARCHAR(16777216),
	_11_13_20 VARCHAR(16777216),
	_11_14_20 VARCHAR(16777216),
	_11_15_20 VARCHAR(16777216),
	_11_16_20 VARCHAR(16777216),
	_11_17_20 VARCHAR(16777216),
	_11_18_20 VARCHAR(16777216),
	_11_19_20 VARCHAR(16777216),
	_11_20_20 VARCHAR(16777216),
	_11_21_20 VARCHAR(16777216),
	_11_22_20 VARCHAR(16777216),
	_11_23_20 VARCHAR(16777216),
	_11_24_20 VARCHAR(16777216),
	_11_25_20 VARCHAR(16777216),
	_11_26_20 VARCHAR(16777216),
	_11_27_20 VARCHAR(16777216),
	_11_28_20 VARCHAR(16777216),
	_11_29_20 VARCHAR(16777216),
	_11_30_20 VARCHAR(16777216),
	_12_1_20 VARCHAR(16777216),
	_12_2_20 VARCHAR(16777216),
	_12_3_20 VARCHAR(16777216),
	_12_4_20 VARCHAR(16777216),
	_12_5_20 VARCHAR(16777216),
	_12_6_20 VARCHAR(16777216),
	_12_7_20 VARCHAR(16777216),
	_12_8_20 VARCHAR(16777216),
	_12_9_20 VARCHAR(16777216),
	_12_10_20 VARCHAR(16777216),
	_12_11_20 VARCHAR(16777216),
	_12_12_20 VARCHAR(16777216),
	_12_13_20 VARCHAR(16777216),
	_12_14_20 VARCHAR(16777216),
	_12_15_20 VARCHAR(16777216),
	_12_16_20 VARCHAR(16777216),
	_12_17_20 VARCHAR(16777216),
	_12_18_20 VARCHAR(16777216),
	_12_19_20 VARCHAR(16777216),
	_12_20_20 VARCHAR(16777216),
	_12_21_20 VARCHAR(16777216),
	_12_22_20 VARCHAR(16777216),
	_12_23_20 VARCHAR(16777216),
	_12_24_20 VARCHAR(16777216),
	_12_25_20 VARCHAR(16777216),
	_12_26_20 VARCHAR(16777216),
	_12_27_20 VARCHAR(16777216),
	_12_28_20 VARCHAR(16777216),
	_12_29_20 VARCHAR(16777216),
	_12_30_20 VARCHAR(16777216),
	_12_31_20 VARCHAR(16777216),
	_1_1_21 VARCHAR(16777216),
	_1_2_21 VARCHAR(16777216),
	_1_3_21 VARCHAR(16777216),
	_1_4_21 VARCHAR(16777216),
	_1_5_21 VARCHAR(16777216),
	_1_6_21 VARCHAR(16777216),
	_1_7_21 VARCHAR(16777216),
	_1_8_21 VARCHAR(16777216),
	_1_9_21 VARCHAR(16777216),
	_1_10_21 VARCHAR(16777216),
	_1_11_21 VARCHAR(16777216),
	_1_12_21 VARCHAR(16777216),
	_1_13_21 VARCHAR(16777216),
	_1_14_21 VARCHAR(16777216),
	_1_15_21 VARCHAR(16777216),
	_1_16_21 VARCHAR(16777216),
	_1_17_21 VARCHAR(16777216),
	_1_18_21 VARCHAR(16777216),
	_1_19_21 VARCHAR(16777216),
	_1_20_21 VARCHAR(16777216),
	_1_21_21 VARCHAR(16777216),
	_1_22_21 VARCHAR(16777216),
	_1_23_21 VARCHAR(16777216),
	_1_24_21 VARCHAR(16777216),
	_1_25_21 VARCHAR(16777216),
	_1_26_21 VARCHAR(16777216),
	_1_27_21 VARCHAR(16777216),
	_1_28_21 VARCHAR(16777216),
	_1_29_21 VARCHAR(16777216),
	_1_30_21 VARCHAR(16777216),
	_1_31_21 VARCHAR(16777216),
	_2_1_21 VARCHAR(16777216),
	_2_2_21 VARCHAR(16777216),
	_2_3_21 VARCHAR(16777216),
	_2_4_21 VARCHAR(16777216),
	_2_5_21 VARCHAR(16777216),
	_2_6_21 VARCHAR(16777216),
	_2_7_21 VARCHAR(16777216),
	_2_8_21 VARCHAR(16777216),
	_2_9_21 VARCHAR(16777216),
	_2_10_21 VARCHAR(16777216),
	_2_11_21 VARCHAR(16777216),
	_2_12_21 VARCHAR(16777216),
	_2_13_21 VARCHAR(16777216),
	_2_14_21 VARCHAR(16777216),
	_2_15_21 VARCHAR(16777216),
	_2_16_21 VARCHAR(16777216),
	_2_17_21 VARCHAR(16777216),
	_2_18_21 VARCHAR(16777216),
	_2_19_21 VARCHAR(16777216),
	_2_20_21 VARCHAR(16777216),
	_2_21_21 VARCHAR(16777216),
	_2_22_21 VARCHAR(16777216),
	_2_23_21 VARCHAR(16777216),
	_2_24_21 VARCHAR(16777216),
	_2_25_21 VARCHAR(16777216),
	_2_26_21 VARCHAR(16777216),
	_2_27_21 VARCHAR(16777216),
	_2_28_21 VARCHAR(16777216),
	_3_1_21 VARCHAR(16777216),
	_3_2_21 VARCHAR(16777216),
	_3_3_21 VARCHAR(16777216),
	_3_4_21 VARCHAR(16777216),
	_3_5_21 VARCHAR(16777216),
	_3_6_21 VARCHAR(16777216),
	_3_7_21 VARCHAR(16777216),
	_3_8_21 VARCHAR(16777216),
	_3_9_21 VARCHAR(16777216),
	_3_10_21 VARCHAR(16777216),
	_3_11_21 VARCHAR(16777216),
	_3_12_21 VARCHAR(16777216),
	_3_13_21 VARCHAR(16777216),
	_3_14_21 VARCHAR(16777216),
	_3_15_21 VARCHAR(16777216),
	_3_16_21 VARCHAR(16777216),
	_3_17_21 VARCHAR(16777216),
	_3_18_21 VARCHAR(16777216),
	_3_19_21 VARCHAR(16777216),
	_3_20_21 VARCHAR(16777216),
	_3_21_21 VARCHAR(16777216),
	_3_22_21 VARCHAR(16777216),
	_3_23_21 VARCHAR(16777216),
	_3_24_21 VARCHAR(16777216),
	_3_25_21 VARCHAR(16777216),
	_3_26_21 VARCHAR(16777216),
	_3_27_21 VARCHAR(16777216),
	_3_28_21 VARCHAR(16777216),
	_3_29_21 VARCHAR(16777216),
	_3_30_21 VARCHAR(16777216),
	_3_31_21 VARCHAR(16777216),
	_4_1_21 VARCHAR(16777216),
	_4_2_21 VARCHAR(16777216),
	_4_3_21 VARCHAR(16777216),
	_4_4_21 VARCHAR(16777216),
	_4_5_21 VARCHAR(16777216),
	_4_6_21 VARCHAR(16777216),
	_4_7_21 VARCHAR(16777216),
	_4_8_21 VARCHAR(16777216),
	_4_9_21 VARCHAR(16777216),
	_4_10_21 VARCHAR(16777216),
	_4_11_21 VARCHAR(16777216),
	_4_12_21 VARCHAR(16777216),
	_4_13_21 VARCHAR(16777216),
	_4_14_21 VARCHAR(16777216),
	_4_15_21 VARCHAR(16777216),
	_4_16_21 VARCHAR(16777216),
	_4_17_21 VARCHAR(16777216),
	_4_18_21 VARCHAR(16777216),
	_4_19_21 VARCHAR(16777216),
	_4_20_21 VARCHAR(16777216),
	_4_21_21 VARCHAR(16777216),
	_4_22_21 VARCHAR(16777216),
	_4_23_21 VARCHAR(16777216),
	_4_24_21 VARCHAR(16777216),
	_4_25_21 VARCHAR(16777216),
	_4_26_21 VARCHAR(16777216),
	_4_27_21 VARCHAR(16777216),
	_4_28_21 VARCHAR(16777216),
	_4_29_21 VARCHAR(16777216),
	_4_30_21 VARCHAR(16777216),
	_5_1_21 VARCHAR(16777216),
	_5_2_21 VARCHAR(16777216),
	_5_3_21 VARCHAR(16777216),
	_5_4_21 VARCHAR(16777216),
	_5_5_21 VARCHAR(16777216),
	_5_6_21 VARCHAR(16777216),
	_5_7_21 VARCHAR(16777216),
	_5_8_21 VARCHAR(16777216),
	_5_9_21 VARCHAR(16777216),
	_5_10_21 VARCHAR(16777216),
	_5_11_21 VARCHAR(16777216),
	_5_12_21 VARCHAR(16777216),
	_5_13_21 VARCHAR(16777216),
	_5_14_21 VARCHAR(16777216),
	_5_15_21 VARCHAR(16777216),
	_5_16_21 VARCHAR(16777216),
	_5_17_21 VARCHAR(16777216),
	_5_18_21 VARCHAR(16777216),
	_5_19_21 VARCHAR(16777216),
	_5_20_21 VARCHAR(16777216),
	_5_21_21 VARCHAR(16777216),
	_5_22_21 VARCHAR(16777216),
	_5_23_21 VARCHAR(16777216),
	_5_24_21 VARCHAR(16777216),
	_5_25_21 VARCHAR(16777216),
	_5_26_21 VARCHAR(16777216),
	_5_27_21 VARCHAR(16777216),
	_5_28_21 VARCHAR(16777216),
	_5_29_21 VARCHAR(16777216),
	_5_30_21 VARCHAR(16777216),
	_5_31_21 VARCHAR(16777216),
	_6_1_21 VARCHAR(16777216),
	_6_2_21 VARCHAR(16777216),
	_6_3_21 VARCHAR(16777216),
	_6_4_21 VARCHAR(16777216),
	_6_5_21 VARCHAR(16777216),
	_6_6_21 VARCHAR(16777216),
	_6_7_21 VARCHAR(16777216),
	_6_8_21 VARCHAR(16777216),
	_6_9_21 VARCHAR(16777216),
	_6_10_21 VARCHAR(16777216),
	_6_11_21 VARCHAR(16777216),
	_6_12_21 VARCHAR(16777216),
	_6_13_21 VARCHAR(16777216),
	_6_14_21 VARCHAR(16777216),
	_6_15_21 VARCHAR(16777216),
	_6_16_21 VARCHAR(16777216),
	_6_17_21 VARCHAR(16777216),
	_6_18_21 VARCHAR(16777216),
	_6_19_21 VARCHAR(16777216),
	_6_20_21 VARCHAR(16777216),
	_6_21_21 VARCHAR(16777216),
	_6_22_21 VARCHAR(16777216),
	_6_23_21 VARCHAR(16777216),
	_6_24_21 VARCHAR(16777216),
	_6_25_21 VARCHAR(16777216),
	_6_26_21 VARCHAR(16777216),
	_6_27_21 VARCHAR(16777216),
	_6_28_21 VARCHAR(16777216),
	_6_29_21 VARCHAR(16777216),
	_6_30_21 VARCHAR(16777216),
	_7_1_21 VARCHAR(16777216),
	_7_2_21 VARCHAR(16777216),
	_7_3_21 VARCHAR(16777216),
	_7_4_21 VARCHAR(16777216),
	_7_5_21 VARCHAR(16777216),
	_7_6_21 VARCHAR(16777216),
	_7_7_21 VARCHAR(16777216),
	_7_8_21 VARCHAR(16777216),
	_7_9_21 VARCHAR(16777216),
	_7_10_21 VARCHAR(16777216),
	_7_11_21 VARCHAR(16777216),
	_7_12_21 VARCHAR(16777216),
	_7_13_21 VARCHAR(16777216),
	_7_14_21 VARCHAR(16777216),
	_7_15_21 VARCHAR(16777216),
	_7_16_21 VARCHAR(16777216),
	_7_17_21 VARCHAR(16777216),
	_7_18_21 VARCHAR(16777216),
	_7_19_21 VARCHAR(16777216),
	_7_20_21 VARCHAR(16777216),
	_7_21_21 VARCHAR(16777216),
	_7_22_21 VARCHAR(16777216),
	_7_23_21 VARCHAR(16777216),
	_7_24_21 VARCHAR(16777216),
	_7_25_21 VARCHAR(16777216),
	_7_26_21 VARCHAR(16777216),
	_7_27_21 VARCHAR(16777216),
	_7_28_21 VARCHAR(16777216),
	_7_29_21 VARCHAR(16777216),
	_7_30_21 VARCHAR(16777216),
	_7_31_21 VARCHAR(16777216),
	_8_1_21 VARCHAR(16777216),
	_8_2_21 VARCHAR(16777216),
	_8_3_21 VARCHAR(16777216),
	_8_4_21 VARCHAR(16777216),
	_8_5_21 VARCHAR(16777216),
	_8_6_21 VARCHAR(16777216),
	_8_7_21 VARCHAR(16777216),
	_8_8_21 VARCHAR(16777216),
	_8_9_21 VARCHAR(16777216),
	_8_10_21 VARCHAR(16777216),
	_8_11_21 VARCHAR(16777216),
	_8_12_21 VARCHAR(16777216),
	_8_13_21 VARCHAR(16777216),
	_8_14_21 VARCHAR(16777216),
	_8_15_21 VARCHAR(16777216),
	_8_16_21 VARCHAR(16777216),
	_8_17_21 VARCHAR(16777216),
	_8_18_21 VARCHAR(16777216),
	_8_19_21 VARCHAR(16777216),
	_8_20_21 VARCHAR(16777216),
	_8_21_21 VARCHAR(16777216),
	_8_22_21 VARCHAR(16777216),
	_8_23_21 VARCHAR(16777216),
	_8_24_21 VARCHAR(16777216),
	_8_25_21 VARCHAR(16777216),
	_8_26_21 VARCHAR(16777216),
	_8_27_21 VARCHAR(16777216),
	_8_28_21 VARCHAR(16777216),
	_8_29_21 VARCHAR(16777216),
	_8_30_21 VARCHAR(16777216),
	_8_31_21 VARCHAR(16777216),
	_9_1_21 VARCHAR(16777216),
	_9_2_21 VARCHAR(16777216),
	_9_3_21 VARCHAR(16777216),
	_9_4_21 VARCHAR(16777216),
	_9_5_21 VARCHAR(16777216),
	_9_6_21 VARCHAR(16777216),
	_9_7_21 VARCHAR(16777216),
	_9_8_21 VARCHAR(16777216),
	_9_9_21 VARCHAR(16777216),
	_9_10_21 VARCHAR(16777216),
	_9_11_21 VARCHAR(16777216),
	_9_12_21 VARCHAR(16777216),
	_9_13_21 VARCHAR(16777216),
	_9_14_21 VARCHAR(16777216),
	_9_15_21 VARCHAR(16777216),
	_9_16_21 VARCHAR(16777216),
	_9_17_21 VARCHAR(16777216),
	_9_18_21 VARCHAR(16777216),
	_9_19_21 VARCHAR(16777216),
	_9_20_21 VARCHAR(16777216),
	_9_21_21 VARCHAR(16777216),
	_9_22_21 VARCHAR(16777216),
	_9_23_21 VARCHAR(16777216),
	_9_24_21 VARCHAR(16777216),
	_9_25_21 VARCHAR(16777216),
	_9_26_21 VARCHAR(16777216),
	_9_27_21 VARCHAR(16777216),
	_9_28_21 VARCHAR(16777216),
	_9_29_21 VARCHAR(16777216),
	_9_30_21 VARCHAR(16777216),
	_10_1_21 VARCHAR(16777216),
	_10_2_21 VARCHAR(16777216),
	_10_3_21 VARCHAR(16777216),
	_10_4_21 VARCHAR(16777216),
	_10_5_21 VARCHAR(16777216),
	_10_6_21 VARCHAR(16777216),
	_10_7_21 VARCHAR(16777216),
	_10_8_21 VARCHAR(16777216),
	_10_9_21 VARCHAR(16777216),
	_10_10_21 VARCHAR(16777216),
	_10_11_21 VARCHAR(16777216),
	_10_12_21 VARCHAR(16777216),
	_10_13_21 VARCHAR(16777216),
	_10_14_21 VARCHAR(16777216),
	_10_15_21 VARCHAR(16777216),
	_10_16_21 VARCHAR(16777216),
	_10_17_21 VARCHAR(16777216),
	_10_18_21 VARCHAR(16777216),
	_10_19_21 VARCHAR(16777216),
	_10_20_21 VARCHAR(16777216),
	_10_21_21 VARCHAR(16777216),
	_10_22_21 VARCHAR(16777216),
	_10_23_21 VARCHAR(16777216),
	_10_24_21 VARCHAR(16777216),
	_10_25_21 VARCHAR(16777216),
	_10_26_21 VARCHAR(16777216),
	_10_27_21 VARCHAR(16777216),
	_10_28_21 VARCHAR(16777216),
	_10_29_21 VARCHAR(16777216),
	_10_30_21 VARCHAR(16777216),
	_10_31_21 VARCHAR(16777216),
	_11_1_21 VARCHAR(16777216),
	_11_2_21 VARCHAR(16777216),
	_11_3_21 VARCHAR(16777216),
	_11_4_21 VARCHAR(16777216),
	_11_5_21 VARCHAR(16777216),
	_11_6_21 VARCHAR(16777216),
	_11_7_21 VARCHAR(16777216),
	_11_8_21 VARCHAR(16777216),
	_11_9_21 VARCHAR(16777216),
	_11_10_21 VARCHAR(16777216),
	_11_11_21 VARCHAR(16777216),
	_11_12_21 VARCHAR(16777216),
	_11_13_21 VARCHAR(16777216),
	_11_14_21 VARCHAR(16777216),
	_11_15_21 VARCHAR(16777216),
	_11_16_21 VARCHAR(16777216),
	_11_17_21 VARCHAR(16777216),
	_11_18_21 VARCHAR(16777216),
	_11_19_21 VARCHAR(16777216),
	_11_20_21 VARCHAR(16777216),
	_11_21_21 VARCHAR(16777216),
	_11_22_21 VARCHAR(16777216),
	_11_23_21 VARCHAR(16777216),
	_11_24_21 VARCHAR(16777216),
	_11_25_21 VARCHAR(16777216),
	_11_26_21 VARCHAR(16777216),
	_11_27_21 VARCHAR(16777216),
	_11_28_21 VARCHAR(16777216),
	_11_29_21 VARCHAR(16777216),
	_11_30_21 VARCHAR(16777216),
	_12_1_21 VARCHAR(16777216),
	_12_2_21 VARCHAR(16777216),
	_12_3_21 VARCHAR(16777216),
	_12_4_21 VARCHAR(16777216),
	_12_5_21 VARCHAR(16777216),
	_12_6_21 VARCHAR(16777216),
	_12_7_21 VARCHAR(16777216),
	_12_8_21 VARCHAR(16777216),
	_12_9_21 VARCHAR(16777216),
	_12_10_21 VARCHAR(16777216),
	_12_11_21 VARCHAR(16777216),
	_12_12_21 VARCHAR(16777216),
	_12_13_21 VARCHAR(16777216),
	_12_14_21 VARCHAR(16777216),
	_12_15_21 VARCHAR(16777216),
	_12_16_21 VARCHAR(16777216),
	_12_17_21 VARCHAR(16777216),
	_12_18_21 VARCHAR(16777216),
	_12_19_21 VARCHAR(16777216),
	_12_20_21 VARCHAR(16777216),
	_12_21_21 VARCHAR(16777216),
	_12_22_21 VARCHAR(16777216),
	_12_23_21 VARCHAR(16777216),
	_12_24_21 VARCHAR(16777216),
	_12_25_21 VARCHAR(16777216),
	_12_26_21 VARCHAR(16777216),
	_12_27_21 VARCHAR(16777216),
	_12_28_21 VARCHAR(16777216),
	_12_29_21 VARCHAR(16777216),
	_12_30_21 VARCHAR(16777216),
	_12_31_21 VARCHAR(16777216),
	_1_1_22 VARCHAR(16777216),
	_1_2_22 VARCHAR(16777216),
	_1_3_22 VARCHAR(16777216),
	_1_4_22 VARCHAR(16777216),
	_1_5_22 VARCHAR(16777216),
	_1_6_22 VARCHAR(16777216),
	_1_7_22 VARCHAR(16777216),
	_1_8_22 VARCHAR(16777216),
	_1_9_22 VARCHAR(16777216),
	_1_10_22 VARCHAR(16777216),
	_1_11_22 VARCHAR(16777216),
	_1_12_22 VARCHAR(16777216),
	_1_13_22 VARCHAR(16777216),
	_1_14_22 VARCHAR(16777216),
	_1_15_22 VARCHAR(16777216),
	_1_16_22 VARCHAR(16777216),
	_1_17_22 VARCHAR(16777216),
	_1_18_22 VARCHAR(16777216),
	_1_19_22 VARCHAR(16777216),
	_1_20_22 VARCHAR(16777216),
	_1_21_22 VARCHAR(16777216),
	_1_22_22 VARCHAR(16777216),
	_1_23_22 VARCHAR(16777216),
	_1_24_22 VARCHAR(16777216),
	_1_25_22 VARCHAR(16777216),
	_1_26_22 VARCHAR(16777216),
	_1_27_22 VARCHAR(16777216),
	_1_28_22 VARCHAR(16777216),
	_1_29_22 VARCHAR(16777216),
	_1_30_22 VARCHAR(16777216),
	_1_31_22 VARCHAR(16777216),
	_2_1_22 VARCHAR(16777216),
	_2_2_22 VARCHAR(16777216),
	_2_3_22 VARCHAR(16777216),
	_2_4_22 VARCHAR(16777216),
	_2_5_22 VARCHAR(16777216),
	_2_6_22 VARCHAR(16777216),
	_2_7_22 VARCHAR(16777216),
	_2_8_22 VARCHAR(16777216),
	_2_9_22 VARCHAR(16777216),
	_2_10_22 VARCHAR(16777216),
	_2_11_22 VARCHAR(16777216),
	_2_12_22 VARCHAR(16777216),
	_2_13_22 VARCHAR(16777216),
	_2_14_22 VARCHAR(16777216),
	_2_15_22 VARCHAR(16777216),
	_2_16_22 VARCHAR(16777216),
	_2_17_22 VARCHAR(16777216),
	_2_18_22 VARCHAR(16777216),
	_2_19_22 VARCHAR(16777216),
	_2_20_22 VARCHAR(16777216),
	_2_21_22 VARCHAR(16777216),
	_2_22_22 VARCHAR(16777216),
	_2_23_22 VARCHAR(16777216),
	_2_24_22 VARCHAR(16777216),
	_2_25_22 VARCHAR(16777216),
	_2_26_22 VARCHAR(16777216),
	_2_27_22 VARCHAR(16777216),
	_2_28_22 VARCHAR(16777216),
	_3_1_22 VARCHAR(16777216),
	_3_2_22 VARCHAR(16777216),
	_3_3_22 VARCHAR(16777216),
	_3_4_22 VARCHAR(16777216),
	_3_5_22 VARCHAR(16777216),
	_3_6_22 VARCHAR(16777216),
	_3_7_22 VARCHAR(16777216),
	_3_8_22 VARCHAR(16777216),
	_3_9_22 VARCHAR(16777216),
	_3_10_22 VARCHAR(16777216),
	_3_11_22 VARCHAR(16777216),
	_3_12_22 VARCHAR(16777216),
	_3_13_22 VARCHAR(16777216),
	_3_14_22 VARCHAR(16777216),
	_3_15_22 VARCHAR(16777216),
	_3_16_22 VARCHAR(16777216),
	_3_17_22 VARCHAR(16777216),
	_3_18_22 VARCHAR(16777216),
	_3_19_22 VARCHAR(16777216),
	_3_20_22 VARCHAR(16777216),
	_3_21_22 VARCHAR(16777216),
	_3_22_22 VARCHAR(16777216),
	_3_23_22 VARCHAR(16777216),
	_3_24_22 VARCHAR(16777216),
	_3_25_22 VARCHAR(16777216),
	_3_26_22 VARCHAR(16777216),
	_3_27_22 VARCHAR(16777216),
	_3_28_22 VARCHAR(16777216),
	_3_29_22 VARCHAR(16777216),
	_3_30_22 VARCHAR(16777216),
	_3_31_22 VARCHAR(16777216),
	_4_1_22 VARCHAR(16777216),
	_4_2_22 VARCHAR(16777216),
	_4_3_22 VARCHAR(16777216),
	_4_4_22 VARCHAR(16777216),
	_4_5_22 VARCHAR(16777216),
	_4_6_22 VARCHAR(16777216),
	_4_7_22 VARCHAR(16777216),
	_4_8_22 VARCHAR(16777216),
	_4_9_22 VARCHAR(16777216),
	_4_10_22 VARCHAR(16777216),
	_4_11_22 VARCHAR(16777216),
	_4_12_22 VARCHAR(16777216),
	_4_13_22 VARCHAR(16777216),
	_4_14_22 VARCHAR(16777216),
	_4_15_22 VARCHAR(16777216),
	_4_16_22 VARCHAR(16777216),
	_4_17_22 VARCHAR(16777216),
	_4_18_22 VARCHAR(16777216),
	_4_19_22 VARCHAR(16777216),
	_4_20_22 VARCHAR(16777216),
	_4_21_22 VARCHAR(16777216),
	_4_22_22 VARCHAR(16777216),
	_4_23_22 VARCHAR(16777216),
	_4_24_22 VARCHAR(16777216),
	_4_25_22 VARCHAR(16777216),
	_4_26_22 VARCHAR(16777216),
	_4_27_22 VARCHAR(16777216),
	_4_28_22 VARCHAR(16777216),
	_4_29_22 VARCHAR(16777216),
	_4_30_22 VARCHAR(16777216),
	_5_1_22 VARCHAR(16777216),
	_5_2_22 VARCHAR(16777216),
	_5_3_22 VARCHAR(16777216),
	_5_4_22 VARCHAR(16777216),
	_5_5_22 VARCHAR(16777216),
	_5_6_22 VARCHAR(16777216),
	_5_7_22 VARCHAR(16777216),
	_5_8_22 VARCHAR(16777216),
	_5_9_22 VARCHAR(16777216),
	_5_10_22 VARCHAR(16777216),
	_5_11_22 VARCHAR(16777216),
	_5_12_22 VARCHAR(16777216),
	_5_13_22 VARCHAR(16777216),
	_5_14_22 VARCHAR(16777216),
	_5_15_22 VARCHAR(16777216),
	_5_16_22 VARCHAR(16777216),
	_5_17_22 VARCHAR(16777216),
	_5_18_22 VARCHAR(16777216),
	_5_19_22 VARCHAR(16777216),
	_5_20_22 VARCHAR(16777216),
	_5_21_22 VARCHAR(16777216),
	_5_22_22 VARCHAR(16777216),
	_5_23_22 VARCHAR(16777216),
	_5_24_22 VARCHAR(16777216),
	_5_25_22 VARCHAR(16777216),
	_5_26_22 VARCHAR(16777216),
	_5_27_22 VARCHAR(16777216),
	_5_28_22 VARCHAR(16777216),
	_5_29_22 VARCHAR(16777216),
	_5_30_22 VARCHAR(16777216),
	_5_31_22 VARCHAR(16777216),
	_6_1_22 VARCHAR(16777216),
	_6_2_22 VARCHAR(16777216),
	_6_3_22 VARCHAR(16777216),
	_6_4_22 VARCHAR(16777216),
	_6_5_22 VARCHAR(16777216),
	_6_6_22 VARCHAR(16777216),
	_6_7_22 VARCHAR(16777216),
	_6_8_22 VARCHAR(16777216),
	_6_9_22 VARCHAR(16777216),
	_6_10_22 VARCHAR(16777216),
	_6_11_22 VARCHAR(16777216),
	_6_12_22 VARCHAR(16777216),
	_6_13_22 VARCHAR(16777216),
	_6_14_22 VARCHAR(16777216),
	_6_15_22 VARCHAR(16777216),
	_6_16_22 VARCHAR(16777216),
	_6_17_22 VARCHAR(16777216),
	_6_18_22 VARCHAR(16777216),
	_6_19_22 VARCHAR(16777216),
	_6_20_22 VARCHAR(16777216),
	_6_21_22 VARCHAR(16777216),
	_6_22_22 VARCHAR(16777216),
	_6_23_22 VARCHAR(16777216),
	_6_24_22 VARCHAR(16777216),
	_6_25_22 VARCHAR(16777216),
	_6_26_22 VARCHAR(16777216),
	_6_27_22 VARCHAR(16777216),
	_6_28_22 VARCHAR(16777216),
	_6_29_22 VARCHAR(16777216),
	_6_30_22 VARCHAR(16777216),
	_7_1_22 VARCHAR(16777216),
	_7_2_22 VARCHAR(16777216),
	_7_3_22 VARCHAR(16777216),
	_7_4_22 VARCHAR(16777216),
	_7_5_22 VARCHAR(16777216),
	_7_6_22 VARCHAR(16777216),
	_7_7_22 VARCHAR(16777216),
	_7_8_22 VARCHAR(16777216),
	_7_9_22 VARCHAR(16777216),
	_7_10_22 VARCHAR(16777216),
	_7_11_22 VARCHAR(16777216),
	_7_12_22 VARCHAR(16777216),
	_7_13_22 VARCHAR(16777216),
	_7_14_22 VARCHAR(16777216),
	_7_15_22 VARCHAR(16777216),
	_7_16_22 VARCHAR(16777216),
	_7_17_22 VARCHAR(16777216),
	_7_18_22 VARCHAR(16777216),
	_7_19_22 VARCHAR(16777216),
	_7_20_22 VARCHAR(16777216),
	_7_21_22 VARCHAR(16777216),
	_7_22_22 VARCHAR(16777216),
	_7_23_22 VARCHAR(16777216),
	_7_24_22 VARCHAR(16777216),
	_7_25_22 VARCHAR(16777216),
	_7_26_22 VARCHAR(16777216),
	_7_27_22 VARCHAR(16777216),
	_7_28_22 VARCHAR(16777216),
	_7_29_22 VARCHAR(16777216),
	_7_30_22 VARCHAR(16777216),
	_7_31_22 VARCHAR(16777216),
	_8_1_22 VARCHAR(16777216),
	_8_2_22 VARCHAR(16777216),
	_8_3_22 VARCHAR(16777216),
	_8_4_22 VARCHAR(16777216),
	_8_5_22 VARCHAR(16777216),
	_8_6_22 VARCHAR(16777216),
	_8_7_22 VARCHAR(16777216),
	_8_8_22 VARCHAR(16777216),
	_8_9_22 VARCHAR(16777216),
	_8_10_22 VARCHAR(16777216),
	_8_11_22 VARCHAR(16777216),
	_8_12_22 VARCHAR(16777216),
	_8_13_22 VARCHAR(16777216),
	_8_14_22 VARCHAR(16777216),
	_8_15_22 VARCHAR(16777216),
	_8_16_22 VARCHAR(16777216),
	_8_17_22 VARCHAR(16777216),
	_8_18_22 VARCHAR(16777216),
	_8_19_22 VARCHAR(16777216),
	_8_20_22 VARCHAR(16777216),
	_8_21_22 VARCHAR(16777216),
	_8_22_22 VARCHAR(16777216),
	_8_23_22 VARCHAR(16777216),
	_8_24_22 VARCHAR(16777216),
	_8_25_22 VARCHAR(16777216),
	_8_26_22 VARCHAR(16777216),
	_8_27_22 VARCHAR(16777216),
	_8_28_22 VARCHAR(16777216),
	_8_29_22 VARCHAR(16777216),
	_8_30_22 VARCHAR(16777216),
	_8_31_22 VARCHAR(16777216),
	_9_1_22 VARCHAR(16777216),
	_9_2_22 VARCHAR(16777216),
	_9_3_22 VARCHAR(16777216),
	_9_4_22 VARCHAR(16777216),
	_9_5_22 VARCHAR(16777216),
	_9_6_22 VARCHAR(16777216),
	_9_7_22 VARCHAR(16777216),
	_9_8_22 VARCHAR(16777216),
	_9_9_22 VARCHAR(16777216),
	_9_10_22 VARCHAR(16777216),
	_9_11_22 VARCHAR(16777216),
	_9_12_22 VARCHAR(16777216),
	_9_13_22 VARCHAR(16777216),
	_9_14_22 VARCHAR(16777216),
	_9_15_22 VARCHAR(16777216),
	_9_16_22 VARCHAR(16777216),
	_9_17_22 VARCHAR(16777216),
	_9_18_22 VARCHAR(16777216),
	_9_19_22 VARCHAR(16777216),
	_9_20_22 VARCHAR(16777216),
	_9_21_22 VARCHAR(16777216),
	_9_22_22 VARCHAR(16777216),
	_9_23_22 VARCHAR(16777216),
	_9_24_22 VARCHAR(16777216),
	_9_25_22 VARCHAR(16777216),
	_9_26_22 VARCHAR(16777216),
	_9_27_22 VARCHAR(16777216),
	_9_28_22 VARCHAR(16777216),
	_9_29_22 VARCHAR(16777216),
	_9_30_22 VARCHAR(16777216),
	_10_1_22 VARCHAR(16777216),
	_10_2_22 VARCHAR(16777216),
	_10_3_22 VARCHAR(16777216),
	_10_4_22 VARCHAR(16777216),
	_10_5_22 VARCHAR(16777216),
	_10_6_22 VARCHAR(16777216),
	_10_7_22 VARCHAR(16777216),
	_10_8_22 VARCHAR(16777216),
	_10_9_22 VARCHAR(16777216),
	_10_10_22 VARCHAR(16777216),
	_10_11_22 VARCHAR(16777216),
	_10_12_22 VARCHAR(16777216),
	_10_13_22 VARCHAR(16777216),
	_10_14_22 VARCHAR(16777216),
	_10_15_22 VARCHAR(16777216),
	_10_16_22 VARCHAR(16777216),
	_10_17_22 VARCHAR(16777216),
	_10_18_22 VARCHAR(16777216),
	_10_19_22 VARCHAR(16777216),
	_10_20_22 VARCHAR(16777216),
	_10_21_22 VARCHAR(16777216),
	_10_22_22 VARCHAR(16777216),
	_10_23_22 VARCHAR(16777216),
	_10_24_22 VARCHAR(16777216),
	_10_25_22 VARCHAR(16777216),
	_10_26_22 VARCHAR(16777216),
	_10_27_22 VARCHAR(16777216),
	_10_28_22 VARCHAR(16777216),
	_10_29_22 VARCHAR(16777216),
	_10_30_22 VARCHAR(16777216),
	_10_31_22 VARCHAR(16777216),
	_11_1_22 VARCHAR(16777216),
	_11_2_22 VARCHAR(16777216),
	_11_3_22 VARCHAR(16777216),
	_11_4_22 VARCHAR(16777216),
	_11_5_22 VARCHAR(16777216),
	_11_6_22 VARCHAR(16777216),
	_11_7_22 VARCHAR(16777216),
	_11_8_22 VARCHAR(16777216),
	_11_9_22 VARCHAR(16777216),
	_11_10_22 VARCHAR(16777216),
	_11_11_22 VARCHAR(16777216),
	_11_12_22 VARCHAR(16777216),
	_11_13_22 VARCHAR(16777216),
	_11_14_22 VARCHAR(16777216),
	_11_15_22 VARCHAR(16777216),
	_11_16_22 VARCHAR(16777216),
	_11_17_22 VARCHAR(16777216),
	_11_18_22 VARCHAR(16777216),
	_11_19_22 VARCHAR(16777216),
	_11_20_22 VARCHAR(16777216),
	_11_21_22 VARCHAR(16777216),
	_11_22_22 VARCHAR(16777216),
	_11_23_22 VARCHAR(16777216),
	_11_24_22 VARCHAR(16777216),
	_11_25_22 VARCHAR(16777216),
	_11_26_22 VARCHAR(16777216),
	_11_27_22 VARCHAR(16777216),
	_11_28_22 VARCHAR(16777216),
	_11_29_22 VARCHAR(16777216),
	_11_30_22 VARCHAR(16777216),
	_12_1_22 VARCHAR(16777216),
	_12_2_22 VARCHAR(16777216),
	_12_3_22 VARCHAR(16777216),
	_12_4_22 VARCHAR(16777216),
	_12_5_22 VARCHAR(16777216),
	_12_6_22 VARCHAR(16777216),
	_12_7_22 VARCHAR(16777216),
	_12_8_22 VARCHAR(16777216),
	_12_9_22 VARCHAR(16777216),
	_12_10_22 VARCHAR(16777216),
	_12_11_22 VARCHAR(16777216),
	_12_12_22 VARCHAR(16777216),
	_12_13_22 VARCHAR(16777216),
	_12_14_22 VARCHAR(16777216),
	_12_15_22 VARCHAR(16777216),
	_12_16_22 VARCHAR(16777216),
	_12_17_22 VARCHAR(16777216),
	_12_18_22 VARCHAR(16777216),
	_12_19_22 VARCHAR(16777216),
	_12_20_22 VARCHAR(16777216),
	_12_21_22 VARCHAR(16777216),
	_12_22_22 VARCHAR(16777216),
	_12_23_22 VARCHAR(16777216),
	_12_24_22 VARCHAR(16777216),
	_12_25_22 VARCHAR(16777216),
	_12_26_22 VARCHAR(16777216),
	_12_27_22 VARCHAR(16777216),
	_12_28_22 VARCHAR(16777216),
	_12_29_22 VARCHAR(16777216),
	_12_30_22 VARCHAR(16777216),
	_12_31_22 VARCHAR(16777216),
	_1_1_23 VARCHAR(16777216),
	_1_2_23 VARCHAR(16777216),
	_1_3_23 VARCHAR(16777216),
	_1_4_23 VARCHAR(16777216),
	_1_5_23 VARCHAR(16777216),
	_1_6_23 VARCHAR(16777216),
	_1_7_23 VARCHAR(16777216),
	_1_8_23 VARCHAR(16777216),
	_1_9_23 VARCHAR(16777216),
	_1_10_23 VARCHAR(16777216),
	_1_11_23 VARCHAR(16777216),
	_1_12_23 VARCHAR(16777216),
	_1_13_23 VARCHAR(16777216),
	_1_14_23 VARCHAR(16777216),
	_1_15_23 VARCHAR(16777216),
	_1_16_23 VARCHAR(16777216),
	_1_17_23 VARCHAR(16777216),
	_1_18_23 VARCHAR(16777216),
	_1_19_23 VARCHAR(16777216),
	_1_20_23 VARCHAR(16777216),
	_1_21_23 VARCHAR(16777216),
	_1_22_23 VARCHAR(16777216),
	_1_23_23 VARCHAR(16777216),
	_1_24_23 VARCHAR(16777216),
	_1_25_23 VARCHAR(16777216),
	_1_26_23 VARCHAR(16777216),
	_1_27_23 VARCHAR(16777216),
	_1_28_23 VARCHAR(16777216),
	_1_29_23 VARCHAR(16777216),
	_1_30_23 VARCHAR(16777216),
	_1_31_23 VARCHAR(16777216),
	_2_1_23 VARCHAR(16777216),
	_2_2_23 VARCHAR(16777216),
	_2_3_23 VARCHAR(16777216),
	_2_4_23 VARCHAR(16777216),
	_2_5_23 VARCHAR(16777216),
	_2_6_23 VARCHAR(16777216),
	_2_7_23 VARCHAR(16777216),
	_2_8_23 VARCHAR(16777216),
	_2_9_23 VARCHAR(16777216),
	_2_10_23 VARCHAR(16777216),
	_2_11_23 VARCHAR(16777216),
	_2_12_23 VARCHAR(16777216),
	_2_13_23 VARCHAR(16777216),
	_2_14_23 VARCHAR(16777216),
	_2_15_23 VARCHAR(16777216),
	_2_16_23 VARCHAR(16777216),
	_2_17_23 VARCHAR(16777216),
	_2_18_23 VARCHAR(16777216),
	_2_19_23 VARCHAR(16777216),
	_2_20_23 VARCHAR(16777216),
	_2_21_23 VARCHAR(16777216),
	_2_22_23 VARCHAR(16777216),
	_2_23_23 VARCHAR(16777216),
	_2_24_23 VARCHAR(16777216),
	_2_25_23 VARCHAR(16777216),
	_2_26_23 VARCHAR(16777216),
	_2_27_23 VARCHAR(16777216),
	_2_28_23 VARCHAR(16777216),
	_3_1_23 VARCHAR(16777216),
	_3_2_23 VARCHAR(16777216),
	_3_3_23 VARCHAR(16777216),
	_3_4_23 VARCHAR(16777216),
	_3_5_23 VARCHAR(16777216),
	_3_6_23 VARCHAR(16777216),
	_3_7_23 VARCHAR(16777216),
	_3_8_23 VARCHAR(16777216),
	_3_9_23 VARCHAR(16777216)
);"

,3
table_name,SUMMARY
description,
DDL,"create or replace TABLE SUMMARY (
	""province_state"" VARCHAR(16777216),
	""country_region"" VARCHAR(16777216),
	""date"" DATE,
	""latitude"" FLOAT,
	""longitude"" FLOAT,
	""location_geom"" BINARY(8388608),
	""confirmed"" NUMBER(38,0),
	""deaths"" NUMBER(38,0),
	""recovered"" VARCHAR(16777216),
	""active"" NUMBER(38,0),
	""fips"" VARCHAR(16777216),
	""admin2"" VARCHAR(16777216),
	""combined_key"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_GLOBAL_POPULATION
DDL describes table information.
,0
table_name,POPULATION_BY_COUNTRY
description,
DDL,"create or replace TABLE POPULATION_BY_COUNTRY (
	""country"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""year_1960"" NUMBER(38,0),
	""year_1961"" NUMBER(38,0),
	""year_1962"" NUMBER(38,0),
	""year_1963"" NUMBER(38,0),
	""year_1964"" NUMBER(38,0),
	""year_1965"" NUMBER(38,0),
	""year_1966"" NUMBER(38,0),
	""year_1967"" NUMBER(38,0),
	""year_1968"" NUMBER(38,0),
	""year_1969"" NUMBER(38,0),
	""year_1970"" NUMBER(38,0),
	""year_1971"" NUMBER(38,0),
	""year_1972"" NUMBER(38,0),
	""year_1973"" NUMBER(38,0),
	""year_1974"" NUMBER(38,0),
	""year_1975"" NUMBER(38,0),
	""year_1976"" NUMBER(38,0),
	""year_1977"" NUMBER(38,0),
	""year_1978"" NUMBER(38,0),
	""year_1979"" NUMBER(38,0),
	""year_1980"" NUMBER(38,0),
	""year_1981"" NUMBER(38,0),
	""year_1982"" NUMBER(38,0),
	""year_1983"" NUMBER(38,0),
	""year_1984"" NUMBER(38,0),
	""year_1985"" NUMBER(38,0),
	""year_1986"" NUMBER(38,0),
	""year_1987"" NUMBER(38,0),
	""year_1988"" NUMBER(38,0),
	""year_1989"" NUMBER(38,0),
	""year_1990"" NUMBER(38,0),
	""year_1991"" NUMBER(38,0),
	""year_1992"" NUMBER(38,0),
	""year_1993"" NUMBER(38,0),
	""year_1994"" NUMBER(38,0),
	""year_1995"" NUMBER(38,0),
	""year_1996"" NUMBER(38,0),
	""year_1997"" NUMBER(38,0),
	""year_1998"" NUMBER(38,0),
	""year_1999"" NUMBER(38,0),
	""year_2000"" NUMBER(38,0),
	""year_2001"" NUMBER(38,0),
	""year_2002"" NUMBER(38,0),
	""year_2003"" NUMBER(38,0),
	""year_2004"" NUMBER(38,0),
	""year_2005"" NUMBER(38,0),
	""year_2006"" NUMBER(38,0),
	""year_2007"" NUMBER(38,0),
	""year_2008"" NUMBER(38,0),
	""year_2009"" NUMBER(38,0),
	""year_2010"" NUMBER(38,0),
	""year_2011"" NUMBER(38,0),
	""year_2012"" NUMBER(38,0),
	""year_2013"" NUMBER(38,0),
	""year_2014"" NUMBER(38,0),
	""year_2015"" NUMBER(38,0),
	""year_2016"" NUMBER(38,0),
	""year_2017"" NUMBER(38,0),
	""year_2018"" NUMBER(38,0),
	""year_2019"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_HEALTH_POPULATION
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0)
);"

,2
table_name,HEALTH_NUTRITION_POPULATION
description,
DDL,"create or replace TABLE HEALTH_NUTRITION_POPULATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" NUMBER(38,0),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,4
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_DEBT
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_Income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIMES
description,
DDL,"create or replace TABLE SERIES_TIMES (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,INTERNATIONAL_DEBT
description,
DDL,"create or replace TABLE INTERNATIONAL_DEBT (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_INTL_EDUCATION
DDL describes table information.
,0
table_name,INTERNATIONAL_EDUCATION
description,
DDL,"create or replace TABLE INTERNATIONAL_EDUCATION (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,1
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_two_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" NUMBER(38,0),
	""latest_trade_data"" NUMBER(38,0),
	""latest_water_withdrawal_data"" VARCHAR(16777216)
);"

,2
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,3
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

Database Name: COVID19_JHU_WORLD_BANK
Schema Name: WORLD_BANK_WDI
DDL describes table information.
,0
table_name,COUNTRY_SERIES_DEFINITIONS
description,
DDL,"create or replace TABLE COUNTRY_SERIES_DEFINITIONS (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

,1
table_name,INDICATORS_DATA
description,
DDL,"create or replace TABLE INDICATORS_DATA (
	""country_name"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""indicator_code"" VARCHAR(16777216),
	""value"" FLOAT,
	""year"" NUMBER(38,0)
);"

,2
table_name,SERIES_SUMMARY
description,
DDL,"create or replace TABLE SERIES_SUMMARY (
	""series_code"" VARCHAR(16777216),
	""topic"" VARCHAR(16777216),
	""indicator_name"" VARCHAR(16777216),
	""short_definition"" VARCHAR(16777216),
	""long_definition"" VARCHAR(16777216),
	""unit_of_measure"" VARCHAR(16777216),
	""periodicity"" VARCHAR(16777216),
	""base_period"" VARCHAR(16777216),
	""other_notes"" VARCHAR(16777216),
	""aggregation_method"" VARCHAR(16777216),
	""limitations_and_exceptions"" VARCHAR(16777216),
	""notes_from_original_source"" VARCHAR(16777216),
	""general_comments"" VARCHAR(16777216),
	""source"" VARCHAR(16777216),
	""statistical_concept_and_methodology"" VARCHAR(16777216),
	""development_relevance"" VARCHAR(16777216),
	""related_source_links"" VARCHAR(16777216),
	""other_web_links"" VARCHAR(16777216),
	""related_indicators"" VARCHAR(16777216),
	""license_type"" VARCHAR(16777216)
);"

,3
table_name,SERIES_TIME
description,
DDL,"create or replace TABLE SERIES_TIME (
	""series_code"" VARCHAR(16777216),
	""year"" NUMBER(38,0),
	""description"" VARCHAR(16777216)
);"

,4
table_name,COUNTRY_SUMMARY
description,
DDL,"create or replace TABLE COUNTRY_SUMMARY (
	""country_code"" VARCHAR(16777216),
	""short_name"" VARCHAR(16777216),
	""table_name"" VARCHAR(16777216),
	""long_name"" VARCHAR(16777216),
	""two_alpha_code"" VARCHAR(16777216),
	""currency_unit"" VARCHAR(16777216),
	""special_notes"" VARCHAR(16777216),
	""region"" VARCHAR(16777216),
	""income_group"" VARCHAR(16777216),
	""wb_2_code"" VARCHAR(16777216),
	""national_accounts_base_year"" VARCHAR(16777216),
	""national_accounts_reference_year"" VARCHAR(16777216),
	""sna_price_valuation"" VARCHAR(16777216),
	""lending_category"" VARCHAR(16777216),
	""other_groups"" VARCHAR(16777216),
	""system_of_national_accounts"" VARCHAR(16777216),
	""alternative_conversion_factor"" VARCHAR(16777216),
	""ppp_survey_year"" VARCHAR(16777216),
	""balance_of_payments_manual_in_use"" VARCHAR(16777216),
	""external_debt_reporting_status"" VARCHAR(16777216),
	""system_of_trade"" VARCHAR(16777216),
	""government_accounting_concept"" VARCHAR(16777216),
	""imf_data_dissemination_standard"" VARCHAR(16777216),
	""latest_population_census"" VARCHAR(16777216),
	""latest_household_survey"" VARCHAR(16777216),
	""source_of_most_recent_income_and_expenditure_data"" VARCHAR(16777216),
	""vital_registration_complete"" VARCHAR(16777216),
	""latest_agricultural_census"" VARCHAR(16777216),
	""latest_industrial_data"" VARCHAR(16777216),
	""latest_trade_data"" VARCHAR(16777216)
);"

,5
table_name,FOOTNOTES
description,
DDL,"create or replace TABLE FOOTNOTES (
	""country_code"" VARCHAR(16777216),
	""series_code"" VARCHAR(16777216),
	""year"" VARCHAR(16777216),
	""description"" VARCHAR(16777216)
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}
Begin Exploring Related Columns
**Relevant tables and columns:**

- From **COVID19_JHU_WORLD_BANK.COVID19_JHU_CSSE.SUMMARY**
  - `"country_region"`: To identify the countries of interest.
  - `"date"`: To filter data for April 20, 2020.
  - `"confirmed"`: To get the total number of confirmed cases.
- From **COVID19_JHU_WORLD_BANK.WORLD_BANK_GLOBAL_POPULATION.POPULATION_BY_COUNTRY**
  - `"country"`: To match country names with COVID-19 data.
  - `"year_2019"`: To obtain the 2019 population data.

**Conditions that may be used:**

- `"date"` = '2020-04-20'
- `"country_region"` IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
- `"country"` IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')

**SQL Queries:**

1.
```sql
SELECT DISTINCT "country_region"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
LIMIT 1000;
```

2.
```sql
SELECT "date", "country_region", "confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20'
LIMIT 1000;
```

3.
```sql
SELECT DISTINCT "country"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
LIMIT 1000;
```

4.
```sql
SELECT "country", "year_2019"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
LIMIT 1000;
```

5.
```sql
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20'
GROUP BY "country_region"
LIMIT 1000;
```

6.
```sql
SELECT "country_region", "province_state", "confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20" AND "country_region" = 'US'
LIMIT 1000;
```

7.
```sql
SELECT "country", "year_2019"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
WHERE "country" IN ('United States', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
LIMIT 1000;
```

8.
```sql
SELECT DISTINCT "indicator_name"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
LIMIT 1000;
```

9.
```sql
SELECT "country_name", "indicator_code", "value", "year"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
LIMIT 1000;
```

10.
```sql
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY "country_region"
LIMIT 1000;
```

11.
```sql
SELECT "country_name", "value"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "country_name" = 'United States'
LIMIT 1000;
```

12.
```sql
SELECT DISTINCT "province_state"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "country_region" = 'US'
LIMIT 1000;
```

13.
```sql
SELECT "country_region", "active"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'Italy'
LIMIT 1000;
```

14.
```sql
SELECT "country", "year_2019"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
WHERE "country" ILIKE '%Iran%'
LIMIT 1000;
```

15.
```sql
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" ILIKE '%Germany%'
GROUP BY "country_region"
LIMIT 1000;
```Query:
SELECT DISTINCT "country_region"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
LIMIT 1000;
Answer:
country_region
US
Uzbekistan
Yemen
Zimbabwe
Andorra
Angola
Armenia
Benin
Botswana
Brazil
Cabo Verde
Cameroon
Chad
Comoros
Czechia
Fiji
Gabon
Greece
MS Zaandam
Niger
Nigeria
Chile
Congo (Kinshasa)
Costa Rica
Djibouti
Ghana
Ireland
Kenya
Kosovo
Liechtenstein
Mexico
Morocco
Nepal
Nicaragua
Sao Tome and Principe
Sudan
Tanzania
Jersey
Gibraltar
Zambia
Canada
Lithuania
Monaco
Croatia
Cuba
"Korea, South"
Lesotho
Madagascar
Nauru
Spain
Sri Lanka
Sweden
Turkey
Tunisia
Mainland China
"Bahamas, The"
Palestine
Vatican City
Mozambique
Thailand
Hong Kong
North Ireland
Channel Islands
Winter Olympics 2022
Albania
Argentina
United Arab Emirates
Azerbaijan
Bangladesh
Belize
Bosnia and Herzegovina
Brunei
Bulgaria
El Salvador
Indonesia
Italy
Malaysia
China
Dominica
France
Guatemala
Honduras
Iceland
Jordan
Kazakhstan
Mali
Mauritius
Moldova
Palau
Romania
Rwanda
Saint Kitts and Nevis
Saint Lucia
Senegal
Tajikistan
Tonga
Reunion
Estonia
Kyrgyzstan
Kuwait
Libya
Netherlands
Pakistan
Philippines
Portugal
Germany
San Marino
Serbia
Seychelles
Somalia
Summer Olympics 2020
Togo
"Gambia, The"
Puerto Rico
Trinidad and Tobago
Tuvalu
The Gambia
Aruba
Republic of Ireland
Iran (Islamic Republic of)
Taipei and environs
Macao SAR
Saint Martin
Curacao
Ivory Coast
Cape Verde
Vietnam
West Bank and Gaza
Afghanistan
Algeria
Antarctica
Austria
Australia
Bahamas
Barbados
Belarus
Belgium
Burkina Faso
Colombia
Finland
Guinea
India
Luxembourg
Bhutan
Guinea-Bissau
Israel
Jamaica
Japan
Laos
Maldives
Namibia
New Zealand
Norway
Oman
Peru
Eswatini
Lebanon
Saint Vincent and the Grenadines
Switzerland
Western Sahara
Others
Macau
Republic of the Congo
Hungary
Malta
Mauritania
Mongolia
Russia
Dominican Republic
Gambia
North Macedonia
Poland
Slovenia
Taiwan*
Timor-Leste
South Korea
Cruise Ship
Guadeloupe
Martinique
French Guiana
Greenland
occupied Palestinian territory
Guam
The Bahamas
Saint Barthelemy
 Azerbaijan
St. Martin
Viet Nam
Cayman Islands
East Timor
Uganda
Ukraine
United Kingdom
Uruguay
Vanuatu
Venezuela
Antigua and Barbuda
Bahrain
Burundi
Cambodia
Central African Republic
Cote d'Ivoire
Denmark
Diamond Princess
Ecuador
Eritrea
Guyana
Iran
Iraq
Latvia
Cyprus
Georgia
Liberia
Malawi
Marshall Islands
Panama
Paraguay
Qatar
"Korea, North"
Singapore
South Sudan
Taiwan
UK
Mayotte
Faroe Islands
Burma
Equatorial Guinea
Bolivia
Egypt
Ethiopia
Grenada
Haiti
Holy See
Kiribati
Micronesia
Montenegro
Papua New Guinea
Samoa
Saudi Arabia
Sierra Leone
Slovakia
South Africa
Suriname
Syria
Guernsey
Czech Republic
Congo (Brazzaville)
Solomon Islands
""
Republic of Korea
Hong Kong SAR
Russian Federation
Republic of Moldova
Query:
SELECT "date", "country_region", "confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20'
LIMIT 1000;
Answer:
Too long, hard cut:
date,country_region,confirmed
2020-04-20,US,17
2020-04-20,US,114
2020-04-20,US,52
2020-04-20,US,598
2020-04-20,US,1
2020-04-20,US,54
2020-04-20,US,12
2020-04-20,US,46
2020-04-20,US,915
2020-04-20,US,1
2020-04-20,US,34
2020-04-20,US,7
2020-04-20,US,83
2020-04-20,US,100
2020-04-20,US,3
2020-04-20,US,85
2020-04-20,US,41
2020-04-20,US,4
2020-04-20,US,61
2020-04-20,US,70
2020-04-20,US,1
2020-04-20,US,218
2020-04-20,US,50
2020-04-20,US,1193
2020-04-20,US,7
2020-04-20,US,687
2020-04-20,US,6
2020-04-20,US,61
2020-04-20,US,4
2020-04-20,US,7
2020-04-20,US,2
2020-04-20,US,3
2020-04-20,US,421
2020-04-20,US,1
2020-04-20,US,40
2020-04-20,US,42
2020-04-20,US,32
2020-04-20,US,30
2020-04-20,US,2
2020-04-20,US,5
2020-04-20,US,1042
2020-04-20,US,327
2020-04-20,US,4
2020-04-20,US,79
2020-04-20,US,84
2020-04-20,US,6
2020-04-20,US,15
2020-04-20,US,1
2020-04-20,US,7
2020-04-20,US,14
2020-04-20,US,10
2020-04-20,US,17
2020-04-20,US,155
2020-04-20,US,0
2020-04-20,US,6
2020-04-20,US,134
2020-04-20,US,16
2020-04-20,US,8
2020-04-20,US,1
2020-04-20,US,19
2020-04-20,US,35
2020-04-20,US,23
2020-04-20,US,1098
2020-04-20,US,95
2020-04-20,US,18
2020-04-20,US,1
2020-04-20,US,9
2020-04-20,US,202
2020-04-20,US,2
2020-04-20,US,21
2020-04-20,US,7
2020-04-20,US,2
2020-04-20,US,1536
2020-04-20,US,7
2020-04-20,US,12
2020-04-20,US,2
2020-04-20,US,593
2020-04-20,US,38
2020-04-20,US,1
2020-04-20,US,2
2020-04-20,US,512
2020-04-20,US,4
2020-04-20,US,5
2020-04-20,US,2
2020-04-20,US,12
2020-04-20,US,68
2020-04-20,US,13
2020-04-20,US,146
2020-04-20,US,12
2020-04-20,US,6
2020-04-20,US,2
2020-04-20,US,3
2020-04-20,US,5
2020-04-20,US,410
2020-04-20,US,1
2020-04-20,US,44
2020-04-20,US,1
2020-04-20,US,23
2020-04-20,US,24
2020-04-20,US,1
2020-04-20,US,12
2020-04-20,US,28
2020-04-20,US,69
2020-04-20,US,10
2020-04-20,US,19
2020-04-20,US,17
2020-04-20,US,20
2020-04-20,US,117
2020-04-20,US,130
2020-04-20,US,4
2020-04-20,US,1875
2020-04-20,US,1511
2020-04-20,US,7
2020-04-20,US,4
2020-04-20,US,15
2020-04-20,US,8
2020-04-20,US,0
2020-04-20,US,1
2020-04-20,US,22
2020-04-20,US,4
2020-04-20,US,3
2020-04-20,US,632
2020-04-20,US,6
2020-04-20,US,6
2020-04-20,US,6
2020-04-20,US,93
2020-04-20,US,26
2020-04-20,US,4
2020-04-20,US,140
2020-04-20,US,7
2020-04-20,US,255
2020-04-20,US,44
2020-04-20,US,6
2020-04-20,US,3
2020-04-20,US,0
2020-04-20,US,5
2020-04-20,US,57
2020-04-20,US,85
2020-04-20,US,3
2020-04-20,US,21
2020-04-20,US,55
2020-04-20,US,15
2020-04-20,US,225
2020-04-20,US,36
2020-04-20,US,1
2020-04-20,US,298
2020-04-20,US,1
2020-04-20,US,1
2020-04-20,US,2
2020-04-20,US,15
2020-04-20,US,76
2020-04-20,US,18
2020-04-20,US,5
2020-04-20,US,26
2020-04-20,US,126
2020-04-20,US,73
2020-04-20,US,5
2020-04-20,US,15
2020-04-20,US,37
2020-04-20,US,62
2020-04-20,US,4
2020-04-20,US,23
2020-04-20,US,4
2020-04-20,US,8
2020-04-20,US,3
2020-04-20,US,28
2020-04-20,US,4
2020-04-20,US,314
2020-04-20,US,4
2020-04-20,US,13011
2020-04-20,US,138
2020-04-20,US,111
2020-04-20,US,1945
2020-04-20,US,387
2020-04-20,US,566
2020-04-20,US,10
2020-04-20,US,164
2020-04-20,US,24
2020-04-20,US,1
2020-04-20,US,1015
2020-04-20,US,32
2020-04-20,US,203
2020-04-20,US,66
2020-04-20,US,3
2020-04-20,US,1
2020-04-20,US,1
2020-04-20,US,3
2020-04-20,US,259
2020-04-20,US,6
2020-04-20,US,2
2020-04-20,US,476
2020-04-20,US,14
2020-04-20,US,5
2020-04-20,US,0
2020-04-20,US,5
2020-04-20,US,10
2020-04-20,US,22
2020-04-20,US,46
2020-04-20,US,24
2020-04-20,US,85
2020-04-20,US,3
2020-04-20,US,4
2020-04-20,US,4
2020-04-20,US,4
2020-04-20,US,24
2020-04-20,US,3
2020-04-20,US,33
2020-04-20,US,154
2020-04-20,US,6
2020-04-20,US,81
2020-04-20,US,94
2020-04-20,US,2
2020-04-20,US,1
2020-04-20,US,233
2020-04-20,US,24
2020-04-20,US,352
2020-04-20,US,0
2020-04-20,US,7
2020-04-20,US,7
2020-04-20,US,57
2020-04-20,US,1
2020-04-20,US,1
2020-04-20,US,29
2020-04-20,US,13
2020-04-20,US,7
2020-04-20,US,42
2020-04-20,US,25
2020-04-20,US,7
2020-04-20,US,37
2020-04-20,US,40
2020-04-20,US,20
2020-04-20,US,1
2020-04-20,US,315
2020-04-20,US,170
2020-04-20,US,1
2020-04-20,US,6
2020-04-20,US,28
2020-04-20,US,218
2020-04-20,US,1731
2020-04-20,US,67
2020-04-20,US,1
2020-04-20,US,4
2020-04-20,US,3
2020-04-20,US,9
2020-04-20,US,23
2020-04-20,US,199
2020-04-20,US,101
2020-04-20,US,4078
2020-04-20,US,14
2020-04-20,US,7
2020-04-20,US,9
2020-04-20,US,20
2020-04-20,US,13
2020-04-20,US,285
2020-04-20,US,0
2020-04-20,US,36
2020-04-20,US,12
2020-04-20,US,35
2020-04-20,US,5
2020-04-20,US,11
2020-04-20,US,32
2020-04-20,US,12
2020-04-20,US,26
2020-04-20,US,1886
2020-04-20,US,2
2020-04-20,US,5
2020-04-20,US,55
2020-04-20,US,4
2020-04-20,US,33
2020-04-20,US,30
2020-04-20,US,11
2020-04-20,US,47
2020-04-20,US,8
2020-04-20,US,48
2020-04-20,US,70
2020-04-20,US,2
2020-04-20,US,63
2020-04-20,US,9
2020-04-20,US,1663
2020-04-20,US,9
2020-04-20,US,1
2020-04-20,US,14
2020-04-20,US,1
2020-04-20,US,12
2020-04-20,US,72
2020-04-20,US,24
2020-04-20,US,1
2020-04-20,US,180
2020-04-20,US,161
2020-04-20,US,16
2020-04-20,US,0
2020-04-20,US,80
2020-04-20,US,212
2020-04-20,US,34
2020-04-20,US,1276
2
Query:
SELECT DISTINCT "country"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_GLOBAL_POPULATION"."POPULATION_BY_COUNTRY"
LIMIT 1000;
Answer:
country
Sint Maarten (Dutch part)
Not classified
West Bank and Gaza
Serbia
Cambodia
United Arab Emirates
Cyprus
Low income
Peru
Early-demographic dividend
Fiji
Chad
Middle East & North Africa (excluding high income)
Middle East & North Africa (IDA & IBRD countries)
Dominican Republic
Kenya
"Venezuela, RB"
Guinea
Pakistan
Latvia
Qatar
Nigeria
North Macedonia
Cabo Verde
Palau
Sao Tome and Principe
Pacific island small states
St. Martin (French part)
Faroe Islands
Ireland
Bhutan
Zambia
Isle of Man
Guatemala
Singapore
Finland
Montenegro
Barbados
Syrian Arab Republic
Costa Rica
St. Lucia
Afghanistan
Gibraltar
Low & middle income
Latin America & Caribbean (excluding high income)
World
Canada
Rwanda
Thailand
Solomon Islands
Japan
Albania
Andorra
South Asia
South Sudan
Azerbaijan
Jamaica
Portugal
Mali
"Congo, Dem. Rep."
IDA total
Zimbabwe
Sudan
OECD members
Maldives
Nauru
Namibia
South Africa
Pre-demographic dividend
Sierra Leone
Grenada
Mexico
Niger
Senegal
Trinidad and Tobago
Luxembourg
Indonesia
Cayman Islands
Ghana
Lower middle income
Saudi Arabia
Denmark
United States
Europe & Central Asia (IDA & IBRD countries)
"Yemen, Rep."
Least developed countries: UN classification
Central Europe and the Baltics
Brunei Darussalam
Philippines
Sri Lanka
China
Norway
Kosovo
Oman
Middle East & North Africa
East Asia & Pacific (IDA & IBRD countries)
San Marino
Poland
Fragile and conflict affected situations
Angola
Samoa
Honduras
Channel Islands
Burundi
Madagascar
"Macao SAR, China"
Mongolia
Other small states
Bahrain
United Kingdom
Moldova
Benin
Lebanon
Estonia
Middle income
Europe & Central Asia
Croatia
Mauritius
East Asia & Pacific
North America
Netherlands
Liberia
Lao PDR
Sub-Saharan Africa
Algeria
Armenia
Switzerland
Nepal
"Bahamas, The"
Hungary
Bulgaria
Brazil
Haiti
Germany
Europe & Central Asia (excluding high income)
Morocco
Liechtenstein
Ethiopia
Paraguay
High income
Late-demographic dividend
Tajikistan
Uruguay
Italy
Caribbean small states
Malta
"Korea, Dem. People’s Rep."
Post-demographic dividend
Lithuania
Bangladesh
Gabon
IDA blend
Panama
Vanuatu
Belgium
Spain
Euro area
IBRD only
Togo
Sub-Saharan Africa (excluding high income)
Puerto Rico
Greenland
Turkey
"Micronesia, Fed. Sts."
St. Kitts and Nevis
Slovenia
"Hong Kong SAR, China"
Small states
Tanzania
Tunisia
Marshall Islands
St. Vincent and the Grenadines
Vietnam
Equatorial Guinea
Burkina Faso
Dominica
Belarus
Austria
Antigua and Barbuda
Colombia
Chile
Kyrgyz Republic
Comoros
"Korea, Rep."
Belize
Russian Federation
Guyana
Ecuador
Turkmenistan
Malaysia
Cote d'Ivoire
Mauritania
Heavily indebted poor countries (HIPC)
New Zealand
Jordan
Sweden
Bosnia and Herzegovina
Nicaragua
Cameroon
South Asia (IDA & IBRD)
East Asia & Pacific (excluding high income)
IDA & IBRD total
British Virgin Islands
Arab World
Australia
Suriname
Tonga
"Congo, Rep."
Upper middle income
Lesotho
New Caledonia
Curacao
American Samoa
Iraq
Georgia
"Egypt, Arab Rep."
Turks and Caicos Islands
Aruba
IDA only
Sub-Saharan Africa (IDA & IBRD countries)
Tuvalu
Ukraine
Greece
Malawi
Czech Republic
Iceland
Latin America & the Caribbean (IDA & IBRD countries)
Latin America & Caribbean
Botswana
European Union
India
Libya
"Iran, Islamic Rep."
Israel
Seychelles
France
Mozambique
Eritrea
Myanmar
Kiribati
Argentina
Virgin Islands (U.S.)
Djibouti
Uzbekistan
Kuwait
Papua New Guinea
Eswatini
Uganda
Romania
Northern Mariana Islands
Slovak Republic
Somalia
Bermuda
Cuba
Monaco
Guam
Kazakhstan
Central African Republic
El Salvador
Timor-Leste
Guinea-Bissau
"Gambia, The"
Bolivia
French Polynesia
Query:
SELECT
  c."country_region" AS "Country",
  SUM(c."confirmed") AS "Total_confirmed_cases",
  p."Population",
  (SUM(c."confirmed") / p."Population") * 100000 AS "Cases_per_100000"
FROM
  "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
  (
    SELECT
      CASE "country_name"
        WHEN 'United States' THEN 'US'
        WHEN 'Iran, Islamic Rep.' THEN 'Iran'
        ELSE "country_name"
      END AS "Country",
      MAX("value") AS "Population"
    FROM
      "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
    WHERE
      "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
    GROUP BY
      "country_name"
  ) p
ON c."country_region" = p."Country"
WHERE
  c."date" = '2020-04-20'
  AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
  c."country_region", p."Population";
Answer:
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88347463686932
Spain,200210,47133521.0,424.77200037739595
Italy,181228,59729081.0,303.41668909990426
China,83817,1407745000.0,5.953990246813166
Germany,147065,83092962.0,176.98851558571232
Iran,83505,82913893.0,100.71291671228126
France,156480,67248926.0,232.6877309535025
Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20'
GROUP BY "country_region"
LIMIT 1000;
Answer:
country_region,total_confirmed
China,83817
Netherlands,33588
Albania,584
Argentina,2941
Azerbaijan,1436
Bangladesh,2948
Bosnia and Herzegovina,1309
Brunei,138
El Salvador,218
Estonia,1535
Honduras,477
Somalia,237
Dominica,16
Germany,147065
Iceland,1773
Jordan,425
Kazakhstan,1852
Kuwait,1995
Rwanda,147
Saint Kitts and Nevis,15
San Marino,462
Senegal,377
Serbia,6630
Guatemala,289
Kyrgyzstan,568
Libya,51
Mauritius,328
Moldova,2548
Pakistan,8418
Philippines,6459
Portugal,20863
United Arab Emirates,7265
Malaysia,5425
France,156480
Belize,18
Bulgaria,929
Indonesia,6760
Romania,8936
Seychelles,11
Italy,181228
Mali,246
Saint Lucia,15
Togo,84
Trinidad and Tobago,114
US,784326
Canada,37658
Andorra,717
Angola,24
Armenia,1339
Benin,54
Botswana,20
Cameroon,1163
Chad,33
Chile,10507
Congo (Kinshasa),332
Croatia,1881
Greece,2245
Kosovo,510
Brazil,40743
Czechia,6900
Djibouti,846
Fiji,18
Gabon,120
Liechtenstein,81
Monaco,94
Mozambique,39
Nepal,31
Nicaragua,10
Niger,648
Tanzania,254
Zimbabwe,25
Cuba,1087
"Korea, South",10674
MS Zaandam,9
Sri Lanka,304
Sudan,107
Thailand,2792
Turkey,90980
Yemen,1
Cabo Verde,67
Ghana,1042
Ireland,15652
Lithuania,1326
Madagascar,121
Mexico,8261
Morocco,3046
Nigeria,665
Spain,200210
Sweden,14777
Tunisia,884
Costa Rica,662
Kenya,281
Sao Tome and Principe,4
Uzbekistan,1627
Zambia,65
Australia,6547
Afghanistan,1026
Algeria,2718
Austria,14795
Bahamas,60
Belarus,6264
Belgium,39983
Bhutan,5
Burkina Faso,581
Colombia,3977
Hungary,1984
Jamaica,223
Mauritania,7
Switzerland,27944
Guinea,622
Guinea-Bissau,50
India,18539
Israel,13713
Japan,10797
Luxembourg,3558
Maldives,69
Namibia,16
New Zealand,1440
North Macedonia,1225
Oman,1410
Russia,47121
Saint Vincent and the Grenadines,12
Malta,431
Vietnam,268
Western Sahara,6
Timor-Leste,22
Dominican Republic,4964
Laos,19
Barbados,75
Eswatini,24
Finland,3868
Gambia,10
Norway,7156
Peru,16325
West Bank and Gaza,449
Lebanon,677
Slovenia,1335
Mongolia,33
Poland,9593
Taiwan*,422
United Kingdom,125856
Denmark,7711
Antigua and Barbuda,23
Bahrain,1907
Bolivia,564
Burundi,5
Cambodia,122
Central African Republic,12
Cyprus,772
Diamond Princess,712
Equatorial Guinea,79
Grenada,14
Liberia,99
Malawi,17
Montenegro,312
Singapore,8014
Cote d'Ivoire,847
Ecuador,10128
Egypt,3333
Georgia,402
Guyana,65
Haiti,57
Panama,4467
Sierra Leone,43
Syria,39
Uruguay,535
Eritrea,39
Iran,83505
Iraq,1574
Papua New Guinea,7
Paraguay,208
Suriname,10
Uganda,56
Holy See,9
Burma,119
Congo (Brazzaville),160
Ethiopia,111
Slovakia,1173
Ukraine,5710
South Sudan,4
Venezuela,256
Qatar,6015
South Africa,3300
Latvia,739
Saudi Arabia,10484
Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'US'
GROUP BY "country_region";
Answer:
country_region,total_confirmed
US,784326
Query:
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    p."Population",
    (SUM(c."confirmed") / p."Population") * 100000 AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "value" IS NOT NULL
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
Answer:
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88347463686932
Spain,200210,47133521.0,424.77200037739595
Italy,181228,59729081.0,303.41668909990426
China,83817,1407745000.0,5.953990246813166
Germany,147065,83092962.0,176.98851558571232
Iran,83505,82913893.0,100.71291671228126
France,156480,67248926.0,232.6877309535025
Query:
SELECT DISTINCT "indicator_name"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
LIMIT 1000;
Answer:
Too long, hard cut:
indicator_name
Women Business and the Law Index Score (scale 1-100)
"Age dependency ratio, old (% of working-age population)"
CPIA efficiency of revenue mobilization rating (1=low to 6=high)
DEC alternative conversion factor (LCU per US$)
Electricity production from hydroelectric sources (% of total)
GDP per capita growth (annual %)
GNI (constant LCU)
Gross domestic savings (% of GDP)
Cereal yield (kg per hectare)
CO2 emissions from residential buildings and commercial and public services (% of total fuel combustion)
Coal rents (% of GDP)
"Communications, computer, etc. (% of service imports, BoP)"
Employment in agriculture (% of total employment) (modeled ILO estimate)
Insurance and financial services (% of commercial service imports)
Military expenditure (current USD)
"Other greenhouse gas emissions, HFC, PFC and SF6 (thousand metric tons of CO2 equivalent)"
"Over-age students, primary, male (% of male enrollment)"
"Current account balance (BoP, current US$)"
"Foreign direct investment, net outflows (% of GDP)"
Merchandise imports from low- and middle-income economies in South Asia (% of total merchandise imports)
"Population ages 55-59, female (% of female population)"
"Industry (including construction), value added (annual % growth)"
"Population ages 60-64, female (% of female population)"
Renewable electricity output (% of total electricity output)
"Secondary income receipts (BoP, current US$)"
"Services, value added (annual % growth)"
Statistical Capacity Score (Overall Average) (scale 0 - 100)
Total greenhouse gas emissions (kt of CO2 equivalent)
"Bound rate, simple mean, all products (%)"
"CO2 emissions from electricity and heat production, total (% of total fuel combustion)"
CO2 emissions from liquid fuel consumption (kt)
GNI (current LCU)
"GNI per capita, Atlas method (current US$)"
Imports of goods and services (constant LCU)
"Industry (including construction), value added (current LCU)"
Monetary Sector credit to private sector (% GDP)
"Population ages 25-29, male (% of male population)"
"Population ages 65 and above, female"
"Population, female (% of total population)"
Renewable energy consumption (% of total final energy consumption)
"School enrollment, tertiary (% gross)"
"School enrollment, tertiary (gross), gender parity index (GPI)"
"Survival to age 65, female (% of cohort)"
Manufactures exports (% of merchandise exports)
"Travel services (% of service imports, BoP)"
"Primary completion rate, total (% of relevant age group)"
Average transaction cost of sending remittances to a specific country (%)
"Mortality rate, infant, female (per 1,000 live births)"
Net domestic credit (current LCU)
"Net incurrence of liabilities, total (% of GDP)"
Net secondary income (Net current transfers from abroad) (current LCU)
Prevalence of anemia among non-pregnant women (% of women ages 15-49)
Adjusted savings: particulate emission damage (% of GNI)
Consumer price index (2010 = 100)
"Employment in industry, male (% of male employment) (modeled ILO estimate)"
Interest payments (% of expense)
"School enrollment, primary and secondary (gross), gender parity index (GPI)"
"Secondary income, other sectors, payments (BoP, current US$)"
People using at least basic sanitation services (% of population)
"Government expenditure on education, total (% of government expenditure)"
"External debt stocks, total (DOD, current US$)"
"Employment in services, female (% of female employment) (modeled ILO estimate)"
"Account ownership at a financial institution or with a mobile-money-service provider, older adults (% of population ages 25+)"
Import unit value index (2000 = 100)
Land under cereal production (hectares)
"Manufacturing, value added (current LCU)"
"Age dependency ratio, young (% of working-age population)"
"Agriculture, forestry, and fishing, value added per worker (constant 2015 US$)"
Methane emissions (kt of CO2 equivalent)
"Net ODA received (% of imports of goods, services and primary income)"
Prevalence of undernourishment (% of population)
"Probability of dying among youth ages 20-24 years (per 1,000)"
"School enrollment, tertiary, female (% gross)"
"Technical cooperation grants (BoP, current US$)"
"Trademark applications, direct nonresident"
"Trademark applications, nonresident, by count"
Tuberculosis treatment success rate (% of new cases)
Children out of school (% of primary school age)
CO2 emissions from gaseous fuel consumption (% of total)
"Computer, communications and other services (% of commercial service imports)"
"Employment to population ratio, 15+, male (%) (national estimate)"
Exports as a capacity to import (constant LCU)
"Foreign direct investment, net inflows (% of GDP)"
"Labor force, total"
"Population ages 00-04, male (% of male population)"
Refugee population by country or territory of asylum
"School enrollment, secondary, male (% net)"
"Share of tariff lines with international peaks, all products (%)"
"Share of tariff lines with international peaks, primary products (%)"
"Vulnerable employment,
Query:
SELECT "country_name", "indicator_code", "value", "year"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
LIMIT 1000;
Answer:
Too long, hard cut:
country_name,indicator_code,value,year
Burundi,SP.POP.TOTL,11530577.0,2019
St. Lucia,SP.POP.TOTL,182795.0,2019
Greece,SP.POP.TOTL,10721582.0,2019
St. Martin (French part),SP.POP.TOTL,38002.0,2019
Ukraine,SP.POP.TOTL,44386203.0,2019
Cayman Islands,SP.POP.TOTL,64948.0,2019
Heavily indebted poor countries (HIPC),SP.POP.TOTL,801708019.0,2019
Maldives,SP.POP.TOTL,530957.0,2019
Moldova,SP.POP.TOTL,2664974.0,2019
Myanmar,SP.POP.TOTL,54045422.0,2019
Serbia,SP.POP.TOTL,6945235.0,2019
China,SP.POP.TOTL,1407745000.0,2019
South Sudan,SP.POP.TOTL,11062114.0,2019
Guyana,SP.POP.TOTL,782775.0,2019
Bolivia,SP.POP.TOTL,11513102.0,2019
Chile,SP.POP.TOTL,18952035.0,2019
Costa Rica,SP.POP.TOTL,5047561.0,2019
Dominican Republic,SP.POP.TOTL,10738957.0,2019
Ecuador,SP.POP.TOTL,17373657.0,2019
Guatemala,SP.POP.TOTL,16604026.0,2019
Jordan,SP.POP.TOTL,10101697.0,2019
Kenya,SP.POP.TOTL,52573967.0,2019
Mexico,SP.POP.TOTL,127575529.0,2019
Peru,SP.POP.TOTL,32510462.0,2019
Paraguay,SP.POP.TOTL,7044639.0,2019
El Salvador,SP.POP.TOTL,6453550.0,2019
Tunisia,SP.POP.TOTL,11694721.0,2019
Uruguay,SP.POP.TOTL,3461731.0,2019
Central African Republic,SP.POP.TOTL,4745179.0,2019
South Asia (IDA & IBRD),SP.POP.TOTL,1835776769.0,2019
Sierra Leone,SP.POP.TOTL,7813207.0,2019
Virgin Islands (U.S.),SP.POP.TOTL,106669.0,2019
Middle East & North Africa (excluding high income),SP.POP.TOTL,389457075.0,2019
Bangladesh,SP.POP.TOTL,163046173.0,2019
Europe & Central Asia (IDA & IBRD countries),SP.POP.TOTL,460788476.0,2019
Puerto Rico,SP.POP.TOTL,3193694.0,2019
Belgium,SP.POP.TOTL,11488980.0,2019
Dominica,SP.POP.TOTL,71808.0,2019
"Congo, Dem. Rep.",SP.POP.TOTL,86790568.0,2019
St. Kitts and Nevis,SP.POP.TOTL,52834.0,2019
Argentina,SP.POP.TOTL,44938712.0,2019
Brazil,SP.POP.TOTL,211049519.0,2019
Cameroon,SP.POP.TOTL,25876387.0,2019
Colombia,SP.POP.TOTL,50339443.0,2019
"Egypt, Arab Rep.",SP.POP.TOTL,100388076.0,2019
Honduras,SP.POP.TOTL,9746115.0,2019
Indonesia,SP.POP.TOTL,270625567.0,2019
India,SP.POP.TOTL,1366417756.0,2019
"Korea, Rep.",SP.POP.TOTL,51709098.0,2019
Sri Lanka,SP.POP.TOTL,21803000.0,2019
Morocco,SP.POP.TOTL,36471766.0,2019
Malaysia,SP.POP.TOTL,31949789.0,2019
Pakistan,SP.POP.TOTL,216565317.0,2019
Panama,SP.POP.TOTL,4246440.0,2019
Philippines,SP.POP.TOTL,108116622.0,2019
Senegal,SP.POP.TOTL,16296362.0,2019
Sweden,SP.POP.TOTL,10278887.0,2019
Thailand,SP.POP.TOTL,69625581.0,2019
Turkey,SP.POP.TOTL,83429607.0,2019
South Africa,SP.POP.TOTL,58558267.0,2019
Middle income,SP.POP.TOTL,5796189831.0,2019
Sub-Saharan Africa,SP.POP.TOTL,1106957870.0,2019
Monaco,SP.POP.TOTL,38967.0,2019
Somalia,SP.POP.TOTL,15442906.0,2019
Spain,SP.POP.TOTL,47133521.0,2019
Jamaica,SP.POP.TOTL,2948277.0,2019
Comoros,SP.POP.TOTL,850891.0,2019
Angola,SP.POP.TOTL,31825299.0,2019
Greenland,SP.POP.TOTL,56225.0,2019
Bosnia and Herzegovina,SP.POP.TOTL,3300998.0,2019
New Caledonia,SP.POP.TOTL,271300.0,2019
Slovenia,SP.POP.TOTL,2088385.0,2019
Cuba,SP.POP.TOTL,11333484.0,2019
Austria,SP.POP.TOTL,8879920.0,2019
"Iran, Islamic Rep.",SP.POP.TOTL,82913893.0,2019
Uganda,SP.POP.TOTL,44269587.0,2019
"Macao SAR, China",SP.POP.TOTL,640446.0,2019
Sudan,SP.POP.TOTL,42813237.0,2019
Georgia,SP.POP.TOTL,3720161.0,2019
Lithuania,SP.POP.TOTL,2794137.0,2019
Faroe Islands,SP.POP.TOTL,48677.0,2019
Finland,SP.POP.TOTL,5521606.0,2019
Marshall Islands,SP.POP.TOTL,58791.0,2019
South Asia,SP.POP.TOTL,1835776769.0,2019
Gibraltar,SP.POP.TOTL,33706.0,2019
Uzbekistan,SP.POP.TOTL,33580350.0,2019
Least developed countries: UN classification,SP.POP.TOTL,1033388868.0,2019
Palau,SP.POP.TOTL,18001.0,2019
Cote d'Ivoire,SP.POP.TOTL,25716554.0,2019
Australia,SP.POP.TOTL,25365745.0,2019
Belarus,SP.POP.TOTL,9419758.0,2019
Mongolia,SP.POP.TOTL,3225166.0,2019
Sao Tome and Principe,SP.POP.TOTL,215048.0,2019
Solomon Islands,SP.POP.TOTL,669821.0,2019
Cyprus,SP.POP.TOTL,1198574.0,2019
Kyrgyz Republic,SP.POP.TOTL,6456200.0,2019
Early-demographic dividend,SP.POP.TOTL,3290291029.0,2019
Turks and Caicos Islands,SP.POP.TOTL,38194.0,2019
United Kingdom,SP.POP.TOTL,66836327.0,2019
Namibia,SP.POP.TOTL,2494524.0,2019
Gabon,SP.POP.TOTL,2172578.0,2019
Bahrain,SP.POP.TOTL,1641164.0,2019
Barbados,SP.POP.TOTL,287021.0,2019
Sint Maarten (Dutch part),SP.POP.TOTL,40733.0,2019
Burkina Faso,SP.POP.TOTL,20321383.0,2019
Switzerland,SP.POP.TOTL,8575280.0,2019
Italy,SP.POP.TOTL,59729081.0,2019
San Marino,SP.POP.TOTL,33864.0,2019
North Macedonia,SP.POP.TOTL,2076694.0,2019
Vietnam,SP.POP.TOTL,96462108.0,2019
"Venezuela, RB",SP.POP.TOTL,28515829.0,2019
Upper middle income,SP.POP.TOTL,2510772964.0,2019
Romania,SP.POP.TOTL,19371648.0,2019
Guam,SP.POP.TOTL,167295.0,2019
Mauritania,SP.POP.TOTL,4525698.0,2019
IDA only,SP.POP.TOTL,1109120636.0,2019
Israel,SP.POP.TOTL,9054000.0,2019
Madagascar,SP.POP.TOTL,26969306.0,2019
Latin America & Caribbean (excluding high income),SP.POP.TOTL,589503742.0,2019
Lower middle income,SP.POP.TOTL,3285416867.0,2019
Canada,SP.POP.TOTL,37593384.0,2019
Sub-Saharan Africa (IDA & IBRD countries),SP.POP.TOTL,1106957870.0,2019
Bhutan,SP.POP.TOTL,
Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY "country_region"
LIMIT 1000;
Answer:
country_region,total_confirmed
US,784326
Spain,200210
China,83817
France,156480
Germany,147065
Italy,181228
Iran,83505
Query:
SELECT "country_name", "value"
FROM "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
WHERE "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019 AND "country_name" = 'United States'
LIMIT 1000;
Answer:
country_name,value
United States,328329953.0
Query:
SELECT DISTINCT "province_state"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "country_region" = 'US'
LIMIT 1000;
Answer:
province_state
Nevada
New York
Northern Mariana Islands
Oklahoma
Tennessee
Texas
Utah
Virginia
Virgin Islands
Indiana
"Santa Clara, CA"
"San Antonio, TX"
"Omaha, NE (From Diamond Princess)"
"Snohomish County, WA"
Chicago
"Westchester County, NY"
"New York City, NY"
"Orange County, CA"
"Bergen County, NJ"
"Hillsborough, FL"
"Fort Bend County, TX"
"Grant County, WA"
"Queens County, NY"
"Sarasota, FL"
"Umatilla, OR"
"San Diego County, CA"
US
"Harris County, TX"
"Washington County, OR"
"Travis, CA"
"Lackland, TX"
"Nassau County, NY"
"Montgomery County, PA"
"Lee County, FL"
"Washington, D.C."
"Berkshire County, MA"
"Carver County, MN"
"Charleston County, SC"
"Charlotte County, FL"
"Chatham County, NC"
"Cherokee County, GA"
"Delaware County, PA"
"Jefferson Parish, LA"
"Marion County, OR"
"Shasta County, CA"
"Marion County, IN"
"St. Louis County, MO"
"Wayne County, PA"
"Montgomery County, TX"
"Montgomery County, MD"
"Fresno County, CA"
"Santa Cruz County, CA"
Missouri
Puerto Rico
Recovered
California
Colorado
Delaware
District of Columbia
Grand Princess
Kansas
Minnesota
Mississippi
"Seattle, WA"
"Sacramento County, CA"
"Cook County, IL"
"Placer County, CA"
"Providence, RI"
" Norfolk County, MA"
"Wake County, NC"
"Ashland, NE"
"Santa Clara County, CA"
"Suffolk County, MA"
"Kershaw County, SC"
"Providence County, RI"
"Alameda County, CA"
"Hendricks County, IN"
"Manatee County, FL"
"Pinal County, AZ"
"Collin County, TX"
"Douglas County, OR"
"Fayette County, KY"
"Klamath County, OR"
"Riverside County, CA"
"Shelby County, TN"
"Tulsa County, OK"
"Harford County, MD"
"Hudson County, NJ"
"Jefferson County, KY"
"Johnson County, KS"
"Kittitas County, WA"
"Volusia County, FL"
"Unknown Location, MA"
Nebraska
New Jersey
Ohio
Oregon
Pennsylvania
Rhode Island
Arkansas
Connecticut
Idaho
Maryland
Guam
American Samoa
"Madison, WI"
"Orange, CA"
"Humboldt County, CA"
"Travis, CA (From Diamond Princess)"
United States Virgin Islands
"King County, WA"
"Grafton County, NH"
"San Francisco County, CA"
"Maricopa County, AZ"
West Virginia
Alabama
Kentucky
Iowa
"San Benito, CA"
"Tempe, AZ"
"Williamson County, TN"
Wisconsin
"Lackland, TX (From Diamond Princess)"
Louisiana
Unassigned Location (From Diamond Princess)
Grand Princess Cruise Ship
"Norfolk County, MA"
"Pierce County, WA"
"Cobb County, GA"
"Douglas County, CO"
"Jackson County, OR "
"Summit County, CO"
"Clark County, WA"
"Okaloosa County, FL"
"Plymouth County, MA"
"Rockingham County, NH"
"Spokane County, WA"
"Ulster County, NY"
"Yolo County, CA"
"Douglas County, NE"
"Saratoga County, NY"
"Polk County, GA"
"El Paso County, CO"
"Honolulu County, HI"
"Virgin Islands, U.S."
"Norwell County, MA"
Montana
New Hampshire
New Mexico
North Carolina
North Dakota
South Carolina
South Dakota
Washington
Wyoming
Vermont
Arizona
Diamond Princess
Florida
Hawaii
Maine
Michigan
Illinois
Massachusetts
"Chicago, IL"
"Boston, MA"
"Los Angeles, CA"
"Portland, OR"
"San Mateo, CA"
Alaska
Georgia
"Fulton County, GA"
"Berkeley, CA"
"Contra Costa County, CA"
"Santa Rosa County, FL"
"Sonoma County, CA"
"Clark County, NV"
"New York County, NY"
"Middlesex County, MA"
"Unassigned Location, WA"
"Rockland County, NY"
"Broward County, FL"
"Johnson County, IA"
"Denver County, CO"
"Fairfax County, VA"
"Harrison County, KY"
"Washoe County, NV"
"Fairfield County, CT"
"Jefferson County, WA"
"Spartanburg County, SC"
"Bennington County, VT"
"Davidson County, TN"
"Davis County, UT"
"Madera County, CA"
"Ramsey County, MN"
"Suffolk County, NY"
"Unassigned Location, VT"
Wuhan Evacuee
"Floyd County, GA"
Query:
SELECT "country_region", "active"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" = 'Italy'
LIMIT 1000;
Answer:
country_region,active
Italy,108237
Query:
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    COALESCE(p."Population", 82913906) AS "Population",
    (SUM(c."confirmed") / COALESCE(p."Population", 82913906)) * 100000 AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
LEFT JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
Answer:
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88347463686932
Spain,200210,47133521.0,424.77200037739595
Italy,181228,59729081.0,303.41668909990426
China,83817,1407745000.0,5.953990246813166
Germany,147065,83092962.0,176.98851558571232
Iran,83505,82913893.0,100.71291671228126
France,156480,67248926.0,232.6877309535025
Query:
SELECT "country_region", SUM("confirmed") AS "total_confirmed"
FROM "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY"
WHERE "date" = '2020-04-20' AND "country_region" ILIKE '%Germany%'
GROUP BY "country_region"
LIMIT 1000;
Answer:
country_region,total_confirmed
Germany,147065
End Exploring Related Columns
Task: Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2019 population data, as 2020 data is not available), on April 20, 2020, for the specified countries, please see the table below:

```csv
Country,Total_confirmed_cases,Cases_per_100000
United States,788920,240.32
France,155383,231.82
China,83853,6.00
Italy,181228,300.53
Spain,200210,428.40
Germany,145742,175.31
Iran,83505,100.70
```

**Explanation:**

- **Total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020, for each country.
- **Cases_per_100000**: Calculated as `(Total_confirmed_cases / Population) * 100,000`, using the 2019 population estimates for each country.

Please note that the population data is based on 2019 estimates from the World Bank, as the 2020 population data was not available..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'COVID19_JHU_WORLD_BANK': {'COVID19_JHU_CSSE': ['CONFIRMED_CASES', 'DEATHS', 'RECOVERED_CASES', 'SUMMARY'], 'WORLD_BANK_GLOBAL_POPULATION': ['POPULATION_BY_COUNTRY'], 'WORLD_BANK_HEALTH_POPULATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'HEALTH_NUTRITION_POPULATION', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_DEBT': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_DEBT', 'SERIES_SUMMARY', 'SERIES_TIMES'], 'WORLD_BANK_INTL_EDUCATION': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'INTERNATIONAL_EDUCATION', 'SERIES_SUMMARY'], 'WORLD_BANK_WDI': ['COUNTRY_SERIES_DEFINITIONS', 'COUNTRY_SUMMARY', 'FOOTNOTES', 'INDICATORS_DATA', 'SERIES_SUMMARY', 'SERIES_TIME']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-18 23:40:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:40:00 - root - INFO - ```sql
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    p."Population",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 2) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
```
2025-01-18 23:40:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:40:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:40:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:40:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:40:01 - snowflake.connector.connection - INFO - closed
2025-01-18 23:40:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:40:02 - root - INFO - itercount: 1
2025-01-18 23:40:02 - root - INFO - 0
2025-01-18 23:40:02 - root - INFO - results: 
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88
Spain,200210,47133521.0,424.77
Italy,181228,59729081.0,303.42
China,83817,1407745000.0,5.95
Germany,147065,83092962.0,176.99
Iran,83505,82913893.0,100.71
France,156480,67248926.0,232.69


2025-01-18 23:40:02 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2019 population data, as 2020 data is not available), on April 20, 2020, for the specified countries, please see the table below:

```csv
Country,Total_confirmed_cases,Cases_per_100000
United States,788920,240.32
France,155383,231.82
China,83853,6.00
Italy,181228,300.53
Spain,200210,428.40
Germany,145742,175.31
Iran,83505,100.70
```

**Explanation:**

- **Total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020, for each country.
- **Cases_per_100000**: Calculated as `(Total_confirmed_cases / Population) * 100,000`, using the 2019 population estimates for each country.

Please note that the population data is based on 2019 estimates from the World Bank, as the 2020 population data was not available. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Country,Total_confirmed_cases,Population,Cases_per_100000
US,784326,328329953.0,238.88
Spain,200210,47133521.0,424.77
Italy,181228,59729081.0,303.42
China,83817,1407745000.0,5.95
Germany,147065,83092962.0,176.99
Iran,83505,82913893.0,100.71
France,156480,67248926.0,232.69
Current sql:
SELECT
    c."country_region" AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    p."Population",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 2) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population";
2025-01-18 23:41:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:41:03 - root - INFO - ```sql
SELECT
    CASE c."country_region"
        WHEN 'US' THEN 'United States'
        ELSE c."country_region"
    END AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL" AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population"
ORDER BY
    CASE c."country_region"
        WHEN 'US' THEN 1
        WHEN 'France' THEN 2
        WHEN 'China' THEN 3
        WHEN 'Italy' THEN 4
        WHEN 'Spain' THEN 5
        WHEN 'Germany' THEN 6
        WHEN 'Iran' THEN 7
        ELSE 8
    END;
```
2025-01-18 23:41:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:41:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:41:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:41:05 - snowflake.connector.connection - INFO - closed
2025-01-18 23:41:05 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:41:05 - root - INFO - itercount: 2
2025-01-18 23:41:05 - root - INFO - 001003 (42000): 01b9cdcd-0004-7b16-0001-11c300ee9402: SQL compilation error:
syntax error line 28 at position 16 unexpected '2020'.
syntax error line 28 at position 26 unexpected ''
    AND c."country_region" IN (''.
parse error line 42 at position 8 near '<EOF>'.
2025-01-18 23:41:05 - root - INFO - Input sql:
SELECT
    CASE c."country_region"
        WHEN 'US' THEN 'United States'
        ELSE c."country_region"
    END AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL" AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population"
ORDER BY
    CASE c."country_region"
        WHEN 'US' THEN 1
        WHEN 'France' THEN 2
        WHEN 'China' THEN 3
        WHEN 'Italy' THEN 4
        WHEN 'Spain' THEN 5
        WHEN 'Germany' THEN 6
        WHEN 'Iran' THEN 7
        ELSE 8
    END;
The error information is:
001003 (42000): 01b9cdcd-0004-7b16-0001-11c300ee9402: SQL compilation error:
syntax error line 28 at position 16 unexpected '2020'.
syntax error line 28 at position 26 unexpected ''
    AND c."country_region" IN (''.
parse error line 42 at position 8 near '<EOF>'.
Please correct it and output only 1 complete SQL query.
2025-01-18 23:41:54 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:41:54 - root - INFO - ```sql
SELECT
    CASE c."country_region"
        WHEN 'US' THEN 'United States'
        ELSE c."country_region"
    END AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population"
ORDER BY
    CASE c."country_region"
        WHEN 'US' THEN 1
        WHEN 'France' THEN 2
        WHEN 'China' THEN 3
        WHEN 'Italy' THEN 4
        WHEN 'Spain' THEN 5
        WHEN 'Germany' THEN 6
        WHEN 'Iran' THEN 7
        ELSE 8
    END;
```
2025-01-18 23:41:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:41:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:41:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:41:56 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:41:56 - snowflake.connector.connection - INFO - closed
2025-01-18 23:41:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:41:56 - root - INFO - itercount: 3
2025-01-18 23:41:56 - root - INFO - 0
2025-01-18 23:41:56 - root - INFO - results: 
Country,Total_confirmed_cases,Cases_per_100000
United States,784326,238.8835
France,156480,232.6877
China,83817,5.954
Italy,181228,303.4167
Spain,200210,424.772
Germany,147065,176.9885
Iran,83505,100.7129


2025-01-18 23:41:56 - root - INFO - Please check the answer again by reviewing Could you provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people, based on the 2020 population, on April 20, 2020, for the US, France, China, Italy, Spain, Germany, and Iran?, reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: To provide the total number of confirmed COVID-19 cases and the number of cases per 100,000 people (based on the 2019 population data, as 2020 data is not available), on April 20, 2020, for the specified countries, please see the table below:

```csv
Country,Total_confirmed_cases,Cases_per_100000
United States,788920,240.32
France,155383,231.82
China,83853,6.00
Italy,181228,300.53
Spain,200210,428.40
Germany,145742,175.31
Iran,83505,100.70
```

**Explanation:**

- **Total_confirmed_cases**: The total number of confirmed COVID-19 cases on April 20, 2020, for each country.
- **Cases_per_100000**: Calculated as `(Total_confirmed_cases / Population) * 100,000`, using the 2019 population estimates for each country.

Please note that the population data is based on 2019 estimates from the World Bank, as the 2020 population data was not available. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Country,Total_confirmed_cases,Cases_per_100000
United States,784326,238.8835
France,156480,232.6877
China,83817,5.954
Italy,181228,303.4167
Spain,200210,424.772
Germany,147065,176.9885
Iran,83505,100.7129
Current sql:
SELECT
    CASE c."country_region"
        WHEN 'US' THEN 'United States'
        ELSE c."country_region"
    END AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population"
ORDER BY
    CASE c."country_region"
        WHEN 'US' THEN 1
        WHEN 'France' THEN 2
        WHEN 'China' THEN 3
        WHEN 'Italy' THEN 4
        WHEN 'Spain' THEN 5
        WHEN 'Germany' THEN 6
        WHEN 'Iran' THEN 7
        ELSE 8
    END;
2025-01-18 23:42:53 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-18 23:42:53 - root - INFO - ```sql
SELECT
    CASE c."country_region"
        WHEN 'US' THEN 'United States'
        ELSE c."country_region"
    END AS "Country",
    SUM(c."confirmed") AS "Total_confirmed_cases",
    ROUND((SUM(c."confirmed") / p."Population") * 100000, 4) AS "Cases_per_100000"
FROM
    "COVID19_JHU_WORLD_BANK"."COVID19_JHU_CSSE"."SUMMARY" c
JOIN
    (
        SELECT
            CASE "country_name"
                WHEN 'United States' THEN 'US'
                WHEN 'Iran, Islamic Rep.' THEN 'Iran'
                ELSE "country_name"
            END AS "Country",
            MAX("value") AS "Population"
        FROM
            "COVID19_JHU_WORLD_BANK"."WORLD_BANK_WDI"."INDICATORS_DATA"
        WHERE
            "indicator_code" = 'SP.POP.TOTL' AND "year" = 2019
        GROUP BY
            "country_name"
    ) p
ON c."country_region" = p."Country"
WHERE
    c."date" = '2020-04-20'
    AND c."country_region" IN ('US', 'France', 'China', 'Italy', 'Spain', 'Germany', 'Iran')
GROUP BY
    c."country_region", p."Population"
ORDER BY
    CASE c."country_region"
        WHEN 'US' THEN 1
        WHEN 'France' THEN 2
        WHEN 'China' THEN 3
        WHEN 'Italy' THEN 4
        WHEN 'Spain' THEN 5
        WHEN 'Germany' THEN 6
        WHEN 'Iran' THEN 7
        ELSE 8
    END;
```
2025-01-18 23:42:53 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-18 23:42:53 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-18 23:42:53 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-18 23:42:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 7
2025-01-18 23:42:55 - snowflake.connector.connection - INFO - closed
2025-01-18 23:42:55 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-18 23:42:55 - root - INFO - itercount: 4
2025-01-18 23:42:55 - root - INFO - 0
2025-01-18 23:42:55 - root - INFO - Total iteration counts: 4
