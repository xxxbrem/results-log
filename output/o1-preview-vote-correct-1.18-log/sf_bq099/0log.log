2025-01-19 00:18:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:18:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:18:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:18:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:18:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:18:58 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:18:58 - snowflake.connector.connection - INFO - closed
2025-01-19 00:18:58 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:18:58 - root - INFO - SQL:
SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   LIMIT 1000;
Results:
Too long, hard cut:
VALUE
"{
  ""code"": ""F01L2001/34463"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34466"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34466"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34426"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/024"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34446"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34483"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/3442"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34483"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/022"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F02D13/0215"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/03"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34426"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/03"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/01"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34473"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34446"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/024"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/01"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/022"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34479"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34463"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F02D13/0215"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34473"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34479"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/3442"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/02"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0273"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0247"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M2008/1095"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0263"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0206"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M2008/1095"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0273"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0263"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0206"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0247"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/686"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/689"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/686"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/689"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02A50/30"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02A50/30"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T29/49826"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""A01K1/033"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""A01K1/033"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y10T29/49826"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G06Q10/107"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06Q10/107"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06Q10/107"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06Q50/60"",
  ""first"

2025-01-19 00:18:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:18:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:18:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:19:00 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:19:00 - snowflake.connector.connection - INFO - closed
2025-01-19 00:19:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:19:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:19:13 - root - INFO - ```sql
SELECT t."publication_number", f.value::VARIANT:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
WHERE f.value::VARIANT:"code"::STRING ILIKE '%A01B3%'
LIMIT 1000;
```
2025-01-19 00:19:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:19:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:19:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:19:14 - snowflake.connector.cursor - INFO - Number of results in first chunk: 213
2025-01-19 00:19:14 - snowflake.connector.connection - INFO - closed
2025-01-19 00:19:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:19:15 - root - INFO - SQL:
SELECT t."publication_number", f.value::VARIANT:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
WHERE f.value::VARIANT:"code"::STRING ILIKE '%A01B3%'
LIMIT 1000;
Results:
Too long, hard cut:
publication_number,cpc_code
GB-696973-A,A01B35/06
IL-268624-A,A01B3/24
IL-268624-A,A01B3/24
US-2597821-A,A01B39/00
US-2597821-A,A01B39/00
US-2597821-A,A01B35/26
US-2597821-A,A01B35/26
US-2545590-A,A01B33/025
US-2545590-A,A01B33/025
CA-997451-A,A01B3/74
KR-200149462-Y1,A01B35/28
DE-8707829-U1,A01B33/142
KR-100626846-B1,A01B3/50
FR-2943502-A1,A01B39/163
US-1412308-A,A01B3/54
US-1412308-A,A01B3/54
CN-108575125-A,A01B33/12
CN-108575125-A,A01B33/10
CN-113796181-A,A01B33/08
CN-113796181-A,A01B33/10
CN-106973572-B,A01B39/18
NL-183071-C,A01B33/065
NL-183071-C,A01B33/065
KR-101169320-B1,A01B35/10
KR-101593221-B1,A01B3/36
KR-200194260-Y1,A01B35/10
BE-872468-A,A01B33/065
BE-872468-A,A01B33/16
BE-872468-A,A01B33/12
US-5845717-A,A01B37/00
US-5845717-A,A01B37/00
JP-S6342702-Y2,A01B33/028
JP-6910281-B2,A01B33/028
JP-6910281-B2,A01B33/024
US-1081539-A,A01B35/06
US-376176-A,A01B3/26
GB-792883-A,A01B3/36
US-5407014-A,A01B31/00
US-5407014-A,A01B31/00
GB-2598141-A,A01B39/06
GB-2598141-A,A01B39/18
GB-2598141-A,A01B39/18
CN-107646212-A,A01B35/22
CN-107646212-A,A01B35/04
IT-1166526-B,A01B33/146
IT-1166526-B,A01B33/106
IT-1166526-B,A01B33/065
IT-1166526-B,A01B33/065
IT-1166526-B,A01B33/106
IT-1166526-B,A01B33/146
US-220177-A,A01B35/18
US-3054462-A,A01B35/12
US-3054462-A,A01B35/12
FR-508965-A,A01B3/30
FR-508965-A,A01B3/18
US-159642-A,A01B35/08
US-395573-A,A01B35/26
EP-3474651-C0,A01B33/06
EP-3474651-C0,A01B35/16
CA-2543900-A1,A01B33/103
CA-2543900-A1,A01B33/103
HU-E050035-T2,A01B35/24
KR-200473688-Y1,A01B35/16
KR-20020067218-A,A01B39/18
CN-115362764-A,A01B35/16
CN-115362764-A,A01B35/28
NO-153631-B,A01B35/00
CN-104040083-B,A01B33/14
US-290366-A,A01B35/22
US-3963079-A,A01B35/18
US-3963079-A,A01B39/14
US-3963079-A,A01B39/14
US-3963079-A,A01B35/18
US-2031188-A,A01B33/06
US-2031188-A,A01B33/06
ZA-808003-B,A01B39/22
ZA-808003-B,A01B35/225
ZA-808003-B,A01B39/22
ZA-808003-B,A01B35/225
GB-2089182-B,A01B33/065
IT-1064821-B,A01B33/065
IT-1064821-B,A01B33/065
CA-2977468-A1,A01B33/024
US-828171-A,A01B3/26
US-3129772-A,A01B39/085
US-3129772-A,A01B39/085
US-530054-A,A01B39/14
US-1471180-A,A01B3/50
US-1471180-A,A01B3/50
US-1093294-A,A01B3/10
KR-20070101567-A,A01B33/146
KR-20070101567-A,A01B33/06
DE-1963184-U,A01B33/08
DE-1963184-U,A01B33/10
DE-1963184-U,A01B33/00
US-10375891-B2,A01B39/18
US-10375891-B2,A01B39/18
US-10375891-B2,A01B39/18
AT-A720679-A,A01B33/106
NL-7909063-A,A01B33/103
US-469659-A,A01B35/08
CN-107072143-A,A01B35/225
CN-107072143-A,A01B35/225
CN-107072143-A,A01B35/225
CN-107094377-A,A01B33/08
CN-107094377-A,A01B33/144
CN-108289407-A,A01B33/16
CN-108289407-A,A01B33/16
CN-108289407-A,A01B35/32
PL-440426-A1,A01B33/00
PL-440426-A1,A01B33/021
PL-440426-A1,A01B33/02
PL-440426-A1,A01B33/04
BE-1007083-A5,A01B39/16
BE-1007083-A5,A01B39/26
CN-116671357-A,A01B39/085
CN-116671357-A,A01B39/22
CN-116671357-A,A01B39/20
GB-2039201-B,A01B33/106
KR-900006618-B1,A01B33/14
DE-102017102683-A1,A01B35/18
KR-101378314-B1,A01B33/082
KR-102593393-B1,A01B33/082
KR-102593393-B1,A01B33/082
KR-102484290-B1,A01B33/14
KR-102484290-B1,A01B35/28
KR-102484290-B1,A01B33/14
KR-102484290-B1,A01B35/28
US-130700-A,A01B35/08
FR-960102-A,A01B33/087
FR-960102-A,A01B33/082
US-5267618-A,A01B3/46
US-5267618-A,A01B3/46
KR-100191418-B1,A01B35/28
KR-100191418-B1,A01B35/18
KR-20130063834-A,A01B39/18
DE-140654-C,A01B3/12
US-694931-A,A01B3/08
CN-109392332-A,A01B35/20
CN-109392332-A,A01B35/26
DE-463858-C,A01B35/04
CA-2945250-A1,A01B33/106
CA-2945250-A1,A01B33/106
EP-3586579-A1,A01B33/087
EP-3586579-A1,A01B37/00
US-2024164239-A1,A01B35/08
US-2024164239-A1,A01B35/08
US-2024164239-A1,A01B35/08
FR-2287837-B1,A01B33/024
FR-2287837-B1,A01B33/08
FR-2287837-B1,A01B33/021
FR-2287837-B1,A01B33/08
FR-2287837-B1,A01B33/021
FR-2287837-B1,A01B33/024
KR-20010029583-A,A01B33/00
CN-105325075-A,A01B33/103
CN-105325075-A,A01B33/024
CN-109005687-A,A01B33/065
CN-109005687-A,A01B33/082
CN-109005687-A,A01B33/08
KR-200487998-Y1,A01B39/18
BE-727862-A,A01B33/021
US-1636048-A,A01B35/24
US-1636048-A,A01B35/24
CN-113761309-A,A01B39/16
CN-113761309-A,A01B39/26
CN-113761309-A,A01B39/20
US-2019324472-A1,A01B39/18
DE-102010019819-B4,A01B3/464
BE-826346-A,A01B33/106
BE-826346-A,A01B33/106
KR-200386017-Y1,A01B3/28
RU-191537-U1,A01B35/20
US-231385-A,A01B33/065
KR-20020000597-A,A01B35/22
CN-114651538-A,A01B39/22
CN-114651538-A,A01B39/18
CN-114651538-A,A01B39/085
IT-8519066-A1,A01B33/065
IT-8519066-A1,A01B33/106
US-2888084-A,A01B33/06
US-1545136-A,A01B39/26
US-1545136-A,A01B39/26
JP-6998053-B2,A01B39/18
JP-6998053-B2,A01B39/18
AU-2016269849-A1,A01B39/18
AU-2016269849-A1,A01B39/18
AU-2002301383-B2,A01B35/225
AU-2002301383-B2,A01B35/225
GB-2090713-B,A01B35/12
GB-2090713-B,A01B39/10
GB-2090713-B,A01B35/12
GB-2090713-B,A01B39/10
DE-829523-C,A01B3/32
CN-100366901-C,A01B33/021
US-2843032-A,A01B39/14
US-2843032-A,A01B39/14
US-1860534-A,A01B3/50
US-1860534-A,A01B3/50
US-501724-A,A01B3/464
US-2784656-A,A01B35/14
US-2784656-A,A01B35/14
US-2039702-A,A01B39/19
US-2039702-A,A01B39/19
AU-7115874-A,A01B35/26
GB-436304-A,A01B35/16
GB-4363

2025-01-19 00:19:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:19:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:19:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:19:16 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:19:16 - snowflake.connector.connection - INFO - closed
2025-01-19 00:19:16 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:19:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:19:58 - root - INFO - ```sql
SELECT t."publication_number", f.value:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
LIMIT 1000;
```
2025-01-19 00:19:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:19:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:19:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:19:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:19:59 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:00 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:00 - root - INFO - SQL:
SELECT t."publication_number", f.value:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
LIMIT 1000;
Results:
Too long, hard cut:
publication_number,cpc_code
US-2005045936-A1,H01L29/66181
US-2005045936-A1,H10B12/485
US-2005045936-A1,H10B12/373
US-2005045936-A1,H10B12/0383
US-2005045936-A1,H10B12/0387
US-2005045936-A1,H10B12/0385
US-2005045936-A1,H10B12/053
US-2005045936-A1,H10B12/0383
US-2005045936-A1,H10B12/0385
US-2005045936-A1,H01L29/66181
US-2005045936-A1,H10B12/373
US-2005045936-A1,H10B12/485
US-2005045936-A1,H10B12/053
US-2005045936-A1,H10B12/0387
US-2005161955-A1,E05B65/006
US-2005161955-A1,E05B65/006
US-2005161955-A1,E05B35/008
US-2005161955-A1,E05C19/007
US-2005161955-A1,Y10T292/1039
US-2005161955-A1,Y10T292/1039
US-2005161955-A1,E05C19/007
US-2005161955-A1,E05B35/008
US-2005004167-A1,A61P9/10
US-2005004167-A1,A61P7/02
US-2005004167-A1,A61P7/04
US-2005004167-A1,A61P3/08
US-2005004167-A1,A61P3/10
US-2005004167-A1,A61P43/00
US-2005004167-A1,A61P25/00
US-2005004167-A1,A61P27/16
US-2005004167-A1,A61P25/30
US-2005004167-A1,A61P25/16
US-2005004167-A1,A61P25/18
US-2005004167-A1,A61P25/04
US-2005004167-A1,A61P25/02
US-2005004167-A1,A61P27/06
US-2005004167-A1,A61P25/28
US-2005004167-A1,A61P25/06
US-2005004167-A1,A61P27/02
US-2005004167-A1,A61P25/22
US-2005004167-A1,A61P13/00
US-2005004167-A1,C07D215/48
US-2005004167-A1,C07D307/91
US-2005004167-A1,C07D307/79
US-2005004167-A1,C07D209/08
US-2005004167-A1,C07D209/30
US-2005004167-A1,C07C311/49
US-2005004167-A1,C07D215/50
US-2005004167-A1,C07D307/84
US-2005004167-A1,C07D307/92
US-2005004167-A1,C07D209/88
US-2005004167-A1,C07D307/92
US-2005004167-A1,C07D209/30
US-2005004167-A1,C07D307/79
US-2005004167-A1,C07D215/50
US-2005004167-A1,C07D307/84
US-2005004167-A1,C07D215/48
US-2005004167-A1,C07D307/91
US-2005004167-A1,C07D209/08
US-2005004167-A1,C07C311/49
US-2005004167-A1,C07D209/88
US-2004184410-A1,H04L1/24
US-2004184410-A1,H04L1/24
US-2004184410-A1,H04M3/22
US-2005173137-A1,A01B63/32
US-2005173137-A1,A01B63/32
US-2005173610-A1,A01K97/10
US-2005173610-A1,A01K97/10
US-2004165264-A1,H04N13/31
US-2004165264-A1,G02B30/34
US-2004165264-A1,G02B30/34
US-2004165264-A1,H04N13/31
US-2004166920-A1,G07F17/329
US-2004166920-A1,G07F17/3267
US-2004166920-A1,G07F17/3267
US-2004166920-A1,G07F17/3202
US-2004166920-A1,G07F17/3216
US-2004166920-A1,G07F17/3202
US-2004166920-A1,G07F17/3258
US-2004166920-A1,G07F17/3216
US-2004166920-A1,G07F17/3258
US-2004166920-A1,G07F17/329
US-2004217600-A1,Y10T292/1041
US-2004217600-A1,E05C19/003
US-2004217600-A1,Y10T292/1041
US-2004217600-A1,E05C19/003
US-2004200764-A1,Y10T137/86292
US-2004200764-A1,B01D36/001
US-2004200764-A1,B01D36/001
US-2004200764-A1,Y10T137/86292
US-2005079513-A1,C12Q2600/106
US-2005079513-A1,C12Q1/6886
US-2005079513-A1,C12Q1/6886
US-2005079513-A1,C12Q2600/118
US-2005079513-A1,G01N33/57426
US-2005079513-A1,C12Q2600/118
US-2005079513-A1,C12Q2600/16
US-2005079513-A1,G01N33/57426
US-2005079513-A1,C12Q2600/16
US-2005079513-A1,C12Q2600/106
US-2005036729-A1,G02B6/12004
US-2005036729-A1,G02B6/1342
US-2005036729-A1,H01S5/0265
US-2005036729-A1,H01S5/3072
US-2005036729-A1,G02B6/1342
US-2005036729-A1,G02B6/12004
US-2005036729-A1,G02B6/12
US-2005036729-A1,H01S5/3072
US-2005036729-A1,H01S5/0265
US-2004178870-A1,F02N2300/102
US-2004178870-A1,H01H50/543
US-2004178870-A1,H01H51/065
US-2004178870-A1,F02N2300/102
US-2004178870-A1,F02N15/067
US-2004178870-A1,H01H51/065
US-2004178870-A1,F02N15/067
US-2004178870-A1,H01H50/543
US-2004183874-A1,C09D11/30
US-2004183874-A1,B41J2/17533
US-2004183874-A1,B41J2/17513
US-2004183874-A1,C09D11/30
US-2004183874-A1,B41J2/17533
US-2004183874-A1,B41J2/17513
US-2005205558-A1,G03G15/2042
US-2005205558-A1,H05B6/145
US-2005205558-A1,G03G15/2042
US-2005205558-A1,H05B6/145
US-2004222956-A1,G09G2320/0271
US-2004222956-A1,G09G3/3611
US-2004222956-A1,G09G2320/0271
US-2004222956-A1,G09G2310/061
US-2004222956-A1,G09G2320/0252
US-2004222956-A1,G09G2310/061
US-2004222956-A1,G09G2320/0252
US-2004222956-A1,G09G3/3611
US-2004214959-A1,C08G69/44
US-2004214959-A1,C08G69/44
US-2004214959-A1,C08G63/916
US-2004214959-A1,C08G77/388
US-2004214959-A1,C08G77/445
US-2004214959-A1,C08G77/455
US-2004214959-A1,C08L63/00
US-2004214959-A1,H05K1/0346
US-2004214959-A1,C08G77/445
US-2004214959-A1,H05K1/0346
US-2004214959-A1,C08G63/916
US-2004214959-A1,C08G77/388
US-2004214959-A1,C08G77/455
US-2004214959-A1,C08L63/00
US-2004222053-A1,F16D65/0977
US-2004222053-A1,F16D2127/02
US-2004222053-A1,F16D2127/02
US-2004222053-A1,F16D65/0977
US-2005116792-A1,H01P3/003
US-2005116792-A1,H01P1/181
US-2005116792-A1,H01P5/04
US-2005116792-A1,H01P1/181
US-2005116792-A1,H01P3/003
US-2005226087-A1,G11C8/06
US-2005226087-A1,G11C8/06
US-2005234846-A1,G06F3/0667
US-2005234846-A1,G06F9/50
US-2005234846-A1,G06F16/355
US-2005234846-A1,G06F3/1213
US-2005234846-A1,G06F9/455
US-2005234846-A1,G06F9/4416
US-2005234846-A1,G06F9/4401
US-2005234846-A1,G06F9/06
US-2005234846-A1,G06F15/16
US-2005234846-A1,G06F16/182
US-2005234846-A1,G06F9/4416
US-2005234846-A1,G06F9/4416
US-2005234846-A1,Y10S707/99931
US-2004197466-A1,B05C5/0262
US-2004197466-A1,B05C5/0254
US-2004197466-A1,B05C5/0262
US-2004197466-A1,B05C5/0254

2025-01-19 00:20:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:20:01 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:02 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:02 - root - INFO - SQL:
SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee") f
   LIMIT 1000;
Results:
Too long, hard cut:
VALUE
"""Norwegian University Of Science And Technology (Ntnu)"""
"""Boe Technology Group Co., Ltd."""
"""K-Tronics (Su Zhou) Technology Co., Ltd."""
"""Egalax_Empia Technology Inc."""
"""Google Technology Holdings LLC"""
"""Tracfone Wireless, Inc."""
"""Microsoft Technology Licensing, Llc"""
"""L'oréal"""
"""Bryan Lochman"""
"""Thomas Liu"""
"""Matthew SAUTER"""
"""Bien Chann"""
"""Robin Huang"""
"""Parviz Tayebati"""
"""Michael Deutsch"""
"""Nicholas J. Singer"""
"""Adobe Systems Incorporated"""
"""Cnh Industrial Canada, Ltd."""
"""Fives Machining Systems, Inc."""
"""Edgewell Personal Care Brands, Llc"""
"""Delcor Asset Corporation"""
"""Conor Collins"""
"""Rolls-Royce Plc"""
"""Apple Inc."""
"""Xtl Biopharmaceuticals Ltd."""
"""Advanced Electrical Tools"""
"""Time Warner Cable Enterprises Llc"""
"""Samsung Electronics Co., Ltd."""
"""Game Your Game, Inc."""
"""Taiwan Semiconductor Manufacturing Co., Ltd."""
"""Apple Inc."""
"""Arog Pharmaceuticals, Inc."""
"""Solaredge Technologies Ltd."""
"""Stulz Air Technology Systems, Inc."""
"""Intel Corporation"""
"""X-Cardio Corp. Kk"""
"""Meyer Burger (Germany) Gmbh"""
"""Wuhan China Star Optoelectronics Semiconductor Display Technology Co., Ltd."""
"""Continental Intelligent Transportation Systems, LLC"""
"""Trw Limited"""
"""Commissariat à I'énergie atomique et aux énergies alternatives"""
"""Robert Bosch Gmbh"""
"""Guangzhou Hairma Chemical (Gz) Ltd."""
"""Intel IP Corporation"""
"""Maxim Integrated Products, Inc."""
"""José Neves Costa Pinheiro"""
"""Blackberry Limited"""
"""Services Medicaux Arnold Et Joan Zidulka Inc."""
"""Next It Corporation"""
"""Nusirt Sciences, Inc."""
"""Baidu Online Network Technology (Beijing) Co., Ltd."""
"""Qualcomm Incorporated"""
"""Michael A. Silveri"""
"""Salesforce.Com, Inc."""
"""Silicon Works Co., Ltd."""
"""Western Digital Technologies, Inc."""
"""International Business Machines Corporation"""
"""Railserve, Inc."""
"""Wacom Co., Ltd."""
"""Bell Helicopter Textron Inc."""
"""Evoqua Water Technologies Llc"""
"""Shehkai Precision Co., Ltd."""
"""Arlene Saunders"""
"""Tokyo Electron Limited"""
"""Premia Spine Ltd."""
"""Globus Medical, Inc."""
"""Genome Research Limited"""
"""Winston Yang"""
"""Toshiba Memory Corporation"""
"""Albert Chen"""
"""GE Precision Healthcare LLC"""
"""Mohammad A. Abdallah"""
"""Commscope Technologies Llc"""
"""Renesas Electronics Corporation"""
"""Honda Motor Co., Ltd"""
"""International Business Machines Corporation"""
"""Sportsfield Intellectual, Llc"""
"""Eaton Intelligent Power Limited"""
"""Robert Allen Morrison, SR."""
"""Yazaki Corporation"""
"""Delta Screen & Filtration, Llc"""
"""Taiwan Semiconductor Manufacturing Company, Ltd."""
"""Semiconductor Manufacturing International (Shanghai) Corporation"""
"""Semiconductor Manufacturing International (Beijing) Corporation"""
"""Sun Patent Trust"""
"""Micron Technology, Inc."""
"""Toshiba Tec Kabushiki Kaisha"""
"""Alps Electric Korea Co., Ltd."""
"""Hyundai Motor Company"""
"""Kia Motors Corporation"""
"""Hyundai Mobis Co., Ltd."""
"""Hyundai Mobis Co., Ltd."""
"""Magic Leap, Inc."""
"""Wei Hao Liao"""
"""Turner Broadcasting System, Inc."""
"""Ngm Biopharmaceuticals, Inc."""
"""Monsanto Technology Llc"""
"""International Business Machines Corporation"""
"""OOO NPO \""Metally Urala\"""""
"""IP GERASIMOV Aleksej Leonidovich"""
"""Steven L. BASTA"""
"""Clifford T. Jue"""
"""Gregory P. MARECEK"""
"""Ross Jaffe"""
"""Philip W. LONG"""
"""Babu S. Rahman"""
"""Amanda Williams"""
"""Qualcomm Incorporated"""
"""Jing Zheng"""
"""Hestan Commercial Corporation"""
"""Daifuku Co., Ltd."""
"""Sap Se"""
"""Ford Global Technologies, Llc"""
"""Getac Technology Corporation"""
"""Exxonmobil Research And Engineering Company"""
"""Massachusets Institute Of Technology"""
"""Siemens Aktiengesellschaft"""
"""Lpe S.P.A."""
"""Mie University"""
"""Kyoto University"""
"""Qatar University"""
"""Smaluet Solutions Private Limited"""
"""Michael Wayne Tang"""
"""Sensel Inc."""
"""John Richard Emert"""
"""Toshiba Memory Corporation"""
"""Mike Petrich"""
"""King Saud University"""
"""Dish Network L.L.C."""
"""Beijing Jingdong Shangke Information Technology Co., Ltd."""
"""JD.com American Technologies Corporation"""
"""Intel Corporation"""
"""Salesforce.Com, Inc."""
"""Samsung Electronics Co., Ltd."""
"""The Johns Hopkins University"""
"""Arkray, Inc."""
"""Henkel Ag & Co. Kgaa"""
"""Beijing Sensetime Technology Development Co., Ltd."""
"""International Business Machines Corporation"""
"""United Microelectronics Corp."""
"""Fujian Jinhua Integrated Circuit Co., Ltd."""
"""Chien-Ting Lin"""
"""Man Energy Solutions Se"""
"""Louisiana-Pacific Corporation"""
"""AOI (Advanced Oilfield Innovations, Inc.)"""
"""Schaeffler Technologies AG & Co. KG"""
"""Microsoft Technology Licensing, Llc"""
"""Idemia Identity & Security USA LLC"""
"""Adidas Ag"""
"""Innolux Corporation"""
"""Ossia Inc."""
"""Texas Instruments Incorporated"""
"""Caterpillar Inc."""
"""Fujifilm Corporation"""
"""Pratt & Whit

2025-01-19 00:20:02 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:02 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:02 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:20:03 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:20:28 - root - INFO - ```sql
SELECT t."publication_number", f.value:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code"::STRING LIKE 'A01B%'
LIMIT 1000;
```
2025-01-19 00:20:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:29 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:20:29 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:29 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:30 - root - INFO - SQL:
SELECT t."publication_number", f.value:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code"::STRING LIKE 'A01B%'
LIMIT 1000;
Results:
Too long, hard cut:
publication_number,cpc_code
US-2022067121-A1,A01B79/005
PL-440426-A1,A01B33/00
PL-440426-A1,A01B33/021
PL-440426-A1,A01B33/02
PL-440426-A1,A01B33/04
PL-440426-A1,A01B29/04
DE-19921957-A1,A01B63/32
DE-19921957-A1,A01B63/10
DE-19921957-A1,A01B73/02
JP-WO2023127437-A1,A01B69/00
US-2754647-A,A01B63/22
US-2754647-A,A01B63/22
US-2438224-A,A01B41/06
US-2438224-A,A01B41/06
US-213489-A,A01B19/02
US-231385-A,A01B33/065
US-295613-A,A01B63/04
BE-505818-A,A01B63/023
BE-505818-A,A01B59/065
AU-4190785-A,A01B69/024
AU-4190785-A,A01B69/024
US-4046203-A,A01B73/044
US-4046203-A,A01B73/044
CH-652886-A5,A01B1/16
BE-1007083-A5,A01B39/16
BE-1007083-A5,A01B39/26
US-1093294-A,A01B3/10
KR-20070101567-A,A01B33/146
KR-20070101567-A,A01B33/06
KR-20110056601-A,A01B59/04
KR-20110056601-A,A01B45/00
CN-105794484-A,A01B79/02
CN-106171108-A,A01B79/02
CN-106718602-A,A01B79/02
CN-108012790-A,A01B79/02
CN-109168379-A,A01B77/00
KR-101649538-B1,A01B71/00
KR-101649538-B1,A01B69/00
KR-101649538-B1,A01B69/00
KR-101649538-B1,A01B71/00
AU-497967-B2,A01B11/00
AU-497967-B2,A01B13/08
US-8504252-B2,A01B79/005
US-8504252-B2,A01B79/005
US-159642-A,A01B35/08
US-231306-A,A01B1/20
US-284062-A,A01B15/02
US-395573-A,A01B35/26
US-478158-A,A01B17/002
US-3643839-A,A01B69/024
US-3643839-A,A01B69/024
AU-2018273793-A1,A01B63/111
AU-2018273793-A1,A01B15/16
AU-2018273793-A1,A01B15/18
AU-2018273793-A1,A01B23/06
AU-2018273793-A1,A01B15/18
US-237056-A,A01B1/14
US-237056-A,A01B1/14
US-290366-A,A01B35/22
US-3817333-A,A01B69/006
US-3817333-A,A01B15/145
US-3817333-A,A01B15/145
US-3817333-A,A01B69/006
US-2271354-A,A01B15/16
US-2271354-A,A01B15/16
US-1606132-A,A01B63/18
US-1606132-A,A01B63/18
US-3963079-A,A01B35/18
US-3963079-A,A01B39/14
US-3963079-A,A01B39/14
US-3963079-A,A01B35/18
US-2440581-A,A01B63/28
US-2440581-A,A01B63/28
US-2440581-A,A01B63/08
US-2440581-A,A01B63/08
WO-2021244594-A1,A01B69/008
PL-3598883-T3,A01B23/02
CA-2543900-A1,A01B33/103
CA-2543900-A1,A01B33/103
US-1082418-A,A01B41/04
US-295124-A,A01B49/027
US-89634-A,A01B1/08
US-220177-A,A01B35/18
US-3054462-A,A01B35/12
US-3054462-A,A01B61/00
US-3054462-A,A01B35/12
US-3054462-A,A01B63/145
US-3054462-A,A01B63/145
US-3054462-A,A01B5/00
US-3054462-A,A01B61/00
US-3054462-A,A01B5/00
US-1009439-A,A01B13/16
US-2309266-A,A01B1/14
US-2309266-A,A01B1/14
US-1047644-A,A01B69/008
BE-438953-A,A01B1/02
US-742202-A,A01B69/024
FR-508965-A,A01B3/30
FR-508965-A,A01B3/18
US-3439748-A,A01B61/044
US-3439748-A,A01B61/044
US-139966-A,A01B41/04
US-2021352844-A1,A01B63/11
US-2021352844-A1,A01B63/11
US-2021352844-A1,A01B63/11
US-2021289723-A1,A01B79/005
US-2021289723-A1,A01B79/005
AU-2002301383-B2,A01B35/225
AU-2002301383-B2,A01B35/225
KR-900006618-B1,A01B33/14
US-2008196373-A1,A01B45/026
US-2008196373-A1,A01B45/026
US-1973988-A,A01B19/02
US-1973988-A,A01B19/02
US-2269981-A,A01B61/02
US-2269981-A,A01B61/02
US-552165-A,A01B59/02
US-91161-A,A01B45/00
US-797874-A,A01B21/083
US-11197412-B2,A01B49/06
US-11197412-B2,A01B63/008
US-11197412-B2,A01B76/00
US-11197412-B2,A01B49/06
US-11197412-B2,A01B76/00
US-11197412-B2,A01B63/008
RU-2716419-C1,A01B79/02
RU-2716419-C1,A01B49/06
RU-186558-U1,A01B49/06
US-11188098-B2,A01B69/008
US-11188098-B2,A01B69/008
US-11188098-B2,A01B69/008
US-292639-A,A01B13/08
US-2598959-A,A01B23/046
US-2598959-A,A01B23/046
AR-012600-A1,A01B79/005
AR-012600-A1,A01B79/005
AR-012600-A1,A01B69/008
AR-012600-A1,A01B69/008
CA-2199335-A1,A01B61/046
US-2008006417-A1,A01B15/16
US-2008006417-A1,A01B15/16
CN-114097326-A,A01B43/00
US-2005173137-A1,A01B63/32
US-2005173137-A1,A01B63/32
DE-102004042897-A1,A01B1/14
DE-102004042897-A1,A01B1/065
DE-102020117911-A1,A01B79/005
DE-102020117911-A1,A01B69/008
WO-2018172461-A1,A01B29/043
WO-2018172461-A1,A01B29/06
DE-102019211496-A1,A01B59/043
DE-102019211496-A1,A01B63/008
DE-102019211496-A1,A01B49/027
DE-102019211496-A1,A01B63/32
DE-102019211496-A1,A01B29/02
DE-102019211496-A1,A01B21/04
DE-102019211496-A1,A01B73/044
DE-102019211496-A1,A01B59/043
DE-102019211496-A1,A01B59/041
DE-102019211496-A1,A01B69/004
US-128588-A,A01B29/041
US-1538757-A,A01B59/042
US-1538757-A,A01B59/042
US-2019369-A,A01B19/02
US-2019369-A,A01B19/02
AT-A887678-A,A01B45/026
BE-872468-A,A01B33/065
BE-872468-A,A01B33/16
BE-872468-A,A01B33/12
CA-983309-A,A01B59/062
CA-983309-A,A01B59/062
AU-7308996-A,A01B15/145
US-11175254-B2,A01B79/005
US-11175254-B2,A01B47/00
US-11175254-B2,A01B79/005
US-11175254-B2,A01B47/00
US-11175254-B2,A01B79/005
US-11175254-B2,A01B47/00
US-483311-A,A01B15/10
US-483311-A,A01B15/10
US-527362-A,A01B59/065
US-2473800-A,A01B71/06
US-2473800-A,A01B71/06
FR-1175885-A,A01B51/026
GB-999969-A,A01B15/08
US-2306127-A,A01B21/08
US-2306127-A,A01B21/08
NL-299535-A,A01B23/02
US-2843032-A,A01B39/14
US-2843032-A,A01B39/14
US-1860534-A,A01B3/50
US-1860534-A,A01B3/50
US-501724-A,A01B3/464
US-2784656-A,A01B59/063
US-2784656-A,A01B59/063
US-2784656-A,A01B35/14
US-2784656-A,A01B35/14
US-2039702-A,A01B39/19
US-2039702-A,A01B39/19
US-194108-A,A01B63/023
CH-389304-A,A01B71/00
AU-7115874-A,A01B79/00
AU-7115874-A,A01B35/26
GB-436304-A,A01B35

2025-01-19 00:20:30 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:30 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:30 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:20:31 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:31 - root - INFO - SQL:
SELECT t."publication_date"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."publication_date" IS NOT NULL
   LIMIT 1000;
Results:
Too long, hard cut:
publication_date
19980507
19991217
18920810
19830217
19900828
19910910
19870715
18370928
19501031
19810215
19860115
19860415
19730213
19740709
19730213
18780805
18910815
19731015
19670415
18950131
18950715
18950915
0
19630802
19660708
19670324
19670428
19670623
19670707
19680105
19620404
19610802
19300507
19410228
19870529
19840713
19920807
19781020
19861107
19920330
19870713
19940719
20180509
19850331
19880630
19780530
19820927
19850131
19891218
19950315
18460702
19801118
18490410
18520511
19810430
19991122
19891231
19820831
19761115
19880915
19860215
19820715
19830315
19840315
19810515
19920915
19880115
19870115
19760715
19880615
19760315
19791015
19780315
19820915
19800815
19750915
19861015
19740306
19740215
19740731
19750616
19750616
19760116
19760705
19760514
19760716
19770316
19770718
19770801
19771201
19780525
19781106
19781213
19790112
19781116
19790420
19790710
19800118
19810116
19520315
19620629
19591116
19591231
19600301
19600602
19601118
19600916
19620115
19620820
19640611
19641030
19670615
19710401
19710527
19720117
19720818
19720616
19720901
19721219
19751209
19730123
19730220
19740618
19740122
19740806
19750617
19741105
19750318
19750708
19750916
19750701
18821218
19770118
19761019
18830614
19770517
19770405
19770125
19770412
18840125
19760817
19770301
19770705
18840809
19780418
19770419
19790306
19790102
19790724
19780110
18860327
18860628
19770308
19810210
19790313
19790501
19790123
19800909
19800902
19791127
19810217
18870723
19801104
18871209
18880204
19801021
19800226
19811215
18880901
19810324
18890619
19801230
19831025
19820420
19830111
19830712
19811020
19830426
19820622
18910404
19821116
19830927
19840131
19841016
19841120
19840228
19850625
19850514
19860729
19851008
19850430
18930208
19860930
19850806
19851203
19870113
19860520
19870707
18930620
19860624
19871201
19880315
19870317
19871020
19880913
19860805
19891121
19880524
19871006
19890411
19900313
19880906
19900925
19891205
19900703
19891024
19000406
19021021
19021202
19030407
19040216
19040412
19040823
19050912
19640531
18960715
18960615
18971115
19710228
18980331
18980615
18981130
18981231
19000731
19010515
19630629
19660115
19030215
19640615
19651115
19650131
19050228
19050315
19050531
19720131
19650731
19731115
19061215
19070415
19081001
19720630
19091001
19730515
19680915
19120102
19120316
19701115
19640715
19650615
19130716
19730715
19730831
19141016
19680430
19741015
19680115
19160901
19700515
19690415
19711130
19690531
19201001
19201216
19230102
19700715
19850308
19870116
0
0
0
0
0
0
0
0
19771008
19771123
19751122
19830117
19770831
19780309
19880215
19850607
19461209
19320122
19490810
19530310
19560110
19870207
19890125
19680614
19680816
19610113
19610630
19621207
19630809
19630517
0
19641106
19650205
19650402
19650528
19651029
19381024
19551123
19340718
19250101
19380909
19550803
19470624
19200722
19541117
19630808
19550316
19530909
19650127
19671206
19590521
19460308
19490726
19550202
19620426
19711124
19540811
19950130
19861029
19870227
19900728
19970925
19990225
20000706
19870721
19770715
19820720
19960723
19780801
19870717
19840723
19840724
19970722
19890718
19730928
19990727
19990223
19880716
19840724
19940802
19860725
19950808
19840724
19841024
19960723
19960730
19800723
19830719
20000725
19780807
19870720
19760714
19860726
19731013
19920825
19790804
19750808
19850817
19790803
19830723
19871208
19880718
19950808
19971003
19770805
19760903
19790808
19930806
19731017
19900112
19990727
19950815
19990806
19960809
19940809
19880725
19880727
19820803
19950818
19981020
19880122
19951211
18540606
18560715
19151221
18571124
18580608
18600710
18631020
18631208
19880607
18650502
19940816
19361201
18670305
18670326
18671119
19630416
19490913
18681006
18681020
18690817
19890307
19821031
19940610
19861231
19750630
19830228
19821031
19820225
19840229
19820618
20041015
20000522
19970619
19830728
19970619
19970811
19950904
19880908
19880915
20010213
19920817
20000522
19880926
19771117
19950710
19950717
19980917
20000807
19780413
19840405
19971017
19930304
19930218
19970922
19980908
19991007
19930304
20010709
19970902
19951110
19840712
19840816
19990920
19930405
19951221
19951221
19790201
20000914
19971126
19930901
19890817
20000829
19850103
20001109
20000801
19890825
20000825
19980121
19930728
19790913
19850926
19960617
19690918
19730503
19980306
20000807
19940315
19991025
20011015
19900111
19960502
19780928
19931005
20001102
19930729
19800313
19941108
19991123
19991213
19851017
19960626
20000110
20001117
19900402
19790726
20001102
19940131
19791018
19740214
19900531
19980505
19960904
20001121
19800207
19791220
20000201
19900726
19900801
19740620
19800228
20001205
19860603
19860619
19961023
19960821
19901022
19740829
19800612
20010222
19980803
19940804
20000314
20001228
19901122
20010109
20010102
19800828
19730809
19970220
19980903
19810813
19741212
19801120
20000314
20000321
19910117
19750123
19811224
19961230
20010205
20010130
19861127
19870430
19910307
19810219
19810409
19910408
20000403
20001214
19980825
20000417
19910418
1991

2025-01-19 00:20:31 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:31 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:31 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:33 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:20:33 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:33 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:33 - root - INFO - SQL:
SELECT TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') AS "publication_date_formatted"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
Results:
Too long, hard cut:
publication_date_formatted
1998-05-07
1999-12-17
1892-08-10
1983-02-17
1990-08-28
1991-09-10
1987-07-15
1837-09-28
1950-10-31
1981-02-15
1986-01-15
1986-04-15
1973-02-13
1974-07-09
1973-02-13
1878-08-05
1891-08-15
1973-10-15
1967-04-15
1895-01-31
1895-07-15
1895-09-15
""
1963-08-02
1966-07-08
1967-03-24
1967-04-28
1967-06-23
1967-07-07
1968-01-05
1962-04-04
1961-08-02
1930-05-07
1941-02-28
1987-05-29
1984-07-13
1992-08-07
1978-10-20
1986-11-07
1992-03-30
1987-07-13
1994-07-19
2018-05-09
1985-03-31
1988-06-30
1978-05-30
1982-09-27
1985-01-31
1989-12-18
1995-03-15
1846-07-02
1980-11-18
1849-04-10
1852-05-11
1981-04-30
1999-11-22
1989-12-31
1982-08-31
1976-11-15
1988-09-15
1986-02-15
1982-07-15
1983-03-15
1984-03-15
1981-05-15
1992-09-15
1988-01-15
1987-01-15
1976-07-15
1988-06-15
1976-03-15
1979-10-15
1978-03-15
1982-09-15
1980-08-15
1975-09-15
1986-10-15
1974-03-06
1974-02-15
1974-07-31
1975-06-16
1975-06-16
1976-01-16
1976-07-05
1976-05-14
1976-07-16
1977-03-16
1977-07-18
1977-08-01
1977-12-01
1978-05-25
1978-11-06
1978-12-13
1979-01-12
1978-11-16
1979-04-20
1979-07-10
1980-01-18
1981-01-16
1952-03-15
1962-06-29
1959-11-16
1959-12-31
1960-03-01
1960-06-02
1960-11-18
1960-09-16
1962-01-15
1962-08-20
1964-06-11
1964-10-30
1967-06-15
1971-04-01
1971-05-27
1972-01-17
1972-08-18
1972-06-16
1972-09-01
1972-12-19
1975-12-09
1973-01-23
1973-02-20
1974-06-18
1974-01-22
1974-08-06
1975-06-17
1974-11-05
1975-03-18
1975-07-08
1975-09-16
1975-07-01
1882-12-18
1977-01-18
1976-10-19
1883-06-14
1977-05-17
1977-04-05
1977-01-25
1977-04-12
1884-01-25
1976-08-17
1977-03-01
1977-07-05
1884-08-09
1978-04-18
1977-04-19
1979-03-06
1979-01-02
1979-07-24
1978-01-10
1886-03-27
1886-06-28
1977-03-08
1981-02-10
1979-03-13
1979-05-01
1979-01-23
1980-09-09
1980-09-02
1979-11-27
1981-02-17
1887-07-23
1980-11-04
1887-12-09
1888-02-04
1980-10-21
1980-02-26
1981-12-15
1888-09-01
1981-03-24
1889-06-19
1980-12-30
1983-10-25
1982-04-20
1983-01-11
1983-07-12
1981-10-20
1983-04-26
1982-06-22
1891-04-04
1982-11-16
1983-09-27
1984-01-31
1984-10-16
1984-11-20
1984-02-28
1985-06-25
1985-05-14
1986-07-29
1985-10-08
1985-04-30
1893-02-08
1986-09-30
1985-08-06
1985-12-03
1987-01-13
1986-05-20
1987-07-07
1893-06-20
1986-06-24
1987-12-01
1988-03-15
1987-03-17
1987-10-20
1988-09-13
1986-08-05
1989-11-21
1988-05-24
1987-10-06
1989-04-11
1990-03-13
1988-09-06
1990-09-25
1989-12-05
1990-07-03
1989-10-24
1900-04-06
1902-10-21
1902-12-02
1903-04-07
1904-02-16
1904-04-12
1904-08-23
1905-09-12
1964-05-31
1896-07-15
1896-06-15
1897-11-15
1971-02-28
1898-03-31
1898-06-15
1898-11-30
1898-12-31
1900-07-31
1901-05-15
1963-06-29
1966-01-15
1903-02-15
1964-06-15
1965-11-15
1965-01-31
1905-02-28
1905-03-15
1905-05-31
1972-01-31
1965-07-31
1973-11-15
1906-12-15
1907-04-15
1908-10-01
1972-06-30
1909-10-01
1973-05-15
1968-09-15
1912-01-02
1912-03-16
1970-11-15
1964-07-15
1965-06-15
1913-07-16
1973-07-15
1973-08-31
1914-10-16
1968-04-30
1974-10-15
1968-01-15
1916-09-01
1970-05-15
1969-04-15
1971-11-30
1969-05-31
1920-10-01
1920-12-16
1923-01-02
1970-07-15
1985-03-08
1987-01-16
""
""
""
""
""
""
""
""
1977-10-08
1977-11-23
1975-11-22
1983-01-17
1977-08-31
1978-03-09
1988-02-15
1985-06-07
1946-12-09
1932-01-22
1949-08-10
1953-03-10
1956-01-10
1987-02-07
1989-01-25
1968-06-14
1968-08-16
1961-01-13
1961-06-30
1962-12-07
1963-08-09
1963-05-17
""
1964-11-06
1965-02-05
1965-04-02
1965-05-28
1965-10-29
1938-10-24
1955-11-23
1934-07-18
1925-01-01
1938-09-09
1955-08-03
1947-06-24
1920-07-22
1954-11-17
1963-08-08
1955-03-16
1953-09-09
1965-01-27
1967-12-06
1959-05-21
1946-03-08
1949-07-26
1955-02-02
1962-04-26
1971-11-24
1954-08-11
1995-01-30
1986-10-29
1987-02-27
1990-07-28
1997-09-25
1999-02-25
2000-07-06
1987-07-21
1977-07-15
1982-07-20
1996-07-23
1978-08-01
1987-07-17
1984-07-23
1984-07-24
1997-07-22
1989-07-18
1973-09-28
1999-07-27
1999-02-23
1988-07-16
1984-07-24
1994-08-02
1986-07-25
1995-08-08
1984-07-24
1984-10-24
1996-07-23
1996-07-30
1980-07-23
1983-07-19
2000-07-25
1978-08-07
1987-07-20
1976-07-14
1986-07-26
1973-10-13
1992-08-25
1979-08-04
1975-08-08
1985-08-17
1979-08-03
1983-07-23
1987-12-08
1988-07-18
1995-08-08
1997-10-03
1977-08-05
1976-09-03
1979-08-08
1993-08-06
1973-10-17
1990-01-12
1999-07-27
1995-08-15
1999-08-06
1996-08-09
1994-08-09
1988-07-25
1988-07-27
1982-08-03
1995-08-18
1998-10-20
1988-01-22
1995-12-11
1854-06-06
1856-07-15
1915-12-21
1857-11-24
1858-06-08
1860-07-10
1863-10-20
1863-12-08
1988-06-07
1865-05-02
1994-08-16
1936-12-01
1867-03-05
1867-03-26
1867-11-19
1963-04-16
1949-09-13
1868-10-06
1868-10-20
1869-08-17
1989-03-07
1982-10-31
1994-06-10
1986-12-31
1975-06-30
1983-02-28
1982-10-31
1982-02-25
1984-02-29
1982-06-18
2004-10-15
2000-05-22
1997-06-19
1983-07-28
1997-06-19
1997-08-11
1995-09-04
1988-09-08
1988-09-15
2001-02-13
1992-08-17
2000-05-22
1988-09-26
1977-11-17
1995-07-10
1995-07-17
1998-09-17
2000-08-07
1978-04-13
1984-04-05
1997-10-17
1993-03-04
1993-02-18
1997-09-22
1998-09-08
1999-10-07
1993-03-04
2001-07-09
1997-09-02
1995-11-10
1984

2025-01-19 00:20:33 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:33 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:33 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:35 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 00:20:35 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:20:35 - root - INFO - SQL:
SELECT t."country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."country_code" IS NOT NULL
   LIMIT 1000;
Results:
country_code
CR
CR
FI
HK
HU
JP
JP
US
US
AT
AT
AT
CA
CA
CA
CA
CH
CH
CH
CH
CH
CH
DD
FR
FR
FR
FR
FR
FR
FR
GB
GB
GB
GB
HK
HK
HK
HK
HK
HU
JP
JP
MA
OA
OA
PH
PH
PH
PH
TR
US
US
US
US
YU
YU
YU
YU
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BR
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CY
CY
DD
DD
DD
DD
DD
DD
DD
DD
DK
DK
DK
DK
DK
DK
DK
DK
FI
FI
FI
FI
FI
FI
FI
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
HU
HU
HU
HU
ID
ID
ID
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
LV
MX
TR
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
YU
YU
YU
YU
YU
YU
YU
YU
YU
AT
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BG
BG
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH

2025-01-19 00:20:35 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:20:35 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:20:35 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:20:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:20:36 - snowflake.connector.connection - INFO - closed
2025-01-19 00:20:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:21:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:21:08 - root - INFO - ```sql
SELECT a.value:"name"::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."assignee") a
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 1000;
```
2025-01-19 00:21:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:21:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:21:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:21:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 00:21:09 - snowflake.connector.connection - INFO - closed
2025-01-19 00:21:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:21:10 - root - INFO - SQL:
SELECT a.value:"name"::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."assignee") a
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 1000;
Results:
assignee_name,total_applications
,486926

2025-01-19 00:21:10 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:21:10 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:21:10 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:21:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:21:11 - snowflake.connector.connection - INFO - closed
2025-01-19 00:21:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:21:36 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:21:36 - root - INFO - ```sql
SELECT a.value::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") c,
     LATERAL FLATTEN(input => t."assignee") a
WHERE c.value:"code"::STRING LIKE 'A01B3%'
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 3;
```
2025-01-19 00:21:36 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:21:36 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:21:36 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:21:37 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 00:21:37 - snowflake.connector.connection - INFO - closed
2025-01-19 00:21:37 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:21:37 - root - INFO - SQL:
SELECT a.value::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") c,
     LATERAL FLATTEN(input => t."assignee") a
WHERE c.value:"code"::STRING LIKE 'A01B3%'
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 3;
Results:
assignee_name,total_applications
Lely Nv C Van Der,5
Deere & Company,2
Amazonen Werke Dreyer H,2

2025-01-19 00:21:37 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:21:37 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:21:37 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:21:39 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:21:39 - snowflake.connector.connection - INFO - closed
2025-01-19 00:21:39 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:22:07 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:22:07 - root - INFO - ```sql
SELECT a.value::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") c,
     LATERAL FLATTEN(input => t."assignee") a
WHERE c.value:"code"::STRING LIKE 'A01B%'
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 3;
```
2025-01-19 00:22:07 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:22:07 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:22:07 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:22:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 00:22:08 - snowflake.connector.connection - INFO - closed
2025-01-19 00:22:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:22:09 - root - INFO - SQL:
SELECT a.value::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") c,
     LATERAL FLATTEN(input => t."assignee") a
WHERE c.value:"code"::STRING LIKE 'A01B%'
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 3;
Results:
assignee_name,total_applications
Deere & Company,20
Cnh Industrial America Llc,10
Deere & Co,8

2025-01-19 00:22:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:22:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:22:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:22:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:22:10 - snowflake.connector.connection - INFO - closed
2025-01-19 00:22:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:22:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:22:35 - root - INFO - ```csv
Assignee_Name,Total_Applications,Most_Active_Year,Applications_in_That_Year,Top_Country_Code_in_That_Year
Deere & Company,20,year1:int,applications_in_year1:int,country_code1:str
Cnh Industrial America Llc,10,year2:int,applications_in_year2:int,country_code2:str
Deere & Co,8,year3:int,applications_in_year3:int,country_code3:str
```

This table lists the top 3 assignees in patent class **A01B** based on the total number of applications. For each assignee, it shows:

- **Assignee_Name**: The name of the assignee.
- **Total_Applications**: The total number of patent applications filed by the assignee in class **A01B**.
- **Most_Active_Year**: The year in which the assignee filed the most applications.
- **Applications_in_That_Year**: The number of applications the assignee filed in that peak year.
- **Top_Country_Code_in_That_Year**: The country code where the most applications were filed during that year.

<|ipynb_marker|> Markdown
2025-01-19 00:22:35 - root - INFO - itercount: 0
2025-01-19 00:22:35 - root - INFO - Database Name: PATENTS
Schema Name: PATENTS
DDL describes table information.
,0
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,1
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""spif_publication_number"" VARCHAR(16777216),
	""spif_application_number"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""claims_localized_html"" VARIANT,
	""description_localized"" VARIANT,
	""description_localized_html"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""locarno"" VARIANT,
	""citation"" VARIANT,
	""parent"" VARIANT,
	""child"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,2
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
**Relevant columns and their potential usage:**

- **"cpc"**: To filter publications in patent class **A01B3**.
- **"assignee"**: To extract assignee names.
- **"publication_date"**: To determine the year of publication.
- **"country_code"**: To identify the country associated with each application.
- **"application_number"**: To uniquely identify applications.

**Conditions that may be used:**

- Filtering on the **"cpc"** column for entries containing **'A01B3'**.
- Extracting assignee names from the **"assignee"** column.
- Parsing the **"publication_date"** to extract the year.
- Grouping and counting applications by assignee and year.
- Identifying the country code with the most applications in a given year.

---

**Sample SQL Queries:**

1. **Retrieve CPC codes to understand their structure:**

   ```sql
   SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   LIMIT 1000;
   ```

2. **Get distinct CPC symbols:**

   ```sql
   SELECT DISTINCT f.value::VARIANT:"symbol"::STRING AS "cpc_symbol"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   WHERE f.value::VARIANT:"symbol"::STRING IS NOT NULL
   LIMIT 1000;
   ```

3. **Find publications with CPC code containing 'A01B3':**

   ```sql
   SELECT t."publication_number", f.value::VARIANT:"symbol"::STRING AS "cpc_symbol"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   WHERE f.value::VARIANT:"symbol"::STRING ILIKE '%A01B3%'
   LIMIT 1000;
   ```

4. **Extract assignee names to understand their structure:**

   ```sql
   SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee") f
   LIMIT 1000;
   ```

5. **Get distinct assignee names:**

   ```sql
   SELECT DISTINCT f.value::VARIANT:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee") f
   WHERE f.value::VARIANT:"name"::STRING IS NOT NULL
   LIMIT 1000;
   ```

6. **List publication dates to understand date format:**

   ```sql
   SELECT t."publication_date"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."publication_date" IS NOT NULL
   LIMIT 1000;
   ```

7. **Format publication dates into year:**

   ```sql
   SELECT TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') AS "publication_date_formatted"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
   ```

8. **Get country codes of publications:**

   ```sql
   SELECT t."country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."country_code" IS NOT NULL
   LIMIT 1000;
   ```

9. **Combine CPC codes with assignee names for publications in 'A01B3':**

   ```sql
   SELECT t."publication_number",
          f.value::VARIANT:"symbol"::STRING AS "cpc_symbol",
          a.value::VARIANT:"name"::STRING AS "assignee_name"
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f,
        LATERAL FLATTEN(input => t."assignee") a
   WHERE f.value::VARIANT:"symbol"::STRING ILIKE '%A01B3%'
   LIMIT 1000;
   ```

10. **Count the number of applications per assignee in 'A01B3':**

    ```sql
    SELECT a.value::VARIANT:"name"::STRING AS "assignee_name",
           COUNT(DISTINCT t."application_number") AS "total_applications"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") f,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE f.value::VARIANT:"symbol"::STRING ILIKE '%A01B3%'
    GROUP BY "assignee_name"
    ORDER BY "total_applications" DESC
    LIMIT 1000;
    ```

11. **Find the years with the most applications for each assignee:**

    ```sql
    SELECT a.value::VARIANT:"name"::STRING AS "assignee_name",
           EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "year",
           COUNT(DISTINCT t."application_number") AS "applications_in_year"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") f,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE f.value::VARIANT:"symbol"::STRING ILIKE '%A01B3%'
    GROUP BY "assignee_name", "year"
    ORDER BY "assignee_name", "applications_in_year" DESC
    LIMIT 1000;
    ```

12. **Get the top country code for applications in a specific year:**

    ```sql
    SELECT t."country_code",
           COUNT(DISTINCT t."application_number") AS "applications_count"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") f
    WHERE f.value::VARIANT:"symbol"::STRING ILIKE '%A01B3%'
      AND EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) = 2020 -- Replace with the specific year
    GROUP BY t."country_code"
    ORDER BY "applications_count" DESC
    LIMIT 1000;
    ```

These queries aim to explore the structure and contents of the relevant columns in the **PATENTS.PATENTS.PUBLICATIONS** table, particularly focusing on how to extract and work with the nested JSON data in the **"cpc"** and **"assignee"** columns. By understanding the data, you can proceed to formulate more complex queries to analyze the top 3 assignees in patent class **A01B3** based on the total number of applications.Query:
SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."cpc") f
   LIMIT 1000;
Answer:
Too long, hard cut:
VALUE
"{
  ""code"": ""F01L2001/34463"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34466"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34466"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34426"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/024"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34446"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34483"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/3442"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34483"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/022"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F02D13/0215"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/03"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34426"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02T10/12"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/03"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/01"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34473"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34446"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/024"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2800/01"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/022"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34479"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34463"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F02D13/0215"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34473"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L2001/34479"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""F01L1/3442"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/02"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0273"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0247"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M2008/1095"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0263"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0206"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M2008/1095"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0273"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0263"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02E60/50"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0206"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""H01M8/0247"",
  ""first"": false,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/686"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/689"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/686"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""C12Q1/689"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y02A50/30"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y02A50/30"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""Y10T29/49826"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""A01K1/033"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""A01K1/033"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""Y10T29/49826"",
  ""first"": false,
  ""inventive"": false,
  ""tree"": []
}"
"{
  ""code"": ""G06Q10/107"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06Q10/107"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06Q10/107"",
  ""first"": true,
  ""inventive"": true,
  ""tree"": []
}"
"{
  ""code"": ""G06Q50/60"",
  ""first"
Query:
SELECT t."publication_number", f.value::VARIANT:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
WHERE f.value::VARIANT:"code"::STRING ILIKE '%A01B3%'
LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,cpc_code
GB-696973-A,A01B35/06
IL-268624-A,A01B3/24
IL-268624-A,A01B3/24
US-2597821-A,A01B39/00
US-2597821-A,A01B39/00
US-2597821-A,A01B35/26
US-2597821-A,A01B35/26
US-2545590-A,A01B33/025
US-2545590-A,A01B33/025
CA-997451-A,A01B3/74
KR-200149462-Y1,A01B35/28
DE-8707829-U1,A01B33/142
KR-100626846-B1,A01B3/50
FR-2943502-A1,A01B39/163
US-1412308-A,A01B3/54
US-1412308-A,A01B3/54
CN-108575125-A,A01B33/12
CN-108575125-A,A01B33/10
CN-113796181-A,A01B33/08
CN-113796181-A,A01B33/10
CN-106973572-B,A01B39/18
NL-183071-C,A01B33/065
NL-183071-C,A01B33/065
KR-101169320-B1,A01B35/10
KR-101593221-B1,A01B3/36
KR-200194260-Y1,A01B35/10
BE-872468-A,A01B33/065
BE-872468-A,A01B33/16
BE-872468-A,A01B33/12
US-5845717-A,A01B37/00
US-5845717-A,A01B37/00
JP-S6342702-Y2,A01B33/028
JP-6910281-B2,A01B33/028
JP-6910281-B2,A01B33/024
US-1081539-A,A01B35/06
US-376176-A,A01B3/26
GB-792883-A,A01B3/36
US-5407014-A,A01B31/00
US-5407014-A,A01B31/00
GB-2598141-A,A01B39/06
GB-2598141-A,A01B39/18
GB-2598141-A,A01B39/18
CN-107646212-A,A01B35/22
CN-107646212-A,A01B35/04
IT-1166526-B,A01B33/146
IT-1166526-B,A01B33/106
IT-1166526-B,A01B33/065
IT-1166526-B,A01B33/065
IT-1166526-B,A01B33/106
IT-1166526-B,A01B33/146
US-220177-A,A01B35/18
US-3054462-A,A01B35/12
US-3054462-A,A01B35/12
FR-508965-A,A01B3/30
FR-508965-A,A01B3/18
US-159642-A,A01B35/08
US-395573-A,A01B35/26
EP-3474651-C0,A01B33/06
EP-3474651-C0,A01B35/16
CA-2543900-A1,A01B33/103
CA-2543900-A1,A01B33/103
HU-E050035-T2,A01B35/24
KR-200473688-Y1,A01B35/16
KR-20020067218-A,A01B39/18
CN-115362764-A,A01B35/16
CN-115362764-A,A01B35/28
NO-153631-B,A01B35/00
CN-104040083-B,A01B33/14
US-290366-A,A01B35/22
US-3963079-A,A01B35/18
US-3963079-A,A01B39/14
US-3963079-A,A01B39/14
US-3963079-A,A01B35/18
US-2031188-A,A01B33/06
US-2031188-A,A01B33/06
ZA-808003-B,A01B39/22
ZA-808003-B,A01B35/225
ZA-808003-B,A01B39/22
ZA-808003-B,A01B35/225
GB-2089182-B,A01B33/065
IT-1064821-B,A01B33/065
IT-1064821-B,A01B33/065
CA-2977468-A1,A01B33/024
US-828171-A,A01B3/26
US-3129772-A,A01B39/085
US-3129772-A,A01B39/085
US-530054-A,A01B39/14
US-1471180-A,A01B3/50
US-1471180-A,A01B3/50
US-1093294-A,A01B3/10
KR-20070101567-A,A01B33/146
KR-20070101567-A,A01B33/06
DE-1963184-U,A01B33/08
DE-1963184-U,A01B33/10
DE-1963184-U,A01B33/00
US-10375891-B2,A01B39/18
US-10375891-B2,A01B39/18
US-10375891-B2,A01B39/18
AT-A720679-A,A01B33/106
NL-7909063-A,A01B33/103
US-469659-A,A01B35/08
CN-107072143-A,A01B35/225
CN-107072143-A,A01B35/225
CN-107072143-A,A01B35/225
CN-107094377-A,A01B33/08
CN-107094377-A,A01B33/144
CN-108289407-A,A01B33/16
CN-108289407-A,A01B33/16
CN-108289407-A,A01B35/32
PL-440426-A1,A01B33/00
PL-440426-A1,A01B33/021
PL-440426-A1,A01B33/02
PL-440426-A1,A01B33/04
BE-1007083-A5,A01B39/16
BE-1007083-A5,A01B39/26
CN-116671357-A,A01B39/085
CN-116671357-A,A01B39/22
CN-116671357-A,A01B39/20
GB-2039201-B,A01B33/106
KR-900006618-B1,A01B33/14
DE-102017102683-A1,A01B35/18
KR-101378314-B1,A01B33/082
KR-102593393-B1,A01B33/082
KR-102593393-B1,A01B33/082
KR-102484290-B1,A01B33/14
KR-102484290-B1,A01B35/28
KR-102484290-B1,A01B33/14
KR-102484290-B1,A01B35/28
US-130700-A,A01B35/08
FR-960102-A,A01B33/087
FR-960102-A,A01B33/082
US-5267618-A,A01B3/46
US-5267618-A,A01B3/46
KR-100191418-B1,A01B35/28
KR-100191418-B1,A01B35/18
KR-20130063834-A,A01B39/18
DE-140654-C,A01B3/12
US-694931-A,A01B3/08
CN-109392332-A,A01B35/20
CN-109392332-A,A01B35/26
DE-463858-C,A01B35/04
CA-2945250-A1,A01B33/106
CA-2945250-A1,A01B33/106
EP-3586579-A1,A01B33/087
EP-3586579-A1,A01B37/00
US-2024164239-A1,A01B35/08
US-2024164239-A1,A01B35/08
US-2024164239-A1,A01B35/08
FR-2287837-B1,A01B33/024
FR-2287837-B1,A01B33/08
FR-2287837-B1,A01B33/021
FR-2287837-B1,A01B33/08
FR-2287837-B1,A01B33/021
FR-2287837-B1,A01B33/024
KR-20010029583-A,A01B33/00
CN-105325075-A,A01B33/103
CN-105325075-A,A01B33/024
CN-109005687-A,A01B33/065
CN-109005687-A,A01B33/082
CN-109005687-A,A01B33/08
KR-200487998-Y1,A01B39/18
BE-727862-A,A01B33/021
US-1636048-A,A01B35/24
US-1636048-A,A01B35/24
CN-113761309-A,A01B39/16
CN-113761309-A,A01B39/26
CN-113761309-A,A01B39/20
US-2019324472-A1,A01B39/18
DE-102010019819-B4,A01B3/464
BE-826346-A,A01B33/106
BE-826346-A,A01B33/106
KR-200386017-Y1,A01B3/28
RU-191537-U1,A01B35/20
US-231385-A,A01B33/065
KR-20020000597-A,A01B35/22
CN-114651538-A,A01B39/22
CN-114651538-A,A01B39/18
CN-114651538-A,A01B39/085
IT-8519066-A1,A01B33/065
IT-8519066-A1,A01B33/106
US-2888084-A,A01B33/06
US-1545136-A,A01B39/26
US-1545136-A,A01B39/26
JP-6998053-B2,A01B39/18
JP-6998053-B2,A01B39/18
AU-2016269849-A1,A01B39/18
AU-2016269849-A1,A01B39/18
AU-2002301383-B2,A01B35/225
AU-2002301383-B2,A01B35/225
GB-2090713-B,A01B35/12
GB-2090713-B,A01B39/10
GB-2090713-B,A01B35/12
GB-2090713-B,A01B39/10
DE-829523-C,A01B3/32
CN-100366901-C,A01B33/021
US-2843032-A,A01B39/14
US-2843032-A,A01B39/14
US-1860534-A,A01B3/50
US-1860534-A,A01B3/50
US-501724-A,A01B3/464
US-2784656-A,A01B35/14
US-2784656-A,A01B35/14
US-2039702-A,A01B39/19
US-2039702-A,A01B39/19
AU-7115874-A,A01B35/26
GB-436304-A,A01B35/16
GB-4363
Query:
SELECT t."publication_number", f.value:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,cpc_code
US-2005045936-A1,H01L29/66181
US-2005045936-A1,H10B12/485
US-2005045936-A1,H10B12/373
US-2005045936-A1,H10B12/0383
US-2005045936-A1,H10B12/0387
US-2005045936-A1,H10B12/0385
US-2005045936-A1,H10B12/053
US-2005045936-A1,H10B12/0383
US-2005045936-A1,H10B12/0385
US-2005045936-A1,H01L29/66181
US-2005045936-A1,H10B12/373
US-2005045936-A1,H10B12/485
US-2005045936-A1,H10B12/053
US-2005045936-A1,H10B12/0387
US-2005161955-A1,E05B65/006
US-2005161955-A1,E05B65/006
US-2005161955-A1,E05B35/008
US-2005161955-A1,E05C19/007
US-2005161955-A1,Y10T292/1039
US-2005161955-A1,Y10T292/1039
US-2005161955-A1,E05C19/007
US-2005161955-A1,E05B35/008
US-2005004167-A1,A61P9/10
US-2005004167-A1,A61P7/02
US-2005004167-A1,A61P7/04
US-2005004167-A1,A61P3/08
US-2005004167-A1,A61P3/10
US-2005004167-A1,A61P43/00
US-2005004167-A1,A61P25/00
US-2005004167-A1,A61P27/16
US-2005004167-A1,A61P25/30
US-2005004167-A1,A61P25/16
US-2005004167-A1,A61P25/18
US-2005004167-A1,A61P25/04
US-2005004167-A1,A61P25/02
US-2005004167-A1,A61P27/06
US-2005004167-A1,A61P25/28
US-2005004167-A1,A61P25/06
US-2005004167-A1,A61P27/02
US-2005004167-A1,A61P25/22
US-2005004167-A1,A61P13/00
US-2005004167-A1,C07D215/48
US-2005004167-A1,C07D307/91
US-2005004167-A1,C07D307/79
US-2005004167-A1,C07D209/08
US-2005004167-A1,C07D209/30
US-2005004167-A1,C07C311/49
US-2005004167-A1,C07D215/50
US-2005004167-A1,C07D307/84
US-2005004167-A1,C07D307/92
US-2005004167-A1,C07D209/88
US-2005004167-A1,C07D307/92
US-2005004167-A1,C07D209/30
US-2005004167-A1,C07D307/79
US-2005004167-A1,C07D215/50
US-2005004167-A1,C07D307/84
US-2005004167-A1,C07D215/48
US-2005004167-A1,C07D307/91
US-2005004167-A1,C07D209/08
US-2005004167-A1,C07C311/49
US-2005004167-A1,C07D209/88
US-2004184410-A1,H04L1/24
US-2004184410-A1,H04L1/24
US-2004184410-A1,H04M3/22
US-2005173137-A1,A01B63/32
US-2005173137-A1,A01B63/32
US-2005173610-A1,A01K97/10
US-2005173610-A1,A01K97/10
US-2004165264-A1,H04N13/31
US-2004165264-A1,G02B30/34
US-2004165264-A1,G02B30/34
US-2004165264-A1,H04N13/31
US-2004166920-A1,G07F17/329
US-2004166920-A1,G07F17/3267
US-2004166920-A1,G07F17/3267
US-2004166920-A1,G07F17/3202
US-2004166920-A1,G07F17/3216
US-2004166920-A1,G07F17/3202
US-2004166920-A1,G07F17/3258
US-2004166920-A1,G07F17/3216
US-2004166920-A1,G07F17/3258
US-2004166920-A1,G07F17/329
US-2004217600-A1,Y10T292/1041
US-2004217600-A1,E05C19/003
US-2004217600-A1,Y10T292/1041
US-2004217600-A1,E05C19/003
US-2004200764-A1,Y10T137/86292
US-2004200764-A1,B01D36/001
US-2004200764-A1,B01D36/001
US-2004200764-A1,Y10T137/86292
US-2005079513-A1,C12Q2600/106
US-2005079513-A1,C12Q1/6886
US-2005079513-A1,C12Q1/6886
US-2005079513-A1,C12Q2600/118
US-2005079513-A1,G01N33/57426
US-2005079513-A1,C12Q2600/118
US-2005079513-A1,C12Q2600/16
US-2005079513-A1,G01N33/57426
US-2005079513-A1,C12Q2600/16
US-2005079513-A1,C12Q2600/106
US-2005036729-A1,G02B6/12004
US-2005036729-A1,G02B6/1342
US-2005036729-A1,H01S5/0265
US-2005036729-A1,H01S5/3072
US-2005036729-A1,G02B6/1342
US-2005036729-A1,G02B6/12004
US-2005036729-A1,G02B6/12
US-2005036729-A1,H01S5/3072
US-2005036729-A1,H01S5/0265
US-2004178870-A1,F02N2300/102
US-2004178870-A1,H01H50/543
US-2004178870-A1,H01H51/065
US-2004178870-A1,F02N2300/102
US-2004178870-A1,F02N15/067
US-2004178870-A1,H01H51/065
US-2004178870-A1,F02N15/067
US-2004178870-A1,H01H50/543
US-2004183874-A1,C09D11/30
US-2004183874-A1,B41J2/17533
US-2004183874-A1,B41J2/17513
US-2004183874-A1,C09D11/30
US-2004183874-A1,B41J2/17533
US-2004183874-A1,B41J2/17513
US-2005205558-A1,G03G15/2042
US-2005205558-A1,H05B6/145
US-2005205558-A1,G03G15/2042
US-2005205558-A1,H05B6/145
US-2004222956-A1,G09G2320/0271
US-2004222956-A1,G09G3/3611
US-2004222956-A1,G09G2320/0271
US-2004222956-A1,G09G2310/061
US-2004222956-A1,G09G2320/0252
US-2004222956-A1,G09G2310/061
US-2004222956-A1,G09G2320/0252
US-2004222956-A1,G09G3/3611
US-2004214959-A1,C08G69/44
US-2004214959-A1,C08G69/44
US-2004214959-A1,C08G63/916
US-2004214959-A1,C08G77/388
US-2004214959-A1,C08G77/445
US-2004214959-A1,C08G77/455
US-2004214959-A1,C08L63/00
US-2004214959-A1,H05K1/0346
US-2004214959-A1,C08G77/445
US-2004214959-A1,H05K1/0346
US-2004214959-A1,C08G63/916
US-2004214959-A1,C08G77/388
US-2004214959-A1,C08G77/455
US-2004214959-A1,C08L63/00
US-2004222053-A1,F16D65/0977
US-2004222053-A1,F16D2127/02
US-2004222053-A1,F16D2127/02
US-2004222053-A1,F16D65/0977
US-2005116792-A1,H01P3/003
US-2005116792-A1,H01P1/181
US-2005116792-A1,H01P5/04
US-2005116792-A1,H01P1/181
US-2005116792-A1,H01P3/003
US-2005226087-A1,G11C8/06
US-2005226087-A1,G11C8/06
US-2005234846-A1,G06F3/0667
US-2005234846-A1,G06F9/50
US-2005234846-A1,G06F16/355
US-2005234846-A1,G06F3/1213
US-2005234846-A1,G06F9/455
US-2005234846-A1,G06F9/4416
US-2005234846-A1,G06F9/4401
US-2005234846-A1,G06F9/06
US-2005234846-A1,G06F15/16
US-2005234846-A1,G06F16/182
US-2005234846-A1,G06F9/4416
US-2005234846-A1,G06F9/4416
US-2005234846-A1,Y10S707/99931
US-2004197466-A1,B05C5/0262
US-2004197466-A1,B05C5/0254
US-2004197466-A1,B05C5/0262
US-2004197466-A1,B05C5/0254
Query:
SELECT f.value
   FROM PATENTS.PATENTS.PUBLICATIONS t,
        LATERAL FLATTEN(input => t."assignee") f
   LIMIT 1000;
Answer:
Too long, hard cut:
VALUE
"""Norwegian University Of Science And Technology (Ntnu)"""
"""Boe Technology Group Co., Ltd."""
"""K-Tronics (Su Zhou) Technology Co., Ltd."""
"""Egalax_Empia Technology Inc."""
"""Google Technology Holdings LLC"""
"""Tracfone Wireless, Inc."""
"""Microsoft Technology Licensing, Llc"""
"""L'oréal"""
"""Bryan Lochman"""
"""Thomas Liu"""
"""Matthew SAUTER"""
"""Bien Chann"""
"""Robin Huang"""
"""Parviz Tayebati"""
"""Michael Deutsch"""
"""Nicholas J. Singer"""
"""Adobe Systems Incorporated"""
"""Cnh Industrial Canada, Ltd."""
"""Fives Machining Systems, Inc."""
"""Edgewell Personal Care Brands, Llc"""
"""Delcor Asset Corporation"""
"""Conor Collins"""
"""Rolls-Royce Plc"""
"""Apple Inc."""
"""Xtl Biopharmaceuticals Ltd."""
"""Advanced Electrical Tools"""
"""Time Warner Cable Enterprises Llc"""
"""Samsung Electronics Co., Ltd."""
"""Game Your Game, Inc."""
"""Taiwan Semiconductor Manufacturing Co., Ltd."""
"""Apple Inc."""
"""Arog Pharmaceuticals, Inc."""
"""Solaredge Technologies Ltd."""
"""Stulz Air Technology Systems, Inc."""
"""Intel Corporation"""
"""X-Cardio Corp. Kk"""
"""Meyer Burger (Germany) Gmbh"""
"""Wuhan China Star Optoelectronics Semiconductor Display Technology Co., Ltd."""
"""Continental Intelligent Transportation Systems, LLC"""
"""Trw Limited"""
"""Commissariat à I'énergie atomique et aux énergies alternatives"""
"""Robert Bosch Gmbh"""
"""Guangzhou Hairma Chemical (Gz) Ltd."""
"""Intel IP Corporation"""
"""Maxim Integrated Products, Inc."""
"""José Neves Costa Pinheiro"""
"""Blackberry Limited"""
"""Services Medicaux Arnold Et Joan Zidulka Inc."""
"""Next It Corporation"""
"""Nusirt Sciences, Inc."""
"""Baidu Online Network Technology (Beijing) Co., Ltd."""
"""Qualcomm Incorporated"""
"""Michael A. Silveri"""
"""Salesforce.Com, Inc."""
"""Silicon Works Co., Ltd."""
"""Western Digital Technologies, Inc."""
"""International Business Machines Corporation"""
"""Railserve, Inc."""
"""Wacom Co., Ltd."""
"""Bell Helicopter Textron Inc."""
"""Evoqua Water Technologies Llc"""
"""Shehkai Precision Co., Ltd."""
"""Arlene Saunders"""
"""Tokyo Electron Limited"""
"""Premia Spine Ltd."""
"""Globus Medical, Inc."""
"""Genome Research Limited"""
"""Winston Yang"""
"""Toshiba Memory Corporation"""
"""Albert Chen"""
"""GE Precision Healthcare LLC"""
"""Mohammad A. Abdallah"""
"""Commscope Technologies Llc"""
"""Renesas Electronics Corporation"""
"""Honda Motor Co., Ltd"""
"""International Business Machines Corporation"""
"""Sportsfield Intellectual, Llc"""
"""Eaton Intelligent Power Limited"""
"""Robert Allen Morrison, SR."""
"""Yazaki Corporation"""
"""Delta Screen & Filtration, Llc"""
"""Taiwan Semiconductor Manufacturing Company, Ltd."""
"""Semiconductor Manufacturing International (Shanghai) Corporation"""
"""Semiconductor Manufacturing International (Beijing) Corporation"""
"""Sun Patent Trust"""
"""Micron Technology, Inc."""
"""Toshiba Tec Kabushiki Kaisha"""
"""Alps Electric Korea Co., Ltd."""
"""Hyundai Motor Company"""
"""Kia Motors Corporation"""
"""Hyundai Mobis Co., Ltd."""
"""Hyundai Mobis Co., Ltd."""
"""Magic Leap, Inc."""
"""Wei Hao Liao"""
"""Turner Broadcasting System, Inc."""
"""Ngm Biopharmaceuticals, Inc."""
"""Monsanto Technology Llc"""
"""International Business Machines Corporation"""
"""OOO NPO \""Metally Urala\"""""
"""IP GERASIMOV Aleksej Leonidovich"""
"""Steven L. BASTA"""
"""Clifford T. Jue"""
"""Gregory P. MARECEK"""
"""Ross Jaffe"""
"""Philip W. LONG"""
"""Babu S. Rahman"""
"""Amanda Williams"""
"""Qualcomm Incorporated"""
"""Jing Zheng"""
"""Hestan Commercial Corporation"""
"""Daifuku Co., Ltd."""
"""Sap Se"""
"""Ford Global Technologies, Llc"""
"""Getac Technology Corporation"""
"""Exxonmobil Research And Engineering Company"""
"""Massachusets Institute Of Technology"""
"""Siemens Aktiengesellschaft"""
"""Lpe S.P.A."""
"""Mie University"""
"""Kyoto University"""
"""Qatar University"""
"""Smaluet Solutions Private Limited"""
"""Michael Wayne Tang"""
"""Sensel Inc."""
"""John Richard Emert"""
"""Toshiba Memory Corporation"""
"""Mike Petrich"""
"""King Saud University"""
"""Dish Network L.L.C."""
"""Beijing Jingdong Shangke Information Technology Co., Ltd."""
"""JD.com American Technologies Corporation"""
"""Intel Corporation"""
"""Salesforce.Com, Inc."""
"""Samsung Electronics Co., Ltd."""
"""The Johns Hopkins University"""
"""Arkray, Inc."""
"""Henkel Ag & Co. Kgaa"""
"""Beijing Sensetime Technology Development Co., Ltd."""
"""International Business Machines Corporation"""
"""United Microelectronics Corp."""
"""Fujian Jinhua Integrated Circuit Co., Ltd."""
"""Chien-Ting Lin"""
"""Man Energy Solutions Se"""
"""Louisiana-Pacific Corporation"""
"""AOI (Advanced Oilfield Innovations, Inc.)"""
"""Schaeffler Technologies AG & Co. KG"""
"""Microsoft Technology Licensing, Llc"""
"""Idemia Identity & Security USA LLC"""
"""Adidas Ag"""
"""Innolux Corporation"""
"""Ossia Inc."""
"""Texas Instruments Incorporated"""
"""Caterpillar Inc."""
"""Fujifilm Corporation"""
"""Pratt & Whit
Query:
SELECT t."publication_number", f.value:"code"::STRING AS "cpc_code"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") f
WHERE f.value:"code"::STRING LIKE 'A01B%'
LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,cpc_code
US-2022067121-A1,A01B79/005
PL-440426-A1,A01B33/00
PL-440426-A1,A01B33/021
PL-440426-A1,A01B33/02
PL-440426-A1,A01B33/04
PL-440426-A1,A01B29/04
DE-19921957-A1,A01B63/32
DE-19921957-A1,A01B63/10
DE-19921957-A1,A01B73/02
JP-WO2023127437-A1,A01B69/00
US-2754647-A,A01B63/22
US-2754647-A,A01B63/22
US-2438224-A,A01B41/06
US-2438224-A,A01B41/06
US-213489-A,A01B19/02
US-231385-A,A01B33/065
US-295613-A,A01B63/04
BE-505818-A,A01B63/023
BE-505818-A,A01B59/065
AU-4190785-A,A01B69/024
AU-4190785-A,A01B69/024
US-4046203-A,A01B73/044
US-4046203-A,A01B73/044
CH-652886-A5,A01B1/16
BE-1007083-A5,A01B39/16
BE-1007083-A5,A01B39/26
US-1093294-A,A01B3/10
KR-20070101567-A,A01B33/146
KR-20070101567-A,A01B33/06
KR-20110056601-A,A01B59/04
KR-20110056601-A,A01B45/00
CN-105794484-A,A01B79/02
CN-106171108-A,A01B79/02
CN-106718602-A,A01B79/02
CN-108012790-A,A01B79/02
CN-109168379-A,A01B77/00
KR-101649538-B1,A01B71/00
KR-101649538-B1,A01B69/00
KR-101649538-B1,A01B69/00
KR-101649538-B1,A01B71/00
AU-497967-B2,A01B11/00
AU-497967-B2,A01B13/08
US-8504252-B2,A01B79/005
US-8504252-B2,A01B79/005
US-159642-A,A01B35/08
US-231306-A,A01B1/20
US-284062-A,A01B15/02
US-395573-A,A01B35/26
US-478158-A,A01B17/002
US-3643839-A,A01B69/024
US-3643839-A,A01B69/024
AU-2018273793-A1,A01B63/111
AU-2018273793-A1,A01B15/16
AU-2018273793-A1,A01B15/18
AU-2018273793-A1,A01B23/06
AU-2018273793-A1,A01B15/18
US-237056-A,A01B1/14
US-237056-A,A01B1/14
US-290366-A,A01B35/22
US-3817333-A,A01B69/006
US-3817333-A,A01B15/145
US-3817333-A,A01B15/145
US-3817333-A,A01B69/006
US-2271354-A,A01B15/16
US-2271354-A,A01B15/16
US-1606132-A,A01B63/18
US-1606132-A,A01B63/18
US-3963079-A,A01B35/18
US-3963079-A,A01B39/14
US-3963079-A,A01B39/14
US-3963079-A,A01B35/18
US-2440581-A,A01B63/28
US-2440581-A,A01B63/28
US-2440581-A,A01B63/08
US-2440581-A,A01B63/08
WO-2021244594-A1,A01B69/008
PL-3598883-T3,A01B23/02
CA-2543900-A1,A01B33/103
CA-2543900-A1,A01B33/103
US-1082418-A,A01B41/04
US-295124-A,A01B49/027
US-89634-A,A01B1/08
US-220177-A,A01B35/18
US-3054462-A,A01B35/12
US-3054462-A,A01B61/00
US-3054462-A,A01B35/12
US-3054462-A,A01B63/145
US-3054462-A,A01B63/145
US-3054462-A,A01B5/00
US-3054462-A,A01B61/00
US-3054462-A,A01B5/00
US-1009439-A,A01B13/16
US-2309266-A,A01B1/14
US-2309266-A,A01B1/14
US-1047644-A,A01B69/008
BE-438953-A,A01B1/02
US-742202-A,A01B69/024
FR-508965-A,A01B3/30
FR-508965-A,A01B3/18
US-3439748-A,A01B61/044
US-3439748-A,A01B61/044
US-139966-A,A01B41/04
US-2021352844-A1,A01B63/11
US-2021352844-A1,A01B63/11
US-2021352844-A1,A01B63/11
US-2021289723-A1,A01B79/005
US-2021289723-A1,A01B79/005
AU-2002301383-B2,A01B35/225
AU-2002301383-B2,A01B35/225
KR-900006618-B1,A01B33/14
US-2008196373-A1,A01B45/026
US-2008196373-A1,A01B45/026
US-1973988-A,A01B19/02
US-1973988-A,A01B19/02
US-2269981-A,A01B61/02
US-2269981-A,A01B61/02
US-552165-A,A01B59/02
US-91161-A,A01B45/00
US-797874-A,A01B21/083
US-11197412-B2,A01B49/06
US-11197412-B2,A01B63/008
US-11197412-B2,A01B76/00
US-11197412-B2,A01B49/06
US-11197412-B2,A01B76/00
US-11197412-B2,A01B63/008
RU-2716419-C1,A01B79/02
RU-2716419-C1,A01B49/06
RU-186558-U1,A01B49/06
US-11188098-B2,A01B69/008
US-11188098-B2,A01B69/008
US-11188098-B2,A01B69/008
US-292639-A,A01B13/08
US-2598959-A,A01B23/046
US-2598959-A,A01B23/046
AR-012600-A1,A01B79/005
AR-012600-A1,A01B79/005
AR-012600-A1,A01B69/008
AR-012600-A1,A01B69/008
CA-2199335-A1,A01B61/046
US-2008006417-A1,A01B15/16
US-2008006417-A1,A01B15/16
CN-114097326-A,A01B43/00
US-2005173137-A1,A01B63/32
US-2005173137-A1,A01B63/32
DE-102004042897-A1,A01B1/14
DE-102004042897-A1,A01B1/065
DE-102020117911-A1,A01B79/005
DE-102020117911-A1,A01B69/008
WO-2018172461-A1,A01B29/043
WO-2018172461-A1,A01B29/06
DE-102019211496-A1,A01B59/043
DE-102019211496-A1,A01B63/008
DE-102019211496-A1,A01B49/027
DE-102019211496-A1,A01B63/32
DE-102019211496-A1,A01B29/02
DE-102019211496-A1,A01B21/04
DE-102019211496-A1,A01B73/044
DE-102019211496-A1,A01B59/043
DE-102019211496-A1,A01B59/041
DE-102019211496-A1,A01B69/004
US-128588-A,A01B29/041
US-1538757-A,A01B59/042
US-1538757-A,A01B59/042
US-2019369-A,A01B19/02
US-2019369-A,A01B19/02
AT-A887678-A,A01B45/026
BE-872468-A,A01B33/065
BE-872468-A,A01B33/16
BE-872468-A,A01B33/12
CA-983309-A,A01B59/062
CA-983309-A,A01B59/062
AU-7308996-A,A01B15/145
US-11175254-B2,A01B79/005
US-11175254-B2,A01B47/00
US-11175254-B2,A01B79/005
US-11175254-B2,A01B47/00
US-11175254-B2,A01B79/005
US-11175254-B2,A01B47/00
US-483311-A,A01B15/10
US-483311-A,A01B15/10
US-527362-A,A01B59/065
US-2473800-A,A01B71/06
US-2473800-A,A01B71/06
FR-1175885-A,A01B51/026
GB-999969-A,A01B15/08
US-2306127-A,A01B21/08
US-2306127-A,A01B21/08
NL-299535-A,A01B23/02
US-2843032-A,A01B39/14
US-2843032-A,A01B39/14
US-1860534-A,A01B3/50
US-1860534-A,A01B3/50
US-501724-A,A01B3/464
US-2784656-A,A01B59/063
US-2784656-A,A01B59/063
US-2784656-A,A01B35/14
US-2784656-A,A01B35/14
US-2039702-A,A01B39/19
US-2039702-A,A01B39/19
US-194108-A,A01B63/023
CH-389304-A,A01B71/00
AU-7115874-A,A01B79/00
AU-7115874-A,A01B35/26
GB-436304-A,A01B35
Query:
SELECT t."publication_date"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."publication_date" IS NOT NULL
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_date
19980507
19991217
18920810
19830217
19900828
19910910
19870715
18370928
19501031
19810215
19860115
19860415
19730213
19740709
19730213
18780805
18910815
19731015
19670415
18950131
18950715
18950915
0
19630802
19660708
19670324
19670428
19670623
19670707
19680105
19620404
19610802
19300507
19410228
19870529
19840713
19920807
19781020
19861107
19920330
19870713
19940719
20180509
19850331
19880630
19780530
19820927
19850131
19891218
19950315
18460702
19801118
18490410
18520511
19810430
19991122
19891231
19820831
19761115
19880915
19860215
19820715
19830315
19840315
19810515
19920915
19880115
19870115
19760715
19880615
19760315
19791015
19780315
19820915
19800815
19750915
19861015
19740306
19740215
19740731
19750616
19750616
19760116
19760705
19760514
19760716
19770316
19770718
19770801
19771201
19780525
19781106
19781213
19790112
19781116
19790420
19790710
19800118
19810116
19520315
19620629
19591116
19591231
19600301
19600602
19601118
19600916
19620115
19620820
19640611
19641030
19670615
19710401
19710527
19720117
19720818
19720616
19720901
19721219
19751209
19730123
19730220
19740618
19740122
19740806
19750617
19741105
19750318
19750708
19750916
19750701
18821218
19770118
19761019
18830614
19770517
19770405
19770125
19770412
18840125
19760817
19770301
19770705
18840809
19780418
19770419
19790306
19790102
19790724
19780110
18860327
18860628
19770308
19810210
19790313
19790501
19790123
19800909
19800902
19791127
19810217
18870723
19801104
18871209
18880204
19801021
19800226
19811215
18880901
19810324
18890619
19801230
19831025
19820420
19830111
19830712
19811020
19830426
19820622
18910404
19821116
19830927
19840131
19841016
19841120
19840228
19850625
19850514
19860729
19851008
19850430
18930208
19860930
19850806
19851203
19870113
19860520
19870707
18930620
19860624
19871201
19880315
19870317
19871020
19880913
19860805
19891121
19880524
19871006
19890411
19900313
19880906
19900925
19891205
19900703
19891024
19000406
19021021
19021202
19030407
19040216
19040412
19040823
19050912
19640531
18960715
18960615
18971115
19710228
18980331
18980615
18981130
18981231
19000731
19010515
19630629
19660115
19030215
19640615
19651115
19650131
19050228
19050315
19050531
19720131
19650731
19731115
19061215
19070415
19081001
19720630
19091001
19730515
19680915
19120102
19120316
19701115
19640715
19650615
19130716
19730715
19730831
19141016
19680430
19741015
19680115
19160901
19700515
19690415
19711130
19690531
19201001
19201216
19230102
19700715
19850308
19870116
0
0
0
0
0
0
0
0
19771008
19771123
19751122
19830117
19770831
19780309
19880215
19850607
19461209
19320122
19490810
19530310
19560110
19870207
19890125
19680614
19680816
19610113
19610630
19621207
19630809
19630517
0
19641106
19650205
19650402
19650528
19651029
19381024
19551123
19340718
19250101
19380909
19550803
19470624
19200722
19541117
19630808
19550316
19530909
19650127
19671206
19590521
19460308
19490726
19550202
19620426
19711124
19540811
19950130
19861029
19870227
19900728
19970925
19990225
20000706
19870721
19770715
19820720
19960723
19780801
19870717
19840723
19840724
19970722
19890718
19730928
19990727
19990223
19880716
19840724
19940802
19860725
19950808
19840724
19841024
19960723
19960730
19800723
19830719
20000725
19780807
19870720
19760714
19860726
19731013
19920825
19790804
19750808
19850817
19790803
19830723
19871208
19880718
19950808
19971003
19770805
19760903
19790808
19930806
19731017
19900112
19990727
19950815
19990806
19960809
19940809
19880725
19880727
19820803
19950818
19981020
19880122
19951211
18540606
18560715
19151221
18571124
18580608
18600710
18631020
18631208
19880607
18650502
19940816
19361201
18670305
18670326
18671119
19630416
19490913
18681006
18681020
18690817
19890307
19821031
19940610
19861231
19750630
19830228
19821031
19820225
19840229
19820618
20041015
20000522
19970619
19830728
19970619
19970811
19950904
19880908
19880915
20010213
19920817
20000522
19880926
19771117
19950710
19950717
19980917
20000807
19780413
19840405
19971017
19930304
19930218
19970922
19980908
19991007
19930304
20010709
19970902
19951110
19840712
19840816
19990920
19930405
19951221
19951221
19790201
20000914
19971126
19930901
19890817
20000829
19850103
20001109
20000801
19890825
20000825
19980121
19930728
19790913
19850926
19960617
19690918
19730503
19980306
20000807
19940315
19991025
20011015
19900111
19960502
19780928
19931005
20001102
19930729
19800313
19941108
19991123
19991213
19851017
19960626
20000110
20001117
19900402
19790726
20001102
19940131
19791018
19740214
19900531
19980505
19960904
20001121
19800207
19791220
20000201
19900726
19900801
19740620
19800228
20001205
19860603
19860619
19961023
19960821
19901022
19740829
19800612
20010222
19980803
19940804
20000314
20001228
19901122
20010109
20010102
19800828
19730809
19970220
19980903
19810813
19741212
19801120
20000314
20000321
19910117
19750123
19811224
19961230
20010205
20010130
19861127
19870430
19910307
19810219
19810409
19910408
20000403
20001214
19980825
20000417
19910418
1991
Query:
SELECT TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') AS "publication_date_formatted"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_date_formatted
1998-05-07
1999-12-17
1892-08-10
1983-02-17
1990-08-28
1991-09-10
1987-07-15
1837-09-28
1950-10-31
1981-02-15
1986-01-15
1986-04-15
1973-02-13
1974-07-09
1973-02-13
1878-08-05
1891-08-15
1973-10-15
1967-04-15
1895-01-31
1895-07-15
1895-09-15
""
1963-08-02
1966-07-08
1967-03-24
1967-04-28
1967-06-23
1967-07-07
1968-01-05
1962-04-04
1961-08-02
1930-05-07
1941-02-28
1987-05-29
1984-07-13
1992-08-07
1978-10-20
1986-11-07
1992-03-30
1987-07-13
1994-07-19
2018-05-09
1985-03-31
1988-06-30
1978-05-30
1982-09-27
1985-01-31
1989-12-18
1995-03-15
1846-07-02
1980-11-18
1849-04-10
1852-05-11
1981-04-30
1999-11-22
1989-12-31
1982-08-31
1976-11-15
1988-09-15
1986-02-15
1982-07-15
1983-03-15
1984-03-15
1981-05-15
1992-09-15
1988-01-15
1987-01-15
1976-07-15
1988-06-15
1976-03-15
1979-10-15
1978-03-15
1982-09-15
1980-08-15
1975-09-15
1986-10-15
1974-03-06
1974-02-15
1974-07-31
1975-06-16
1975-06-16
1976-01-16
1976-07-05
1976-05-14
1976-07-16
1977-03-16
1977-07-18
1977-08-01
1977-12-01
1978-05-25
1978-11-06
1978-12-13
1979-01-12
1978-11-16
1979-04-20
1979-07-10
1980-01-18
1981-01-16
1952-03-15
1962-06-29
1959-11-16
1959-12-31
1960-03-01
1960-06-02
1960-11-18
1960-09-16
1962-01-15
1962-08-20
1964-06-11
1964-10-30
1967-06-15
1971-04-01
1971-05-27
1972-01-17
1972-08-18
1972-06-16
1972-09-01
1972-12-19
1975-12-09
1973-01-23
1973-02-20
1974-06-18
1974-01-22
1974-08-06
1975-06-17
1974-11-05
1975-03-18
1975-07-08
1975-09-16
1975-07-01
1882-12-18
1977-01-18
1976-10-19
1883-06-14
1977-05-17
1977-04-05
1977-01-25
1977-04-12
1884-01-25
1976-08-17
1977-03-01
1977-07-05
1884-08-09
1978-04-18
1977-04-19
1979-03-06
1979-01-02
1979-07-24
1978-01-10
1886-03-27
1886-06-28
1977-03-08
1981-02-10
1979-03-13
1979-05-01
1979-01-23
1980-09-09
1980-09-02
1979-11-27
1981-02-17
1887-07-23
1980-11-04
1887-12-09
1888-02-04
1980-10-21
1980-02-26
1981-12-15
1888-09-01
1981-03-24
1889-06-19
1980-12-30
1983-10-25
1982-04-20
1983-01-11
1983-07-12
1981-10-20
1983-04-26
1982-06-22
1891-04-04
1982-11-16
1983-09-27
1984-01-31
1984-10-16
1984-11-20
1984-02-28
1985-06-25
1985-05-14
1986-07-29
1985-10-08
1985-04-30
1893-02-08
1986-09-30
1985-08-06
1985-12-03
1987-01-13
1986-05-20
1987-07-07
1893-06-20
1986-06-24
1987-12-01
1988-03-15
1987-03-17
1987-10-20
1988-09-13
1986-08-05
1989-11-21
1988-05-24
1987-10-06
1989-04-11
1990-03-13
1988-09-06
1990-09-25
1989-12-05
1990-07-03
1989-10-24
1900-04-06
1902-10-21
1902-12-02
1903-04-07
1904-02-16
1904-04-12
1904-08-23
1905-09-12
1964-05-31
1896-07-15
1896-06-15
1897-11-15
1971-02-28
1898-03-31
1898-06-15
1898-11-30
1898-12-31
1900-07-31
1901-05-15
1963-06-29
1966-01-15
1903-02-15
1964-06-15
1965-11-15
1965-01-31
1905-02-28
1905-03-15
1905-05-31
1972-01-31
1965-07-31
1973-11-15
1906-12-15
1907-04-15
1908-10-01
1972-06-30
1909-10-01
1973-05-15
1968-09-15
1912-01-02
1912-03-16
1970-11-15
1964-07-15
1965-06-15
1913-07-16
1973-07-15
1973-08-31
1914-10-16
1968-04-30
1974-10-15
1968-01-15
1916-09-01
1970-05-15
1969-04-15
1971-11-30
1969-05-31
1920-10-01
1920-12-16
1923-01-02
1970-07-15
1985-03-08
1987-01-16
""
""
""
""
""
""
""
""
1977-10-08
1977-11-23
1975-11-22
1983-01-17
1977-08-31
1978-03-09
1988-02-15
1985-06-07
1946-12-09
1932-01-22
1949-08-10
1953-03-10
1956-01-10
1987-02-07
1989-01-25
1968-06-14
1968-08-16
1961-01-13
1961-06-30
1962-12-07
1963-08-09
1963-05-17
""
1964-11-06
1965-02-05
1965-04-02
1965-05-28
1965-10-29
1938-10-24
1955-11-23
1934-07-18
1925-01-01
1938-09-09
1955-08-03
1947-06-24
1920-07-22
1954-11-17
1963-08-08
1955-03-16
1953-09-09
1965-01-27
1967-12-06
1959-05-21
1946-03-08
1949-07-26
1955-02-02
1962-04-26
1971-11-24
1954-08-11
1995-01-30
1986-10-29
1987-02-27
1990-07-28
1997-09-25
1999-02-25
2000-07-06
1987-07-21
1977-07-15
1982-07-20
1996-07-23
1978-08-01
1987-07-17
1984-07-23
1984-07-24
1997-07-22
1989-07-18
1973-09-28
1999-07-27
1999-02-23
1988-07-16
1984-07-24
1994-08-02
1986-07-25
1995-08-08
1984-07-24
1984-10-24
1996-07-23
1996-07-30
1980-07-23
1983-07-19
2000-07-25
1978-08-07
1987-07-20
1976-07-14
1986-07-26
1973-10-13
1992-08-25
1979-08-04
1975-08-08
1985-08-17
1979-08-03
1983-07-23
1987-12-08
1988-07-18
1995-08-08
1997-10-03
1977-08-05
1976-09-03
1979-08-08
1993-08-06
1973-10-17
1990-01-12
1999-07-27
1995-08-15
1999-08-06
1996-08-09
1994-08-09
1988-07-25
1988-07-27
1982-08-03
1995-08-18
1998-10-20
1988-01-22
1995-12-11
1854-06-06
1856-07-15
1915-12-21
1857-11-24
1858-06-08
1860-07-10
1863-10-20
1863-12-08
1988-06-07
1865-05-02
1994-08-16
1936-12-01
1867-03-05
1867-03-26
1867-11-19
1963-04-16
1949-09-13
1868-10-06
1868-10-20
1869-08-17
1989-03-07
1982-10-31
1994-06-10
1986-12-31
1975-06-30
1983-02-28
1982-10-31
1982-02-25
1984-02-29
1982-06-18
2004-10-15
2000-05-22
1997-06-19
1983-07-28
1997-06-19
1997-08-11
1995-09-04
1988-09-08
1988-09-15
2001-02-13
1992-08-17
2000-05-22
1988-09-26
1977-11-17
1995-07-10
1995-07-17
1998-09-17
2000-08-07
1978-04-13
1984-04-05
1997-10-17
1993-03-04
1993-02-18
1997-09-22
1998-09-08
1999-10-07
1993-03-04
2001-07-09
1997-09-02
1995-11-10
1984
Query:
SELECT t."country_code"
   FROM PATENTS.PATENTS.PUBLICATIONS t
   WHERE t."country_code" IS NOT NULL
   LIMIT 1000;
Answer:
country_code
CR
CR
FI
HK
HU
JP
JP
US
US
AT
AT
AT
CA
CA
CA
CA
CH
CH
CH
CH
CH
CH
DD
FR
FR
FR
FR
FR
FR
FR
GB
GB
GB
GB
HK
HK
HK
HK
HK
HU
JP
JP
MA
OA
OA
PH
PH
PH
PH
TR
US
US
US
US
YU
YU
YU
YU
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
AT
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BR
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CY
CY
DD
DD
DD
DD
DD
DD
DD
DD
DK
DK
DK
DK
DK
DK
DK
DK
FI
FI
FI
FI
FI
FI
FI
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
FR
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
GB
HU
HU
HU
HU
ID
ID
ID
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
JP
LV
MX
TR
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
US
YU
YU
YU
YU
YU
YU
YU
YU
YU
AT
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
AU
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BE
BG
BG
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
BR
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CA
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
CH
Query:
SELECT a.value:"name"::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."assignee") a
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 1000;
Answer:
assignee_name,total_applications
,486926
Query:
SELECT a.value::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") c,
     LATERAL FLATTEN(input => t."assignee") a
WHERE c.value:"code"::STRING LIKE 'A01B3%'
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 3;
Answer:
assignee_name,total_applications
Lely Nv C Van Der,5
Deere & Company,2
Amazonen Werke Dreyer H,2
Query:
SELECT a.value::STRING AS "assignee_name",
       COUNT(DISTINCT t."application_number") AS "total_applications"
FROM PATENTS.PATENTS.PUBLICATIONS t,
     LATERAL FLATTEN(input => t."cpc") c,
     LATERAL FLATTEN(input => t."assignee") a
WHERE c.value:"code"::STRING LIKE 'A01B%'
GROUP BY "assignee_name"
ORDER BY "total_applications" DESC
LIMIT 3;
Answer:
assignee_name,total_applications
Deere & Company,20
Cnh Industrial America Llc,10
Deere & Co,8
End Exploring Related Columns
Task: For patent class A01B3, I want to analyze the information of the top 3 assignees based on the total number of applications. Please provide the following five pieces of information: the name of this assignee,  total number of applications, the year with the most applications, the number of applications in that year, and the country code with the most applications during that year.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
Assignee_Name,Total_Applications,Most_Active_Year,Applications_in_That_Year,Top_Country_Code_in_That_Year
assignee1:str,total_applications1:int,year1:int,applications_in_year1:int,country_code1:str
assignee2:str,total_applications2:int,year2:int,applications_in_year2:int,country_code2:str
assignee3:str,total_applications3:int,year3:int,applications_in_year3:int,country_code3:str
```

This table presents the top 3 assignees in patent class A01B3 based on the total number of applications. For each assignee, it shows their name, the total number of applications they have filed, the year in which they filed the most applications, the number of applications filed in that year, and the country code with the highest number of applications during that year..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS': {'PATENTS': ['CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-19 00:23:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:23:34 - root - INFO - ```sql
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value:"name"::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING LIKE 'A01B3%'
        AND a.value:"name" IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    ORDER BY "total_applications" DESC, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank"=1
),
assignee_country_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        "country_code",
        COUNT(DISTINCT "application_number") AS "applications_in_country"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year", "country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
    JOIN assignee_top_year aty
        ON acc."assignee_name" = aty."assignee_name"
        AND acc."publication_year" = aty."most_active_year"
),
assignee_top_country_final AS (
    SELECT
        "assignee_name",
        "publication_year",
        "country_code" AS "top_country_code"
    FROM assignee_top_country
    WHERE "rank"=1
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country_final atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year"
ORDER BY ta."total_applications" DESC, ta."assignee_name";
```
2025-01-19 00:23:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:23:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:23:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:23:36 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:23:36 - snowflake.connector.connection - INFO - closed
2025-01-19 00:23:36 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:23:37 - root - INFO - itercount: 1
2025-01-19 00:23:37 - root - INFO - No data found for the specified query.

2025-01-19 00:23:37 - root - INFO - Input sql:
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value:"name"::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING LIKE 'A01B3%'
        AND a.value:"name" IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    ORDER BY "total_applications" DESC, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank"=1
),
assignee_country_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        "country_code",
        COUNT(DISTINCT "application_number") AS "applications_in_country"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year", "country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
    JOIN assignee_top_year aty
        ON acc."assignee_name" = aty."assignee_name"
        AND acc."publication_year" = aty."most_active_year"
),
assignee_top_country_final AS (
    SELECT
        "assignee_name",
        "publication_year",
        "country_code" AS "top_country_code"
    FROM assignee_top_country
    WHERE "rank"=1
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country_final atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year"
ORDER BY ta."total_applications" DESC, ta."assignee_name";
The error information is:
 No data found for the specified query.
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.

2025-01-19 00:24:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:24:13 - root - INFO - ```sql
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value:"name"::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING ILIKE 'A01B3%'
        AND a.value:"name" IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        "country_code",
        COUNT(DISTINCT "application_number") AS "applications_in_country"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
          AND "publication_year" IN (SELECT "most_active_year" FROM assignee_top_year WHERE "assignee_name" = class_a01b3."assignee_name")
    GROUP BY "assignee_name", "publication_year", "country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
```
2025-01-19 00:24:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:24:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:24:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:24:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:24:15 - snowflake.connector.connection - INFO - closed
2025-01-19 00:24:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:24:15 - root - INFO - itercount: 2
2025-01-19 00:24:15 - root - INFO - No data found for the specified query.

2025-01-19 00:24:15 - root - INFO - Input sql:
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value:"name"::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING ILIKE 'A01B3%'
        AND a.value:"name" IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        "country_code",
        COUNT(DISTINCT "application_number") AS "applications_in_country"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
          AND "publication_year" IN (SELECT "most_active_year" FROM assignee_top_year WHERE "assignee_name" = class_a01b3."assignee_name")
    GROUP BY "assignee_name", "publication_year", "country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
The error information is:
 No data found for the specified query.

2025-01-19 00:25:12 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:25:12 - root - INFO - Apologies for the confusion earlier. It appears that the CPC codes in the `"cpc"` column are stored under the `"symbol"` key rather than the `"code"` key. This adjustment should yield the desired data.

Here's the corrected SQL query:

```sql
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value:"name"::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"symbol"::STRING ILIKE 'A01B3%'
        AND a.value:"name" IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        c."assignee_name",
        c."publication_year",
        c."country_code",
        COUNT(DISTINCT c."application_number") AS "applications_in_country"
    FROM class_a01b3 c
    JOIN assignee_top_year aty
        ON c."assignee_name" = aty."assignee_name"
        AND c."publication_year" = aty."most_active_year"
    GROUP BY c."assignee_name", c."publication_year", c."country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code" AS "top_country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
WHERE
    atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
```

This query performs the following steps:

1. **`class_a01b3` CTE:** Extracts relevant data for publications in patent class `A01B3%` by looking at the `"symbol"` key in the `"cpc"` column.

2. **`assignee_totals` CTE:** Calculates the total number of applications per assignee.

3. **`top_assignees` CTE:** Retrieves the top 3 assignees based on the total number of applications.

4. **`assignee_year_counts` CTE:** Counts the number of applications per year for the top assignees.

5. **`assignee_most_active_year` CTE:** Determines the most active year for each assignee.

6. **`assignee_country_counts` CTE:** Counts the number of applications per country in the most active year for each assignee.

7. **`assignee_top_country` CTE:** Identifies the top country code with the most applications in that year for each assignee.

8. **Final SELECT:** Retrieves and combines all the required information.

**Note:** The use of `c.value:"symbol"` instead of `c.value:"code"` should resolve the issue of no data being returned.

This query should provide you with the desired information:

```csv
Assignee_Name,Total_Applications,Most_Active_Year,Applications_in_That_Year,Top_Country_Code_in_That_Year
[assignee1], [total_applications1], [year1], [applications_in_year1], [country_code1]
[assignee2], [total_applications2], [year2], [applications_in_year2], [country_code2]
[assignee3], [total_applications3], [year3], [applications_in_year3], [country_code3]
```

Feel free to run this query and let me know if you need further assistance!
2025-01-19 00:25:12 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:25:12 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:25:12 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:25:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 0
2025-01-19 00:25:14 - snowflake.connector.connection - INFO - closed
2025-01-19 00:25:14 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:25:14 - root - INFO - itercount: 3
2025-01-19 00:25:14 - root - INFO - No data found for the specified query.

2025-01-19 00:25:14 - root - INFO - Input sql:
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value:"name"::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"symbol"::STRING ILIKE 'A01B3%'
        AND a.value:"name" IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        c."assignee_name",
        c."publication_year",
        c."country_code",
        COUNT(DISTINCT c."application_number") AS "applications_in_country"
    FROM class_a01b3 c
    JOIN assignee_top_year aty
        ON c."assignee_name" = aty."assignee_name"
        AND c."publication_year" = aty."most_active_year"
    GROUP BY c."assignee_name", c."publication_year", c."country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code" AS "top_country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
WHERE
    atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
The error information is:
 No data found for the specified query.

2025-01-19 00:26:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:26:09 - root - INFO - ```sql
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING ILIKE 'A01B3%'
        AND a.value IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    WHERE "assignee_name" IS NOT NULL
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        c."assignee_name",
        c."publication_year",
        c."country_code",
        COUNT(DISTINCT c."application_number") AS "applications_in_country"
    FROM class_a01b3 c
    JOIN assignee_top_year aty
        ON c."assignee_name" = aty."assignee_name"
        AND c."publication_year" = aty."most_active_year"
    GROUP BY c."assignee_name", c."publication_year", c."country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code" AS "top_country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
```
2025-01-19 00:26:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:26:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:26:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:26:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 00:26:11 - snowflake.connector.connection - INFO - closed
2025-01-19 00:26:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:26:11 - root - INFO - itercount: 4
2025-01-19 00:26:11 - root - INFO - 0
2025-01-19 00:26:11 - root - INFO - results: 
Assignee_Name,Total_Applications,Most_Active_Year,Applications_in_That_Year,Top_Country_Code_in_That_Year
Lely Nv C Van Der,5,1984,1,GB
Amazonen Werke Dreyer H,2,1980,1,AT
Deere & Company,2,2018,1,CA


2025-01-19 00:26:11 - root - INFO - Please check the answer again by reviewing For patent class A01B3, I want to analyze the information of the top 3 assignees based on the total number of applications. Please provide the following five pieces of information: the name of this assignee,  total number of applications, the year with the most applications, the number of applications in that year, and the country code with the most applications during that year., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
Assignee_Name,Total_Applications,Most_Active_Year,Applications_in_That_Year,Top_Country_Code_in_That_Year
assignee1:str,total_applications1:int,year1:int,applications_in_year1:int,country_code1:str
assignee2:str,total_applications2:int,year2:int,applications_in_year2:int,country_code2:str
assignee3:str,total_applications3:int,year3:int,applications_in_year3:int,country_code3:str
```

This table presents the top 3 assignees in patent class A01B3 based on the total number of applications. For each assignee, it shows their name, the total number of applications they have filed, the year in which they filed the most applications, the number of applications filed in that year, and the country code with the highest number of applications during that year. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Assignee_Name,Total_Applications,Most_Active_Year,Applications_in_That_Year,Top_Country_Code_in_That_Year
Lely Nv C Van Der,5,1984,1,GB
Amazonen Werke Dreyer H,2,1980,1,AT
Deere & Company,2,2018,1,CA
Current sql:
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING ILIKE 'A01B3%'
        AND a.value IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    WHERE "assignee_name" IS NOT NULL
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        c."assignee_name",
        c."publication_year",
        c."country_code",
        COUNT(DISTINCT c."application_number") AS "applications_in_country"
    FROM class_a01b3 c
    JOIN assignee_top_year aty
        ON c."assignee_name" = aty."assignee_name"
        AND c."publication_year" = aty."most_active_year"
    GROUP BY c."assignee_name", c."publication_year", c."country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code" AS "top_country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
2025-01-19 00:27:01 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 00:27:01 - root - INFO - ```sql
WITH class_a01b3 AS (
    SELECT
        t."application_number",
        a.value::STRING AS "assignee_name",
        EXTRACT(year FROM TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD')) AS "publication_year",
        t."country_code"
    FROM PATENTS.PATENTS.PUBLICATIONS t,
         LATERAL FLATTEN(input => t."cpc") c,
         LATERAL FLATTEN(input => t."assignee") a
    WHERE c.value:"code"::STRING ILIKE 'A01B3%'
        AND a.value IS NOT NULL
        AND TRY_TO_DATE(t."publication_date"::STRING, 'YYYYMMDD') IS NOT NULL
),
assignee_totals AS (
    SELECT 
        "assignee_name", 
        COUNT(DISTINCT "application_number") AS "total_applications"
    FROM class_a01b3
    GROUP BY "assignee_name"
),
top_assignees AS (
    SELECT "assignee_name", "total_applications"
    FROM assignee_totals
    WHERE "assignee_name" IS NOT NULL
    ORDER BY "total_applications" DESC NULLS LAST, "assignee_name"
    LIMIT 3
),
assignee_year_counts AS (
    SELECT
        "assignee_name",
        "publication_year",
        COUNT(DISTINCT "application_number") AS "applications_in_year"
    FROM class_a01b3
    WHERE "assignee_name" IN (SELECT "assignee_name" FROM top_assignees)
    GROUP BY "assignee_name", "publication_year"
),
assignee_most_active_year AS (
    SELECT
        "assignee_name",
        "publication_year" AS "most_active_year",
        "applications_in_year",
        RANK() OVER(PARTITION BY "assignee_name" ORDER BY "applications_in_year" DESC NULLS LAST, "publication_year") AS "rank"
    FROM assignee_year_counts
),
assignee_top_year AS (
    SELECT *
    FROM assignee_most_active_year
    WHERE "rank" = 1
),
assignee_country_counts AS (
    SELECT
        c."assignee_name",
        c."publication_year",
        c."country_code",
        COUNT(DISTINCT c."application_number") AS "applications_in_country"
    FROM class_a01b3 c
    JOIN assignee_top_year aty
        ON c."assignee_name" = aty."assignee_name"
        AND c."publication_year" = aty."most_active_year"
    GROUP BY c."assignee_name", c."publication_year", c."country_code"
),
assignee_top_country AS (
    SELECT
        acc."assignee_name",
        acc."publication_year",
        acc."country_code" AS "top_country_code",
        acc."applications_in_country",
        RANK() OVER (PARTITION BY acc."assignee_name", acc."publication_year" ORDER BY acc."applications_in_country" DESC NULLS LAST, acc."country_code") AS "rank"
    FROM assignee_country_counts acc
)
SELECT
    ta."assignee_name" AS "Assignee_Name",
    ta."total_applications" AS "Total_Applications",
    aty."most_active_year" AS "Most_Active_Year",
    aty."applications_in_year" AS "Applications_in_That_Year",
    atc."top_country_code" AS "Top_Country_Code_in_That_Year"
FROM
    top_assignees ta
JOIN
    assignee_top_year aty ON ta."assignee_name" = aty."assignee_name"
JOIN
    assignee_top_country atc ON ta."assignee_name" = atc."assignee_name" AND aty."most_active_year" = atc."publication_year" AND atc."rank" = 1
ORDER BY ta."total_applications" DESC NULLS LAST, ta."assignee_name";
```
2025-01-19 00:27:01 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 00:27:01 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 00:27:01 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 00:27:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 3
2025-01-19 00:27:03 - snowflake.connector.connection - INFO - closed
2025-01-19 00:27:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 00:27:03 - root - INFO - itercount: 5
2025-01-19 00:27:03 - root - INFO - 0
2025-01-19 00:27:03 - root - INFO - Total iteration counts: 5
