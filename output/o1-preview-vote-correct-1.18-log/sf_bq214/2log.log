2025-01-19 03:15:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:16:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:16:23 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:16:23 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:16:23 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:16:24 - snowflake.connector.cursor - INFO - Number of results in first chunk: 74
2025-01-19 03:16:24 - snowflake.connector.connection - INFO - closed
2025-01-19 03:16:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:16:25 - root - INFO - SQL:
SELECT DISTINCT "kind_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   LIMIT 1000;
Results:
kind_code
I1
T9
U9
H
H1
T7
B1
S
D2
U8
T3
P
L
V0
A
Y2
T2
C9
P1
R2
U4
B9
A0
E1
C3
A7
K4
Z1
A1
F
C1
T0
A4
T5
U1
B
Y1
K1
R
U
B3
T4
T
T8
A3
K5
E
D0
A2
I4
Y
B8
S1
U3
M
D1
B2
U0
A8
I5
I2
A6
C
A5
P3
P2
R1
B4
C2
C5
H3
A9
T1
Y4

2025-01-19 03:16:25 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:16:25 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:16:25 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:16:26 - snowflake.connector.cursor - INFO - Number of results in first chunk: 17
2025-01-19 03:16:26 - snowflake.connector.connection - INFO - closed
2025-01-19 03:16:26 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:16:26 - root - INFO - SQL:
SELECT DISTINCT "country_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   LIMIT 1000;
Results:
country_code
JP
FI
DK
WO
NL
BE
KR
DE
US
CA
GB
LU
RU
CN
EP
FR
ES

2025-01-19 03:16:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:16:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:16:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:16:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:16:27 - snowflake.connector.connection - INFO - closed
2025-01-19 03:16:28 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:17:34 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:17:34 - root - INFO - ```sql
WITH us_b2_patents AS (
    -- Select US utility patents under B2 classification granted between 2010 and 2014
    SELECT 
        p."publication_number", 
        p."filing_date"::NUMBER AS "filing_date", 
        p."grant_date"::NUMBER AS "grant_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND p."grant_date" BETWEEN 20100101 AND 20141231
        AND p."grant_date" > 0
        AND p."filing_date" > 0
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
), patent_citations AS (
    -- Flatten the cited_by field to get individual citing publication numbers
    SELECT 
        p."publication_number", 
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
), citations_within_month AS (
    -- Join with PUBLICATIONS to get filing dates of citing patents and filter citations within a month
    SELECT 
        p."publication_number",
        COUNT(*) AS "citation_count"
    FROM patent_citations p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON p."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" > 0
        AND (cp."filing_date"::NUMBER - p."patent_filing_date") BETWEEN 0 AND 30
    GROUP BY p."publication_number"
), top_patent AS (
    -- Identify the patent with the most forward citations within a month of its filing date
    SELECT 
        c."publication_number",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
), same_year_patents AS (
    -- Select patents from the same filing year, excluding the top patent
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" > 0
        AND YEAR(p."filing_date"::DATE) = YEAR((SELECT "filing_date"::DATE FROM top_patent))
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
), similarity_scores AS (
    -- Compute similarity scores (dot product of embeddings)
    SELECT 
        s."publication_number",
        SUM(t1."value"::FLOAT * t2."value"::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") t2,
    LATERAL (
        SELECT "seq", "value"
        FROM TABLE(FLATTEN(input => (SELECT "embedding_v1" FROM top_patent)))
    ) t1
    WHERE t1."seq" = t2."seq"
    GROUP BY s."publication_number"
), most_similar_patent AS (
    -- Identify the most similar patent
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
-- Final result
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:17:34 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:17:34 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:17:34 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:17:35 - snowflake.connector.connection - INFO - closed
2025-01-19 03:17:35 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:19:06 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:19:06 - root - INFO - ```sql
WITH us_b2_patents AS (
    -- Select US utility patents under B2 classification granted between 2010 and 2014
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
flattened_citations AS (
    -- Flatten the cited_by field to get individual citing publication numbers
    SELECT 
        p."publication_number", 
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    -- Get filing dates of citing patents
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    -- Count citations within a month of filing date
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    -- Identify the patent with the most forward citations within a month of its filing date
    SELECT 
        c."publication_number",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    -- Get filing year of the top patent
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    -- Select patents from the same filing year, excluding the top patent
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent_filing_year)
),
top_patent_embedding AS (
    -- Flatten the embedding of the top patent
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    -- Compute similarity scores (dot product of embeddings)
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    -- Identify the most similar patent
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
-- Final result
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:19:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:19:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:19:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:19:09 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:19:09 - snowflake.connector.connection - INFO - closed
2025-01-19 03:19:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:19:09 - root - INFO - SQL:
WITH us_b2_patents AS (
    -- Select US utility patents under B2 classification granted between 2010 and 2014
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
flattened_citations AS (
    -- Flatten the cited_by field to get individual citing publication numbers
    SELECT 
        p."publication_number", 
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    -- Get filing dates of citing patents
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    -- Count citations within a month of filing date
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    -- Identify the patent with the most forward citations within a month of its filing date
    SELECT 
        c."publication_number",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    -- Get filing year of the top patent
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    -- Select patents from the same filing year, excluding the top patent
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent_filing_year)
),
top_patent_embedding AS (
    -- Flatten the embedding of the top patent
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    -- Compute similarity scores (dot product of embeddings)
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    -- Identify the most similar patent
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
-- Final result
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
Results:
publication_number,most_similar_publication_number
,

2025-01-19 03:19:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:19:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:19:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:19:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:19:11 - snowflake.connector.connection - INFO - closed
2025-01-19 03:19:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:20:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:20:13 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date", 'YYYYMMDD') AS "filing_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND TRY_TO_DATE(p."grant_date", 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."grant_date" NOT IN ('0', '00000000')
        AND p."filing_date" NOT IN ('0', '00000000')
        AND TRY_TO_DATE(p."filing_date", 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number", 
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        TRY_TO_DATE(cp."filing_date", 'YYYYMMDD') AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" NOT IN ('0', '00000000')
        AND TRY_TO_DATE(cp."filing_date", 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT 
        c."publication_number",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        TRY_TO_DATE(p."filing_date", 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date", 'YYYYMMDD')) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:20:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:20:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:20:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:20:15 - snowflake.connector.connection - INFO - closed
2025-01-19 03:20:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:21:03 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        DATE_FROM_PARTS(
            FLOOR(p."filing_date" / 10000),
            FLOOR(MOD(p."filing_date", 10000) / 100),
            MOD(p."filing_date", 100)
        ) AS "filing_date",
        DATE_FROM_PARTS(
            FLOOR(p."grant_date" / 10000),
            FLOOR(MOD(p."grant_date", 10000) / 100),
            MOD(p."grant_date", 100)
        ) AS "grant_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND p."grant_date" NOT IN (0, '0', '00000000')
        AND p."filing_date" NOT IN (0, '0', '00000000')
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND DATE_FROM_PARTS(
            FLOOR(p."grant_date" / 10000),
            FLOOR(MOD(p."grant_date", 10000) / 100),
            MOD(p."grant_date", 100)
        ) BETWEEN '2010-01-01' AND '2014-12-31'
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        DATE_FROM_PARTS(
            FLOOR(cp."filing_date" / 10000),
            FLOOR(MOD(cp."filing_date", 10000) / 100),
            MOD(cp."filing_date", 100)
        ) AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" NOT IN (0, '0', '00000000')
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT 
        c."publication_number",
        c."citation_count",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" NOT IN (0, '0', '00000000')
        AND DATE_FROM_PARTS(
            FLOOR(p."filing_date" / 10000),
            FLOOR(MOD(p."filing_date", 10000) / 100),
            MOD(p."filing_date", 100)
        ) IS NOT NULL
        AND YEAR(
            DATE_FROM_PARTS(
                FLOOR(p."filing_date" / 10000),
                FLOOR(MOD(p."filing_date", 10000) / 100),
                MOD(p."filing_date", 100)
            )
        ) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:21:03 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:03 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:03 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:06 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:21:06 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:06 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:06 - root - INFO - SQL:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        DATE_FROM_PARTS(
            FLOOR(p."filing_date" / 10000),
            FLOOR(MOD(p."filing_date", 10000) / 100),
            MOD(p."filing_date", 100)
        ) AS "filing_date",
        DATE_FROM_PARTS(
            FLOOR(p."grant_date" / 10000),
            FLOOR(MOD(p."grant_date", 10000) / 100),
            MOD(p."grant_date", 100)
        ) AS "grant_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND p."grant_date" NOT IN (0, '0', '00000000')
        AND p."filing_date" NOT IN (0, '0', '00000000')
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND DATE_FROM_PARTS(
            FLOOR(p."grant_date" / 10000),
            FLOOR(MOD(p."grant_date", 10000) / 100),
            MOD(p."grant_date", 100)
        ) BETWEEN '2010-01-01' AND '2014-12-31'
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        DATE_FROM_PARTS(
            FLOOR(cp."filing_date" / 10000),
            FLOOR(MOD(cp."filing_date", 10000) / 100),
            MOD(cp."filing_date", 100)
        ) AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" NOT IN (0, '0', '00000000')
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT 
        c."publication_number",
        c."citation_count",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" NOT IN (0, '0', '00000000')
        AND DATE_FROM_PARTS(
            FLOOR(p."filing_date" / 10000),
            FLOOR(MOD(p."filing_date", 10000) / 100),
            MOD(p."filing_date", 100)
        ) IS NOT NULL
        AND YEAR(
            DATE_FROM_PARTS(
                FLOOR(p."filing_date" / 10000),
                FLOOR(MOD(p."filing_date", 10000) / 100),
                MOD(p."filing_date", 100)
            )
        ) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
Results:
publication_number,most_similar_publication_number
,

2025-01-19 03:21:06 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:06 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:06 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 771
2025-01-19 03:21:09 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:09 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:09 - root - INFO - SQL:
SELECT t."publication_number", c.value::STRING AS "cited_by_publication"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t,
   LATERAL FLATTEN(input => t."cited_by") c
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,cited_by_publication
DE-318-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-4377202-A"",""type"":""""}"
DE-6066-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1177870-B"",""type"":""""}"
DE-8199-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-10358537-A1"",""type"":""""}"
DE-9260-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-102004014318-A1"",""type"":""""}"
US-5418-P,"{""application_number"":"""",""category"":""APP"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-PP27981-P3"",""type"":""""}"
US-5582-P,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-10478-P"",""type"":""""}"
US-7752-P,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-2580807-A"",""type"":""""}"
US-7765-P,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-8038-P"",""type"":""""}"
CA-86501-S,"{""application_number"":"""",""category"":""APP"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-D797248-S"",""type"":""""}"
CA-93339-A,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5328283-A"",""type"":""""}"
DE-13739-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1043865-B"",""type"":""""}"
DE-16474-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5037250-A"",""type"":""""}"
DE-16894-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1277699-B"",""type"":""""}"
DE-25283-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-930703-C"",""type"":""""}"
DE-26411-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""FR-2421020-A1"",""type"":""X""}"
DE-29220-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-2134755-A1"",""type"":""""}"
DE-29420-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5509449-A"",""type"":""""}"
DE-32777-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-4241373-A1"",""type"":""""}"
DE-33237-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1141136-B"",""type"":""""}"
DE-35627-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5771599-A"",""type"":""""}"
DE-38499-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-4577722-A"",""type"":""""}"
DE-51226-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-2784744-A"",""type"":""""}"
DE-53179-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1918780-A1"",""type"":""""}"
DE-61256-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-965812-C"",""type"":""""}"
DE-64210-C,"{""application_number"":"""",""category"":""ISR"",""filing_date"":0,""npl_text"":"""",""publication_number"":""WO-02061207-A1"",""type"":""Y""}"
DE-68962-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-4492046-A"",""type"":""""}"
DE-69706-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-3282606-A"",""type"":""""}"
DE-76735-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-2815490-A1"",""type"":""""}"
DE-83956-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1117450-B"",""type"":""""}"
DE-85324-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""FR-2754048-A1"",""type"":""A""}"
DE-86264-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1022491-B"",""type"":""""}"
DE-86489-C,"{""application_number"":"""",""category"":""APP"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-8192786-B2"",""type"":""""}"
DE-87715-C,"{""application_

2025-01-19 03:21:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:11 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:11 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:11 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:11 - root - INFO - SQL:
SELECT t."publication_number", ARRAY_SIZE(t."embedding_v1") AS "embedding_size"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,embedding_size
CA-27-A,64
ES-81-Y,64
DE-303-C,0
ES-866-Y,64
FI-150-A,64
FI-250-A,64
FR-336-E,64
NL-284-C,0
NL-947-C,0
BE-107-T1,64
CA-1911-A,64
CA-4005-A,64
CA-4106-A,64
CA-4698-A,64
CA-4801-A,64
CA-5943-A,64
CA-6183-A,64
CA-6207-A,64
CA-6390-A,64
CA-6969-A,64
CA-8931-S,64
CA-9897-A,64
DE-3129-C,0
DE-3301-C,0
DE-3884-C,0
DE-3983-C,0
DE-5976-C,0
DK-2807-C,64
DK-3080-C,64
DK-3107-C,64
DK-3184-C,64
DK-3510-C,64
DK-5867-C,64
DK-5921-C,64
DK-6491-A,64
DK-7210-C,64
DK-8069-C,64
DK-8466-C,64
DK-9281-C,64
DK-9359-C,64
ES-1062-U,64
ES-1498-U,64
ES-1524-Y,64
ES-1872-U,64
ES-2542-Y,64
ES-2819-Y,64
ES-2960-U,64
ES-3045-U,64
ES-4483-Y,64
ES-4723-Y,64
ES-4858-U,64
ES-5089-Y,64
ES-5219-Y,64
ES-5716-U,64
ES-5975-Y,64
ES-6454-U,64
ES-6552-Y,64
ES-6928-Y,64
ES-6962-Y,64
ES-7086-Y,64
ES-7407-Y,64
ES-7489-Y,64
ES-7516-U,64
ES-7538-U,64
ES-764-H3,64
ES-8269-Y,64
FI-1825-A,64
FI-291-U1,64
FI-3021-A,64
FI-4211-A,64
FI-4543-A,64
FI-8034-A,64
FI-8619-A,64
FI-8985-A,64
FI-902-U1,64
FR-1186-E,64
FR-1382-E,64
FR-1550-M,64
FR-2064-E,64
FR-2510-M,64
FR-2578-M,64
FR-2635-E,64
FR-3293-M,64
FR-5174-E,64
FR-5770-E,64
FR-7085-M,64
FR-7747-E,64
FR-8053-M,64
FR-8143-M,64
NL-3613-C,0
NL-4187-C,0
NL-5034-C,0
NL-9752-C,0
NL-9761-C,64
RU-815-U1,64
US-1260-A,64
US-1844-A,64
US-3704-A,64
US-4174-P,64
US-4340-A,64
US-4449-P,64
US-4570-P,64
US-5293-P,64
US-5333-A,64
US-5618-A,64
US-6399-A,64
US-6501-P,64
US-7090-A,64
US-7624-A,64
US-7703-P,64
US-7765-P,0
US-8162-P,64
US-8923-P,0
US-9153-A,64
US-9563-A,64
US-H817-H,64
CA-10240-A,64
CA-10445-A,64
CA-11856-A,64
CA-12085-A,64
CA-12299-A,64
CA-12359-A,64
CA-12986-A,64
CA-14364-A,64
CA-15108-A,64
CA-15467-A,64
CA-16464-A,64
CA-16944-A,64
CA-17107-A,64
CA-18535-S,64
CA-19006-S,64
CA-21676-A,64
CA-21706-A,64
CA-21979-A,64
CA-22497-S,64
CA-22705-A,64
CA-23044-A,64
CA-25240-S,64
CA-25587-A,64
CA-26172-A,64
CA-27810-A,64
CA-29171-S,64
CA-29565-A,64
CA-30563-S,64
CA-30747-A,64
CA-31066-A,64
CA-31656-A,64
CA-34117-A,64
CA-34328-A,64
CA-35530-A,64
CA-36126-A,64
CA-37060-A,64
CA-37412-A,64
CA-38186-A,64
CA-38290-A,64
CA-38566-A,64
CA-39941-A,64
CA-41986-A,64
CA-42957-A,64
CA-43582-A,64
CA-43613-A,64
CA-43665-A,64
CA-44103-A,64
CA-44675-A,64
CA-45114-S,64
CA-45162-A,64
CA-46041-S,64
CA-46346-S,64
CA-46414-S,64
CA-46650-A,64
CA-47228-S,64
CA-47556-A,64
CA-47943-A,64
CA-48005-S,64
CA-50059-A,64
CA-51084-S,64
CA-51448-A,64
CA-53020-A,64
CA-53342-A,64
CA-53679-A,64
CA-54019-A,64
CA-56199-S,64
CA-57871-A,64
CA-58112-A,64
CA-59658-S,64
CA-62116-A,64
CA-63512-A,64
CA-64348-A,64
CA-64895-A,64
CA-64959-A,64
CA-65051-A,64
CA-65468-A,64
CA-66408-A,64
CA-67027-A,64
CA-67256-A,64
CA-68355-A,64
CA-68561-A,64
CA-69952-A,64
CA-69969-A,64
CA-70837-S,64
CA-71352-A,64
CA-72557-S,64
CA-73229-S,64
CA-73434-A,64
CA-73648-A,64
CA-75054-A,64
CA-75833-A,64
CA-75940-A,64
CA-76442-A,64
CA-77673-S,64
CA-78154-A,64
CA-78848-A,64
CA-80485-S,64
CA-81879-A,64
CA-82735-A,64
CA-83640-A,64
CA-84428-S,64
CA-84611-A,64
CA-85458-S,64
CA-87085-A,64
CA-87655-A,64
CA-88869-A,64
CA-89598-S,64
CA-90451-A,64
CA-90703-A,64
CA-91407-A,64
CA-91839-A,64
CA-92136-S,64
CA-92671-S,64
CA-93153-A,64
CA-93847-S,64
CA-94404-A,64
CA-94834-A,64
CA-95812-A,64
CA-96813-A,64
CA-97691-A,64
CA-97784-A,64
CA-98415-S,64
CA-98613-A,64
CA-98742-A,64
CA-99391-S,64
CA-99529-A,64
DE-10599-C,0
DE-10678-C,0
DE-10717-C,0
DE-12268-C,0
DE-16453-C,0
DE-17382-C,0
DE-17635-C,0
DE-18657-C,0
DE-21533-C,0
DE-21800-C,0
DE-22191-C,0
DE-24092-C,64
DE-24550-C,0
DE-26040-C,0
DE-26251-C,0
DE-26645-C,0
DE-27162-C,64
DE-28245-C,0
DE-28664-C,0
DE-29317-C,0
DE-29580-C,0
DE-29751-C,0
DE-29873-C,0
DE-34701-C,0
DE-35759-C,0
DE-36143-C,0
DE-36572-C,0
DE-36880-C,0
DE-37006-C,0
DE-39978-C,0
DE-41212-C,0
DE-41909-C,0
DE-43016-C,0
DE-43252-C,0
DE-43745-C,0
DE-44221-C,0
DE-44490-C,0
DE-46714-C,0
DE-46729-C,0
DE-46866-C,0
DE-47512-C,0
DE-48016-C,0
DE-48200-C,0
DE-48281-C,0
DE-48415-C,0
DE-48624-C,0
DE-48946-C,0
DE-55522-C,64
DE-57100-C,0
DE-59206-C,0
DE-62156-C,0
DE-62668-C,0
DE-64182-C,0
DE-64466-C,0
DE-68843-C,0
DE-69224-C,0
DE-69735-C,0
DE-70329-C,0
DE-70421-C,0
DE-70605-C,0
DE-71525-C,0
DE-72135-C,0
DE-72417-C,0
DE-73920-C,0
DE-75006-C,0
DE-75333-C,0
DE-78770-C,0
DE-82929-C,0
DE-83658-C,0
DE-83966-C,0
DE-84792-C,0
DE-87929-C,0
DE-90760-C,0
DE-91921-C,0
DE-92960-C,0
DE-93320-C,0
DE-93611-C,0
DE-94567-C,0
DE-96265-C,0
DE-97461-C,0
DE-98822-C,0
DK-10751-C,64
DK-11017-C,64
DK-11274-A,64
DK-11549-C,64
DK-13429-C,64
DK-14113-C,64
DK-15486-A,64
DK-15672-C,64
DK-16003-C,64
DK-16200-C,64
DK-16721-C,64
DK-17077-C,64
DK-17891-C,64
DK-18174-A,64
DK-18287-C,64
DK-18953-C,64
DK-19067-C,64
DK-20848-C,64
DK-21534-C,64
DK-21593-C,64
DK-24093-C,64
DK-24122-C,64
DK-24560-C,64
DK-24764-C,64
DK-25033-C,64
DK-26002-C,64
DK-28460-C,64
DK-30663-C,64
DK-31338-C,64
DK-32802-C,64
DK-32923-C,64
DK-32960-C,64
DK-33342-C,64
DK-33585-C,64
DK-34417-C,64
DK-34475-A,64
DK-34847-C,64
DK-3485-D0,64
DK-35287-A,64
DK-35387-A,64
DK-36818-C,64
DK-37723-C,64
DK-38288-C,64
DK-3889-D0,64
DK-40323-C,64
DK-42091-A,64
DK-44173-C,64
DK-45

2025-01-19 03:21:11 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:11 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:11 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:13 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:13 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:13 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:13 - root - INFO - SQL:
SELECT "publication_number", "grant_date", "filing_date", "kind_code", "country_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   WHERE "country_code" = 'US' AND "kind_code" = 'B2' AND "grant_date" BETWEEN 20100101 AND 20141231
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,grant_date,filing_date,kind_code,country_code
US-7680512-B2,20100316,20050509,B2,US
US-8658313-B2,20140225,20100927,B2,US
US-8708409-B2,20140429,20100121,B2,US
US-8871437-B2,20141028,20091209,B2,US
US-8724671-B2,20140513,20130124,B2,US
US-8422451-B2,20130416,20110110,B2,US
US-8596460-B2,20131203,20121206,B2,US
US-7654136-B2,20100202,20070724,B2,US
US-8605000-B2,20131210,20110830,B2,US
US-7654913-B2,20100202,20080115,B2,US
US-8743329-B2,20140603,20120807,B2,US
US-8343975-B2,20130101,20090910,B2,US
US-8065064-B2,20111122,20080924,B2,US
US-7832221-B2,20101116,20061020,B2,US
US-8042681-B2,20111025,20081030,B2,US
US-8879279-B2,20141104,20110513,B2,US
US-8488923-B2,20130716,20100329,B2,US
US-7836581-B2,20101123,20040617,B2,US
US-8733385-B2,20140527,20090714,B2,US
US-8024925-B2,20110927,20051108,B2,US
US-7647782-B2,20100119,20051214,B2,US
US-8098574-B2,20120117,20080826,B2,US
US-7857729-B2,20101228,20090617,B2,US
US-8080145-B2,20111220,20040112,B2,US
US-8053376-B2,20111108,20090626,B2,US
US-8178658-B2,20120515,20090211,B2,US
US-8576596-B2,20131105,20111020,B2,US
US-7928606-B2,20110419,20070525,B2,US
US-7668240-B2,20100223,20070110,B2,US
US-8585774-B2,20131119,20111031,B2,US
US-8502757-B2,20130806,20111115,B2,US
US-8471802-B2,20130625,20071030,B2,US
US-8862868-B2,20141014,20121206,B2,US
US-8328389-B2,20121211,20120213,B2,US
US-7738069-B2,20100615,20080415,B2,US
US-8405713-B2,20130326,20090312,B2,US
US-8648463-B2,20140211,20100517,B2,US
US-8696206-B2,20140415,20111006,B2,US
US-7657091-B2,20100202,20060306,B2,US
US-8290883-B2,20121016,20090910,B2,US
US-7973201-B2,20110705,20070621,B2,US
US-8906677-B2,20141209,20091216,B2,US
US-7649294-B2,20100119,20070827,B2,US
US-7933078-B2,20110426,20081021,B2,US
US-7921656-B2,20110412,20090219,B2,US
US-8554170-B2,20131008,20111114,B2,US
US-8245723-B2,20120821,20090710,B2,US
US-8018125-B2,20110913,20090421,B2,US
US-8297434-B2,20121030,20090515,B2,US
US-7642037-B2,20100105,20040827,B2,US
US-7859134-B2,20101228,20071221,B2,US
US-8039891-B2,20111018,20101229,B2,US
US-8224596-B2,20120717,20080909,B2,US
US-8330621-B2,20121211,20090729,B2,US
US-8167101-B2,20120501,20080905,B2,US
US-8702088-B2,20140422,20101119,B2,US
US-8108347-B2,20120131,20050805,B2,US
US-7938000-B2,20110510,20090904,B2,US
US-8109016-B2,20120207,20090108,B2,US
US-7995810-B2,20110809,20060623,B2,US
US-8260772-B2,20120904,20080131,B2,US
US-8102623-B2,20120124,20070831,B2,US
US-7913963-B2,20110329,20090421,B2,US
US-7823930-B2,20101102,20051013,B2,US
US-8582104-B2,20131112,20110630,B2,US
US-8189912-B2,20120529,20071124,B2,US
US-7891314-B2,20110222,20050705,B2,US
US-8582526-B2,20131112,20110420,B2,US
US-8152025-B2,20120410,20101020,B2,US
US-8256058-B2,20120904,20090807,B2,US
US-8231507-B2,20120731,20100125,B2,US
US-8326321-B2,20121204,20091008,B2,US
US-8910083-B2,20141209,20091110,B2,US
US-7803074-B2,20100928,20050304,B2,US
US-8269638-B2,20120918,20081016,B2,US
US-7924829-B2,20110412,20070430,B2,US
US-8318661-B2,20121127,20070828,B2,US
US-7995905-B2,20110809,20070906,B2,US
US-8234367-B2,20120731,20080925,B2,US
US-8188151-B2,20120529,20081028,B2,US
US-8621771-B2,20140107,20091026,B2,US
US-8319911-B2,20121127,20101207,B2,US
US-7925485-B2,20110412,20061025,B2,US
US-7794019-B2,20100914,20060707,B2,US
US-8539321-B2,20130917,20101110,B2,US
US-8661328-B2,20140225,20111215,B2,US
US-7762145-B2,20100727,20080417,B2,US
US-8494118-B2,20130723,20110215,B2,US
US-8267867-B2,20120918,20110310,B2,US
US-8535171-B2,20130917,20091209,B2,US
US-8567121-B2,20131029,20090731,B2,US
US-8647917-B2,20140211,20110727,B2,US
US-8383048-B2,20130226,20100721,B2,US
US-8606864-B2,20131210,20101231,B2,US
US-7823152-B2,20101026,20060606,B2,US
US-7752558-B2,20100706,20070425,B2,US
US-8429850-B2,20130430,20080605,B2,US
US-8098026-B2,20120117,20081015,B2,US
US-8067283-B2,20111129,20091113,B2,US
US-8586026-B2,20131119,20080229,B2,US
US-8223327-B2,20120717,20090126,B2,US
US-8044974-B2,20111025,20060420,B2,US
US-8349567-B2,20130108,20090321,B2,US
US-8446637-B2,20130521,20120910,B2,US
US-8456565-B2,20130604,20100426,B2,US
US-7778139-B2,20100817,20071016,B2,US
US-7833963-B2,20101116,20030603,B2,US
US-8213075-B2,20120703,20101105,B2,US
US-7829031-B2,20101109,20071116,B2,US
US-8533168-B2,20130910,20070720,B2,US
US-8877120-B2,20141104,20100917,B2,US
US-8076715-B2,20111213,20061227,B2,US
US-8645436-B2,20140204,20080724,B2,US
US-8632537-B2,20140121,20120216,B2,US
US-8863523-B2,20141021,20130709,B2,US
US-8718704-B2,20140506,20110920,B2,US
US-7800212-B2,20100921,20071227,B2,US
US-7958519-B2,20110607,20090408,B2,US
US-8673805-B2,20140318,20110915,B2,US
US-8615268-B2,20131224,20101101,B2,US
US-8391876-B2,20130305,20100819,B2,US
US-8630654-B2,20140114,20120208,B2,US
US-7991278-B2,20110802,20100407,B2,US
US-8671830-B2,20140318,20120503,B2,US
US-7817890-B2,20101019,20081029,B2,US
US-8028182-B2,20110927,20080604,B2,US
US-8116169-B2,20120214,20090513,B2,US
US-8639149-B2,20140128,20110131,B2,US
US-7775708-B2,20100817,20060705,B2,US
US-8268996-B2,20120918,20110616,B

2025-01-19 03:21:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:15 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:15 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:15 - root - INFO - SQL:
SELECT t."publication_number", p."country_code", p."kind_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
   JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p ON t."publication_number" = p."publication_number"
   WHERE p."country_code" = 'US'
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,country_code,kind_code
US-6790890-B2,US,B2
US-6814687-B2,US,B2
US-6817384-B2,US,B2
US-6823574-B2,US,B2
US-6836033-B2,US,B2
US-6863980-B2,US,B2
US-6867422-B1,US,B1
US-6899580-B1,US,B1
US-6928502-B2,US,B2
US-6930735-B2,US,B2
US-6935035-B2,US,B2
US-6947813-B2,US,B2
US-6960153-B2,US,B2
US-6978355-B2,US,B2
US-6991999-B2,US,B2
US-7015918-B2,US,B2
US-7047175-B1,US,B1
US-7051651-B2,US,B2
US-7081504-B2,US,B2
US-7116966-B2,US,B2
US-7118453-B2,US,B2
US-7159387-B2,US,B2
US-7198286-B2,US,B2
US-7234308-B1,US,B1
US-7256283-B2,US,B2
US-7270947-B2,US,B2
US-7289943-B2,US,B2
US-7295399-B2,US,B2
US-7297097-B2,US,B2
US-7299476-B2,US,B2
US-7341457-B2,US,B2
US-7342248-B2,US,B2
US-7346741-B1,US,B1
US-7356589-B2,US,B2
US-7371794-B2,US,B2
US-7379235-B2,US,B2
US-7381009-B2,US,B2
US-7392366-B2,US,B2
US-7401244-B2,US,B2
US-7414148-B2,US,B2
US-7421241-B2,US,B2
US-7449215-B2,US,B2
US-7464853-B2,US,B2
US-7500300-B2,US,B2
US-7511745-B2,US,B2
US-7515319-B2,US,B2
US-7580945-B2,US,B2
US-7640187-B1,US,B1
US-7676869-B2,US,B2
US-7680403-B2,US,B2
US-7689691-B2,US,B2
US-7693649-B2,US,B2
US-7697681-B2,US,B2
US-7708450-B2,US,B2
US-7716408-B2,US,B2
US-7730870-B2,US,B2
US-7733075-B1,US,B1
US-7774610-B2,US,B2
US-7803992-B2,US,B2
US-7805864-B2,US,B2
US-7813060-B1,US,B1
US-7814416-B2,US,B2
US-7832569-B1,US,B1
US-7837897-B2,US,B2
US-7866514-B1,US,B1
US-7876864-B2,US,B2
US-7887831-B2,US,B2
US-7913178-B2,US,B2
US-7939764-B2,US,B2
US-8011363-B2,US,B2
US-8023636-B2,US,B2
US-8062741-B2,US,B2
US-8082307-B2,US,B2
US-8112460-B2,US,B2
US-8143066-B2,US,B2
US-8144066-B2,US,B2
US-8147013-B2,US,B2
US-8272646-B2,US,B2
US-8365157-B2,US,B2
US-8370751-B2,US,B2
US-8386134-B2,US,B2
US-8405269-B2,US,B2
US-8412764-B1,US,B1
US-8462278-B2,US,B2
US-8481335-B2,US,B2
US-8508811-B2,US,B2
US-8522968-B2,US,B2
US-8523862-B2,US,B2
US-8554997-B1,US,B1
US-8645456-B2,US,B2
US-8649215-B2,US,B2
US-8670981-B2,US,B2
US-8721568-B2,US,B2
US-8760761-B2,US,B2
US-8806576-B1,US,B1
US-8876562-B2,US,B2
US-8954208-B2,US,B2
US-8966330-B1,US,B1
US-8976583-B2,US,B2
US-9128520-B2,US,B2
US-9166332-B2,US,B2
US-9204094-B2,US,B2
US-9318136-B1,US,B1
US-2002199075-A1,US,A1
US-2003048328-A1,US,A1
US-2003102128-A1,US,A1
US-2003177113-A1,US,A1
US-2004074387-A1,US,A1
US-2004113364-A1,US,A1
US-2004134953-A1,US,A1
US-2004205498-A1,US,A1
US-2004211554-A1,US,A1
US-2004268070-A1,US,A1
US-2005087824-A1,US,A1
US-2005137363-A1,US,A1
US-2005219456-A1,US,A1
US-2007191504-A1,US,A1
US-2007206259-A1,US,A1
US-2007245673-A1,US,A1
US-2007256734-A1,US,A1
US-2008004039-A1,US,A1
US-2008093571-A1,US,A1
US-2008109298-A1,US,A1
US-2009139775-A1,US,A1
US-2009192703-A1,US,A1
US-2009277763-A1,US,A1
US-2009317817-A1,US,A1
US-2009318914-A1,US,A1
US-2010197310-A1,US,A1
US-2011135550-A1,US,A1
US-2012010547-A1,US,A1
US-2013169571-A1,US,A1
US-1374446-A,US,A
US-1394328-A,US,A
US-2408627-A,US,A
US-2563456-A,US,A
US-2701131-A,US,A
US-2932152-A,US,A
US-3094695-A,US,A
US-3147792-A,US,A
US-3194312-A,US,A
US-3327855-A,US,A
US-3329640-A,US,A
US-3607670-A,US,A
US-3644831-A,US,A
US-3859370-A,US,A
US-3937405-A,US,A
US-3937535-A,US,A
US-3999214-A,US,A
US-4012887-A,US,A
US-4069973-A,US,A
US-4119578-A,US,A
US-4147795-A,US,A
US-4369743-A,US,A
US-4479329-A,US,A
US-4523847-A,US,A
US-4554569-A,US,A
US-4590077-A,US,A
US-4650684-A,US,A
US-4663453-A,US,A
US-4694030-A,US,A
US-4708433-A,US,A
US-4735768-A,US,A
US-4754323-A,US,A
US-4769634-A,US,A
US-4809272-A,US,A
US-4851409-A,US,A
US-4980052-A,US,A
US-4984435-A,US,A
US-5248292-A,US,A
US-5299775-A,US,A
US-5347275-A,US,A
US-5380026-A,US,A
US-5447012-A,US,A
US-5564650-A,US,A
US-5595304-A,US,A
US-5602890-A,US,A
US-5718563-A,US,A
US-5753999-A,US,A
US-5792086-A,US,A
US-5817591-A,US,A
US-5856797-A,US,A
US-5873663-A,US,A
US-5952273-A,US,A
US-6011555-A,US,A
US-6071627-A,US,A
US-6084911-A,US,A
US-6087029-A,US,A
US-6218671-B1,US,B1
US-6476737-B1,US,B1
US-6561612-B2,US,B2
US-6592268-B2,US,B2
US-6666924-B1,US,B1
US-6671418-B2,US,B2
US-6752433-B2,US,B2
US-6753754-B1,US,B1
US-6831544-B2,US,B2
US-6854476-B1,US,B1
US-6893428-B2,US,B2
US-6962028-B2,US,B2
US-7106438-B2,US,B2
US-7116003-B2,US,B2
US-7140390-B2,US,B2
US-7219083-B2,US,B2
US-7444791-B1,US,B1
US-7935140-B2,US,B2
US-8713311-B1,US,B1
US-2001035801-A1,US,A1
US-2002018432-A1,US,A1
US-2002053196-A1,US,A1
US-2002146214-A1,US,A1
US-2002154037-A1,US,A1
US-2004042671-A1,US,A1
US-2004072119-A1,US,A1
US-2004258922-A1,US,A1
US-2005186904-A1,US,A1
US-2006154097-A1,US,A1
US-2006235539-A1,US,A1
US-2007143171-A1,US,A1
US-2007281762-A1,US,A1
US-2008065154-A1,US,A1
US-2008301497-A1,US,A1
US-2009014625-A1,US,A1
US-2009107160-A1,US,A1
US-2009188127-A1,US,A1
US-2011072355-A1,US,A1
US-791905-A,US,A
US-1738893-A,US,A
US-1838213-A,US,A
US-2070281-A,US,A
US-2540130-A,US,A
US-2595499-A,US,A
US-2783046-A,US,A
US-3212127-A,US,A
US-3542052-A,US,A
US-3574065-A,US,A
US-3682027-A,US,A
US-3717947-A,US,A
US-3834670-A,US,A
US-3983363-A,US,A
US-4180111-A,US,A
US-4291244-A,US,A
US-4709320-A,US,A
US-4804696-A,US,A
US-4858719-A,US,A
US-4929189-A,US,A
US-5116320-A,US,A
US-5165792-A,US,A
US-5228678-

2025-01-19 03:21:15 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:15 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:15 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:17 - snowflake.connector.cursor - INFO - Number of results in first chunk: 575
2025-01-19 03:21:18 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:18 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:18 - root - INFO - SQL:
SELECT p."publication_number", p."cpc"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
   LIMIT 1000;
Results:
Too long, hard cut:
publication_number,cpc
JP-1810118-C,[]
JP-1203714-C,[]
FR-1500580-A,"[
  {
    ""code"": ""G01M11/0242"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G01B11/255"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B3/107"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G01M11/0264"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G01B11/24"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B3/13"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
ES-8501233-A1,"[
  {
    ""code"": ""C07D263/58"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D413/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-2165155-A1,"[
  {
    ""code"": ""C11D3/38663"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C11D17/003"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-2409943-B1,"[
  {
    ""code"": ""B65H3/44"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H5/062"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H2403/21"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65H2301/42328"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65H3/46"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H3/5246"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06K13/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H2403/732"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65H7/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H7/06"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H2701/1912"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
GB-1086860-A,"[
  {
    ""code"": ""C08B30/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-S54117658-A,[]
JP-H0710178-Y2,[]
JP-3172057-B2,"[
  {
    ""code"": ""B65D2539/008"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65D51/002"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65D39/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65D39/0023"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-136580-A,"[
  {
    ""code"": ""B65G2201/02"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
US-272220-A,"[
  {
    ""code"": ""B26D7/018"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""Y10T83/6579"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
US-599187-A,"[
  {
    ""code"": ""B44B5/0061"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
CN-1062411-C,"[
  {
    ""code"": ""A01N33/12"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A01N43/40"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
DE-1479218-U,[]
EP-2512367-B1,"[
  {
    ""code"": ""A61F2210/0004"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""A61F2/0059"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61F2250/0018"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""A61B2017/00004"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
ES-2312527-T3,"[
  {
    ""code"": ""G06F11/3423"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06F11/3433"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06F2201/81"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""G06F9/5083"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1000748-A,"[
  {
    ""code"": ""G09F13/14"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1573809-A,"[
  {
    ""code"": ""G02B23/08"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G02B23/02"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-S5066757-U,[]
JP-S5845249-Y2,[]
US-2103405-A,"[
  {
    ""code"": ""F02N11/08"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
GB-201114438-D0,"[
  {
    ""code"": ""B21D5/00"

2025-01-19 03:21:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:20 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:20 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:20 - root - INFO - SQL:
SELECT t."publication_number", f.value::STRING AS "top_term"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t,
    LATERAL FLATTEN(input => t."top_terms") f
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,top_term
US-5560978-A,basecoat
US-5560978-A,coating
US-5560978-A,resin
US-5560978-A,fluoropolymer
US-5560978-A,substrate
US-5560978-A,powder
US-5560978-A,nonstick
US-5560978-A,nickel
US-5560978-A,pai
US-5560978-A,invention
US-5590131-A,reservation
US-5590131-A,slot
US-5590131-A,user
US-5590131-A,frame
US-5590131-A,time
US-5590131-A,dqtemp
US-5590131-A,predetermined
US-5590131-A,transmission
US-5590131-A,index
US-5590131-A,successful
US-5596790-A,end
US-5596790-A,clamp
US-5596790-A,area
US-5596790-A,hose
US-5596790-A,state
US-5596790-A,stop
US-5596790-A,catch
US-5596790-A,body
US-5596790-A,spread
US-5596790-A,projection
US-5614871-A,circuit
US-5614871-A,voltage
US-5614871-A,mos
US-5614871-A,terminal
US-5614871-A,output
US-5614871-A,channel
US-5614871-A,cmos
US-5614871-A,capacitive
US-5614871-A,transistor
US-5614871-A,latch
US-5635026-A,liquor
US-5635026-A,cooking
US-5635026-A,alkali
US-5635026-A,pulp
US-5635026-A,material
US-5635026-A,conduit
US-5635026-A,concentration
US-5635026-A,typically
US-5635026-A,fig
US-5635026-A,digester
US-5760063-A,ch
US-5760063-A,cn
US-5760063-A,compounds
US-5760063-A,sub
US-5760063-A,cl
US-5760063-A,compound
US-5760063-A,groups
US-5760063-A,alkyl
US-5760063-A,invention
US-5760063-A,formula
US-5779492-A,contact
US-5779492-A,connector
US-5779492-A,liquid
US-5779492-A,connection
US-5779492-A,member
US-5779492-A,system
US-5779492-A,hole
US-5779492-A,metal
US-5779492-A,portion
US-5779492-A,container
US-5989959-A,film
US-5989959-A,silicon
US-5989959-A,gate
US-5989959-A,oxide
US-5989959-A,fig
US-5989959-A,electrode
US-5989959-A,nitride
US-5989959-A,etching
US-5989959-A,polysilicon
US-5989959-A,layer
US-5992708-A,nozzle
US-5992708-A,handle
US-5992708-A,container
US-5992708-A,actuator
US-5992708-A,member
US-5992708-A,spray
US-5992708-A,portion
US-5992708-A,ring
US-5992708-A,fitment
US-5992708-A,hinge
US-6069408-A,semiconductor
US-6069408-A,electrode
US-6069408-A,device
US-6069408-A,members
US-6069408-A,board
US-6069408-A,resin
US-6069408-A,holding
US-6069408-A,chip
US-6069408-A,process
US-6069408-A,package
US-6120059-A,engine
US-6120059-A,cradle
US-6120059-A,frame
US-6120059-A,vehicle
US-6120059-A,portions
US-6120059-A,assembly
US-6120059-A,portion
US-6120059-A,member
US-6120059-A,leg
US-6120059-A,central
US-D578786-S,fig
US-D578786-S,view
US-D578786-S,elevational
US-D578786-S,armchair
US-D578786-S,left
US-D578786-S,side
US-D578786-S,plan
US-D578786-S,rear
US-D578786-S,design
US-D578786-S,right
EP-0311460-A2,charge
EP-0311460-A2,current
EP-0311460-A2,battery
EP-0311460-A2,voltage
EP-0311460-A2,charger
EP-0311460-A2,internal
EP-0311460-A2,charging
EP-0311460-A2,resistance
EP-0311460-A2,free
EP-0311460-A2,cell
EP-0339841-B1,dye
EP-0339841-B1,compounds
EP-0339841-B1,dental
EP-0339841-B1,free
EP-0339841-B1,material
EP-0339841-B1,compound
EP-0339841-B1,ion
EP-0339841-B1,composition
EP-0339841-B1,ionic
EP-0339841-B1,useful
EP-0357003-A2,generally
EP-0357003-A2,endoprosthesis
EP-0357003-A2,stent
EP-0357003-A2,figure
EP-0357003-A2,circumferential
EP-0357003-A2,member
EP-0357003-A2,expandable
EP-0357003-A2,according
EP-0357003-A2,mandrel
EP-0357003-A2,invention
EP-0526862-B1,density
EP-0526862-B1,compositions
EP-0526862-B1,bioadhesive
EP-0526862-B1,formulations
EP-0526862-B1,mm
EP-0526862-B1,pharmaceutical
EP-0526862-B1,high
EP-0526862-B1,prepared
EP-0526862-B1,active
EP-0526862-B1,invention
EP-0579132-A1,composition
EP-0579132-A1,time
EP-0579132-A1,groups
EP-0579132-A1,catalyst
EP-0579132-A1,silicone
EP-0579132-A1,example
EP-0579132-A1,amine
EP-0579132-A1,platinum
EP-0579132-A1,setting
EP-0579132-A1,value
EP-0586101-A1,ink
EP-0586101-A1,transfer
EP-0586101-A1,recording
EP-0586101-A1,image
EP-0586101-A1,drum
EP-0586101-A1,composition
EP-0586101-A1,example
EP-0586101-A1,intermediate
EP-0586101-A1,medium
EP-0586101-A1,jet
EP-0761795-A2,group
EP-0761795-A2,none
EP-0761795-A2,acid
EP-0761795-A2,weight
EP-0761795-A2,mole
EP-0761795-A2,containing
EP-0761795-A2,adhesive
EP-0761795-A2,percent
EP-0761795-A2,reactant
EP-0761795-A2,polyester
EP-2696530-A2,lte
EP-2696530-A2,wifi
EP-2696530-A2,unlicensed
EP-2696530-A2,subframe
EP-2696530-A2,carrier
EP-2696530-A2,ue
EP-2696530-A2,band
EP-2696530-A2,transmission
EP-2696530-A2,td
EP-2696530-A2,network
JP-H0970903-A,tread
JP-H0970903-A,surface
JP-H0970903-A,roughened
JP-H0970903-A,body
JP-H0970903-A,main
JP-H0970903-A,band
JP-H0970903-A,uneven
JP-H0970903-A,fine
JP-H0970903-A,precure
JP-H0970903-A,sheet
JP-S5521128-A,semiconductor
JP-S5521128-A,element
JP-S5521128-A,lead
JP-S5521128-A,tab
JP-S5521128-A,wire
JP-S5521128-A,mold
JP-S5521128-A,device
JP-S5521128-A,frame
JP-S5521128-A,assembling
JP-S5521128-A,bonding
JP-S5839939-A,device
JP-S5839939-A,spin
JP-S5839939-A,frequency
JP-S5839939-A,generating
JP-S5839939-A,resonance
JP-S5839939-A,receiving
JP-S5839939-A,high
JP-S5839939-A,nuclear
JP-S5839939-A,receiving device
JP-S5839939-A,nuclear spin
US-6212688-B1,strap
US-6212688-B1,means
US-6212688-B1,gloves
US-6212688-B1,garment
US-6212688-B1,figs


2025-01-19 03:21:20 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:20 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:20 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:22 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:22 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:22 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:22 - root - INFO - SQL:
SELECT "filing_date", COUNT(*) AS "count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    WHERE "grant_date" BETWEEN 20100101 AND 20141231
    GROUP BY "filing_date"
    ORDER BY "filing_date"
    LIMIT 1000;
Results:
Too long, hard cut:
filing_date,count
0,1
19820922,1
19850313,1
19860709,1
19910916,1
19920827,1
19940318,1
19940526,1
19940711,1
19940720,1
19941223,1
19950112,1
19950316,1
19950411,1
19950412,1
19950419,1
19950606,1
19950809,1
19950817,1
19951030,1
19951111,1
19951205,2
19951212,1
19960103,1
19960309,1
19960322,1
19960426,1
19960517,1
19960606,2
19960701,1
19960823,1
19961008,1
19961112,1
19961204,1
19961206,1
19961211,1
19961220,1
19970120,1
19970207,1
19970228,1
19970304,1
19970408,1
19970411,1
19970520,1
19970527,1
19970722,1
19970820,1
19970918,1
19970930,1
19971002,1
19971006,1
19971022,1
19971023,2
19971113,1
19971124,1
19971203,1
19971209,1
19971222,1
19980109,1
19980112,1
19980113,1
19980128,1
19980203,1
19980206,1
19980218,1
19980224,1
19980303,1
19980304,2
19980313,1
19980316,1
19980325,1
19980403,1
19980407,1
19980415,1
19980428,1
19980501,1
19980518,1
19980604,1
19980611,1
19980715,2
19980716,2
19980722,1
19980731,1
19980804,1
19980810,1
19980813,1
19980818,1
19980831,1
19980909,2
19980911,1
19981002,1
19981008,1
19981009,1
19981014,1
19981022,2
19981027,1
19981106,1
19981110,1
19981116,1
19981118,1
19981202,1
19981211,1
19981212,1
19981215,1
19981216,1
19981218,2
19981229,1
19990104,1
19990106,1
19990112,1
19990113,1
19990118,1
19990119,2
19990126,1
19990204,2
19990208,1
19990215,1
19990216,1
19990219,1
19990222,1
19990305,2
19990306,1
19990311,1
19990316,1
19990319,1
19990324,1
19990325,1
19990326,1
19990329,2
19990330,1
19990401,1
19990406,1
19990407,1
19990413,2
19990415,1
19990416,1
19990421,2
19990423,1
19990426,1
19990427,1
19990429,1
19990430,1
19990504,1
19990505,1
19990506,1
19990507,1
19990510,2
19990520,1
19990526,1
19990601,2
19990607,1
19990608,1
19990609,1
19990611,1
19990614,1
19990616,1
19990617,1
19990629,1
19990702,2
19990708,1
19990709,1
19990715,1
19990720,1
19990722,1
19990726,1
19990729,1
19990730,2
19990802,1
19990803,3
19990809,2
19990810,1
19990812,1
19990823,4
19990826,2
19990827,1
19990901,1
19990902,1
19990914,1
19990920,1
19990922,2
19990924,2
19991007,1
19991008,2
19991011,1
19991016,1
19991021,2
19991022,1
19991026,1
19991028,2
19991029,2
19991101,1
19991102,1
19991103,1
19991108,1
19991111,1
19991116,1
19991117,1
19991118,1
19991119,1
19991122,1
19991123,2
19991129,1
19991130,1
19991201,1
19991202,1
19991209,1
19991215,1
19991216,2
19991217,2
19991218,2
19991220,2
19991222,2
19991224,4
19991227,1
20000107,1
20000110,1
20000111,1
20000113,1
20000119,2
20000120,1
20000121,1
20000124,1
20000125,1
20000127,2
20000131,1
20000207,1
20000208,1
20000209,4
20000211,1
20000221,1
20000223,1
20000225,1
20000229,1
20000302,1
20000303,1
20000309,3
20000310,1
20000313,1
20000314,1
20000315,3
20000316,1
20000317,1
20000320,1
20000322,1
20000323,1
20000324,2
20000328,1
20000329,1
20000330,4
20000331,1
20000403,1
20000405,2
20000406,2
20000407,1
20000411,1
20000412,1
20000413,2
20000414,3
20000415,1
20000417,2
20000418,1
20000419,3
20000420,1
20000424,1
20000425,1
20000427,1
20000428,2
20000501,2
20000503,1
20000504,1
20000505,2
20000510,2
20000511,1
20000512,1
20000519,1
20000522,1
20000529,1
20000530,3
20000531,2
20000601,1
20000603,1
20000607,2
20000609,2
20000612,1
20000613,3
20000614,1
20000615,1
20000616,2
20000619,2
20000620,1
20000621,1
20000622,3
20000623,1
20000626,1
20000627,1
20000628,4
20000629,2
20000630,4
20000703,2
20000706,4
20000707,1
20000711,1
20000712,1
20000714,1
20000717,1
20000719,2
20000721,1
20000725,3
20000727,2
20000728,3
20000731,2
20000802,1
20000803,1
20000804,2
20000808,1
20000809,2
20000810,2
20000811,1
20000814,2
20000817,2
20000818,2
20000821,2
20000823,1
20000824,1
20000825,1
20000828,2
20000829,2
20000830,2
20000901,3
20000905,1
20000907,1
20000908,1
20000912,1
20000914,1
20000915,1
20000918,3
20000919,3
20000921,1
20000922,1
20000926,1
20000927,1
20000928,1
20000929,2
20000930,1
20001002,1
20001003,2
20001004,1
20001006,4
20001010,1
20001011,2
20001012,1
20001013,1
20001016,1
20001018,1
20001020,1
20001024,1
20001027,4
20001030,2
20001031,2
20001101,1
20001103,1
20001106,2
20001107,1
20001108,1
20001110,3
20001113,2
20001114,4
20001115,1
20001116,2
20001117,2
20001119,1
20001120,3
20001127,2
20001128,1
20001129,2
20001130,1
20001201,2
20001204,1
20001205,2
20001206,2
20001207,2
20001208,2
20001214,3
20001218,1
20001219,1
20001220,5
20001221,3
20001222,2
20001225,1
20001226,2
20001227,6
20001228,3
20001229,1
20010105,1
20010109,3
20010110,2
20010111,1
20010112,1
20010116,2
20010117,2
20010118,2
20010119,2
20010122,6
20010123,1
20010124,3
20010125,1
20010126,2
20010129,1
20010202,1
20010205,2
20010206,1
20010208,1
20010209,2
20010212,1
20010213,2
20010214,3
20010216,3
20010222,1
20010223,2
20010227,1
20010228,4
20010301,2
20010302,3
20010305,1
20010306,2
20010307,1
20010308,4
20010310,2
20010313,3
20010314,3
20010315,1
20010316,2
20010319,2
20010320,1
20010321,5
20010322,5
20010323,3
20010326,4
20010327,1
20010328,5
20010329,6
20010330,6
20010402,1
20010405,2
20010406,1
20010409,3
20010410,2
20010411,2
20010412,2
20010413,1
20010416,1
20010417,1
20010418,1
200104

2025-01-19 03:21:22 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:22 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:22 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:23 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:23 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:24 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:24 - root - INFO - SQL:
SELECT t."publication_number", ARRAY_SIZE(t."cited_by") AS "forward_citation_count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,forward_citation_count
CA-27-A,0
ES-81-Y,0
DE-303-C,0
ES-866-Y,0
FI-150-A,0
FI-250-A,0
FR-336-E,0
NL-284-C,0
NL-947-C,0
BE-107-T1,0
CA-1911-A,0
CA-4005-A,0
CA-4106-A,0
CA-4698-A,0
CA-4801-A,0
CA-5943-A,0
CA-6183-A,0
CA-6207-A,0
CA-6390-A,0
CA-6969-A,0
CA-8931-S,0
CA-9897-A,0
DE-3129-C,0
DE-3301-C,0
DE-3884-C,0
DE-3983-C,0
DE-5976-C,0
DK-2807-C,0
DK-3080-C,0
DK-3107-C,0
DK-3184-C,0
DK-3510-C,0
DK-5867-C,0
DK-5921-C,0
DK-6491-A,0
DK-7210-C,0
DK-8069-C,0
DK-8466-C,0
DK-9281-C,0
DK-9359-C,0
ES-1062-U,0
ES-1498-U,0
ES-1524-Y,0
ES-1872-U,0
ES-2542-Y,0
ES-2819-Y,0
ES-2960-U,0
ES-3045-U,0
ES-4483-Y,0
ES-4723-Y,0
ES-4858-U,0
ES-5089-Y,0
ES-5219-Y,0
ES-5716-U,0
ES-5975-Y,0
ES-6454-U,0
ES-6552-Y,0
ES-6928-Y,0
ES-6962-Y,0
ES-7086-Y,0
ES-7407-Y,0
ES-7489-Y,0
ES-7516-U,0
ES-7538-U,0
ES-764-H3,0
ES-8269-Y,0
FI-1825-A,0
FI-291-U1,0
FI-3021-A,0
FI-4211-A,0
FI-4543-A,0
FI-8034-A,0
FI-8619-A,0
FI-8985-A,0
FI-902-U1,0
FR-1186-E,0
FR-1382-E,0
FR-1550-M,0
FR-2064-E,0
FR-2510-M,0
FR-2578-M,0
FR-2635-E,0
FR-3293-M,0
FR-5174-E,0
FR-5770-E,0
FR-7085-M,0
FR-7747-E,0
FR-8053-M,0
FR-8143-M,0
NL-3613-C,0
NL-4187-C,0
NL-5034-C,0
NL-9752-C,0
NL-9761-C,0
RU-815-U1,0
US-1260-A,0
US-1844-A,0
US-3704-A,0
US-4174-P,0
US-4340-A,0
US-4449-P,0
US-4570-P,0
US-5293-P,0
US-5333-A,0
US-5618-A,0
US-6399-A,0
US-6501-P,0
US-7090-A,0
US-7624-A,0
US-7703-P,0
US-7765-P,0
US-8162-P,0
US-8923-P,0
US-9153-A,0
US-9563-A,0
US-H817-H,0
CA-10240-A,0
CA-10445-A,0
CA-11856-A,0
CA-12085-A,0
CA-12299-A,0
CA-12359-A,0
CA-12986-A,0
CA-14364-A,0
CA-15108-A,0
CA-15467-A,0
CA-16464-A,0
CA-16944-A,0
CA-17107-A,0
CA-18535-S,0
CA-19006-S,0
CA-21676-A,0
CA-21706-A,0
CA-21979-A,0
CA-22497-S,0
CA-22705-A,0
CA-23044-A,0
CA-25240-S,0
CA-25587-A,0
CA-26172-A,0
CA-27810-A,0
CA-29171-S,0
CA-29565-A,0
CA-30563-S,0
CA-30747-A,0
CA-31066-A,0
CA-31656-A,0
CA-34117-A,0
CA-34328-A,0
CA-35530-A,0
CA-36126-A,0
CA-37060-A,0
CA-37412-A,0
CA-38186-A,0
CA-38290-A,0
CA-38566-A,0
CA-39941-A,0
CA-41986-A,0
CA-42957-A,0
CA-43582-A,0
CA-43613-A,0
CA-43665-A,0
CA-44103-A,0
CA-44675-A,0
CA-45114-S,0
CA-45162-A,0
CA-46041-S,0
CA-46346-S,0
CA-46414-S,0
CA-46650-A,0
CA-47228-S,0
CA-47556-A,0
CA-47943-A,0
CA-48005-S,0
CA-50059-A,0
CA-51084-S,0
CA-51448-A,0
CA-53020-A,0
CA-53342-A,0
CA-53679-A,0
CA-54019-A,0
CA-56199-S,0
CA-57871-A,0
CA-58112-A,0
CA-59658-S,0
CA-62116-A,0
CA-63512-A,0
CA-64348-A,0
CA-64895-A,0
CA-64959-A,0
CA-65051-A,0
CA-65468-A,0
CA-66408-A,0
CA-67027-A,0
CA-67256-A,0
CA-68355-A,0
CA-68561-A,0
CA-69952-A,0
CA-69969-A,0
CA-70837-S,0
CA-71352-A,0
CA-72557-S,0
CA-73229-S,0
CA-73434-A,0
CA-73648-A,0
CA-75054-A,0
CA-75833-A,0
CA-75940-A,0
CA-76442-A,0
CA-77673-S,0
CA-78154-A,0
CA-78848-A,0
CA-80485-S,0
CA-81879-A,0
CA-82735-A,0
CA-83640-A,0
CA-84428-S,0
CA-84611-A,0
CA-85458-S,0
CA-87085-A,0
CA-87655-A,0
CA-88869-A,0
CA-89598-S,0
CA-90451-A,0
CA-90703-A,0
CA-91407-A,0
CA-91839-A,0
CA-92136-S,0
CA-92671-S,0
CA-93153-A,0
CA-93847-S,0
CA-94404-A,0
CA-94834-A,0
CA-95812-A,0
CA-96813-A,0
CA-97691-A,0
CA-97784-A,0
CA-98415-S,0
CA-98613-A,0
CA-98742-A,0
CA-99391-S,0
CA-99529-A,0
DE-10599-C,0
DE-10678-C,0
DE-10717-C,0
DE-12268-C,0
DE-16453-C,0
DE-17382-C,0
DE-17635-C,0
DE-18657-C,0
DE-21533-C,0
DE-21800-C,0
DE-22191-C,0
DE-24092-C,0
DE-24550-C,0
DE-26040-C,0
DE-26251-C,0
DE-26645-C,0
DE-27162-C,0
DE-28245-C,0
DE-28664-C,0
DE-29317-C,0
DE-29580-C,0
DE-29751-C,0
DE-29873-C,0
DE-34701-C,0
DE-35759-C,0
DE-36143-C,0
DE-36572-C,0
DE-36880-C,0
DE-37006-C,0
DE-39978-C,0
DE-41212-C,0
DE-41909-C,0
DE-43016-C,0
DE-43252-C,0
DE-43745-C,0
DE-44221-C,0
DE-44490-C,0
DE-46714-C,0
DE-46729-C,0
DE-46866-C,0
DE-47512-C,0
DE-48016-C,0
DE-48200-C,0
DE-48281-C,0
DE-48415-C,0
DE-48624-C,0
DE-48946-C,0
DE-55522-C,0
DE-57100-C,0
DE-59206-C,0
DE-62156-C,0
DE-62668-C,0
DE-64182-C,0
DE-64466-C,0
DE-68843-C,0
DE-69224-C,0
DE-69735-C,0
DE-70329-C,0
DE-70421-C,0
DE-70605-C,0
DE-71525-C,0
DE-72135-C,0
DE-72417-C,0
DE-73920-C,0
DE-75006-C,0
DE-75333-C,0
DE-78770-C,0
DE-82929-C,0
DE-83658-C,0
DE-83966-C,0
DE-84792-C,0
DE-87929-C,0
DE-90760-C,0
DE-91921-C,0
DE-92960-C,0
DE-93320-C,0
DE-93611-C,0
DE-94567-C,0
DE-96265-C,0
DE-97461-C,0
DE-98822-C,0
DK-10751-C,0
DK-11017-C,0
DK-11274-A,0
DK-11549-C,0
DK-13429-C,0
DK-14113-C,0
DK-15486-A,0
DK-15672-C,0
DK-16003-C,0
DK-16200-C,0
DK-16721-C,0
DK-17077-C,0
DK-17891-C,0
DK-18174-A,0
DK-18287-C,0
DK-18953-C,0
DK-19067-C,0
DK-20848-C,0
DK-21534-C,0
DK-21593-C,0
DK-24093-C,0
DK-24122-C,0
DK-24560-C,0
DK-24764-C,0
DK-25033-C,0
DK-26002-C,0
DK-28460-C,0
DK-30663-C,0
DK-31338-C,0
DK-32802-C,0
DK-32923-C,0
DK-32960-C,0
DK-33342-C,0
DK-33585-C,0
DK-34417-C,0
DK-34475-A,0
DK-34847-C,0
DK-3485-D0,0
DK-35287-A,0
DK-35387-A,0
DK-36818-C,0
DK-37723-C,0
DK-38288-C,0
DK-3889-D0,0
DK-40323-C,0
DK-42091-A,0
DK-44173-C,0
DK-45094-C,0
DK-46556-C,0
DK-47464-C,0
DK-48374-C,0
DK-48877-A,0
DK-49091-A,0
DK-49195-A,0
DK-49500-C,0
DK-49630-C,0
DK-50267-C,0
DK-50495-C,0
DK-50958-C,0
DK-51991-A,0
DK-54440-C,0
DK-57003-C,0
DK-57783-C,0
DK-58127-C,0
DK-58679-A,0
DK-59291-C,0
DK-59541-C,0
DK-61292-A,0
DK

2025-01-19 03:21:24 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:24 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:24 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:25 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:25 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:25 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:26 - root - INFO - SQL:
SELECT t."publication_number", t."embedding_v1"[0] AS "first_embedding_element"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,first_embedding_element
CA-27-A,1.542691000000000e-01
ES-81-Y,5.887155000000000e-02
DE-303-C,
ES-866-Y,2.173252600000000e-01
FI-150-A,1.129362000000000e-01
FI-250-A,1.157349500000000e-01
FR-336-E,2.488963000000000e-01
NL-284-C,
NL-947-C,
BE-107-T1,1.335686300000000e-01
CA-1911-A,-5.096149000000000e-02
CA-4005-A,7.245873000000000e-02
CA-4106-A,-9.016114000000000e-02
CA-4698-A,2.535995800000000e-01
CA-4801-A,1.188415000000000e-01
CA-5943-A,1.380696150000000e-02
CA-6183-A,-9.289648000000000e-02
CA-6207-A,-7.432461999999999e-02
CA-6390-A,-6.278615000000000e-02
CA-6969-A,-4.535574000000000e-02
CA-8931-S,1.483745600000000e-01
CA-9897-A,-7.298333000000000e-03
DE-3129-C,
DE-3301-C,
DE-3884-C,
DE-3983-C,
DE-5976-C,
DK-2807-C,1.761451700000000e-02
DK-3080-C,4.119539300000000e-02
DK-3107-C,4.911699500000000e-02
DK-3184-C,3.854642000000000e-02
DK-3510-C,7.552389000000000e-02
DK-5867-C,1.591398400000000e-02
DK-5921-C,6.764354600000000e-02
DK-6491-A,1.128999440000000e-01
DK-7210-C,8.163135500000000e-02
DK-8069-C,9.668399400000000e-02
DK-8466-C,7.944510000000000e-02
DK-9281-C,-4.147897300000000e-02
DK-9359-C,4.443456600000000e-02
ES-1062-U,1.216160360000000e-01
ES-1498-U,1.393214200000000e-01
ES-1524-Y,7.966964000000000e-02
ES-1872-U,1.144068300000000e-01
ES-2542-Y,1.716222600000000e-01
ES-2819-Y,5.747090300000000e-02
ES-2960-U,1.413429700000000e-01
ES-3045-U,1.332726300000000e-01
ES-4483-Y,8.827510500000001e-02
ES-4723-Y,1.224111700000000e-01
ES-4858-U,1.289089900000000e-01
ES-5089-Y,1.207708200000000e-01
ES-5219-Y,9.017859000000000e-02
ES-5716-U,7.149332000000000e-02
ES-5975-Y,1.637134100000000e-01
ES-6454-U,1.130871700000000e-01
ES-6552-Y,1.516620400000000e-01
ES-6928-Y,2.109149200000000e-01
ES-6962-Y,1.266357700000000e-01
ES-7086-Y,1.744338600000000e-01
ES-7407-Y,1.891687200000000e-01
ES-7489-Y,1.965648100000000e-01
ES-7516-U,1.807984100000000e-01
ES-7538-U,8.661310999999999e-02
ES-764-H3,6.152169400000000e-02
ES-8269-Y,1.706895400000000e-01
FI-1825-A,2.464068000000000e-01
FI-291-U1,1.622690400000000e-01
FI-3021-A,9.069756000000000e-02
FI-4211-A,4.921020600000000e-02
FI-4543-A,1.011299640000000e-01
FI-8034-A,1.114909900000000e-01
FI-8619-A,1.048030700000000e-01
FI-8985-A,5.210217500000000e-02
FI-902-U1,1.502619700000000e-01
FR-1186-E,2.085930700000000e-01
FR-1382-E,5.966770000000000e-02
FR-1550-M,1.179447700000000e-01
FR-2064-E,7.639956500000000e-02
FR-2510-M,1.514561000000000e-01
FR-2578-M,1.120744100000000e-01
FR-2635-E,1.265750000000000e-01
FR-3293-M,2.570555200000000e-02
FR-5174-E,2.609833000000000e-01
FR-5770-E,1.358778000000000e-01
FR-7085-M,9.205752600000000e-02
FR-7747-E,2.090552700000000e-01
FR-8053-M,1.022890000000000e-01
FR-8143-M,1.022890000000000e-01
NL-3613-C,
NL-4187-C,
NL-5034-C,
NL-9752-C,
NL-9761-C,3.997769200000000e-02
RU-815-U1,-9.559013999999999e-03
US-1260-A,2.007609600000000e-01
US-1844-A,1.878615500000000e-01
US-3704-A,-4.811066800000000e-02
US-4174-P,-6.829273400000000e-03
US-4340-A,9.653001999999999e-02
US-4449-P,6.634068000000000e-02
US-4570-P,-4.225703700000000e-02
US-5293-P,-3.916518800000000e-02
US-5333-A,1.711397200000000e-01
US-5618-A,8.231669000000000e-02
US-6399-A,-4.291071700000000e-02
US-6501-P,5.250982000000000e-03
US-7090-A,7.188845000000001e-02
US-7624-A,2.126437600000000e-02
US-7703-P,-8.711868500000000e-02
US-7765-P,
US-8162-P,1.992688000000000e-02
US-8923-P,
US-9153-A,4.537189000000000e-02
US-9563-A,2.645360500000000e-02
US-H817-H,-1.032094700000000e-01
CA-10240-A,-9.598008999999999e-03
CA-10445-A,-9.962522000000000e-02
CA-11856-A,7.115657000000000e-02
CA-12085-A,-2.052029400000000e-02
CA-12299-A,-8.509996000000000e-02
CA-12359-A,-1.194724600000000e-01
CA-12986-A,7.547039000000000e-02
CA-14364-A,1.987639800000000e-02
CA-15108-A,-6.334075200000000e-03
CA-15467-A,2.948298100000000e-02
CA-16464-A,-7.535351999999999e-02
CA-16944-A,-2.670204600000000e-01
CA-17107-A,-8.956730000000000e-02
CA-18535-S,1.935900200000000e-01
CA-19006-S,1.839075800000000e-01
CA-21676-A,-6.167627000000000e-02
CA-21706-A,-2.234345900000000e-02
CA-21979-A,8.201849999999999e-02
CA-22497-S,2.035627800000000e-01
CA-22705-A,-4.995441000000000e-02
CA-23044-A,-4.777407300000000e-02
CA-25240-S,1.568436500000000e-01
CA-25587-A,-3.109784400000000e-02
CA-26172-A,-1.016056300000000e-01
CA-27810-A,-1.720365500000000e-02
CA-29171-S,1.270025700000000e-01
CA-29565-A,-3.440223300000000e-02
CA-30563-S,2.158738700000000e-01
CA-30747-A,1.072055000000000e-01
CA-31066-A,7.366745000000000e-02
CA-31656-A,-3.078916000000000e-02
CA-34117-A,-2.035722700000000e-02
CA-34328-A,-1.038442100000000e-01
CA-35530-A,3.940954800000000e-02
CA-36126-A,-1.722260000000000e-02
CA-37060-A,-1.403236700000000e-01
CA-37412-A,5.853737000000000e-02
CA-38186-A,-2.079663000000000e-02
CA-38290-A,-2.248569200000000e-02
CA-38566-A,6.938809000000000e-02
CA-39941-A,3.828755000000000e-02
CA-41986-A,6.439857000000000e-02
CA-42957-A,2.088248300000000e-03
CA-43582-A,2.940963800000000e-02
CA-43613-A,1.968467000000000e-02
CA-43665-A,-1.02374630000

2025-01-19 03:21:26 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:26 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:26 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:27 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:21:27 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:27 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:47 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:21:47 - root - INFO - ```sql
SELECT 
    MIN("publication_date") AS "min_publication_date", 
    MAX("publication_date") AS "max_publication_date"
FROM 
    "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
WHERE 
    "publication_date" NOT IN (0, '0', '00000000') 
    AND TRY_TO_DATE("publication_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL;
```
2025-01-19 03:21:47 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:47 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:47 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:49 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:21:49 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:49 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:49 - root - INFO - SQL:
SELECT 
    MIN("publication_date") AS "min_publication_date", 
    MAX("publication_date") AS "max_publication_date"
FROM 
    "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
WHERE 
    "publication_date" NOT IN (0, '0', '00000000') 
    AND TRY_TO_DATE("publication_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL;
Results:
min_publication_date,max_publication_date
18281210,20170913

2025-01-19 03:21:49 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:49 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:49 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:51 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:51 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:51 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:51 - root - INFO - SQL:
SELECT t."publication_number", ARRAY_SIZE(t."cited_by") AS "forward_citation_count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p ON t."publication_number" = p."publication_number"
    WHERE p."country_code" = 'US' AND p."kind_code" = 'B2' AND p."grant_date" BETWEEN 20100101 AND 20141231
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,forward_citation_count
US-7648069-B2,2
US-7652920-B2,2
US-7655776-B2,2
US-7670171-B2,2
US-7687355-B2,2
US-7707402-B2,2
US-7712454-B2,2
US-7736816-B2,2
US-7751155-B2,2
US-7762109-B2,2
US-7767369-B2,2
US-7771604-B2,2
US-7774629-B2,2
US-7779533-B2,2
US-7783295-B2,2
US-7818260-B2,2
US-7832988-B2,2
US-7835283-B2,2
US-7836581-B2,2
US-7859576-B2,2
US-7877365-B2,2
US-7883966-B2,2
US-7894970-B2,2
US-7912474-B2,2
US-7916698-B2,2
US-7921344-B2,2
US-7923105-B2,2
US-7927451-B2,2
US-7931057-B2,2
US-7974523-B2,2
US-7983635-B2,2
US-8002162-B2,2
US-8003127-B2,2
US-8009900-B2,2
US-8010833-B2,2
US-8014658-B2,2
US-8018245-B2,2
US-8023730-B2,2
US-8023832-B2,2
US-8030978-B2,2
US-8039028-B2,2
US-8051775-B2,2
US-8052382-B2,2
US-8077820-B2,2
US-8079482-B2,2
US-8105036-B2,2
US-8106293-B2,2
US-8111305-B2,2
US-8120996-B2,2
US-8121735-B2,2
US-8127992-B2,2
US-8132956-B2,2
US-8139265-B2,2
US-8149082-B2,2
US-8158212-B2,2
US-8160133-B2,2
US-8164921-B2,2
US-8171672-B2,2
US-8188151-B2,2
US-8188903-B2,2
US-8193992-B2,2
US-8198302-B2,2
US-8210807-B2,2
US-8218491-B2,2
US-8225738-B2,2
US-8227663-B2,2
US-8228473-B2,2
US-7655995-B2,1
US-7663530-B2,1
US-7664248-B2,1
US-7664267-B2,1
US-7665827-B2,1
US-7669432-B2,1
US-7672808-B2,1
US-7682504-B2,1
US-7701349-B2,1
US-7721249-B2,1
US-7727439-B2,1
US-7752957-B2,1
US-7778103-B2,1
US-7786385-B2,1
US-7790282-B2,1
US-7794850-B2,1
US-7800202-B2,1
US-7804796-B2,1
US-7807134-B2,1
US-7820445-B2,1
US-7824486-B2,1
US-7829901-B2,1
US-7840183-B2,1
US-7842007-B2,1
US-7858309-B2,1
US-7867187-B2,1
US-7892756-B2,1
US-7892905-B2,1
US-7904645-B2,1
US-7915905-B2,1
US-7916232-B2,1
US-7919847-B2,1
US-7922419-B2,1
US-7935835-B2,1
US-7953015-B2,1
US-7985925-B2,1
US-7999512-B2,1
US-8000680-B2,1
US-8018507-B2,1
US-8019399-B2,1
US-8019803-B2,1
US-8020746-B2,1
US-8027547-B2,1
US-8031364-B2,1
US-8035373-B2,1
US-8069298-B2,1
US-8070363-B2,1
US-8071399-B2,1
US-8076591-B2,1
US-8100550-B2,1
US-8113790-B2,1
US-8118543-B2,1
US-8120836-B2,1
US-8130337-B2,1
US-8139810-B2,1
US-8141019-B2,1
US-8150333-B2,1
US-8153074-B2,1
US-8164178-B2,1
US-8171448-B2,1
US-8173048-B2,1
US-8178693-B2,1
US-8178958-B2,1
US-8179406-B2,1
US-8206179-B2,1
US-8213098-B2,1
US-8219499-B2,1
US-8234525-B2,1
US-8235283-B2,1
US-8240823-B2,1
US-8246872-B2,1
US-8269281-B2,1
US-8269638-B2,1
US-8275199-B2,1
US-8276324-B2,1
US-8283840-B2,1
US-8284029-B2,1
US-8288525-B2,1
US-8298702-B2,1
US-8301234-B2,1
US-8303052-B2,1
US-8306451-B2,1
US-8316006-B2,1
US-8321914-B2,1
US-8324168-B2,1
US-8342564-B2,1
US-8353515-B2,1
US-8359490-B2,1
US-8362991-B2,1
US-8366904-B2,1
US-8367383-B2,1
US-8369289-B2,1
US-8370234-B2,1
US-8373784-B2,1
US-8389486-B2,1
US-8403311-B2,1
US-8408441-B2,1
US-8415128-B2,1
US-8433208-B2,1
US-8445305-B2,1
US-8451089-B2,1
US-8461305-B2,1
US-8462543-B2,1
US-8468999-B2,1
US-8475379-B2,1
US-8475411-B2,1
US-8478958-B2,1
US-8481489-B2,1
US-8484213-B2,1
US-8491435-B2,1
US-8493575-B2,1
US-8496000-B2,1
US-8499356-B2,1
US-8510184-B2,1
US-8513702-B2,1
US-8514326-B2,1
US-8520058-B2,1
US-8531248-B2,1
US-8537245-B2,1
US-8552806-B2,1
US-8560450-B2,1
US-8568565-B2,1
US-7644492-B2,1
US-7644531-B2,1
US-7655308-B2,1
US-7676902-B2,1
US-7697360-B2,1
US-7699404-B2,1
US-7700771-B2,1
US-7719667-B2,1
US-7720478-B2,1
US-7730743-B2,1
US-7731863-B2,1
US-7737864-B2,1
US-7746250-B2,1
US-7754894-B2,1
US-7767747-B2,1
US-7775796-B2,1
US-7778436-B2,1
US-7801858-B2,1
US-7804783-B2,1
US-7810481-B2,1
US-7828856-B2,1
US-7841047-B2,1
US-7842656-B2,1
US-7853440-B2,1
US-7877770-B2,1
US-7885415-B2,1
US-7891601-B2,1
US-7898177-B2,1
US-7899605-B2,1
US-7916315-B2,1
US-7923697-B2,1
US-7928106-B2,1
US-7928235-B2,1
US-7933348-B2,1
US-7940834-B2,1
US-7954453-B2,1
US-7982438-B2,1
US-7985341-B2,1
US-8002451-B2,1
US-8005941-B2,1
US-8025749-B2,1
US-8029633-B2,1
US-8040639-B2,1
US-8070471-B2,1
US-8075629-B2,1
US-8087045-B2,1
US-8088991-B2,1
US-8119066-B2,1
US-8125875-B2,1
US-8129596-B2,1
US-8134137-B2,1
US-8136982-B2,1
US-8137295-B2,1
US-8139731-B2,1
US-8141404-B2,1
US-8159654-B2,1
US-8180817-B2,1
US-8183798-B2,1
US-8190075-B2,1
US-8213403-B2,1
US-8219832-B2,1
US-8229673-B2,1
US-8250231-B2,1
US-8252225-B2,1
US-8252491-B2,1
US-8267853-B2,1
US-8285133-B2,1
US-8305087-B2,1
US-8306076-B2,1
US-8307973-B2,1
US-8334212-B2,1
US-8334976-B2,1
US-8335668-B2,1
US-8340986-B2,1
US-8341464-B2,1
US-8343975-B2,1
US-8358913-B2,1
US-8364696-B2,1
US-8365543-B2,1
US-8382949-B2,1
US-8389215-B2,1
US-8400513-B2,1
US-8404104-B2,1
US-8423896-B2,1
US-8434035-B2,1
US-8444244-B2,1
US-8449208-B2,1
US-8452287-B2,1
US-8454079-B2,1
US-8458121-B2,1
US-8464271-B2,1
US-8487101-B2,1
US-8491585-B2,1
US-8495597-B2,1
US-8505265-B2,1
US-8506716-B2,1
US-8513311-B2,1
US-8515429-B2,1
US-8520301-B2,1
US-8523034-B2,1
US-8525420-B2,1
US-8528725-B2,1
US-8528838-B2,1
US-8530066-B2,1
US-8531887-B2,1
US-8553716-B2,1
US-8562708-B2,1
US-8570129-B2,1
US-8573132-B2,1
US-8596900-B2,1
US-8601637-B2,1
US-8602099-B2,1
US-8621521-B2,1
US-8622548-B2,1
US-8627855-B2,1
US-8630848-B2,1
US-8639655-B2,1
US-8657558-B2,1
US-8658651-B2,1
US-8658858-B2,1
US-8684584-B2,

2025-01-19 03:21:51 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:51 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:51 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:53 - snowflake.connector.cursor - INFO - Number of results in first chunk: 990
2025-01-19 03:21:53 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:54 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:54 - root - INFO - SQL:
SELECT "publication_number", "inventor_harmonized"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,inventor_harmonized
JP-1810118-C,[]
JP-1203714-C,[]
FR-1500580-A,"[
  {
    ""country_code"": """",
    ""name"": ""IV FLAVIUS EUGENE DAVIS""
  }
]"
ES-8501233-A1,[]
CA-2165155-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""AMBUTER HAL""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""ALWART TODD STEPHEN""
  }
]"
FR-2409943-B1,[]
GB-1086860-A,[]
JP-S54117658-A,"[
  {
    ""country_code"": """",
    ""name"": ""TAKIZAWA AKIO""
  }
]"
JP-H0710178-Y2,[]
JP-3172057-B2,[]
US-136580-A,[]
US-272220-A,[]
US-599187-A,[]
CN-1062411-C,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""JAEGER K F""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""KILBRIDE T""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""LISA R E""
  }
]"
DE-1479218-U,[]
EP-2512367-B1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""KNIZE DAVID""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""KOYFMAN ILYA S""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""YUAN JENNY J""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""HILL DONALD G""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""HOFFMAN MICHAEL""
  }
]"
ES-2312527-T3,"[
  {
    ""country_code"": ""GB"",
    ""name"": ""AUSTIN MARK""
  }
]"
FR-1000748-A,"[
  {
    ""country_code"": """",
    ""name"": ""WAVEREN MARIUS VAN""
  }
]"
FR-1573809-A,[]
JP-S5066757-U,[]
JP-S5845249-Y2,[]
US-2103405-A,"[
  {
    ""country_code"": """",
    ""name"": ""CHRISTIAN FRANK T""
  }
]"
GB-201114438-D0,[]
JP-5707248-B2,[]
JP-2016211567-A,"[
  {
    ""country_code"": """",
    ""name"": ""METZ DIETMAR""
  },
  {
    ""country_code"": """",
    ""name"": ""STEFAN JAKOB""
  },
  {
    ""country_code"": """",
    ""name"": ""HEDWING SCHICK""
  },
  {
    ""country_code"": """",
    ""name"": ""PIETROWSKI HERBERT""
  },
  {
    ""country_code"": """",
    ""name"": ""NEUSCHWANDER HELMUT""
  }
]"
KR-20040075216-A,"[
  {
    ""country_code"": """",
    ""name"": ""KIM TAE JIN""
  }
]"
CN-1954806-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""WANG JIAQUAN DONG""
  }
]"
CN-201399214-Y,"[
  {
    ""country_code"": """",
    ""name"": ""GAOJUN HE""
  },
  {
    ""country_code"": """",
    ""name"": ""ZUNKUN YANG""
  }
]"
JP-1368881-C,[]
JP-1444589-C,[]
FR-1497898-A,[]
DE-2707796-A1,"[
  {
    ""country_code"": """",
    ""name"": ""HAYASHI KIYOSHI""
  }
]"
DE-2962208-D1,"[
  {
    ""country_code"": """",
    ""name"": ""CIGANEK ENGELBERT""
  }
]"
FR-2233137-A1,[]
GB-2224027-B,"[
  {
    ""country_code"": """",
    ""name"": ""BRAQUET PIERRE""
  },
  {
    ""country_code"": """",
    ""name"": ""DIVE GEORGES""
  },
  {
    ""country_code"": """",
    ""name"": ""GODFROID JEAN-JACQUES""
  },
  {
    ""country_code"": """",
    ""name"": ""HEYMANS FRAN OISE""
  },
  {
    ""country_code"": """",
    ""name"": ""PIROTSKY EDUARDO""
  }
]"
JP-S5911756-Y2,[]
JP-2000218515-A,"[
  {
    ""country_code"": """",
    ""name"": ""AMANO TAKESHI""
  },
  {
    ""country_code"": """",
    ""name"": ""KIYONO TOSHIHIRO""
  }
]"
JP-S56169301-A,"[
  {
    ""country_code"": """",
    ""name"": ""AKASHI MASAO""
  },
  {
    ""country_code"": """",
    ""name"": ""SATOU HIROMI""
  }
]"
US-2002102047-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""AKKARAJU SANDEEP""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""MASTRANGELO CARLOS""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""IYER NAN""
  }
]"
CN-1467804-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""LU MINGYUAN""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""XIE YIZHANG""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""TIAN HAOLUN""
  }
]"
EP-0988417-B1,"[
  {
    ""country_code"": ""AT"",
    ""name"": ""HALMSCHLAGER GUENTER""
  },
  {
    ""country_code"": ""AT"",
    ""name"": ""HOLZER WALTER""
  },
  {
    ""country_code"": ""DE"",
    ""name"": ""STEINER KARL""
  }
]"
JP-H04334685-A,"[
  {
    ""country_code"": """",
    ""name"": ""YAMANISHI EIJI""
  }
]"
JP-S6359143-U,[]
JP-H0685910-B2,[]
JP-H0350567-B2,[]
JP-5108773-B2,[]
CN-2768052-Y,"[
  {
    ""country_code"": ""HK"",
    ""name"": ""WEIHUI HE WEIQIANG WANG CHUQIA""
  }
]"
CN-1940157-B,"[
  {
    ""country_code"": """",
    ""name"": ""MICHAEL HIMMELSTOSS""
  }
]"
CN-202318915-U,"[
  {
    ""country_code"": """",
    ""name"": ""LIQI CHEN""
  },
  {
    ""country_code"": """",
    ""name"": ""GUANG YANG""
  },
  {
    ""country_code"": """",
    ""name"": ""HUSI OU""
  }
]"
CN-203200362-U,"[
  {
    ""country_code"": """",
    ""name"": ""WU JIANMING""
  },
  {
    ""country_code"": """",
    ""name"": ""HUANG HUJUN""
  },
  {
    ""country_code"": """",
    ""name"": ""LIU YIMIN""
  },
  {
    ""country_code"": """",
    ""name"": ""WANG XING""
  },
  {
    ""country_code"": """",
    ""name"": ""WANG YUGANG""
  },
  {
    ""country_code"": """",
    ""name"": ""ZHAO JINLONG""
  },
  {
    ""country_code"": """",
    ""name"": ""ZHANG BO""
  },
  {
    ""country_code"": """",
    ""name"": ""ZHU JI

2025-01-19 03:21:54 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:54 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:54 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:55 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:55 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:56 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:56 - root - INFO - SQL:
SELECT p."publication_number", f.value::VARIANT:"code"::STRING AS "ipc_code"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."ipc") f
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,ipc_code
CN-104260754-A,B61K9/08
US-3939506-A,E03D9/052
US-3939506-A,E03D9/04
KR-101486666-B1,H05K7/20
KR-101486666-B1,H02K5/18
KR-101017597-B1,G06T17/05
JP-2010511460-A,A61L9/03
CN-102085956-B,B65F9/00
RU-2039928-C1,G01B13/02
CN-104891425-A,B81B7/02
CN-104891425-A,G01F1/56
US-8520301-B2,G02B5/28
US-8520301-B2,G02B5/20
US-8520301-B2,G02B1/10
US-8520301-B2,G02B5/08
US-4767715-A,C12C1/10
US-8463797-B2,G06F17/30
EP-1506427-A1,G06T15/08
EP-1506427-A1,G01R33/56
EP-1506427-A1,G06T5/00
EP-1506427-A1,G01R33/563
EP-1506427-A1,G01N24/08
EP-1506427-A1,A61B5/055
EP-1506427-A1,G06T17/00
EP-1506427-A1,G01R33/54
US-4168984-A,C04B24/18
US-4168984-A,C04B24/04
US-4168984-A,C04B24/10
US-3328541-A,G07F7/08
US-3328541-A,G07F7/02
US-4520785-A,F02M25/00
US-4520785-A,F02M21/04
US-4520785-A,F02B43/00
US-4520785-A,F02D19/08
US-4520785-A,F02M21/02
US-4520785-A,F02D23/00
CN-102699533-B,B23K26/21
CN-102699533-B,B23K26/70
WO-2010013298-A1,B62D6/00
WO-2010013298-A1,B62D5/04
JP-2014201698-A,C08G59/40
JP-2014201698-A,C08K3/00
JP-2014201698-A,H05K1/03
JP-2014201698-A,C08L71/10
JP-2014201698-A,C08L63/00
CN-100462795-C,G02F1/1337
CN-100462795-C,B05D1/02
CN-100462795-C,G02F1/1339
CN-100462795-C,G02F1/1333
CN-100462795-C,B05D7/24
CN-103105794-A,B32B43/00
CN-103105794-A,G05B19/04
US-7173260-B2,G21G5/00
US-7173260-B2,H01L21/76
US-4730660-A,B22D11/14
US-4730660-A,B22D11/16
US-4730660-A,B22D11/18
CN-102241207-A,B41M3/06
CN-103423048-A,F02M37/22
CN-103467811-A,C08K13/06
CN-103467811-A,C08K3/28
CN-103467811-A,C08L33/08
CN-103467811-A,F16L9/12
CN-103467811-A,C08K3/34
CN-103467811-A,C08K5/098
CN-103467811-A,C08K3/26
CN-103467811-A,C08L23/06
EP-2019421-A2,H01L21/60
EP-2019421-A2,H01L23/48
EP-2019421-A2,H01L23/485
US-2572662-A,H01H1/0237
DE-3139882-A1,F41A17/46
DE-3139882-A1,F41A17/04
FR-2598422-A1,A61P25/28
FR-2598422-A1,A61P25/08
FR-2598422-A1,C07K5/02
FR-2598422-A1,A61K31/195
US-2564636-A,G04C3/06
EP-1030654-A1,A61K9/36
EP-1030654-A1,A61K47/38
EP-1030654-A1,A61K9/32
EP-1030654-A1,A61P1/04
EP-1030654-A1,A61K9/28
EP-1030654-A1,A61K31/4439
EP-1030654-A1,A61K9/34
EP-1030654-A1,A61K47/02
EP-1030654-A1,A61K9/50
EP-1030654-A1,A61K9/30
EP-1030654-A1,A61P1/00
US-2702615-A,G05G11/00
US-2702615-A,B63H21/22
FR-3029452-A1,B60C19/00
FR-3029452-A1,B29D30/06
US-7218306-B2,G09F13/04
US-7218306-B2,G09G3/36
JP-H0654470-A,H02K23/40
JP-H0654470-A,H02K1/24
JP-H0654470-A,H02K1/02
KR-101374838-B1,G02B1/11
KR-101374838-B1,G02B3/00
KR-101374838-B1,G02B5/18
EP-0333403-A2,B41J2/505
EP-0333403-A2,B41J29/26
CN-102673959-A,B65G27/04
US-5765303-A,F41A21/18
CN-100530868-C,H01T4/16
CN-101328148-B,C07D233/34
EP-2523909-A2,A47G19/22
EP-2523909-A2,C02F1/44
EP-2523909-A2,C02F1/28
EP-2523909-A2,B01D35/02
EP-2523909-A2,A47J41/00
EP-2523909-A2,B01D29/11
JP-H07323517-A,B41F15/26
JP-H07323517-A,H05K3/12
JP-H07323517-A,B41F15/18
JP-H07323517-A,H05K3/34
JP-H07323517-A,B41F15/36
JP-H07323517-A,B41F15/08
US-3793211-A,A61K8/22
US-3793211-A,A61Q11/02
US-3793211-A,C11D3/395
US-3793211-A,C11D3/00
US-3793211-A,C11D3/39
US-3793211-A,A61K8/55
US-3793211-A,A61K8/20
CN-102924275-A,C07C67/54
CN-102924275-A,C07C69/14
CN-102924275-A,C07C67/60
US-3319424-A,F02K7/18
US-3319424-A,F02K9/36
US-3039712-A,B65H67/04
US-3039712-A,B65H19/22
CN-105111899-A,C09D5/03
CN-105111899-A,C09D7/12
CN-105111899-A,C09D167/00
EP-2963281-A1,F02M69/46
EP-2963281-A1,F02M61/14
EP-2963281-A1,F02M55/02
EP-2122559-A2,G06Q50/00
EP-2122559-A2,G05B15/00
CN-101733998-B,B32B38/10
JP-S60239748-A,G03C7/30
JP-S60239748-A,G03C7/42
JP-S60239748-A,G03C11/00
JP-S60239748-A,G03C7/327
JP-S60239748-A,G03C7/32
EP-2382496-A4,G01L1/24
EP-2382496-A4,G01K11/32
EP-2382496-A4,G01B11/00
EP-2382496-A4,G02B6/00
EP-2382496-A4,G02B6/02
JP-2013014873-A,D03C7/06
JP-4622665-B2,F16H57/04
JP-4622665-B2,B01D35/02
JP-4622665-B2,B01D29/50
JP-4622665-B2,B01D35/30
JP-H02167523-A,G02C7/06
JP-H02167523-A,B23Q15/00
JP-H02167523-A,B24B9/14
JP-H02167523-A,G02C13/00
US-5233553-A,G06F12/02
US-5233553-A,G06F9/355
US-5233553-A,G06F7/505
US-5233553-A,G06F7/50
US-9322575-B2,G02B5/08
US-9322575-B2,F24J2/10
US-9322575-B2,F24J2/16
US-9322575-B2,C03C17/36
CN-105188355-A,A01K29/00
US-8251903-B2,A61B5/00
CN-103864511-A,C05G3/00
DE-102004025034-A1,B60R7/06
DE-102004025034-A1,E05D1/04
DE-102004025034-A1,E05D3/02
DE-102004025034-A1,E05D1/06
DE-102004025034-A1,F16C11/04
US-8011721-B2,B60K37/00
EP-1854719-A3,H05B3/28
EP-1854719-A3,B64D13/00
EP-1854719-A3,F24D13/02
US-5528921-A,B21D7/06
GB-2537667-A,F16C11/06
GB-2537667-A,A47G5/00
GB-2537667-A,A47B21/02
US-5355615-A,A01K91/08
CN-1741767-B,A61B5/15
JP-2009139292-A,G01N35/00
JP-2009139292-A,G01N35/02
JP-H04505601-A,C04B38/10
JP-H04505601-A,E04F13/14
JP-H04505601-A,C04B28/14
JP-H04505601-A,B32B13/14
JP-H04505601-A,E04C2/04
CN-103856336-A,H04L12/18
CN-103856336-A,H04L29/06
DE-1109453-B,F02C7/00
CN-105776223-A,C01B33/107
US-3504962-A,E06B9/24
JP-S6198840-A,E04F19/06
JP-S6198840-A,E04F13/21
JP-S6198840-A,E04B1/684
JP-S6198840-A,E04F13/08
JP-S6198840-A,E04B1/66
JP-S6198840-A,E04F19/02
CN-106297967-A,G02F1/133
CN-106297967-A,H01B1/02
CN

2025-01-19 03:21:56 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:56 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:56 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:57 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:57 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:57 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:57 - root - INFO - SQL:
SELECT "publication_number", "title_localized"::VARIANT:"text"::STRING AS "title"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,title
JP-1810118-C,
JP-1203714-C,
FR-1500580-A,
ES-8501233-A1,
CA-2165155-A1,
FR-2409943-B1,
GB-1086860-A,
JP-S54117658-A,
JP-H0710178-Y2,
JP-3172057-B2,
US-136580-A,
US-272220-A,
US-599187-A,
CN-1062411-C,
DE-1479218-U,
EP-2512367-B1,
ES-2312527-T3,
FR-1000748-A,
FR-1573809-A,
JP-S5066757-U,
JP-S5845249-Y2,
US-2103405-A,
GB-201114438-D0,
JP-5707248-B2,
JP-2016211567-A,
KR-20040075216-A,
CN-1954806-A,
CN-201399214-Y,
JP-1368881-C,
JP-1444589-C,
FR-1497898-A,
DE-2707796-A1,
DE-2962208-D1,
FR-2233137-A1,
GB-2224027-B,
JP-S5911756-Y2,
JP-2000218515-A,
JP-S56169301-A,
US-2002102047-A1,
CN-1467804-A,
EP-0988417-B1,
JP-H04334685-A,
JP-S6359143-U,
JP-H0685910-B2,
JP-H0350567-B2,
JP-5108773-B2,
CN-2768052-Y,
CN-1940157-B,
CN-202318915-U,
CN-203200362-U,
JP-897785-C,
JP-1789132-C,
JP-S62113530-U,
CA-118661-S,
FI-882364-A0,
CA-810158-A,
DE-2335240-A1,
DE-7610943-U1,
JP-H0673947-U,
JP-S54153049-A,
JP-S5716116-U,
US-548167-A,
CN-1055840-A,
JP-S6020713-A,
JP-S6234024-A,
JP-H0995081-A,
JP-H1088758-A,
GB-189709494-A,
JP-2001195445-A,
JP-2010101160-A,
CN-101746294-A,
CN-104170353-A,
CN-206056613-U,
JP-1032657-C,
JP-1654837-C,
DK-146223-C,
CA-564325-A,
GB-0802422-D0,
JP-S53139175-U,
JP-H01150349-U,
JP-2600796-Y2,
JP-S591896-U,
JP-S4922438-B1,
US-419959-A,
DE-69331528-D1,
DE-69430885-T2,
EP-1474362-B1,
JP-2000346423-A,
JP-2765752-B2,
KR-900003183-Y1,
JP-2003229053-A,
JP-2007241524-A,
JP-5129599-B2,
KR-100547071-B1,
KR-20070020426-A,
KR-20130050682-A,
CN-204556165-U,
ES-66185-Y,
CA-1331409-C,
FI-891492-A0,
GB-1348507-A,
JP-S60179587-U,
US-332138-A,
CN-1112492-C,
DE-566539-C,
DE-845109-C,
JP-S63125649-A,
JP-S6423693-U,
JP-S5243021-U,
JP-S5566205-U,
JP-H0825023-B2,
JP-2003215980-A,
JP-4255884-B2,
KR-100295305-B1,
CN-101547005-A,
CN-101988676-A,
CN-203259375-U,
CN-205932945-U,
DE-202006018912-U1,
FR-2828332-A1,
GB-1375879-A,
JP-S53161674-U,
US-2053075-A,
CN-2484753-Y,
CN-1212523-A,
FI-20010786-A,
JP-S6359144-U,
JP-2799203-B2,
JP-H08143121-A,
US-1837725-A,
US-2304134-A,
US-1864623-A,
JP-5991128-B2,
JP-2016105749-A,
RU-2191214-C2,
RU-2008140707-A,
CN-103265598-B,
CN-203928708-U,
CN-204557664-U,
CN-206326242-U,
CN-104559893-B,
CN-106856628-A,
US-6778773-B2,
JP-H00985753-A,
JP-1512007-C,
NL-28211-C,
CA-2184504-C,
FR-877274-A,
JP-S60218905-A,
JP-H04326774-A,
JP-S5125160-A,
FR-1012104-A,
JP-S5944363-A,
JP-H081564-A,
US-1233474-A,
US-2002011230-A1,
JP-2003169856-A,
US-811638-A,
KR-200338652-Y1,
KR-20070041890-A,
CN-1816294-A,
CN-2858160-Y,
CN-201276086-Y,
CN-201816145-U,
CN-102907994-A,
JP-1573454-C,
JP-1721868-C,
JP-2100371-C,
DK-358583-D0,
ES-146285-Y,
GB-478690-A,
DE-2649618-B2,
DE-3766112-D1,
DE-8007402-U1,
FR-390089-A,
FR-638126-A,
FR-2638622-B1,
JP-H0584037-U,
JP-S4739450-Y1,
JP-H0642846-U,
NL-296405-A,
NL-7211943-A,
EP-2781788-B1,
JP-S5072414-U,
JP-S5846920-U,
JP-S5874811-U,
JP-S5687776-U,
US-D279853-S,
KR-920008597-Y1,
JP-2004313014-A,
JP-6137070-B2,
RU-2008132286-A,
US-754320-A,
CN-105823611-A,
CN-106739164-A,
CN-205558012-U,
BE-512467-A,
CA-2244766-A1,
DE-1803332-A1,
DE-2149141-A1,
GB-2089320-A,
JP-S62164685-U,
JP-H066780-Y2,
DE-69322442-T2,
EP-1933436-B1,
EP-0782478-B1,
EP-0993180-B1,
JP-S5128923-U,
JP-S5153284-U,
JP-S5376919-A,
JP-3340813-B2,
JP-2000192758-A,
JP-H11193667-A,
RU-17326-U1,
KR-20110049427-A,
CN-101531763-A,
CN-201900010-U,
CN-202142477-U,
CN-202417422-U,
CN-202807027-U,
CA-27189-A,
JP-S4874140-A,
JP-2887866-B2,
FR-2239893-A5,
JP-H09201246-A,
JP-S6125607-Y2,
JP-H069665-Y2,
JP-H02145867-U,
DE-1899993-U,
DK-1279779-T3,
EP-1395943-B1,
JP-S61104472-A,
US-3605178-A,
ES-2301340-B1,
KR-890006762-Y1,
KR-910005717-Y1,
JP-WO2006134667-A1,
JP-WO2011121828-A1,
JP-6013229-B2,
KR-200371816-Y1,
KR-20040093694-A,
CN-104911016-A,
JP-1721970-C,
JP-H00979262-A,
JP-2045702-C,
CA-607467-A,
CA-870537-A,
DE-2913333-C2,
GB-2156898-B,
GB-9701425-D0,
DE-69108459-T2,
DE-69402587-D1,
DE-690465-C,
JP-S5354430-A,
JP-S5788835-A,
JP-H0510017-A,
JP-H08159838-A,
US-1863894-A,
JP-4882580-B2,
JP-5210626-B2,
RU-2345965-C2,
RU-2355420-C2,
KR-100352139-B1,
KR-100387884-B1,
KR-20120048256-A,
CN-201742521-U,
CN-202693633-U,
CN-202679530-U,
CN-106625363-A,
CN-205519698-U,
JP-1260064-C,
DE-54582-C,
ES-128308-A1,
DE-2516533-A1,
GB-0905075-D0,
GB-192211-A,
JP-2605593-Y2,
JP-S5020200-Y2,
JP-S524076-A,
DE-19811661-A1,
DE-29605835-U1,
DE-69131766-T2,
EP-2982223-A2,
EP-0172283-B1,
JP-S5743740-U,
JP-H04296316-A,
US-D487006-S,
US-3538803-A,
US-2002044447-A1,
JP-2003225526-A,
JP-2005299236-A,
JP-2010128199-A,
KR-101187803-B1,
CN-201628697-U,
CA-1192088-A1,
JP-1028326-C,
BE-782111-A1,
CA-1190527-A,
CA-2093193-C,
DE-130839-C,
ES-2051228-B1,
FR-554877-A,
FR-2636364-B1,
JP-S57153931-A,
JP-S5224357-Y2,
JP-H04314168-A,
DE-19851242-A1,
EP-2728262-B1,
ES-2463442-T3,
JP-S5541406-U,
JP-S609186-Y2,
JP-H04361539-A,
JP-H1117252-A,
JP-H02111359-A,
ES-1048572-U,
GB-201212390-D0,
KR-930004522-B1,
GB-190307993-A,
JP-5563820-B2,
JP-3167197-U,
KR-19980022791-U,
KR-20150068298-A,
CN-1649445-A,
CN-101762881-A,
CN-204219963-U,
CN-106140778-A,
CN-105167468-A,
CN-106

2025-01-19 03:21:57 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:57 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:57 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:21:59 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1000
2025-01-19 03:21:59 - snowflake.connector.connection - INFO - closed
2025-01-19 03:21:59 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:21:59 - root - INFO - SQL:
SELECT "publication_number", "assignee_harmonized"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Results:
Too long, hard cut:
publication_number,assignee_harmonized
JP-1810118-C,[]
JP-1203714-C,[]
FR-1500580-A,"[
  {
    ""country_code"": """",
    ""name"": ""MATTERN WARE AND DAVIS""
  }
]"
ES-8501233-A1,"[
  {
    ""country_code"": ""FR"",
    ""name"": ""CERM CENT EUROP RECH MAUVERNAY""
  }
]"
CA-2165155-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""PROCTER & GAMBLE""
  }
]"
FR-2409943-B1,"[
  {
    ""country_code"": """",
    ""name"": ""NIXDORF COMPUTER AG""
  }
]"
GB-1086860-A,"[
  {
    ""country_code"": """",
    ""name"": ""UNION STARCH & REFINING CO INC""
  },
  {
    ""country_code"": """",
    ""name"": ""ARANGUREN Y CIA S A""
  }
]"
JP-S54117658-A,"[
  {
    ""country_code"": """",
    ""name"": ""TAKIZAWA AKIO""
  }
]"
JP-H0710178-Y2,[]
JP-3172057-B2,[]
US-136580-A,[]
US-272220-A,[]
US-599187-A,[]
CN-1062411-C,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""BASF CORP""
  }
]"
DE-1479218-U,[]
EP-2512367-B1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""ETHICON INC""
  }
]"
ES-2312527-T3,"[
  {
    ""country_code"": """",
    ""name"": ""APPSENSE LTD""
  }
]"
FR-1000748-A,[]
FR-1573809-A,[]
JP-S5066757-U,[]
JP-S5845249-Y2,[]
US-2103405-A,"[
  {
    ""country_code"": """",
    ""name"": ""ECLIPSE MACHINE CO""
  }
]"
GB-201114438-D0,"[
  {
    ""country_code"": """",
    ""name"": ""AIRBUS OPERATIONS LTD""
  }
]"
JP-5707248-B2,[]
JP-2016211567-A,"[
  {
    ""country_code"": """",
    ""name"": ""BORGWARNER INC""
  },
  {
    ""country_code"": """",
    ""name"": ""MANN & HUMMEL GMBH""
  }
]"
KR-20040075216-A,"[
  {
    ""country_code"": """",
    ""name"": ""SAMSUNG ELECTRONICS CO LTD""
  }
]"
CN-1954806-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""MEDICAL COLLEGE SHANTOU UNIV""
  }
]"
CN-201399214-Y,"[
  {
    ""country_code"": """",
    ""name"": ""GOODBABY CHILD PRODUCTS CO LTD""
  }
]"
JP-1368881-C,[]
JP-1444589-C,[]
FR-1497898-A,"[
  {
    ""country_code"": """",
    ""name"": ""BRANSON INSTR""
  }
]"
DE-2707796-A1,"[
  {
    ""country_code"": """",
    ""name"": ""SHIN SHIRASUNA ELECTRIC CORP""
  }
]"
DE-2962208-D1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""DU PONT""
  }
]"
FR-2233137-A1,"[
  {
    ""country_code"": ""IT"",
    ""name"": ""DELLA FLORA COSTRUZIONI MECCAN""
  }
]"
GB-2224027-B,"[
  {
    ""country_code"": ""FR"",
    ""name"": ""SCRAS""
  }
]"
JP-S5911756-Y2,[]
JP-2000218515-A,"[
  {
    ""country_code"": """",
    ""name"": ""SPEEDFAM IPEC CO LTD""
  }
]"
JP-S56169301-A,"[
  {
    ""country_code"": """",
    ""name"": ""TOHOKU METAL IND LTD""
  }
]"
US-2002102047-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""CORNING INC""
  }
]"
CN-1467804-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""SILICON INTEGRATED SYS CORP""
  }
]"
EP-0988417-B1,"[
  {
    ""country_code"": ""DE"",
    ""name"": ""VOITH PAPER PATENT GMBH""
  }
]"
JP-H04334685-A,"[
  {
    ""country_code"": """",
    ""name"": ""SUZUKI MOTOR CO""
  }
]"
JP-S6359143-U,[]
JP-H0685910-B2,[]
JP-H0350567-B2,[]
JP-5108773-B2,[]
CN-2768052-Y,"[
  {
    ""country_code"": ""HK"",
    ""name"": ""THOMSON HONGKONG CO LTD""
  }
]"
CN-1940157-B,"[
  {
    ""country_code"": """",
    ""name"": ""STAUBLI LYON""
  }
]"
CN-202318915-U,"[
  {
    ""country_code"": """",
    ""name"": ""WENZHOU HUANQIU AUTOMOTIVE PAD CO LTD""
  }
]"
CN-203200362-U,"[
  {
    ""country_code"": """",
    ""name"": ""JINCHUAN GROUP CO LTD""
  }
]"
JP-897785-C,[]
JP-1789132-C,[]
JP-S62113530-U,[]
CA-118661-S,"[
  {
    ""country_code"": ""SE"",
    ""name"": ""BABY BJOERN AB""
  }
]"
FI-882364-A0,"[
  {
    ""country_code"": ""FI"",
    ""name"": ""TMI T MAEKELAE""
  }
]"
CA-810158-A,"[
  {
    ""country_code"": """",
    ""name"": ""PROCTER & GAMBLE""
  }
]"
DE-2335240-A1,"[
  {
    ""country_code"": """",
    ""name"": ""MASCHF AUGSBURG NUERNBERG AG""
  }
]"
DE-7610943-U1,[]
JP-H0673947-U,[]
JP-S54153049-A,"[
  {
    ""country_code"": """",
    ""name"": ""SUMITOMO ELECTRIC INDUSTRIES""
  }
]"
JP-S5716116-U,[]
US-548167-A,[]
CN-1055840-A,"[
  {
    ""country_code"": ""DE"",
    ""name"": ""FELTEN & GUILLEAUME ENERHIETEC""
  }
]"
JP-S6020713-A,"[
  {
    ""country_code"": """",
    ""name"": ""MITSUBISHI ELECTRIC CORP""
  }
]"
JP-S6234024-A,"[
  {
    ""country_code"": """",
    ""name"": ""SEKISUI CHEMICAL CO LTD""
  },
  {
    ""country_code"": """",
    ""name"": ""SAGINOMIYA SEISAKUSHO INC""
  }
]"
JP-H0995081-A,"[
  {
    ""country_code"": """",
    ""name"": ""BUTSUKU CENTER CREATE KK""
  }
]"
JP-H1088758-A,"[
  {
    ""country_code"": """",
    ""name"": ""SHIN NIKKEI CO LTD""
  }
]"
GB-189709494-A,"[
  {
    ""country_code"": ""BE"",
    ""name"": ""GRISLAIN JUSTINIEN""
  }
]"
JP-2001195445-A,"[
  {
    ""country_code"": """",
    ""name"": ""TEXAS INSTRUMENTS INC""
  }
]"
JP-2010101160-A,"[
  {
    ""country_code"": """",
    ""name"": ""EVONIK ROEHM GMBH""
  }
]"
CN-101746294-A,"[
  {
    ""country_code"": """",
    ""name"": ""HYUNDAI MOTOR CO LTD""
  },
  {
    ""country_code"": """",
    ""name"": ""KIA MOTORS 

2025-01-19 03:21:59 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:21:59 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:21:59 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:22:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 15
2025-01-19 03:22:01 - snowflake.connector.connection - INFO - closed
2025-01-19 03:22:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:22:01 - root - INFO - SQL:
SELECT DISTINCT "application_kind"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Results:
application_kind
B
U
H
""
C
A
D
F
K
Q
M
T
W
E
V

2025-01-19 03:22:01 - root - INFO - itercount: 0
2025-01-19 03:22:01 - root - INFO - Database Name: PATENTS_GOOGLE
Schema Name: PATENTS_GOOGLE
DDL describes table information.
,0
table_name,CPC_DEFINITION
description,
DDL,"create or replace TABLE CPC_DEFINITION (
	""applicationReferences"" VARIANT,
	""breakdownCode"" BOOLEAN,
	""childGroups"" VARIANT,
	""children"" VARIANT,
	""dateRevised"" FLOAT,
	""definition"" VARIANT,
	""glossary"" VARIANT,
	""informativeReferences"" VARIANT,
	""ipcConcordant"" VARCHAR(16777216),
	""level"" FLOAT,
	""limitingReferences"" VARIANT,
	""notAllocatable"" BOOLEAN,
	""parents"" VARIANT,
	""precedenceLimitingReferences"" VARIANT,
	""residualReferences"" VARIANT,
	""rules"" VARIANT,
	""scopeLimitingReferences"" VARIANT,
	""status"" VARCHAR(16777216),
	""symbol"" VARCHAR(16777216),
	""synonyms"" VARIANT,
	""titleFull"" VARCHAR(16777216),
	""titlePart"" VARIANT
);"

,1
table_name,DISCLOSURES_13
description,
DDL,"create or replace TABLE DISCLOSURES_13 (
	""family_id"" VARCHAR(16777216),
	""record_id"" VARCHAR(16777216),
	""disclosure_event"" VARCHAR(16777216),
	""sso"" VARCHAR(16777216),
	""patent_owner_harmonized"" VARCHAR(16777216),
	""patent_owner_unharmonized"" VARCHAR(16777216),
	""date"" NUMBER(38,0),
	""standard"" VARCHAR(16777216),
	""committee_project"" VARCHAR(16777216),
	""tc_name"" VARCHAR(16777216),
	""sc_name"" VARCHAR(16777216),
	""wg_name"" VARCHAR(16777216),
	""licensing_commitment"" VARCHAR(16777216),
	""copyright"" VARCHAR(16777216),
	""blanket_type"" VARCHAR(16777216),
	""blanket_scope"" VARCHAR(16777216),
	""third_party"" VARCHAR(16777216),
	""reciprocity"" VARCHAR(16777216),
	""serial_cleaned"" VARCHAR(16777216),
	""pub_cleaned"" VARCHAR(16777216)
);"

,2
table_name,PUBLICATIONS
description,
DDL,"create or replace TABLE PUBLICATIONS (
	""publication_number"" VARCHAR(16777216),
	""application_number"" VARCHAR(16777216),
	""country_code"" VARCHAR(16777216),
	""kind_code"" VARCHAR(16777216),
	""application_kind"" VARCHAR(16777216),
	""application_number_formatted"" VARCHAR(16777216),
	""pct_number"" VARCHAR(16777216),
	""family_id"" VARCHAR(16777216),
	""title_localized"" VARIANT,
	""abstract_localized"" VARIANT,
	""claims_localized"" VARIANT,
	""description_localized"" VARIANT,
	""publication_date"" NUMBER(38,0),
	""filing_date"" NUMBER(38,0),
	""grant_date"" NUMBER(38,0),
	""priority_date"" NUMBER(38,0),
	""priority_claim"" VARIANT,
	""inventor"" VARIANT,
	""inventor_harmonized"" VARIANT,
	""assignee"" VARIANT,
	""assignee_harmonized"" VARIANT,
	""examiner"" VARIANT,
	""uspc"" VARIANT,
	""ipc"" VARIANT,
	""cpc"" VARIANT,
	""fi"" VARIANT,
	""fterm"" VARIANT,
	""citation"" VARIANT,
	""entity_status"" VARCHAR(16777216),
	""art_unit"" VARCHAR(16777216)
);"

,3
table_name,ABS_AND_EMB
description,
DDL,"create or replace TABLE ABS_AND_EMB (
	""publication_number"" VARCHAR(16777216),
	""title"" VARCHAR(16777216),
	""title_translated"" BOOLEAN,
	""abstract"" VARCHAR(16777216),
	""abstract_translated"" BOOLEAN,
	""cpc"" VARIANT,
	""cpc_low"" VARIANT,
	""cpc_inventive_low"" VARIANT,
	""top_terms"" VARIANT,
	""similar"" VARIANT,
	""url"" VARCHAR(16777216),
	""country"" VARCHAR(16777216),
	""publication_description"" VARCHAR(16777216),
	""cited_by"" VARIANT,
	""embedding_v1"" VARIANT
);"

External knowledge that might be helpful: 
### IPC Codes: Handling Main IPC Code Selection

When dealing with the `ipc` field in the `patents-public-data.patents.publications` dataset, it is important to understand the structure of this field, especially the subfield `first`. This subfield is a boolean that indicates whether a given IPC code is the main code for the publication number in question. This is crucial because each patent publication can be associated with multiple IPC codes, signifying the various aspects of the technology covered by the patent.

However, not every publication in the dataset has a designated main IPC code. This lack of a clearly identified main IPC code complicates the process of determining the most relevant IPC code for each publication, as selecting a single IPC code from multiple possibilities without clear prioritization can lead to inconsistent or skewed analyses.

This approach ensures a more consistent and representative selection of IPC codes across the dataset, facilitating more accurate and meaningful analysis of patent trends and classifications. By focusing on the most frequently occurring 4-digit IPC code, the view helps overcome the limitations posed by the absence of a designated main IPC code, thereby enhancing the reliability of patent-related studies and insights derived from this data.

Here is an example

```
SELECT 
    t1.publication_number, 
    SUBSTR(ipc_u.code, 0, 4) as ipc4, 
    COUNT(
    SUBSTR(ipc_u.code, 0, 4)
    ) as ipc4_count 
FROM 
    `patents-public-data.patents.publications` t1, 
    UNNEST(ipc) AS ipc_u 
GROUP BY 
    t1.publication_number, 
    ipc4

```



# Text Embeddings (Similarity)

Patent documents are rich with textual data. In fact, most of the information contained in a patent document is text. This includes the `abstract_localized`, `description_localized`, and `claims_localized`. Textual data can be a powerful tool to analyze and compare patent scope and content across patents. However, before being able to use textual data, it needs to be vectorized or transformed into text embeddings that can be used by machine learning models. Therefore, creating text embeddings from the textual data of patents is necessary to compare patent contents. Technically speaking, running an NLP algorithm that creates embeddings for all U.S. patents is computationally difficult.

Nevertheless, Google runs their own machine learning algorithm which transforms patent text metadata into text embeddings which they report in `patents-public-data.google_patents_research.publications` table. The textual embeddings of one patent, without any knowledge on the algorithm being used to create them, are meaningless on their own. However, the embeddings are powerful when it comes to comparing textual content of two or more patents. Embeddings can be used to calculate a similarity score between any two patents. This similarity score is calculated by applying the dot product of the embeddings vector of the patents, as shown below:

The similarity \( \text{Similarty}_{i,k} \) between two patents \( i \) and \( k \) is calculated as the dot product of their embedding vectors:

\[
\text{Similarty}_{i,k} = \mathbf{v}_i \cdot \mathbf{v}_k
\]

where

\[
\mathbf{v}_i = [v_{i1}, v_{i2}, v_{i3}, \ldots, v_{iN}]
\]
and
\[
\mathbf{v}_k = [v_{k1}, v_{k2}, v_{k3}, \ldots, v_{kN}]
\]

are the embedding vectors for patents \( i \) and \( k \) respectively. The higher the dot product, the more similar the patents.





# Originality (Trajtenberg)

One of the most important measures of a patent is "basicness". The aspects of basicness are tough to measure. Nevertheless, some literature finds that important aspects of these measures are embodied in the relationship between the invention and the technological predcessors and successors it is connected to through, for example, patent citations. We can thus use patent citations to construct measures that identify basicness and appropriability. Trajtenberg et al. 1997 provide a number of these measures. They distinguish between:

1. Forward-looking measures: measures that are derived from the relationship between an invention and subsequent technologies that build upon it. These measures are thus constructed from the forward citations. One example of a forward-looking basicness measure they provide is Generality, which is calculated as:

\[
\text{GENERALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITING}_{G_k}}{\text{NCITING}_i} \right)
\]


2. Backward-looking measures: measures that are derived from the relationship between a given patent and the body of knowledge that preceded it. These measure are thus constructed from the backward citations. One example of a backward-looking basicness measure they provide is Orginality, which is calculated as:

\[
\text{ORIGINALITY}_i = 1 - \sum_{k=1}^{N_i} \left( \frac{\text{NCITED}_{i,k}}{\text{NCITED}_i} \right)
\]

With **NCITING** and **NCITED** defined as the number of patents citing the focal patent and the number of patents cited by the focal patent, respectively. Index `i` corresponds to the focal patent considered, and `k` is the index of patent classes. For example, **NCITED_2,3** refers to the number of patents in patent class 3 and cited by our focal patent 2.


The table structure information is ({database name: {schema name: {table name}}}): 
{'PATENTS_GOOGLE': {'PATENTS_GOOGLE': ['ABS_AND_EMB', 'CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **"PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"**
  - **"publication_number"**: To uniquely identify patents.
  - **"country_code"**: To filter for United States patents ('US').
  - **"kind_code"**: To filter for patents under the B2 classification.
  - **"grant_date"**: To filter patents granted between 2010 and 2014.
  - **"filing_date"**: To determine the filing date of patents.
  - **"citation"**: Contains backward citations made by the patent.
  
- **"PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB"**
  - **"publication_number"**: To link with the PUBLICATIONS table.
  - **"cited_by"**: To find forward citations to the patent.
  - **"embedding_v1"**: To compute similarity between patents using embeddings.

---

**SQL Queries:**

1. **Retrieve distinct kind codes to understand the classification types available:**
   ```sql
   SELECT DISTINCT "kind_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   LIMIT 1000;
   ```

2. **List distinct country codes to identify the countries represented in the dataset:**
   ```sql
   SELECT DISTINCT "country_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   LIMIT 1000;
   ```

3. **Find the range of grant dates to understand the time span of the patents:**
   ```sql
   SELECT MIN("grant_date") AS "min_grant_date", MAX("grant_date") AS "max_grant_date"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS";
   ```

4. **Find the range of filing dates to see when patents were filed:**
   ```sql
   SELECT MIN("filing_date") AS "min_filing_date", MAX("filing_date") AS "max_filing_date"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS";
   ```

5. **Explore forward citations by listing cited_by publication numbers:**
   ```sql
   SELECT t."publication_number", c.value::STRING AS "cited_by_publication"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t,
   LATERAL FLATTEN(input => t."cited_by") c
   LIMIT 1000;
   ```

6. **Check the size of embedding vectors to understand embedding dimensions:**
   ```sql
   SELECT t."publication_number", ARRAY_SIZE(t."embedding_v1") AS "embedding_size"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
   LIMIT 1000;
   ```

7. **Retrieve a sample of US B2 patents granted between 2010 and 2014:**
   ```sql
   SELECT "publication_number", "grant_date", "filing_date", "kind_code", "country_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   WHERE "country_code" = 'US' AND "kind_code" = 'B2' AND "grant_date" BETWEEN 20100101 AND 20141231
   LIMIT 1000;
   ```

8. **List publication numbers from ABS_AND_EMB table linked to US patents:**
   ```sql
   SELECT t."publication_number", p."country_code", p."kind_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
   JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p ON t."publication_number" = p."publication_number"
   WHERE p."country_code" = 'US'
   LIMIT 1000;
   ```

9. **Explore CPC classifications associated with patents:**
   ```sql
   SELECT p."publication_number", p."cpc"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
   LIMIT 1000;
   ```

10. **List top terms from patents to understand common keywords:**
    ```sql
    SELECT t."publication_number", f.value::STRING AS "top_term"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t,
    LATERAL FLATTEN(input => t."top_terms") f
    LIMIT 1000;
    ```

11. **Count patents filed on each filing date within grant years 2010-2014:**
    ```sql
    SELECT "filing_date", COUNT(*) AS "count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    WHERE "grant_date" BETWEEN 20100101 AND 20141231
    GROUP BY "filing_date"
    ORDER BY "filing_date"
    LIMIT 1000;
    ```

12. **Get forward citation counts for patents to see how often they are cited:**
    ```sql
    SELECT t."publication_number", ARRAY_SIZE(t."cited_by") AS "forward_citation_count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    LIMIT 1000;
    ```

13. **Display the first element of the embedding vectors for examination:**
    ```sql
    SELECT t."publication_number", t."embedding_v1"[0] AS "first_embedding_element"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    LIMIT 1000;
    ```

14. **Find the range of publication dates in the dataset:**
    ```sql
    SELECT MIN("publication_date") AS "min_publication_date", MAX("publication_date") AS "max_publication_date"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS";
    ```

15. **Retrieve forward citation counts for US B2 patents granted between 2010 and 2014:**
    ```sql
    SELECT t."publication_number", ARRAY_SIZE(t."cited_by") AS "forward_citation_count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p ON t."publication_number" = p."publication_number"
    WHERE p."country_code" = 'US' AND p."kind_code" = 'B2' AND p."grant_date" BETWEEN 20100101 AND 20141231
    LIMIT 1000;
    ```

16. **List inventors associated with patents to explore inventor data:**
    ```sql
    SELECT "publication_number", "inventor_harmonized"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
    ```

17. **Examine the IPC codes assigned to patents:**
    ```sql
    SELECT p."publication_number", f.value::VARIANT:"code"::STRING AS "ipc_code"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."ipc") f
    LIMIT 1000;
    ```

18. **Retrieve patent titles to understand the nature of inventions:**
    ```sql
    SELECT "publication_number", "title_localized"::VARIANT:"text"::STRING AS "title"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
    ```

19. **Explore assignee information for patents:**
    ```sql
    SELECT "publication_number", "assignee_harmonized"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
    ```

20. **Identify application kinds to see the types of applications filed:**
    ```sql
    SELECT DISTINCT "application_kind"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
    ```

These queries help in understanding the dataset structure, the values within key columns, and how they can be used to fulfill the task requirements.Query:
SELECT DISTINCT "kind_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   LIMIT 1000;
Answer:
kind_code
I1
T9
U9
H
H1
T7
B1
S
D2
U8
T3
P
L
V0
A
Y2
T2
C9
P1
R2
U4
B9
A0
E1
C3
A7
K4
Z1
A1
F
C1
T0
A4
T5
U1
B
Y1
K1
R
U
B3
T4
T
T8
A3
K5
E
D0
A2
I4
Y
B8
S1
U3
M
D1
B2
U0
A8
I5
I2
A6
C
A5
P3
P2
R1
B4
C2
C5
H3
A9
T1
Y4
Query:
SELECT DISTINCT "country_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   LIMIT 1000;
Answer:
country_code
JP
FI
DK
WO
NL
BE
KR
DE
US
CA
GB
LU
RU
CN
EP
FR
ES
Query:
WITH us_b2_patents AS (
    -- Select US utility patents under B2 classification granted between 2010 and 2014
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS "filing_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
flattened_citations AS (
    -- Flatten the cited_by field to get individual citing publication numbers
    SELECT 
        p."publication_number", 
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    -- Get filing dates of citing patents
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    -- Count citations within a month of filing date
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    -- Identify the patent with the most forward citations within a month of its filing date
    SELECT 
        c."publication_number",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    -- Get filing year of the top patent
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    -- Select patents from the same filing year, excluding the top patent
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent_filing_year)
),
top_patent_embedding AS (
    -- Flatten the embedding of the top patent
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    -- Compute similarity scores (dot product of embeddings)
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    -- Identify the most similar patent
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
-- Final result
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
Answer:
publication_number,most_similar_publication_number
,
Query:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        DATE_FROM_PARTS(
            FLOOR(p."filing_date" / 10000),
            FLOOR(MOD(p."filing_date", 10000) / 100),
            MOD(p."filing_date", 100)
        ) AS "filing_date",
        DATE_FROM_PARTS(
            FLOOR(p."grant_date" / 10000),
            FLOOR(MOD(p."grant_date", 10000) / 100),
            MOD(p."grant_date", 100)
        ) AS "grant_date",
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US' 
        AND p."kind_code" = 'B2'
        AND p."grant_date" NOT IN (0, '0', '00000000')
        AND p."filing_date" NOT IN (0, '0', '00000000')
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND DATE_FROM_PARTS(
            FLOOR(p."grant_date" / 10000),
            FLOOR(MOD(p."grant_date", 10000) / 100),
            MOD(p."grant_date", 100)
        ) BETWEEN '2010-01-01' AND '2014-12-31'
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p."filing_date" AS "patent_filing_date",
        c.value::STRING AS "citing_publication_number"
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc."patent_filing_date",
        fc."citing_publication_number",
        DATE_FROM_PARTS(
            FLOOR(cp."filing_date" / 10000),
            FLOOR(MOD(cp."filing_date", 10000) / 100),
            MOD(cp."filing_date", 100)
        ) AS "citing_filing_date"
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc."citing_publication_number" = cp."publication_number"
    WHERE 
        cp."filing_date" NOT IN (0, '0', '00000000')
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS "citation_count"
    FROM citing_patents
    WHERE 
        DATEDIFF('day', "patent_filing_date", "citing_filing_date") BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT 
        c."publication_number",
        c."citation_count",
        p."filing_date",
        p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p
        ON c."publication_number" = p."publication_number"
    ORDER BY c."citation_count" DESC
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT 
        "publication_number",
        YEAR("filing_date") AS "filing_year",
        "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" NOT IN (0, '0', '00000000')
        AND DATE_FROM_PARTS(
            FLOOR(p."filing_date" / 10000),
            FLOOR(MOD(p."filing_date", 10000) / 100),
            MOD(p."filing_date", 100)
        ) IS NOT NULL
        AND YEAR(
            DATE_FROM_PARTS(
                FLOOR(p."filing_date" / 10000),
                FLOOR(MOD(p."filing_date", 10000) / 100),
                MOD(p."filing_date", 100)
            )
        ) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT 
        seq AS idx, 
        value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS "similarity_score"
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY "similarity_score" DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
Answer:
publication_number,most_similar_publication_number
,
Query:
SELECT t."publication_number", c.value::STRING AS "cited_by_publication"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t,
   LATERAL FLATTEN(input => t."cited_by") c
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,cited_by_publication
DE-318-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-4377202-A"",""type"":""""}"
DE-6066-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1177870-B"",""type"":""""}"
DE-8199-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-10358537-A1"",""type"":""""}"
DE-9260-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-102004014318-A1"",""type"":""""}"
US-5418-P,"{""application_number"":"""",""category"":""APP"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-PP27981-P3"",""type"":""""}"
US-5582-P,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-10478-P"",""type"":""""}"
US-7752-P,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-2580807-A"",""type"":""""}"
US-7765-P,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-8038-P"",""type"":""""}"
CA-86501-S,"{""application_number"":"""",""category"":""APP"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-D797248-S"",""type"":""""}"
CA-93339-A,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5328283-A"",""type"":""""}"
DE-13739-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1043865-B"",""type"":""""}"
DE-16474-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5037250-A"",""type"":""""}"
DE-16894-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1277699-B"",""type"":""""}"
DE-25283-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-930703-C"",""type"":""""}"
DE-26411-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""FR-2421020-A1"",""type"":""X""}"
DE-29220-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-2134755-A1"",""type"":""""}"
DE-29420-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5509449-A"",""type"":""""}"
DE-32777-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-4241373-A1"",""type"":""""}"
DE-33237-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1141136-B"",""type"":""""}"
DE-35627-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-5771599-A"",""type"":""""}"
DE-38499-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-4577722-A"",""type"":""""}"
DE-51226-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-2784744-A"",""type"":""""}"
DE-53179-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1918780-A1"",""type"":""""}"
DE-61256-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-965812-C"",""type"":""""}"
DE-64210-C,"{""application_number"":"""",""category"":""ISR"",""filing_date"":0,""npl_text"":"""",""publication_number"":""WO-02061207-A1"",""type"":""Y""}"
DE-68962-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-4492046-A"",""type"":""""}"
DE-69706-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-3282606-A"",""type"":""""}"
DE-76735-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-2815490-A1"",""type"":""""}"
DE-83956-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1117450-B"",""type"":""""}"
DE-85324-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""FR-2754048-A1"",""type"":""A""}"
DE-86264-C,"{""application_number"":"""",""category"":""SEA"",""filing_date"":0,""npl_text"":"""",""publication_number"":""DE-1022491-B"",""type"":""""}"
DE-86489-C,"{""application_number"":"""",""category"":""APP"",""filing_date"":0,""npl_text"":"""",""publication_number"":""US-8192786-B2"",""type"":""""}"
DE-87715-C,"{""application_
Query:
SELECT t."publication_number", ARRAY_SIZE(t."embedding_v1") AS "embedding_size"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,embedding_size
CA-27-A,64
ES-81-Y,64
DE-303-C,0
ES-866-Y,64
FI-150-A,64
FI-250-A,64
FR-336-E,64
NL-284-C,0
NL-947-C,0
BE-107-T1,64
CA-1911-A,64
CA-4005-A,64
CA-4106-A,64
CA-4698-A,64
CA-4801-A,64
CA-5943-A,64
CA-6183-A,64
CA-6207-A,64
CA-6390-A,64
CA-6969-A,64
CA-8931-S,64
CA-9897-A,64
DE-3129-C,0
DE-3301-C,0
DE-3884-C,0
DE-3983-C,0
DE-5976-C,0
DK-2807-C,64
DK-3080-C,64
DK-3107-C,64
DK-3184-C,64
DK-3510-C,64
DK-5867-C,64
DK-5921-C,64
DK-6491-A,64
DK-7210-C,64
DK-8069-C,64
DK-8466-C,64
DK-9281-C,64
DK-9359-C,64
ES-1062-U,64
ES-1498-U,64
ES-1524-Y,64
ES-1872-U,64
ES-2542-Y,64
ES-2819-Y,64
ES-2960-U,64
ES-3045-U,64
ES-4483-Y,64
ES-4723-Y,64
ES-4858-U,64
ES-5089-Y,64
ES-5219-Y,64
ES-5716-U,64
ES-5975-Y,64
ES-6454-U,64
ES-6552-Y,64
ES-6928-Y,64
ES-6962-Y,64
ES-7086-Y,64
ES-7407-Y,64
ES-7489-Y,64
ES-7516-U,64
ES-7538-U,64
ES-764-H3,64
ES-8269-Y,64
FI-1825-A,64
FI-291-U1,64
FI-3021-A,64
FI-4211-A,64
FI-4543-A,64
FI-8034-A,64
FI-8619-A,64
FI-8985-A,64
FI-902-U1,64
FR-1186-E,64
FR-1382-E,64
FR-1550-M,64
FR-2064-E,64
FR-2510-M,64
FR-2578-M,64
FR-2635-E,64
FR-3293-M,64
FR-5174-E,64
FR-5770-E,64
FR-7085-M,64
FR-7747-E,64
FR-8053-M,64
FR-8143-M,64
NL-3613-C,0
NL-4187-C,0
NL-5034-C,0
NL-9752-C,0
NL-9761-C,64
RU-815-U1,64
US-1260-A,64
US-1844-A,64
US-3704-A,64
US-4174-P,64
US-4340-A,64
US-4449-P,64
US-4570-P,64
US-5293-P,64
US-5333-A,64
US-5618-A,64
US-6399-A,64
US-6501-P,64
US-7090-A,64
US-7624-A,64
US-7703-P,64
US-7765-P,0
US-8162-P,64
US-8923-P,0
US-9153-A,64
US-9563-A,64
US-H817-H,64
CA-10240-A,64
CA-10445-A,64
CA-11856-A,64
CA-12085-A,64
CA-12299-A,64
CA-12359-A,64
CA-12986-A,64
CA-14364-A,64
CA-15108-A,64
CA-15467-A,64
CA-16464-A,64
CA-16944-A,64
CA-17107-A,64
CA-18535-S,64
CA-19006-S,64
CA-21676-A,64
CA-21706-A,64
CA-21979-A,64
CA-22497-S,64
CA-22705-A,64
CA-23044-A,64
CA-25240-S,64
CA-25587-A,64
CA-26172-A,64
CA-27810-A,64
CA-29171-S,64
CA-29565-A,64
CA-30563-S,64
CA-30747-A,64
CA-31066-A,64
CA-31656-A,64
CA-34117-A,64
CA-34328-A,64
CA-35530-A,64
CA-36126-A,64
CA-37060-A,64
CA-37412-A,64
CA-38186-A,64
CA-38290-A,64
CA-38566-A,64
CA-39941-A,64
CA-41986-A,64
CA-42957-A,64
CA-43582-A,64
CA-43613-A,64
CA-43665-A,64
CA-44103-A,64
CA-44675-A,64
CA-45114-S,64
CA-45162-A,64
CA-46041-S,64
CA-46346-S,64
CA-46414-S,64
CA-46650-A,64
CA-47228-S,64
CA-47556-A,64
CA-47943-A,64
CA-48005-S,64
CA-50059-A,64
CA-51084-S,64
CA-51448-A,64
CA-53020-A,64
CA-53342-A,64
CA-53679-A,64
CA-54019-A,64
CA-56199-S,64
CA-57871-A,64
CA-58112-A,64
CA-59658-S,64
CA-62116-A,64
CA-63512-A,64
CA-64348-A,64
CA-64895-A,64
CA-64959-A,64
CA-65051-A,64
CA-65468-A,64
CA-66408-A,64
CA-67027-A,64
CA-67256-A,64
CA-68355-A,64
CA-68561-A,64
CA-69952-A,64
CA-69969-A,64
CA-70837-S,64
CA-71352-A,64
CA-72557-S,64
CA-73229-S,64
CA-73434-A,64
CA-73648-A,64
CA-75054-A,64
CA-75833-A,64
CA-75940-A,64
CA-76442-A,64
CA-77673-S,64
CA-78154-A,64
CA-78848-A,64
CA-80485-S,64
CA-81879-A,64
CA-82735-A,64
CA-83640-A,64
CA-84428-S,64
CA-84611-A,64
CA-85458-S,64
CA-87085-A,64
CA-87655-A,64
CA-88869-A,64
CA-89598-S,64
CA-90451-A,64
CA-90703-A,64
CA-91407-A,64
CA-91839-A,64
CA-92136-S,64
CA-92671-S,64
CA-93153-A,64
CA-93847-S,64
CA-94404-A,64
CA-94834-A,64
CA-95812-A,64
CA-96813-A,64
CA-97691-A,64
CA-97784-A,64
CA-98415-S,64
CA-98613-A,64
CA-98742-A,64
CA-99391-S,64
CA-99529-A,64
DE-10599-C,0
DE-10678-C,0
DE-10717-C,0
DE-12268-C,0
DE-16453-C,0
DE-17382-C,0
DE-17635-C,0
DE-18657-C,0
DE-21533-C,0
DE-21800-C,0
DE-22191-C,0
DE-24092-C,64
DE-24550-C,0
DE-26040-C,0
DE-26251-C,0
DE-26645-C,0
DE-27162-C,64
DE-28245-C,0
DE-28664-C,0
DE-29317-C,0
DE-29580-C,0
DE-29751-C,0
DE-29873-C,0
DE-34701-C,0
DE-35759-C,0
DE-36143-C,0
DE-36572-C,0
DE-36880-C,0
DE-37006-C,0
DE-39978-C,0
DE-41212-C,0
DE-41909-C,0
DE-43016-C,0
DE-43252-C,0
DE-43745-C,0
DE-44221-C,0
DE-44490-C,0
DE-46714-C,0
DE-46729-C,0
DE-46866-C,0
DE-47512-C,0
DE-48016-C,0
DE-48200-C,0
DE-48281-C,0
DE-48415-C,0
DE-48624-C,0
DE-48946-C,0
DE-55522-C,64
DE-57100-C,0
DE-59206-C,0
DE-62156-C,0
DE-62668-C,0
DE-64182-C,0
DE-64466-C,0
DE-68843-C,0
DE-69224-C,0
DE-69735-C,0
DE-70329-C,0
DE-70421-C,0
DE-70605-C,0
DE-71525-C,0
DE-72135-C,0
DE-72417-C,0
DE-73920-C,0
DE-75006-C,0
DE-75333-C,0
DE-78770-C,0
DE-82929-C,0
DE-83658-C,0
DE-83966-C,0
DE-84792-C,0
DE-87929-C,0
DE-90760-C,0
DE-91921-C,0
DE-92960-C,0
DE-93320-C,0
DE-93611-C,0
DE-94567-C,0
DE-96265-C,0
DE-97461-C,0
DE-98822-C,0
DK-10751-C,64
DK-11017-C,64
DK-11274-A,64
DK-11549-C,64
DK-13429-C,64
DK-14113-C,64
DK-15486-A,64
DK-15672-C,64
DK-16003-C,64
DK-16200-C,64
DK-16721-C,64
DK-17077-C,64
DK-17891-C,64
DK-18174-A,64
DK-18287-C,64
DK-18953-C,64
DK-19067-C,64
DK-20848-C,64
DK-21534-C,64
DK-21593-C,64
DK-24093-C,64
DK-24122-C,64
DK-24560-C,64
DK-24764-C,64
DK-25033-C,64
DK-26002-C,64
DK-28460-C,64
DK-30663-C,64
DK-31338-C,64
DK-32802-C,64
DK-32923-C,64
DK-32960-C,64
DK-33342-C,64
DK-33585-C,64
DK-34417-C,64
DK-34475-A,64
DK-34847-C,64
DK-3485-D0,64
DK-35287-A,64
DK-35387-A,64
DK-36818-C,64
DK-37723-C,64
DK-38288-C,64
DK-3889-D0,64
DK-40323-C,64
DK-42091-A,64
DK-44173-C,64
DK-45
Query:
SELECT "publication_number", "grant_date", "filing_date", "kind_code", "country_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
   WHERE "country_code" = 'US' AND "kind_code" = 'B2' AND "grant_date" BETWEEN 20100101 AND 20141231
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,grant_date,filing_date,kind_code,country_code
US-7680512-B2,20100316,20050509,B2,US
US-8658313-B2,20140225,20100927,B2,US
US-8708409-B2,20140429,20100121,B2,US
US-8871437-B2,20141028,20091209,B2,US
US-8724671-B2,20140513,20130124,B2,US
US-8422451-B2,20130416,20110110,B2,US
US-8596460-B2,20131203,20121206,B2,US
US-7654136-B2,20100202,20070724,B2,US
US-8605000-B2,20131210,20110830,B2,US
US-7654913-B2,20100202,20080115,B2,US
US-8743329-B2,20140603,20120807,B2,US
US-8343975-B2,20130101,20090910,B2,US
US-8065064-B2,20111122,20080924,B2,US
US-7832221-B2,20101116,20061020,B2,US
US-8042681-B2,20111025,20081030,B2,US
US-8879279-B2,20141104,20110513,B2,US
US-8488923-B2,20130716,20100329,B2,US
US-7836581-B2,20101123,20040617,B2,US
US-8733385-B2,20140527,20090714,B2,US
US-8024925-B2,20110927,20051108,B2,US
US-7647782-B2,20100119,20051214,B2,US
US-8098574-B2,20120117,20080826,B2,US
US-7857729-B2,20101228,20090617,B2,US
US-8080145-B2,20111220,20040112,B2,US
US-8053376-B2,20111108,20090626,B2,US
US-8178658-B2,20120515,20090211,B2,US
US-8576596-B2,20131105,20111020,B2,US
US-7928606-B2,20110419,20070525,B2,US
US-7668240-B2,20100223,20070110,B2,US
US-8585774-B2,20131119,20111031,B2,US
US-8502757-B2,20130806,20111115,B2,US
US-8471802-B2,20130625,20071030,B2,US
US-8862868-B2,20141014,20121206,B2,US
US-8328389-B2,20121211,20120213,B2,US
US-7738069-B2,20100615,20080415,B2,US
US-8405713-B2,20130326,20090312,B2,US
US-8648463-B2,20140211,20100517,B2,US
US-8696206-B2,20140415,20111006,B2,US
US-7657091-B2,20100202,20060306,B2,US
US-8290883-B2,20121016,20090910,B2,US
US-7973201-B2,20110705,20070621,B2,US
US-8906677-B2,20141209,20091216,B2,US
US-7649294-B2,20100119,20070827,B2,US
US-7933078-B2,20110426,20081021,B2,US
US-7921656-B2,20110412,20090219,B2,US
US-8554170-B2,20131008,20111114,B2,US
US-8245723-B2,20120821,20090710,B2,US
US-8018125-B2,20110913,20090421,B2,US
US-8297434-B2,20121030,20090515,B2,US
US-7642037-B2,20100105,20040827,B2,US
US-7859134-B2,20101228,20071221,B2,US
US-8039891-B2,20111018,20101229,B2,US
US-8224596-B2,20120717,20080909,B2,US
US-8330621-B2,20121211,20090729,B2,US
US-8167101-B2,20120501,20080905,B2,US
US-8702088-B2,20140422,20101119,B2,US
US-8108347-B2,20120131,20050805,B2,US
US-7938000-B2,20110510,20090904,B2,US
US-8109016-B2,20120207,20090108,B2,US
US-7995810-B2,20110809,20060623,B2,US
US-8260772-B2,20120904,20080131,B2,US
US-8102623-B2,20120124,20070831,B2,US
US-7913963-B2,20110329,20090421,B2,US
US-7823930-B2,20101102,20051013,B2,US
US-8582104-B2,20131112,20110630,B2,US
US-8189912-B2,20120529,20071124,B2,US
US-7891314-B2,20110222,20050705,B2,US
US-8582526-B2,20131112,20110420,B2,US
US-8152025-B2,20120410,20101020,B2,US
US-8256058-B2,20120904,20090807,B2,US
US-8231507-B2,20120731,20100125,B2,US
US-8326321-B2,20121204,20091008,B2,US
US-8910083-B2,20141209,20091110,B2,US
US-7803074-B2,20100928,20050304,B2,US
US-8269638-B2,20120918,20081016,B2,US
US-7924829-B2,20110412,20070430,B2,US
US-8318661-B2,20121127,20070828,B2,US
US-7995905-B2,20110809,20070906,B2,US
US-8234367-B2,20120731,20080925,B2,US
US-8188151-B2,20120529,20081028,B2,US
US-8621771-B2,20140107,20091026,B2,US
US-8319911-B2,20121127,20101207,B2,US
US-7925485-B2,20110412,20061025,B2,US
US-7794019-B2,20100914,20060707,B2,US
US-8539321-B2,20130917,20101110,B2,US
US-8661328-B2,20140225,20111215,B2,US
US-7762145-B2,20100727,20080417,B2,US
US-8494118-B2,20130723,20110215,B2,US
US-8267867-B2,20120918,20110310,B2,US
US-8535171-B2,20130917,20091209,B2,US
US-8567121-B2,20131029,20090731,B2,US
US-8647917-B2,20140211,20110727,B2,US
US-8383048-B2,20130226,20100721,B2,US
US-8606864-B2,20131210,20101231,B2,US
US-7823152-B2,20101026,20060606,B2,US
US-7752558-B2,20100706,20070425,B2,US
US-8429850-B2,20130430,20080605,B2,US
US-8098026-B2,20120117,20081015,B2,US
US-8067283-B2,20111129,20091113,B2,US
US-8586026-B2,20131119,20080229,B2,US
US-8223327-B2,20120717,20090126,B2,US
US-8044974-B2,20111025,20060420,B2,US
US-8349567-B2,20130108,20090321,B2,US
US-8446637-B2,20130521,20120910,B2,US
US-8456565-B2,20130604,20100426,B2,US
US-7778139-B2,20100817,20071016,B2,US
US-7833963-B2,20101116,20030603,B2,US
US-8213075-B2,20120703,20101105,B2,US
US-7829031-B2,20101109,20071116,B2,US
US-8533168-B2,20130910,20070720,B2,US
US-8877120-B2,20141104,20100917,B2,US
US-8076715-B2,20111213,20061227,B2,US
US-8645436-B2,20140204,20080724,B2,US
US-8632537-B2,20140121,20120216,B2,US
US-8863523-B2,20141021,20130709,B2,US
US-8718704-B2,20140506,20110920,B2,US
US-7800212-B2,20100921,20071227,B2,US
US-7958519-B2,20110607,20090408,B2,US
US-8673805-B2,20140318,20110915,B2,US
US-8615268-B2,20131224,20101101,B2,US
US-8391876-B2,20130305,20100819,B2,US
US-8630654-B2,20140114,20120208,B2,US
US-7991278-B2,20110802,20100407,B2,US
US-8671830-B2,20140318,20120503,B2,US
US-7817890-B2,20101019,20081029,B2,US
US-8028182-B2,20110927,20080604,B2,US
US-8116169-B2,20120214,20090513,B2,US
US-8639149-B2,20140128,20110131,B2,US
US-7775708-B2,20100817,20060705,B2,US
US-8268996-B2,20120918,20110616,B
Query:
SELECT t."publication_number", p."country_code", p."kind_code"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
   JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p ON t."publication_number" = p."publication_number"
   WHERE p."country_code" = 'US'
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,country_code,kind_code
US-6790890-B2,US,B2
US-6814687-B2,US,B2
US-6817384-B2,US,B2
US-6823574-B2,US,B2
US-6836033-B2,US,B2
US-6863980-B2,US,B2
US-6867422-B1,US,B1
US-6899580-B1,US,B1
US-6928502-B2,US,B2
US-6930735-B2,US,B2
US-6935035-B2,US,B2
US-6947813-B2,US,B2
US-6960153-B2,US,B2
US-6978355-B2,US,B2
US-6991999-B2,US,B2
US-7015918-B2,US,B2
US-7047175-B1,US,B1
US-7051651-B2,US,B2
US-7081504-B2,US,B2
US-7116966-B2,US,B2
US-7118453-B2,US,B2
US-7159387-B2,US,B2
US-7198286-B2,US,B2
US-7234308-B1,US,B1
US-7256283-B2,US,B2
US-7270947-B2,US,B2
US-7289943-B2,US,B2
US-7295399-B2,US,B2
US-7297097-B2,US,B2
US-7299476-B2,US,B2
US-7341457-B2,US,B2
US-7342248-B2,US,B2
US-7346741-B1,US,B1
US-7356589-B2,US,B2
US-7371794-B2,US,B2
US-7379235-B2,US,B2
US-7381009-B2,US,B2
US-7392366-B2,US,B2
US-7401244-B2,US,B2
US-7414148-B2,US,B2
US-7421241-B2,US,B2
US-7449215-B2,US,B2
US-7464853-B2,US,B2
US-7500300-B2,US,B2
US-7511745-B2,US,B2
US-7515319-B2,US,B2
US-7580945-B2,US,B2
US-7640187-B1,US,B1
US-7676869-B2,US,B2
US-7680403-B2,US,B2
US-7689691-B2,US,B2
US-7693649-B2,US,B2
US-7697681-B2,US,B2
US-7708450-B2,US,B2
US-7716408-B2,US,B2
US-7730870-B2,US,B2
US-7733075-B1,US,B1
US-7774610-B2,US,B2
US-7803992-B2,US,B2
US-7805864-B2,US,B2
US-7813060-B1,US,B1
US-7814416-B2,US,B2
US-7832569-B1,US,B1
US-7837897-B2,US,B2
US-7866514-B1,US,B1
US-7876864-B2,US,B2
US-7887831-B2,US,B2
US-7913178-B2,US,B2
US-7939764-B2,US,B2
US-8011363-B2,US,B2
US-8023636-B2,US,B2
US-8062741-B2,US,B2
US-8082307-B2,US,B2
US-8112460-B2,US,B2
US-8143066-B2,US,B2
US-8144066-B2,US,B2
US-8147013-B2,US,B2
US-8272646-B2,US,B2
US-8365157-B2,US,B2
US-8370751-B2,US,B2
US-8386134-B2,US,B2
US-8405269-B2,US,B2
US-8412764-B1,US,B1
US-8462278-B2,US,B2
US-8481335-B2,US,B2
US-8508811-B2,US,B2
US-8522968-B2,US,B2
US-8523862-B2,US,B2
US-8554997-B1,US,B1
US-8645456-B2,US,B2
US-8649215-B2,US,B2
US-8670981-B2,US,B2
US-8721568-B2,US,B2
US-8760761-B2,US,B2
US-8806576-B1,US,B1
US-8876562-B2,US,B2
US-8954208-B2,US,B2
US-8966330-B1,US,B1
US-8976583-B2,US,B2
US-9128520-B2,US,B2
US-9166332-B2,US,B2
US-9204094-B2,US,B2
US-9318136-B1,US,B1
US-2002199075-A1,US,A1
US-2003048328-A1,US,A1
US-2003102128-A1,US,A1
US-2003177113-A1,US,A1
US-2004074387-A1,US,A1
US-2004113364-A1,US,A1
US-2004134953-A1,US,A1
US-2004205498-A1,US,A1
US-2004211554-A1,US,A1
US-2004268070-A1,US,A1
US-2005087824-A1,US,A1
US-2005137363-A1,US,A1
US-2005219456-A1,US,A1
US-2007191504-A1,US,A1
US-2007206259-A1,US,A1
US-2007245673-A1,US,A1
US-2007256734-A1,US,A1
US-2008004039-A1,US,A1
US-2008093571-A1,US,A1
US-2008109298-A1,US,A1
US-2009139775-A1,US,A1
US-2009192703-A1,US,A1
US-2009277763-A1,US,A1
US-2009317817-A1,US,A1
US-2009318914-A1,US,A1
US-2010197310-A1,US,A1
US-2011135550-A1,US,A1
US-2012010547-A1,US,A1
US-2013169571-A1,US,A1
US-1374446-A,US,A
US-1394328-A,US,A
US-2408627-A,US,A
US-2563456-A,US,A
US-2701131-A,US,A
US-2932152-A,US,A
US-3094695-A,US,A
US-3147792-A,US,A
US-3194312-A,US,A
US-3327855-A,US,A
US-3329640-A,US,A
US-3607670-A,US,A
US-3644831-A,US,A
US-3859370-A,US,A
US-3937405-A,US,A
US-3937535-A,US,A
US-3999214-A,US,A
US-4012887-A,US,A
US-4069973-A,US,A
US-4119578-A,US,A
US-4147795-A,US,A
US-4369743-A,US,A
US-4479329-A,US,A
US-4523847-A,US,A
US-4554569-A,US,A
US-4590077-A,US,A
US-4650684-A,US,A
US-4663453-A,US,A
US-4694030-A,US,A
US-4708433-A,US,A
US-4735768-A,US,A
US-4754323-A,US,A
US-4769634-A,US,A
US-4809272-A,US,A
US-4851409-A,US,A
US-4980052-A,US,A
US-4984435-A,US,A
US-5248292-A,US,A
US-5299775-A,US,A
US-5347275-A,US,A
US-5380026-A,US,A
US-5447012-A,US,A
US-5564650-A,US,A
US-5595304-A,US,A
US-5602890-A,US,A
US-5718563-A,US,A
US-5753999-A,US,A
US-5792086-A,US,A
US-5817591-A,US,A
US-5856797-A,US,A
US-5873663-A,US,A
US-5952273-A,US,A
US-6011555-A,US,A
US-6071627-A,US,A
US-6084911-A,US,A
US-6087029-A,US,A
US-6218671-B1,US,B1
US-6476737-B1,US,B1
US-6561612-B2,US,B2
US-6592268-B2,US,B2
US-6666924-B1,US,B1
US-6671418-B2,US,B2
US-6752433-B2,US,B2
US-6753754-B1,US,B1
US-6831544-B2,US,B2
US-6854476-B1,US,B1
US-6893428-B2,US,B2
US-6962028-B2,US,B2
US-7106438-B2,US,B2
US-7116003-B2,US,B2
US-7140390-B2,US,B2
US-7219083-B2,US,B2
US-7444791-B1,US,B1
US-7935140-B2,US,B2
US-8713311-B1,US,B1
US-2001035801-A1,US,A1
US-2002018432-A1,US,A1
US-2002053196-A1,US,A1
US-2002146214-A1,US,A1
US-2002154037-A1,US,A1
US-2004042671-A1,US,A1
US-2004072119-A1,US,A1
US-2004258922-A1,US,A1
US-2005186904-A1,US,A1
US-2006154097-A1,US,A1
US-2006235539-A1,US,A1
US-2007143171-A1,US,A1
US-2007281762-A1,US,A1
US-2008065154-A1,US,A1
US-2008301497-A1,US,A1
US-2009014625-A1,US,A1
US-2009107160-A1,US,A1
US-2009188127-A1,US,A1
US-2011072355-A1,US,A1
US-791905-A,US,A
US-1738893-A,US,A
US-1838213-A,US,A
US-2070281-A,US,A
US-2540130-A,US,A
US-2595499-A,US,A
US-2783046-A,US,A
US-3212127-A,US,A
US-3542052-A,US,A
US-3574065-A,US,A
US-3682027-A,US,A
US-3717947-A,US,A
US-3834670-A,US,A
US-3983363-A,US,A
US-4180111-A,US,A
US-4291244-A,US,A
US-4709320-A,US,A
US-4804696-A,US,A
US-4858719-A,US,A
US-4929189-A,US,A
US-5116320-A,US,A
US-5165792-A,US,A
US-5228678-
Query:
SELECT p."publication_number", p."cpc"
   FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
   LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,cpc
JP-1810118-C,[]
JP-1203714-C,[]
FR-1500580-A,"[
  {
    ""code"": ""G01M11/0242"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G01B11/255"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B3/107"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G01M11/0264"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G01B11/24"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61B3/13"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
ES-8501233-A1,"[
  {
    ""code"": ""C07D263/58"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C07D413/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
CA-2165155-A1,"[
  {
    ""code"": ""C11D3/38663"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""C11D17/003"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-2409943-B1,"[
  {
    ""code"": ""B65H3/44"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H5/062"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H2403/21"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65H2301/42328"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65H3/46"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H3/5246"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06K13/10"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H2403/732"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65H7/12"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H7/06"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65H2701/1912"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
GB-1086860-A,"[
  {
    ""code"": ""C08B30/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-S54117658-A,[]
JP-H0710178-Y2,[]
JP-3172057-B2,"[
  {
    ""code"": ""B65D2539/008"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""B65D51/002"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65D39/00"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""B65D39/0023"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
US-136580-A,"[
  {
    ""code"": ""B65G2201/02"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
US-272220-A,"[
  {
    ""code"": ""B26D7/018"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""Y10T83/6579"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
US-599187-A,"[
  {
    ""code"": ""B44B5/0061"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
CN-1062411-C,"[
  {
    ""code"": ""A01N33/12"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A01N43/40"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
DE-1479218-U,[]
EP-2512367-B1,"[
  {
    ""code"": ""A61F2210/0004"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""A61F2/0059"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""A61F2250/0018"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""A61B2017/00004"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  }
]"
ES-2312527-T3,"[
  {
    ""code"": ""G06F11/3423"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06F11/3433"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G06F2201/81"",
    ""first"": false,
    ""inventive"": false,
    ""tree"": []
  },
  {
    ""code"": ""G06F9/5083"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1000748-A,"[
  {
    ""code"": ""G09F13/14"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
FR-1573809-A,"[
  {
    ""code"": ""G02B23/08"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  },
  {
    ""code"": ""G02B23/02"",
    ""first"": false,
    ""inventive"": true,
    ""tree"": []
  }
]"
JP-S5066757-U,[]
JP-S5845249-Y2,[]
US-2103405-A,"[
  {
    ""code"": ""F02N11/08"",
    ""first"": true,
    ""inventive"": true,
    ""tree"": []
  }
]"
GB-201114438-D0,"[
  {
    ""code"": ""B21D5/00"
Query:
SELECT t."publication_number", f.value::STRING AS "top_term"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t,
    LATERAL FLATTEN(input => t."top_terms") f
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,top_term
US-5560978-A,basecoat
US-5560978-A,coating
US-5560978-A,resin
US-5560978-A,fluoropolymer
US-5560978-A,substrate
US-5560978-A,powder
US-5560978-A,nonstick
US-5560978-A,nickel
US-5560978-A,pai
US-5560978-A,invention
US-5590131-A,reservation
US-5590131-A,slot
US-5590131-A,user
US-5590131-A,frame
US-5590131-A,time
US-5590131-A,dqtemp
US-5590131-A,predetermined
US-5590131-A,transmission
US-5590131-A,index
US-5590131-A,successful
US-5596790-A,end
US-5596790-A,clamp
US-5596790-A,area
US-5596790-A,hose
US-5596790-A,state
US-5596790-A,stop
US-5596790-A,catch
US-5596790-A,body
US-5596790-A,spread
US-5596790-A,projection
US-5614871-A,circuit
US-5614871-A,voltage
US-5614871-A,mos
US-5614871-A,terminal
US-5614871-A,output
US-5614871-A,channel
US-5614871-A,cmos
US-5614871-A,capacitive
US-5614871-A,transistor
US-5614871-A,latch
US-5635026-A,liquor
US-5635026-A,cooking
US-5635026-A,alkali
US-5635026-A,pulp
US-5635026-A,material
US-5635026-A,conduit
US-5635026-A,concentration
US-5635026-A,typically
US-5635026-A,fig
US-5635026-A,digester
US-5760063-A,ch
US-5760063-A,cn
US-5760063-A,compounds
US-5760063-A,sub
US-5760063-A,cl
US-5760063-A,compound
US-5760063-A,groups
US-5760063-A,alkyl
US-5760063-A,invention
US-5760063-A,formula
US-5779492-A,contact
US-5779492-A,connector
US-5779492-A,liquid
US-5779492-A,connection
US-5779492-A,member
US-5779492-A,system
US-5779492-A,hole
US-5779492-A,metal
US-5779492-A,portion
US-5779492-A,container
US-5989959-A,film
US-5989959-A,silicon
US-5989959-A,gate
US-5989959-A,oxide
US-5989959-A,fig
US-5989959-A,electrode
US-5989959-A,nitride
US-5989959-A,etching
US-5989959-A,polysilicon
US-5989959-A,layer
US-5992708-A,nozzle
US-5992708-A,handle
US-5992708-A,container
US-5992708-A,actuator
US-5992708-A,member
US-5992708-A,spray
US-5992708-A,portion
US-5992708-A,ring
US-5992708-A,fitment
US-5992708-A,hinge
US-6069408-A,semiconductor
US-6069408-A,electrode
US-6069408-A,device
US-6069408-A,members
US-6069408-A,board
US-6069408-A,resin
US-6069408-A,holding
US-6069408-A,chip
US-6069408-A,process
US-6069408-A,package
US-6120059-A,engine
US-6120059-A,cradle
US-6120059-A,frame
US-6120059-A,vehicle
US-6120059-A,portions
US-6120059-A,assembly
US-6120059-A,portion
US-6120059-A,member
US-6120059-A,leg
US-6120059-A,central
US-D578786-S,fig
US-D578786-S,view
US-D578786-S,elevational
US-D578786-S,armchair
US-D578786-S,left
US-D578786-S,side
US-D578786-S,plan
US-D578786-S,rear
US-D578786-S,design
US-D578786-S,right
EP-0311460-A2,charge
EP-0311460-A2,current
EP-0311460-A2,battery
EP-0311460-A2,voltage
EP-0311460-A2,charger
EP-0311460-A2,internal
EP-0311460-A2,charging
EP-0311460-A2,resistance
EP-0311460-A2,free
EP-0311460-A2,cell
EP-0339841-B1,dye
EP-0339841-B1,compounds
EP-0339841-B1,dental
EP-0339841-B1,free
EP-0339841-B1,material
EP-0339841-B1,compound
EP-0339841-B1,ion
EP-0339841-B1,composition
EP-0339841-B1,ionic
EP-0339841-B1,useful
EP-0357003-A2,generally
EP-0357003-A2,endoprosthesis
EP-0357003-A2,stent
EP-0357003-A2,figure
EP-0357003-A2,circumferential
EP-0357003-A2,member
EP-0357003-A2,expandable
EP-0357003-A2,according
EP-0357003-A2,mandrel
EP-0357003-A2,invention
EP-0526862-B1,density
EP-0526862-B1,compositions
EP-0526862-B1,bioadhesive
EP-0526862-B1,formulations
EP-0526862-B1,mm
EP-0526862-B1,pharmaceutical
EP-0526862-B1,high
EP-0526862-B1,prepared
EP-0526862-B1,active
EP-0526862-B1,invention
EP-0579132-A1,composition
EP-0579132-A1,time
EP-0579132-A1,groups
EP-0579132-A1,catalyst
EP-0579132-A1,silicone
EP-0579132-A1,example
EP-0579132-A1,amine
EP-0579132-A1,platinum
EP-0579132-A1,setting
EP-0579132-A1,value
EP-0586101-A1,ink
EP-0586101-A1,transfer
EP-0586101-A1,recording
EP-0586101-A1,image
EP-0586101-A1,drum
EP-0586101-A1,composition
EP-0586101-A1,example
EP-0586101-A1,intermediate
EP-0586101-A1,medium
EP-0586101-A1,jet
EP-0761795-A2,group
EP-0761795-A2,none
EP-0761795-A2,acid
EP-0761795-A2,weight
EP-0761795-A2,mole
EP-0761795-A2,containing
EP-0761795-A2,adhesive
EP-0761795-A2,percent
EP-0761795-A2,reactant
EP-0761795-A2,polyester
EP-2696530-A2,lte
EP-2696530-A2,wifi
EP-2696530-A2,unlicensed
EP-2696530-A2,subframe
EP-2696530-A2,carrier
EP-2696530-A2,ue
EP-2696530-A2,band
EP-2696530-A2,transmission
EP-2696530-A2,td
EP-2696530-A2,network
JP-H0970903-A,tread
JP-H0970903-A,surface
JP-H0970903-A,roughened
JP-H0970903-A,body
JP-H0970903-A,main
JP-H0970903-A,band
JP-H0970903-A,uneven
JP-H0970903-A,fine
JP-H0970903-A,precure
JP-H0970903-A,sheet
JP-S5521128-A,semiconductor
JP-S5521128-A,element
JP-S5521128-A,lead
JP-S5521128-A,tab
JP-S5521128-A,wire
JP-S5521128-A,mold
JP-S5521128-A,device
JP-S5521128-A,frame
JP-S5521128-A,assembling
JP-S5521128-A,bonding
JP-S5839939-A,device
JP-S5839939-A,spin
JP-S5839939-A,frequency
JP-S5839939-A,generating
JP-S5839939-A,resonance
JP-S5839939-A,receiving
JP-S5839939-A,high
JP-S5839939-A,nuclear
JP-S5839939-A,receiving device
JP-S5839939-A,nuclear spin
US-6212688-B1,strap
US-6212688-B1,means
US-6212688-B1,gloves
US-6212688-B1,garment
US-6212688-B1,figs

Query:
SELECT "filing_date", COUNT(*) AS "count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    WHERE "grant_date" BETWEEN 20100101 AND 20141231
    GROUP BY "filing_date"
    ORDER BY "filing_date"
    LIMIT 1000;
Answer:
Too long, hard cut:
filing_date,count
0,1
19820922,1
19850313,1
19860709,1
19910916,1
19920827,1
19940318,1
19940526,1
19940711,1
19940720,1
19941223,1
19950112,1
19950316,1
19950411,1
19950412,1
19950419,1
19950606,1
19950809,1
19950817,1
19951030,1
19951111,1
19951205,2
19951212,1
19960103,1
19960309,1
19960322,1
19960426,1
19960517,1
19960606,2
19960701,1
19960823,1
19961008,1
19961112,1
19961204,1
19961206,1
19961211,1
19961220,1
19970120,1
19970207,1
19970228,1
19970304,1
19970408,1
19970411,1
19970520,1
19970527,1
19970722,1
19970820,1
19970918,1
19970930,1
19971002,1
19971006,1
19971022,1
19971023,2
19971113,1
19971124,1
19971203,1
19971209,1
19971222,1
19980109,1
19980112,1
19980113,1
19980128,1
19980203,1
19980206,1
19980218,1
19980224,1
19980303,1
19980304,2
19980313,1
19980316,1
19980325,1
19980403,1
19980407,1
19980415,1
19980428,1
19980501,1
19980518,1
19980604,1
19980611,1
19980715,2
19980716,2
19980722,1
19980731,1
19980804,1
19980810,1
19980813,1
19980818,1
19980831,1
19980909,2
19980911,1
19981002,1
19981008,1
19981009,1
19981014,1
19981022,2
19981027,1
19981106,1
19981110,1
19981116,1
19981118,1
19981202,1
19981211,1
19981212,1
19981215,1
19981216,1
19981218,2
19981229,1
19990104,1
19990106,1
19990112,1
19990113,1
19990118,1
19990119,2
19990126,1
19990204,2
19990208,1
19990215,1
19990216,1
19990219,1
19990222,1
19990305,2
19990306,1
19990311,1
19990316,1
19990319,1
19990324,1
19990325,1
19990326,1
19990329,2
19990330,1
19990401,1
19990406,1
19990407,1
19990413,2
19990415,1
19990416,1
19990421,2
19990423,1
19990426,1
19990427,1
19990429,1
19990430,1
19990504,1
19990505,1
19990506,1
19990507,1
19990510,2
19990520,1
19990526,1
19990601,2
19990607,1
19990608,1
19990609,1
19990611,1
19990614,1
19990616,1
19990617,1
19990629,1
19990702,2
19990708,1
19990709,1
19990715,1
19990720,1
19990722,1
19990726,1
19990729,1
19990730,2
19990802,1
19990803,3
19990809,2
19990810,1
19990812,1
19990823,4
19990826,2
19990827,1
19990901,1
19990902,1
19990914,1
19990920,1
19990922,2
19990924,2
19991007,1
19991008,2
19991011,1
19991016,1
19991021,2
19991022,1
19991026,1
19991028,2
19991029,2
19991101,1
19991102,1
19991103,1
19991108,1
19991111,1
19991116,1
19991117,1
19991118,1
19991119,1
19991122,1
19991123,2
19991129,1
19991130,1
19991201,1
19991202,1
19991209,1
19991215,1
19991216,2
19991217,2
19991218,2
19991220,2
19991222,2
19991224,4
19991227,1
20000107,1
20000110,1
20000111,1
20000113,1
20000119,2
20000120,1
20000121,1
20000124,1
20000125,1
20000127,2
20000131,1
20000207,1
20000208,1
20000209,4
20000211,1
20000221,1
20000223,1
20000225,1
20000229,1
20000302,1
20000303,1
20000309,3
20000310,1
20000313,1
20000314,1
20000315,3
20000316,1
20000317,1
20000320,1
20000322,1
20000323,1
20000324,2
20000328,1
20000329,1
20000330,4
20000331,1
20000403,1
20000405,2
20000406,2
20000407,1
20000411,1
20000412,1
20000413,2
20000414,3
20000415,1
20000417,2
20000418,1
20000419,3
20000420,1
20000424,1
20000425,1
20000427,1
20000428,2
20000501,2
20000503,1
20000504,1
20000505,2
20000510,2
20000511,1
20000512,1
20000519,1
20000522,1
20000529,1
20000530,3
20000531,2
20000601,1
20000603,1
20000607,2
20000609,2
20000612,1
20000613,3
20000614,1
20000615,1
20000616,2
20000619,2
20000620,1
20000621,1
20000622,3
20000623,1
20000626,1
20000627,1
20000628,4
20000629,2
20000630,4
20000703,2
20000706,4
20000707,1
20000711,1
20000712,1
20000714,1
20000717,1
20000719,2
20000721,1
20000725,3
20000727,2
20000728,3
20000731,2
20000802,1
20000803,1
20000804,2
20000808,1
20000809,2
20000810,2
20000811,1
20000814,2
20000817,2
20000818,2
20000821,2
20000823,1
20000824,1
20000825,1
20000828,2
20000829,2
20000830,2
20000901,3
20000905,1
20000907,1
20000908,1
20000912,1
20000914,1
20000915,1
20000918,3
20000919,3
20000921,1
20000922,1
20000926,1
20000927,1
20000928,1
20000929,2
20000930,1
20001002,1
20001003,2
20001004,1
20001006,4
20001010,1
20001011,2
20001012,1
20001013,1
20001016,1
20001018,1
20001020,1
20001024,1
20001027,4
20001030,2
20001031,2
20001101,1
20001103,1
20001106,2
20001107,1
20001108,1
20001110,3
20001113,2
20001114,4
20001115,1
20001116,2
20001117,2
20001119,1
20001120,3
20001127,2
20001128,1
20001129,2
20001130,1
20001201,2
20001204,1
20001205,2
20001206,2
20001207,2
20001208,2
20001214,3
20001218,1
20001219,1
20001220,5
20001221,3
20001222,2
20001225,1
20001226,2
20001227,6
20001228,3
20001229,1
20010105,1
20010109,3
20010110,2
20010111,1
20010112,1
20010116,2
20010117,2
20010118,2
20010119,2
20010122,6
20010123,1
20010124,3
20010125,1
20010126,2
20010129,1
20010202,1
20010205,2
20010206,1
20010208,1
20010209,2
20010212,1
20010213,2
20010214,3
20010216,3
20010222,1
20010223,2
20010227,1
20010228,4
20010301,2
20010302,3
20010305,1
20010306,2
20010307,1
20010308,4
20010310,2
20010313,3
20010314,3
20010315,1
20010316,2
20010319,2
20010320,1
20010321,5
20010322,5
20010323,3
20010326,4
20010327,1
20010328,5
20010329,6
20010330,6
20010402,1
20010405,2
20010406,1
20010409,3
20010410,2
20010411,2
20010412,2
20010413,1
20010416,1
20010417,1
20010418,1
200104
Query:
SELECT t."publication_number", ARRAY_SIZE(t."cited_by") AS "forward_citation_count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,forward_citation_count
CA-27-A,0
ES-81-Y,0
DE-303-C,0
ES-866-Y,0
FI-150-A,0
FI-250-A,0
FR-336-E,0
NL-284-C,0
NL-947-C,0
BE-107-T1,0
CA-1911-A,0
CA-4005-A,0
CA-4106-A,0
CA-4698-A,0
CA-4801-A,0
CA-5943-A,0
CA-6183-A,0
CA-6207-A,0
CA-6390-A,0
CA-6969-A,0
CA-8931-S,0
CA-9897-A,0
DE-3129-C,0
DE-3301-C,0
DE-3884-C,0
DE-3983-C,0
DE-5976-C,0
DK-2807-C,0
DK-3080-C,0
DK-3107-C,0
DK-3184-C,0
DK-3510-C,0
DK-5867-C,0
DK-5921-C,0
DK-6491-A,0
DK-7210-C,0
DK-8069-C,0
DK-8466-C,0
DK-9281-C,0
DK-9359-C,0
ES-1062-U,0
ES-1498-U,0
ES-1524-Y,0
ES-1872-U,0
ES-2542-Y,0
ES-2819-Y,0
ES-2960-U,0
ES-3045-U,0
ES-4483-Y,0
ES-4723-Y,0
ES-4858-U,0
ES-5089-Y,0
ES-5219-Y,0
ES-5716-U,0
ES-5975-Y,0
ES-6454-U,0
ES-6552-Y,0
ES-6928-Y,0
ES-6962-Y,0
ES-7086-Y,0
ES-7407-Y,0
ES-7489-Y,0
ES-7516-U,0
ES-7538-U,0
ES-764-H3,0
ES-8269-Y,0
FI-1825-A,0
FI-291-U1,0
FI-3021-A,0
FI-4211-A,0
FI-4543-A,0
FI-8034-A,0
FI-8619-A,0
FI-8985-A,0
FI-902-U1,0
FR-1186-E,0
FR-1382-E,0
FR-1550-M,0
FR-2064-E,0
FR-2510-M,0
FR-2578-M,0
FR-2635-E,0
FR-3293-M,0
FR-5174-E,0
FR-5770-E,0
FR-7085-M,0
FR-7747-E,0
FR-8053-M,0
FR-8143-M,0
NL-3613-C,0
NL-4187-C,0
NL-5034-C,0
NL-9752-C,0
NL-9761-C,0
RU-815-U1,0
US-1260-A,0
US-1844-A,0
US-3704-A,0
US-4174-P,0
US-4340-A,0
US-4449-P,0
US-4570-P,0
US-5293-P,0
US-5333-A,0
US-5618-A,0
US-6399-A,0
US-6501-P,0
US-7090-A,0
US-7624-A,0
US-7703-P,0
US-7765-P,0
US-8162-P,0
US-8923-P,0
US-9153-A,0
US-9563-A,0
US-H817-H,0
CA-10240-A,0
CA-10445-A,0
CA-11856-A,0
CA-12085-A,0
CA-12299-A,0
CA-12359-A,0
CA-12986-A,0
CA-14364-A,0
CA-15108-A,0
CA-15467-A,0
CA-16464-A,0
CA-16944-A,0
CA-17107-A,0
CA-18535-S,0
CA-19006-S,0
CA-21676-A,0
CA-21706-A,0
CA-21979-A,0
CA-22497-S,0
CA-22705-A,0
CA-23044-A,0
CA-25240-S,0
CA-25587-A,0
CA-26172-A,0
CA-27810-A,0
CA-29171-S,0
CA-29565-A,0
CA-30563-S,0
CA-30747-A,0
CA-31066-A,0
CA-31656-A,0
CA-34117-A,0
CA-34328-A,0
CA-35530-A,0
CA-36126-A,0
CA-37060-A,0
CA-37412-A,0
CA-38186-A,0
CA-38290-A,0
CA-38566-A,0
CA-39941-A,0
CA-41986-A,0
CA-42957-A,0
CA-43582-A,0
CA-43613-A,0
CA-43665-A,0
CA-44103-A,0
CA-44675-A,0
CA-45114-S,0
CA-45162-A,0
CA-46041-S,0
CA-46346-S,0
CA-46414-S,0
CA-46650-A,0
CA-47228-S,0
CA-47556-A,0
CA-47943-A,0
CA-48005-S,0
CA-50059-A,0
CA-51084-S,0
CA-51448-A,0
CA-53020-A,0
CA-53342-A,0
CA-53679-A,0
CA-54019-A,0
CA-56199-S,0
CA-57871-A,0
CA-58112-A,0
CA-59658-S,0
CA-62116-A,0
CA-63512-A,0
CA-64348-A,0
CA-64895-A,0
CA-64959-A,0
CA-65051-A,0
CA-65468-A,0
CA-66408-A,0
CA-67027-A,0
CA-67256-A,0
CA-68355-A,0
CA-68561-A,0
CA-69952-A,0
CA-69969-A,0
CA-70837-S,0
CA-71352-A,0
CA-72557-S,0
CA-73229-S,0
CA-73434-A,0
CA-73648-A,0
CA-75054-A,0
CA-75833-A,0
CA-75940-A,0
CA-76442-A,0
CA-77673-S,0
CA-78154-A,0
CA-78848-A,0
CA-80485-S,0
CA-81879-A,0
CA-82735-A,0
CA-83640-A,0
CA-84428-S,0
CA-84611-A,0
CA-85458-S,0
CA-87085-A,0
CA-87655-A,0
CA-88869-A,0
CA-89598-S,0
CA-90451-A,0
CA-90703-A,0
CA-91407-A,0
CA-91839-A,0
CA-92136-S,0
CA-92671-S,0
CA-93153-A,0
CA-93847-S,0
CA-94404-A,0
CA-94834-A,0
CA-95812-A,0
CA-96813-A,0
CA-97691-A,0
CA-97784-A,0
CA-98415-S,0
CA-98613-A,0
CA-98742-A,0
CA-99391-S,0
CA-99529-A,0
DE-10599-C,0
DE-10678-C,0
DE-10717-C,0
DE-12268-C,0
DE-16453-C,0
DE-17382-C,0
DE-17635-C,0
DE-18657-C,0
DE-21533-C,0
DE-21800-C,0
DE-22191-C,0
DE-24092-C,0
DE-24550-C,0
DE-26040-C,0
DE-26251-C,0
DE-26645-C,0
DE-27162-C,0
DE-28245-C,0
DE-28664-C,0
DE-29317-C,0
DE-29580-C,0
DE-29751-C,0
DE-29873-C,0
DE-34701-C,0
DE-35759-C,0
DE-36143-C,0
DE-36572-C,0
DE-36880-C,0
DE-37006-C,0
DE-39978-C,0
DE-41212-C,0
DE-41909-C,0
DE-43016-C,0
DE-43252-C,0
DE-43745-C,0
DE-44221-C,0
DE-44490-C,0
DE-46714-C,0
DE-46729-C,0
DE-46866-C,0
DE-47512-C,0
DE-48016-C,0
DE-48200-C,0
DE-48281-C,0
DE-48415-C,0
DE-48624-C,0
DE-48946-C,0
DE-55522-C,0
DE-57100-C,0
DE-59206-C,0
DE-62156-C,0
DE-62668-C,0
DE-64182-C,0
DE-64466-C,0
DE-68843-C,0
DE-69224-C,0
DE-69735-C,0
DE-70329-C,0
DE-70421-C,0
DE-70605-C,0
DE-71525-C,0
DE-72135-C,0
DE-72417-C,0
DE-73920-C,0
DE-75006-C,0
DE-75333-C,0
DE-78770-C,0
DE-82929-C,0
DE-83658-C,0
DE-83966-C,0
DE-84792-C,0
DE-87929-C,0
DE-90760-C,0
DE-91921-C,0
DE-92960-C,0
DE-93320-C,0
DE-93611-C,0
DE-94567-C,0
DE-96265-C,0
DE-97461-C,0
DE-98822-C,0
DK-10751-C,0
DK-11017-C,0
DK-11274-A,0
DK-11549-C,0
DK-13429-C,0
DK-14113-C,0
DK-15486-A,0
DK-15672-C,0
DK-16003-C,0
DK-16200-C,0
DK-16721-C,0
DK-17077-C,0
DK-17891-C,0
DK-18174-A,0
DK-18287-C,0
DK-18953-C,0
DK-19067-C,0
DK-20848-C,0
DK-21534-C,0
DK-21593-C,0
DK-24093-C,0
DK-24122-C,0
DK-24560-C,0
DK-24764-C,0
DK-25033-C,0
DK-26002-C,0
DK-28460-C,0
DK-30663-C,0
DK-31338-C,0
DK-32802-C,0
DK-32923-C,0
DK-32960-C,0
DK-33342-C,0
DK-33585-C,0
DK-34417-C,0
DK-34475-A,0
DK-34847-C,0
DK-3485-D0,0
DK-35287-A,0
DK-35387-A,0
DK-36818-C,0
DK-37723-C,0
DK-38288-C,0
DK-3889-D0,0
DK-40323-C,0
DK-42091-A,0
DK-44173-C,0
DK-45094-C,0
DK-46556-C,0
DK-47464-C,0
DK-48374-C,0
DK-48877-A,0
DK-49091-A,0
DK-49195-A,0
DK-49500-C,0
DK-49630-C,0
DK-50267-C,0
DK-50495-C,0
DK-50958-C,0
DK-51991-A,0
DK-54440-C,0
DK-57003-C,0
DK-57783-C,0
DK-58127-C,0
DK-58679-A,0
DK-59291-C,0
DK-59541-C,0
DK-61292-A,0
DK
Query:
SELECT t."publication_number", t."embedding_v1"[0] AS "first_embedding_element"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,first_embedding_element
CA-27-A,1.542691000000000e-01
ES-81-Y,5.887155000000000e-02
DE-303-C,
ES-866-Y,2.173252600000000e-01
FI-150-A,1.129362000000000e-01
FI-250-A,1.157349500000000e-01
FR-336-E,2.488963000000000e-01
NL-284-C,
NL-947-C,
BE-107-T1,1.335686300000000e-01
CA-1911-A,-5.096149000000000e-02
CA-4005-A,7.245873000000000e-02
CA-4106-A,-9.016114000000000e-02
CA-4698-A,2.535995800000000e-01
CA-4801-A,1.188415000000000e-01
CA-5943-A,1.380696150000000e-02
CA-6183-A,-9.289648000000000e-02
CA-6207-A,-7.432461999999999e-02
CA-6390-A,-6.278615000000000e-02
CA-6969-A,-4.535574000000000e-02
CA-8931-S,1.483745600000000e-01
CA-9897-A,-7.298333000000000e-03
DE-3129-C,
DE-3301-C,
DE-3884-C,
DE-3983-C,
DE-5976-C,
DK-2807-C,1.761451700000000e-02
DK-3080-C,4.119539300000000e-02
DK-3107-C,4.911699500000000e-02
DK-3184-C,3.854642000000000e-02
DK-3510-C,7.552389000000000e-02
DK-5867-C,1.591398400000000e-02
DK-5921-C,6.764354600000000e-02
DK-6491-A,1.128999440000000e-01
DK-7210-C,8.163135500000000e-02
DK-8069-C,9.668399400000000e-02
DK-8466-C,7.944510000000000e-02
DK-9281-C,-4.147897300000000e-02
DK-9359-C,4.443456600000000e-02
ES-1062-U,1.216160360000000e-01
ES-1498-U,1.393214200000000e-01
ES-1524-Y,7.966964000000000e-02
ES-1872-U,1.144068300000000e-01
ES-2542-Y,1.716222600000000e-01
ES-2819-Y,5.747090300000000e-02
ES-2960-U,1.413429700000000e-01
ES-3045-U,1.332726300000000e-01
ES-4483-Y,8.827510500000001e-02
ES-4723-Y,1.224111700000000e-01
ES-4858-U,1.289089900000000e-01
ES-5089-Y,1.207708200000000e-01
ES-5219-Y,9.017859000000000e-02
ES-5716-U,7.149332000000000e-02
ES-5975-Y,1.637134100000000e-01
ES-6454-U,1.130871700000000e-01
ES-6552-Y,1.516620400000000e-01
ES-6928-Y,2.109149200000000e-01
ES-6962-Y,1.266357700000000e-01
ES-7086-Y,1.744338600000000e-01
ES-7407-Y,1.891687200000000e-01
ES-7489-Y,1.965648100000000e-01
ES-7516-U,1.807984100000000e-01
ES-7538-U,8.661310999999999e-02
ES-764-H3,6.152169400000000e-02
ES-8269-Y,1.706895400000000e-01
FI-1825-A,2.464068000000000e-01
FI-291-U1,1.622690400000000e-01
FI-3021-A,9.069756000000000e-02
FI-4211-A,4.921020600000000e-02
FI-4543-A,1.011299640000000e-01
FI-8034-A,1.114909900000000e-01
FI-8619-A,1.048030700000000e-01
FI-8985-A,5.210217500000000e-02
FI-902-U1,1.502619700000000e-01
FR-1186-E,2.085930700000000e-01
FR-1382-E,5.966770000000000e-02
FR-1550-M,1.179447700000000e-01
FR-2064-E,7.639956500000000e-02
FR-2510-M,1.514561000000000e-01
FR-2578-M,1.120744100000000e-01
FR-2635-E,1.265750000000000e-01
FR-3293-M,2.570555200000000e-02
FR-5174-E,2.609833000000000e-01
FR-5770-E,1.358778000000000e-01
FR-7085-M,9.205752600000000e-02
FR-7747-E,2.090552700000000e-01
FR-8053-M,1.022890000000000e-01
FR-8143-M,1.022890000000000e-01
NL-3613-C,
NL-4187-C,
NL-5034-C,
NL-9752-C,
NL-9761-C,3.997769200000000e-02
RU-815-U1,-9.559013999999999e-03
US-1260-A,2.007609600000000e-01
US-1844-A,1.878615500000000e-01
US-3704-A,-4.811066800000000e-02
US-4174-P,-6.829273400000000e-03
US-4340-A,9.653001999999999e-02
US-4449-P,6.634068000000000e-02
US-4570-P,-4.225703700000000e-02
US-5293-P,-3.916518800000000e-02
US-5333-A,1.711397200000000e-01
US-5618-A,8.231669000000000e-02
US-6399-A,-4.291071700000000e-02
US-6501-P,5.250982000000000e-03
US-7090-A,7.188845000000001e-02
US-7624-A,2.126437600000000e-02
US-7703-P,-8.711868500000000e-02
US-7765-P,
US-8162-P,1.992688000000000e-02
US-8923-P,
US-9153-A,4.537189000000000e-02
US-9563-A,2.645360500000000e-02
US-H817-H,-1.032094700000000e-01
CA-10240-A,-9.598008999999999e-03
CA-10445-A,-9.962522000000000e-02
CA-11856-A,7.115657000000000e-02
CA-12085-A,-2.052029400000000e-02
CA-12299-A,-8.509996000000000e-02
CA-12359-A,-1.194724600000000e-01
CA-12986-A,7.547039000000000e-02
CA-14364-A,1.987639800000000e-02
CA-15108-A,-6.334075200000000e-03
CA-15467-A,2.948298100000000e-02
CA-16464-A,-7.535351999999999e-02
CA-16944-A,-2.670204600000000e-01
CA-17107-A,-8.956730000000000e-02
CA-18535-S,1.935900200000000e-01
CA-19006-S,1.839075800000000e-01
CA-21676-A,-6.167627000000000e-02
CA-21706-A,-2.234345900000000e-02
CA-21979-A,8.201849999999999e-02
CA-22497-S,2.035627800000000e-01
CA-22705-A,-4.995441000000000e-02
CA-23044-A,-4.777407300000000e-02
CA-25240-S,1.568436500000000e-01
CA-25587-A,-3.109784400000000e-02
CA-26172-A,-1.016056300000000e-01
CA-27810-A,-1.720365500000000e-02
CA-29171-S,1.270025700000000e-01
CA-29565-A,-3.440223300000000e-02
CA-30563-S,2.158738700000000e-01
CA-30747-A,1.072055000000000e-01
CA-31066-A,7.366745000000000e-02
CA-31656-A,-3.078916000000000e-02
CA-34117-A,-2.035722700000000e-02
CA-34328-A,-1.038442100000000e-01
CA-35530-A,3.940954800000000e-02
CA-36126-A,-1.722260000000000e-02
CA-37060-A,-1.403236700000000e-01
CA-37412-A,5.853737000000000e-02
CA-38186-A,-2.079663000000000e-02
CA-38290-A,-2.248569200000000e-02
CA-38566-A,6.938809000000000e-02
CA-39941-A,3.828755000000000e-02
CA-41986-A,6.439857000000000e-02
CA-42957-A,2.088248300000000e-03
CA-43582-A,2.940963800000000e-02
CA-43613-A,1.968467000000000e-02
CA-43665-A,-1.02374630000
Query:
SELECT 
    MIN("publication_date") AS "min_publication_date", 
    MAX("publication_date") AS "max_publication_date"
FROM 
    "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
WHERE 
    "publication_date" NOT IN (0, '0', '00000000') 
    AND TRY_TO_DATE("publication_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL;
Answer:
min_publication_date,max_publication_date
18281210,20170913
Query:
SELECT t."publication_number", ARRAY_SIZE(t."cited_by") AS "forward_citation_count"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" t
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p ON t."publication_number" = p."publication_number"
    WHERE p."country_code" = 'US' AND p."kind_code" = 'B2' AND p."grant_date" BETWEEN 20100101 AND 20141231
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,forward_citation_count
US-7648069-B2,2
US-7652920-B2,2
US-7655776-B2,2
US-7670171-B2,2
US-7687355-B2,2
US-7707402-B2,2
US-7712454-B2,2
US-7736816-B2,2
US-7751155-B2,2
US-7762109-B2,2
US-7767369-B2,2
US-7771604-B2,2
US-7774629-B2,2
US-7779533-B2,2
US-7783295-B2,2
US-7818260-B2,2
US-7832988-B2,2
US-7835283-B2,2
US-7836581-B2,2
US-7859576-B2,2
US-7877365-B2,2
US-7883966-B2,2
US-7894970-B2,2
US-7912474-B2,2
US-7916698-B2,2
US-7921344-B2,2
US-7923105-B2,2
US-7927451-B2,2
US-7931057-B2,2
US-7974523-B2,2
US-7983635-B2,2
US-8002162-B2,2
US-8003127-B2,2
US-8009900-B2,2
US-8010833-B2,2
US-8014658-B2,2
US-8018245-B2,2
US-8023730-B2,2
US-8023832-B2,2
US-8030978-B2,2
US-8039028-B2,2
US-8051775-B2,2
US-8052382-B2,2
US-8077820-B2,2
US-8079482-B2,2
US-8105036-B2,2
US-8106293-B2,2
US-8111305-B2,2
US-8120996-B2,2
US-8121735-B2,2
US-8127992-B2,2
US-8132956-B2,2
US-8139265-B2,2
US-8149082-B2,2
US-8158212-B2,2
US-8160133-B2,2
US-8164921-B2,2
US-8171672-B2,2
US-8188151-B2,2
US-8188903-B2,2
US-8193992-B2,2
US-8198302-B2,2
US-8210807-B2,2
US-8218491-B2,2
US-8225738-B2,2
US-8227663-B2,2
US-8228473-B2,2
US-7655995-B2,1
US-7663530-B2,1
US-7664248-B2,1
US-7664267-B2,1
US-7665827-B2,1
US-7669432-B2,1
US-7672808-B2,1
US-7682504-B2,1
US-7701349-B2,1
US-7721249-B2,1
US-7727439-B2,1
US-7752957-B2,1
US-7778103-B2,1
US-7786385-B2,1
US-7790282-B2,1
US-7794850-B2,1
US-7800202-B2,1
US-7804796-B2,1
US-7807134-B2,1
US-7820445-B2,1
US-7824486-B2,1
US-7829901-B2,1
US-7840183-B2,1
US-7842007-B2,1
US-7858309-B2,1
US-7867187-B2,1
US-7892756-B2,1
US-7892905-B2,1
US-7904645-B2,1
US-7915905-B2,1
US-7916232-B2,1
US-7919847-B2,1
US-7922419-B2,1
US-7935835-B2,1
US-7953015-B2,1
US-7985925-B2,1
US-7999512-B2,1
US-8000680-B2,1
US-8018507-B2,1
US-8019399-B2,1
US-8019803-B2,1
US-8020746-B2,1
US-8027547-B2,1
US-8031364-B2,1
US-8035373-B2,1
US-8069298-B2,1
US-8070363-B2,1
US-8071399-B2,1
US-8076591-B2,1
US-8100550-B2,1
US-8113790-B2,1
US-8118543-B2,1
US-8120836-B2,1
US-8130337-B2,1
US-8139810-B2,1
US-8141019-B2,1
US-8150333-B2,1
US-8153074-B2,1
US-8164178-B2,1
US-8171448-B2,1
US-8173048-B2,1
US-8178693-B2,1
US-8178958-B2,1
US-8179406-B2,1
US-8206179-B2,1
US-8213098-B2,1
US-8219499-B2,1
US-8234525-B2,1
US-8235283-B2,1
US-8240823-B2,1
US-8246872-B2,1
US-8269281-B2,1
US-8269638-B2,1
US-8275199-B2,1
US-8276324-B2,1
US-8283840-B2,1
US-8284029-B2,1
US-8288525-B2,1
US-8298702-B2,1
US-8301234-B2,1
US-8303052-B2,1
US-8306451-B2,1
US-8316006-B2,1
US-8321914-B2,1
US-8324168-B2,1
US-8342564-B2,1
US-8353515-B2,1
US-8359490-B2,1
US-8362991-B2,1
US-8366904-B2,1
US-8367383-B2,1
US-8369289-B2,1
US-8370234-B2,1
US-8373784-B2,1
US-8389486-B2,1
US-8403311-B2,1
US-8408441-B2,1
US-8415128-B2,1
US-8433208-B2,1
US-8445305-B2,1
US-8451089-B2,1
US-8461305-B2,1
US-8462543-B2,1
US-8468999-B2,1
US-8475379-B2,1
US-8475411-B2,1
US-8478958-B2,1
US-8481489-B2,1
US-8484213-B2,1
US-8491435-B2,1
US-8493575-B2,1
US-8496000-B2,1
US-8499356-B2,1
US-8510184-B2,1
US-8513702-B2,1
US-8514326-B2,1
US-8520058-B2,1
US-8531248-B2,1
US-8537245-B2,1
US-8552806-B2,1
US-8560450-B2,1
US-8568565-B2,1
US-7644492-B2,1
US-7644531-B2,1
US-7655308-B2,1
US-7676902-B2,1
US-7697360-B2,1
US-7699404-B2,1
US-7700771-B2,1
US-7719667-B2,1
US-7720478-B2,1
US-7730743-B2,1
US-7731863-B2,1
US-7737864-B2,1
US-7746250-B2,1
US-7754894-B2,1
US-7767747-B2,1
US-7775796-B2,1
US-7778436-B2,1
US-7801858-B2,1
US-7804783-B2,1
US-7810481-B2,1
US-7828856-B2,1
US-7841047-B2,1
US-7842656-B2,1
US-7853440-B2,1
US-7877770-B2,1
US-7885415-B2,1
US-7891601-B2,1
US-7898177-B2,1
US-7899605-B2,1
US-7916315-B2,1
US-7923697-B2,1
US-7928106-B2,1
US-7928235-B2,1
US-7933348-B2,1
US-7940834-B2,1
US-7954453-B2,1
US-7982438-B2,1
US-7985341-B2,1
US-8002451-B2,1
US-8005941-B2,1
US-8025749-B2,1
US-8029633-B2,1
US-8040639-B2,1
US-8070471-B2,1
US-8075629-B2,1
US-8087045-B2,1
US-8088991-B2,1
US-8119066-B2,1
US-8125875-B2,1
US-8129596-B2,1
US-8134137-B2,1
US-8136982-B2,1
US-8137295-B2,1
US-8139731-B2,1
US-8141404-B2,1
US-8159654-B2,1
US-8180817-B2,1
US-8183798-B2,1
US-8190075-B2,1
US-8213403-B2,1
US-8219832-B2,1
US-8229673-B2,1
US-8250231-B2,1
US-8252225-B2,1
US-8252491-B2,1
US-8267853-B2,1
US-8285133-B2,1
US-8305087-B2,1
US-8306076-B2,1
US-8307973-B2,1
US-8334212-B2,1
US-8334976-B2,1
US-8335668-B2,1
US-8340986-B2,1
US-8341464-B2,1
US-8343975-B2,1
US-8358913-B2,1
US-8364696-B2,1
US-8365543-B2,1
US-8382949-B2,1
US-8389215-B2,1
US-8400513-B2,1
US-8404104-B2,1
US-8423896-B2,1
US-8434035-B2,1
US-8444244-B2,1
US-8449208-B2,1
US-8452287-B2,1
US-8454079-B2,1
US-8458121-B2,1
US-8464271-B2,1
US-8487101-B2,1
US-8491585-B2,1
US-8495597-B2,1
US-8505265-B2,1
US-8506716-B2,1
US-8513311-B2,1
US-8515429-B2,1
US-8520301-B2,1
US-8523034-B2,1
US-8525420-B2,1
US-8528725-B2,1
US-8528838-B2,1
US-8530066-B2,1
US-8531887-B2,1
US-8553716-B2,1
US-8562708-B2,1
US-8570129-B2,1
US-8573132-B2,1
US-8596900-B2,1
US-8601637-B2,1
US-8602099-B2,1
US-8621521-B2,1
US-8622548-B2,1
US-8627855-B2,1
US-8630848-B2,1
US-8639655-B2,1
US-8657558-B2,1
US-8658651-B2,1
US-8658858-B2,1
US-8684584-B2,
Query:
SELECT "publication_number", "inventor_harmonized"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,inventor_harmonized
JP-1810118-C,[]
JP-1203714-C,[]
FR-1500580-A,"[
  {
    ""country_code"": """",
    ""name"": ""IV FLAVIUS EUGENE DAVIS""
  }
]"
ES-8501233-A1,[]
CA-2165155-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""AMBUTER HAL""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""ALWART TODD STEPHEN""
  }
]"
FR-2409943-B1,[]
GB-1086860-A,[]
JP-S54117658-A,"[
  {
    ""country_code"": """",
    ""name"": ""TAKIZAWA AKIO""
  }
]"
JP-H0710178-Y2,[]
JP-3172057-B2,[]
US-136580-A,[]
US-272220-A,[]
US-599187-A,[]
CN-1062411-C,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""JAEGER K F""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""KILBRIDE T""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""LISA R E""
  }
]"
DE-1479218-U,[]
EP-2512367-B1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""KNIZE DAVID""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""KOYFMAN ILYA S""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""YUAN JENNY J""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""HILL DONALD G""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""HOFFMAN MICHAEL""
  }
]"
ES-2312527-T3,"[
  {
    ""country_code"": ""GB"",
    ""name"": ""AUSTIN MARK""
  }
]"
FR-1000748-A,"[
  {
    ""country_code"": """",
    ""name"": ""WAVEREN MARIUS VAN""
  }
]"
FR-1573809-A,[]
JP-S5066757-U,[]
JP-S5845249-Y2,[]
US-2103405-A,"[
  {
    ""country_code"": """",
    ""name"": ""CHRISTIAN FRANK T""
  }
]"
GB-201114438-D0,[]
JP-5707248-B2,[]
JP-2016211567-A,"[
  {
    ""country_code"": """",
    ""name"": ""METZ DIETMAR""
  },
  {
    ""country_code"": """",
    ""name"": ""STEFAN JAKOB""
  },
  {
    ""country_code"": """",
    ""name"": ""HEDWING SCHICK""
  },
  {
    ""country_code"": """",
    ""name"": ""PIETROWSKI HERBERT""
  },
  {
    ""country_code"": """",
    ""name"": ""NEUSCHWANDER HELMUT""
  }
]"
KR-20040075216-A,"[
  {
    ""country_code"": """",
    ""name"": ""KIM TAE JIN""
  }
]"
CN-1954806-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""WANG JIAQUAN DONG""
  }
]"
CN-201399214-Y,"[
  {
    ""country_code"": """",
    ""name"": ""GAOJUN HE""
  },
  {
    ""country_code"": """",
    ""name"": ""ZUNKUN YANG""
  }
]"
JP-1368881-C,[]
JP-1444589-C,[]
FR-1497898-A,[]
DE-2707796-A1,"[
  {
    ""country_code"": """",
    ""name"": ""HAYASHI KIYOSHI""
  }
]"
DE-2962208-D1,"[
  {
    ""country_code"": """",
    ""name"": ""CIGANEK ENGELBERT""
  }
]"
FR-2233137-A1,[]
GB-2224027-B,"[
  {
    ""country_code"": """",
    ""name"": ""BRAQUET PIERRE""
  },
  {
    ""country_code"": """",
    ""name"": ""DIVE GEORGES""
  },
  {
    ""country_code"": """",
    ""name"": ""GODFROID JEAN-JACQUES""
  },
  {
    ""country_code"": """",
    ""name"": ""HEYMANS FRAN OISE""
  },
  {
    ""country_code"": """",
    ""name"": ""PIROTSKY EDUARDO""
  }
]"
JP-S5911756-Y2,[]
JP-2000218515-A,"[
  {
    ""country_code"": """",
    ""name"": ""AMANO TAKESHI""
  },
  {
    ""country_code"": """",
    ""name"": ""KIYONO TOSHIHIRO""
  }
]"
JP-S56169301-A,"[
  {
    ""country_code"": """",
    ""name"": ""AKASHI MASAO""
  },
  {
    ""country_code"": """",
    ""name"": ""SATOU HIROMI""
  }
]"
US-2002102047-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""AKKARAJU SANDEEP""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""MASTRANGELO CARLOS""
  },
  {
    ""country_code"": ""US"",
    ""name"": ""IYER NAN""
  }
]"
CN-1467804-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""LU MINGYUAN""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""XIE YIZHANG""
  },
  {
    ""country_code"": ""CN"",
    ""name"": ""TIAN HAOLUN""
  }
]"
EP-0988417-B1,"[
  {
    ""country_code"": ""AT"",
    ""name"": ""HALMSCHLAGER GUENTER""
  },
  {
    ""country_code"": ""AT"",
    ""name"": ""HOLZER WALTER""
  },
  {
    ""country_code"": ""DE"",
    ""name"": ""STEINER KARL""
  }
]"
JP-H04334685-A,"[
  {
    ""country_code"": """",
    ""name"": ""YAMANISHI EIJI""
  }
]"
JP-S6359143-U,[]
JP-H0685910-B2,[]
JP-H0350567-B2,[]
JP-5108773-B2,[]
CN-2768052-Y,"[
  {
    ""country_code"": ""HK"",
    ""name"": ""WEIHUI HE WEIQIANG WANG CHUQIA""
  }
]"
CN-1940157-B,"[
  {
    ""country_code"": """",
    ""name"": ""MICHAEL HIMMELSTOSS""
  }
]"
CN-202318915-U,"[
  {
    ""country_code"": """",
    ""name"": ""LIQI CHEN""
  },
  {
    ""country_code"": """",
    ""name"": ""GUANG YANG""
  },
  {
    ""country_code"": """",
    ""name"": ""HUSI OU""
  }
]"
CN-203200362-U,"[
  {
    ""country_code"": """",
    ""name"": ""WU JIANMING""
  },
  {
    ""country_code"": """",
    ""name"": ""HUANG HUJUN""
  },
  {
    ""country_code"": """",
    ""name"": ""LIU YIMIN""
  },
  {
    ""country_code"": """",
    ""name"": ""WANG XING""
  },
  {
    ""country_code"": """",
    ""name"": ""WANG YUGANG""
  },
  {
    ""country_code"": """",
    ""name"": ""ZHAO JINLONG""
  },
  {
    ""country_code"": """",
    ""name"": ""ZHANG BO""
  },
  {
    ""country_code"": """",
    ""name"": ""ZHU JI
Query:
SELECT p."publication_number", f.value::VARIANT:"code"::STRING AS "ipc_code"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p,
    LATERAL FLATTEN(input => p."ipc") f
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,ipc_code
CN-104260754-A,B61K9/08
US-3939506-A,E03D9/052
US-3939506-A,E03D9/04
KR-101486666-B1,H05K7/20
KR-101486666-B1,H02K5/18
KR-101017597-B1,G06T17/05
JP-2010511460-A,A61L9/03
CN-102085956-B,B65F9/00
RU-2039928-C1,G01B13/02
CN-104891425-A,B81B7/02
CN-104891425-A,G01F1/56
US-8520301-B2,G02B5/28
US-8520301-B2,G02B5/20
US-8520301-B2,G02B1/10
US-8520301-B2,G02B5/08
US-4767715-A,C12C1/10
US-8463797-B2,G06F17/30
EP-1506427-A1,G06T15/08
EP-1506427-A1,G01R33/56
EP-1506427-A1,G06T5/00
EP-1506427-A1,G01R33/563
EP-1506427-A1,G01N24/08
EP-1506427-A1,A61B5/055
EP-1506427-A1,G06T17/00
EP-1506427-A1,G01R33/54
US-4168984-A,C04B24/18
US-4168984-A,C04B24/04
US-4168984-A,C04B24/10
US-3328541-A,G07F7/08
US-3328541-A,G07F7/02
US-4520785-A,F02M25/00
US-4520785-A,F02M21/04
US-4520785-A,F02B43/00
US-4520785-A,F02D19/08
US-4520785-A,F02M21/02
US-4520785-A,F02D23/00
CN-102699533-B,B23K26/21
CN-102699533-B,B23K26/70
WO-2010013298-A1,B62D6/00
WO-2010013298-A1,B62D5/04
JP-2014201698-A,C08G59/40
JP-2014201698-A,C08K3/00
JP-2014201698-A,H05K1/03
JP-2014201698-A,C08L71/10
JP-2014201698-A,C08L63/00
CN-100462795-C,G02F1/1337
CN-100462795-C,B05D1/02
CN-100462795-C,G02F1/1339
CN-100462795-C,G02F1/1333
CN-100462795-C,B05D7/24
CN-103105794-A,B32B43/00
CN-103105794-A,G05B19/04
US-7173260-B2,G21G5/00
US-7173260-B2,H01L21/76
US-4730660-A,B22D11/14
US-4730660-A,B22D11/16
US-4730660-A,B22D11/18
CN-102241207-A,B41M3/06
CN-103423048-A,F02M37/22
CN-103467811-A,C08K13/06
CN-103467811-A,C08K3/28
CN-103467811-A,C08L33/08
CN-103467811-A,F16L9/12
CN-103467811-A,C08K3/34
CN-103467811-A,C08K5/098
CN-103467811-A,C08K3/26
CN-103467811-A,C08L23/06
EP-2019421-A2,H01L21/60
EP-2019421-A2,H01L23/48
EP-2019421-A2,H01L23/485
US-2572662-A,H01H1/0237
DE-3139882-A1,F41A17/46
DE-3139882-A1,F41A17/04
FR-2598422-A1,A61P25/28
FR-2598422-A1,A61P25/08
FR-2598422-A1,C07K5/02
FR-2598422-A1,A61K31/195
US-2564636-A,G04C3/06
EP-1030654-A1,A61K9/36
EP-1030654-A1,A61K47/38
EP-1030654-A1,A61K9/32
EP-1030654-A1,A61P1/04
EP-1030654-A1,A61K9/28
EP-1030654-A1,A61K31/4439
EP-1030654-A1,A61K9/34
EP-1030654-A1,A61K47/02
EP-1030654-A1,A61K9/50
EP-1030654-A1,A61K9/30
EP-1030654-A1,A61P1/00
US-2702615-A,G05G11/00
US-2702615-A,B63H21/22
FR-3029452-A1,B60C19/00
FR-3029452-A1,B29D30/06
US-7218306-B2,G09F13/04
US-7218306-B2,G09G3/36
JP-H0654470-A,H02K23/40
JP-H0654470-A,H02K1/24
JP-H0654470-A,H02K1/02
KR-101374838-B1,G02B1/11
KR-101374838-B1,G02B3/00
KR-101374838-B1,G02B5/18
EP-0333403-A2,B41J2/505
EP-0333403-A2,B41J29/26
CN-102673959-A,B65G27/04
US-5765303-A,F41A21/18
CN-100530868-C,H01T4/16
CN-101328148-B,C07D233/34
EP-2523909-A2,A47G19/22
EP-2523909-A2,C02F1/44
EP-2523909-A2,C02F1/28
EP-2523909-A2,B01D35/02
EP-2523909-A2,A47J41/00
EP-2523909-A2,B01D29/11
JP-H07323517-A,B41F15/26
JP-H07323517-A,H05K3/12
JP-H07323517-A,B41F15/18
JP-H07323517-A,H05K3/34
JP-H07323517-A,B41F15/36
JP-H07323517-A,B41F15/08
US-3793211-A,A61K8/22
US-3793211-A,A61Q11/02
US-3793211-A,C11D3/395
US-3793211-A,C11D3/00
US-3793211-A,C11D3/39
US-3793211-A,A61K8/55
US-3793211-A,A61K8/20
CN-102924275-A,C07C67/54
CN-102924275-A,C07C69/14
CN-102924275-A,C07C67/60
US-3319424-A,F02K7/18
US-3319424-A,F02K9/36
US-3039712-A,B65H67/04
US-3039712-A,B65H19/22
CN-105111899-A,C09D5/03
CN-105111899-A,C09D7/12
CN-105111899-A,C09D167/00
EP-2963281-A1,F02M69/46
EP-2963281-A1,F02M61/14
EP-2963281-A1,F02M55/02
EP-2122559-A2,G06Q50/00
EP-2122559-A2,G05B15/00
CN-101733998-B,B32B38/10
JP-S60239748-A,G03C7/30
JP-S60239748-A,G03C7/42
JP-S60239748-A,G03C11/00
JP-S60239748-A,G03C7/327
JP-S60239748-A,G03C7/32
EP-2382496-A4,G01L1/24
EP-2382496-A4,G01K11/32
EP-2382496-A4,G01B11/00
EP-2382496-A4,G02B6/00
EP-2382496-A4,G02B6/02
JP-2013014873-A,D03C7/06
JP-4622665-B2,F16H57/04
JP-4622665-B2,B01D35/02
JP-4622665-B2,B01D29/50
JP-4622665-B2,B01D35/30
JP-H02167523-A,G02C7/06
JP-H02167523-A,B23Q15/00
JP-H02167523-A,B24B9/14
JP-H02167523-A,G02C13/00
US-5233553-A,G06F12/02
US-5233553-A,G06F9/355
US-5233553-A,G06F7/505
US-5233553-A,G06F7/50
US-9322575-B2,G02B5/08
US-9322575-B2,F24J2/10
US-9322575-B2,F24J2/16
US-9322575-B2,C03C17/36
CN-105188355-A,A01K29/00
US-8251903-B2,A61B5/00
CN-103864511-A,C05G3/00
DE-102004025034-A1,B60R7/06
DE-102004025034-A1,E05D1/04
DE-102004025034-A1,E05D3/02
DE-102004025034-A1,E05D1/06
DE-102004025034-A1,F16C11/04
US-8011721-B2,B60K37/00
EP-1854719-A3,H05B3/28
EP-1854719-A3,B64D13/00
EP-1854719-A3,F24D13/02
US-5528921-A,B21D7/06
GB-2537667-A,F16C11/06
GB-2537667-A,A47G5/00
GB-2537667-A,A47B21/02
US-5355615-A,A01K91/08
CN-1741767-B,A61B5/15
JP-2009139292-A,G01N35/00
JP-2009139292-A,G01N35/02
JP-H04505601-A,C04B38/10
JP-H04505601-A,E04F13/14
JP-H04505601-A,C04B28/14
JP-H04505601-A,B32B13/14
JP-H04505601-A,E04C2/04
CN-103856336-A,H04L12/18
CN-103856336-A,H04L29/06
DE-1109453-B,F02C7/00
CN-105776223-A,C01B33/107
US-3504962-A,E06B9/24
JP-S6198840-A,E04F19/06
JP-S6198840-A,E04F13/21
JP-S6198840-A,E04B1/684
JP-S6198840-A,E04F13/08
JP-S6198840-A,E04B1/66
JP-S6198840-A,E04F19/02
CN-106297967-A,G02F1/133
CN-106297967-A,H01B1/02
CN
Query:
SELECT "publication_number", "title_localized"::VARIANT:"text"::STRING AS "title"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,title
JP-1810118-C,
JP-1203714-C,
FR-1500580-A,
ES-8501233-A1,
CA-2165155-A1,
FR-2409943-B1,
GB-1086860-A,
JP-S54117658-A,
JP-H0710178-Y2,
JP-3172057-B2,
US-136580-A,
US-272220-A,
US-599187-A,
CN-1062411-C,
DE-1479218-U,
EP-2512367-B1,
ES-2312527-T3,
FR-1000748-A,
FR-1573809-A,
JP-S5066757-U,
JP-S5845249-Y2,
US-2103405-A,
GB-201114438-D0,
JP-5707248-B2,
JP-2016211567-A,
KR-20040075216-A,
CN-1954806-A,
CN-201399214-Y,
JP-1368881-C,
JP-1444589-C,
FR-1497898-A,
DE-2707796-A1,
DE-2962208-D1,
FR-2233137-A1,
GB-2224027-B,
JP-S5911756-Y2,
JP-2000218515-A,
JP-S56169301-A,
US-2002102047-A1,
CN-1467804-A,
EP-0988417-B1,
JP-H04334685-A,
JP-S6359143-U,
JP-H0685910-B2,
JP-H0350567-B2,
JP-5108773-B2,
CN-2768052-Y,
CN-1940157-B,
CN-202318915-U,
CN-203200362-U,
JP-897785-C,
JP-1789132-C,
JP-S62113530-U,
CA-118661-S,
FI-882364-A0,
CA-810158-A,
DE-2335240-A1,
DE-7610943-U1,
JP-H0673947-U,
JP-S54153049-A,
JP-S5716116-U,
US-548167-A,
CN-1055840-A,
JP-S6020713-A,
JP-S6234024-A,
JP-H0995081-A,
JP-H1088758-A,
GB-189709494-A,
JP-2001195445-A,
JP-2010101160-A,
CN-101746294-A,
CN-104170353-A,
CN-206056613-U,
JP-1032657-C,
JP-1654837-C,
DK-146223-C,
CA-564325-A,
GB-0802422-D0,
JP-S53139175-U,
JP-H01150349-U,
JP-2600796-Y2,
JP-S591896-U,
JP-S4922438-B1,
US-419959-A,
DE-69331528-D1,
DE-69430885-T2,
EP-1474362-B1,
JP-2000346423-A,
JP-2765752-B2,
KR-900003183-Y1,
JP-2003229053-A,
JP-2007241524-A,
JP-5129599-B2,
KR-100547071-B1,
KR-20070020426-A,
KR-20130050682-A,
CN-204556165-U,
ES-66185-Y,
CA-1331409-C,
FI-891492-A0,
GB-1348507-A,
JP-S60179587-U,
US-332138-A,
CN-1112492-C,
DE-566539-C,
DE-845109-C,
JP-S63125649-A,
JP-S6423693-U,
JP-S5243021-U,
JP-S5566205-U,
JP-H0825023-B2,
JP-2003215980-A,
JP-4255884-B2,
KR-100295305-B1,
CN-101547005-A,
CN-101988676-A,
CN-203259375-U,
CN-205932945-U,
DE-202006018912-U1,
FR-2828332-A1,
GB-1375879-A,
JP-S53161674-U,
US-2053075-A,
CN-2484753-Y,
CN-1212523-A,
FI-20010786-A,
JP-S6359144-U,
JP-2799203-B2,
JP-H08143121-A,
US-1837725-A,
US-2304134-A,
US-1864623-A,
JP-5991128-B2,
JP-2016105749-A,
RU-2191214-C2,
RU-2008140707-A,
CN-103265598-B,
CN-203928708-U,
CN-204557664-U,
CN-206326242-U,
CN-104559893-B,
CN-106856628-A,
US-6778773-B2,
JP-H00985753-A,
JP-1512007-C,
NL-28211-C,
CA-2184504-C,
FR-877274-A,
JP-S60218905-A,
JP-H04326774-A,
JP-S5125160-A,
FR-1012104-A,
JP-S5944363-A,
JP-H081564-A,
US-1233474-A,
US-2002011230-A1,
JP-2003169856-A,
US-811638-A,
KR-200338652-Y1,
KR-20070041890-A,
CN-1816294-A,
CN-2858160-Y,
CN-201276086-Y,
CN-201816145-U,
CN-102907994-A,
JP-1573454-C,
JP-1721868-C,
JP-2100371-C,
DK-358583-D0,
ES-146285-Y,
GB-478690-A,
DE-2649618-B2,
DE-3766112-D1,
DE-8007402-U1,
FR-390089-A,
FR-638126-A,
FR-2638622-B1,
JP-H0584037-U,
JP-S4739450-Y1,
JP-H0642846-U,
NL-296405-A,
NL-7211943-A,
EP-2781788-B1,
JP-S5072414-U,
JP-S5846920-U,
JP-S5874811-U,
JP-S5687776-U,
US-D279853-S,
KR-920008597-Y1,
JP-2004313014-A,
JP-6137070-B2,
RU-2008132286-A,
US-754320-A,
CN-105823611-A,
CN-106739164-A,
CN-205558012-U,
BE-512467-A,
CA-2244766-A1,
DE-1803332-A1,
DE-2149141-A1,
GB-2089320-A,
JP-S62164685-U,
JP-H066780-Y2,
DE-69322442-T2,
EP-1933436-B1,
EP-0782478-B1,
EP-0993180-B1,
JP-S5128923-U,
JP-S5153284-U,
JP-S5376919-A,
JP-3340813-B2,
JP-2000192758-A,
JP-H11193667-A,
RU-17326-U1,
KR-20110049427-A,
CN-101531763-A,
CN-201900010-U,
CN-202142477-U,
CN-202417422-U,
CN-202807027-U,
CA-27189-A,
JP-S4874140-A,
JP-2887866-B2,
FR-2239893-A5,
JP-H09201246-A,
JP-S6125607-Y2,
JP-H069665-Y2,
JP-H02145867-U,
DE-1899993-U,
DK-1279779-T3,
EP-1395943-B1,
JP-S61104472-A,
US-3605178-A,
ES-2301340-B1,
KR-890006762-Y1,
KR-910005717-Y1,
JP-WO2006134667-A1,
JP-WO2011121828-A1,
JP-6013229-B2,
KR-200371816-Y1,
KR-20040093694-A,
CN-104911016-A,
JP-1721970-C,
JP-H00979262-A,
JP-2045702-C,
CA-607467-A,
CA-870537-A,
DE-2913333-C2,
GB-2156898-B,
GB-9701425-D0,
DE-69108459-T2,
DE-69402587-D1,
DE-690465-C,
JP-S5354430-A,
JP-S5788835-A,
JP-H0510017-A,
JP-H08159838-A,
US-1863894-A,
JP-4882580-B2,
JP-5210626-B2,
RU-2345965-C2,
RU-2355420-C2,
KR-100352139-B1,
KR-100387884-B1,
KR-20120048256-A,
CN-201742521-U,
CN-202693633-U,
CN-202679530-U,
CN-106625363-A,
CN-205519698-U,
JP-1260064-C,
DE-54582-C,
ES-128308-A1,
DE-2516533-A1,
GB-0905075-D0,
GB-192211-A,
JP-2605593-Y2,
JP-S5020200-Y2,
JP-S524076-A,
DE-19811661-A1,
DE-29605835-U1,
DE-69131766-T2,
EP-2982223-A2,
EP-0172283-B1,
JP-S5743740-U,
JP-H04296316-A,
US-D487006-S,
US-3538803-A,
US-2002044447-A1,
JP-2003225526-A,
JP-2005299236-A,
JP-2010128199-A,
KR-101187803-B1,
CN-201628697-U,
CA-1192088-A1,
JP-1028326-C,
BE-782111-A1,
CA-1190527-A,
CA-2093193-C,
DE-130839-C,
ES-2051228-B1,
FR-554877-A,
FR-2636364-B1,
JP-S57153931-A,
JP-S5224357-Y2,
JP-H04314168-A,
DE-19851242-A1,
EP-2728262-B1,
ES-2463442-T3,
JP-S5541406-U,
JP-S609186-Y2,
JP-H04361539-A,
JP-H1117252-A,
JP-H02111359-A,
ES-1048572-U,
GB-201212390-D0,
KR-930004522-B1,
GB-190307993-A,
JP-5563820-B2,
JP-3167197-U,
KR-19980022791-U,
KR-20150068298-A,
CN-1649445-A,
CN-101762881-A,
CN-204219963-U,
CN-106140778-A,
CN-105167468-A,
CN-106
Query:
SELECT "publication_number", "assignee_harmonized"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Answer:
Too long, hard cut:
publication_number,assignee_harmonized
JP-1810118-C,[]
JP-1203714-C,[]
FR-1500580-A,"[
  {
    ""country_code"": """",
    ""name"": ""MATTERN WARE AND DAVIS""
  }
]"
ES-8501233-A1,"[
  {
    ""country_code"": ""FR"",
    ""name"": ""CERM CENT EUROP RECH MAUVERNAY""
  }
]"
CA-2165155-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""PROCTER & GAMBLE""
  }
]"
FR-2409943-B1,"[
  {
    ""country_code"": """",
    ""name"": ""NIXDORF COMPUTER AG""
  }
]"
GB-1086860-A,"[
  {
    ""country_code"": """",
    ""name"": ""UNION STARCH & REFINING CO INC""
  },
  {
    ""country_code"": """",
    ""name"": ""ARANGUREN Y CIA S A""
  }
]"
JP-S54117658-A,"[
  {
    ""country_code"": """",
    ""name"": ""TAKIZAWA AKIO""
  }
]"
JP-H0710178-Y2,[]
JP-3172057-B2,[]
US-136580-A,[]
US-272220-A,[]
US-599187-A,[]
CN-1062411-C,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""BASF CORP""
  }
]"
DE-1479218-U,[]
EP-2512367-B1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""ETHICON INC""
  }
]"
ES-2312527-T3,"[
  {
    ""country_code"": """",
    ""name"": ""APPSENSE LTD""
  }
]"
FR-1000748-A,[]
FR-1573809-A,[]
JP-S5066757-U,[]
JP-S5845249-Y2,[]
US-2103405-A,"[
  {
    ""country_code"": """",
    ""name"": ""ECLIPSE MACHINE CO""
  }
]"
GB-201114438-D0,"[
  {
    ""country_code"": """",
    ""name"": ""AIRBUS OPERATIONS LTD""
  }
]"
JP-5707248-B2,[]
JP-2016211567-A,"[
  {
    ""country_code"": """",
    ""name"": ""BORGWARNER INC""
  },
  {
    ""country_code"": """",
    ""name"": ""MANN & HUMMEL GMBH""
  }
]"
KR-20040075216-A,"[
  {
    ""country_code"": """",
    ""name"": ""SAMSUNG ELECTRONICS CO LTD""
  }
]"
CN-1954806-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""MEDICAL COLLEGE SHANTOU UNIV""
  }
]"
CN-201399214-Y,"[
  {
    ""country_code"": """",
    ""name"": ""GOODBABY CHILD PRODUCTS CO LTD""
  }
]"
JP-1368881-C,[]
JP-1444589-C,[]
FR-1497898-A,"[
  {
    ""country_code"": """",
    ""name"": ""BRANSON INSTR""
  }
]"
DE-2707796-A1,"[
  {
    ""country_code"": """",
    ""name"": ""SHIN SHIRASUNA ELECTRIC CORP""
  }
]"
DE-2962208-D1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""DU PONT""
  }
]"
FR-2233137-A1,"[
  {
    ""country_code"": ""IT"",
    ""name"": ""DELLA FLORA COSTRUZIONI MECCAN""
  }
]"
GB-2224027-B,"[
  {
    ""country_code"": ""FR"",
    ""name"": ""SCRAS""
  }
]"
JP-S5911756-Y2,[]
JP-2000218515-A,"[
  {
    ""country_code"": """",
    ""name"": ""SPEEDFAM IPEC CO LTD""
  }
]"
JP-S56169301-A,"[
  {
    ""country_code"": """",
    ""name"": ""TOHOKU METAL IND LTD""
  }
]"
US-2002102047-A1,"[
  {
    ""country_code"": ""US"",
    ""name"": ""CORNING INC""
  }
]"
CN-1467804-A,"[
  {
    ""country_code"": ""CN"",
    ""name"": ""SILICON INTEGRATED SYS CORP""
  }
]"
EP-0988417-B1,"[
  {
    ""country_code"": ""DE"",
    ""name"": ""VOITH PAPER PATENT GMBH""
  }
]"
JP-H04334685-A,"[
  {
    ""country_code"": """",
    ""name"": ""SUZUKI MOTOR CO""
  }
]"
JP-S6359143-U,[]
JP-H0685910-B2,[]
JP-H0350567-B2,[]
JP-5108773-B2,[]
CN-2768052-Y,"[
  {
    ""country_code"": ""HK"",
    ""name"": ""THOMSON HONGKONG CO LTD""
  }
]"
CN-1940157-B,"[
  {
    ""country_code"": """",
    ""name"": ""STAUBLI LYON""
  }
]"
CN-202318915-U,"[
  {
    ""country_code"": """",
    ""name"": ""WENZHOU HUANQIU AUTOMOTIVE PAD CO LTD""
  }
]"
CN-203200362-U,"[
  {
    ""country_code"": """",
    ""name"": ""JINCHUAN GROUP CO LTD""
  }
]"
JP-897785-C,[]
JP-1789132-C,[]
JP-S62113530-U,[]
CA-118661-S,"[
  {
    ""country_code"": ""SE"",
    ""name"": ""BABY BJOERN AB""
  }
]"
FI-882364-A0,"[
  {
    ""country_code"": ""FI"",
    ""name"": ""TMI T MAEKELAE""
  }
]"
CA-810158-A,"[
  {
    ""country_code"": """",
    ""name"": ""PROCTER & GAMBLE""
  }
]"
DE-2335240-A1,"[
  {
    ""country_code"": """",
    ""name"": ""MASCHF AUGSBURG NUERNBERG AG""
  }
]"
DE-7610943-U1,[]
JP-H0673947-U,[]
JP-S54153049-A,"[
  {
    ""country_code"": """",
    ""name"": ""SUMITOMO ELECTRIC INDUSTRIES""
  }
]"
JP-S5716116-U,[]
US-548167-A,[]
CN-1055840-A,"[
  {
    ""country_code"": ""DE"",
    ""name"": ""FELTEN & GUILLEAUME ENERHIETEC""
  }
]"
JP-S6020713-A,"[
  {
    ""country_code"": """",
    ""name"": ""MITSUBISHI ELECTRIC CORP""
  }
]"
JP-S6234024-A,"[
  {
    ""country_code"": """",
    ""name"": ""SEKISUI CHEMICAL CO LTD""
  },
  {
    ""country_code"": """",
    ""name"": ""SAGINOMIYA SEISAKUSHO INC""
  }
]"
JP-H0995081-A,"[
  {
    ""country_code"": """",
    ""name"": ""BUTSUKU CENTER CREATE KK""
  }
]"
JP-H1088758-A,"[
  {
    ""country_code"": """",
    ""name"": ""SHIN NIKKEI CO LTD""
  }
]"
GB-189709494-A,"[
  {
    ""country_code"": ""BE"",
    ""name"": ""GRISLAIN JUSTINIEN""
  }
]"
JP-2001195445-A,"[
  {
    ""country_code"": """",
    ""name"": ""TEXAS INSTRUMENTS INC""
  }
]"
JP-2010101160-A,"[
  {
    ""country_code"": """",
    ""name"": ""EVONIK ROEHM GMBH""
  }
]"
CN-101746294-A,"[
  {
    ""country_code"": """",
    ""name"": ""HYUNDAI MOTOR CO LTD""
  },
  {
    ""country_code"": """",
    ""name"": ""KIA MOTORS 
Query:
SELECT DISTINCT "application_kind"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS"
    LIMIT 1000;
Answer:
application_kind
B
U
H
""
C
A
D
F
K
Q
M
T
W
E
V
End Exploring Related Columns
Task: For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type.

Please answer only one complete SQL in snowflake dialect in ```sql``` format.
Usage example: SELECT S."Column_Name" FROM {Database Name}.{Schema Name}.{Table_name} (ensure all column names are enclosed in double quotations)
Follow the answer format like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'PATENTS_GOOGLE': {'PATENTS_GOOGLE': ['ABS_AND_EMB', 'CPC_DEFINITION', 'DISCLOSURES_13', 'PUBLICATIONS']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book" SQL: WHERE "title" LIKE '%book%'
However, if the string is not decided, you may use ILIKE and %. e.g. Get articles that mention "education": SQL: "body" ILIKE '%education%' OR "title" ILIKE '%education%'
When using ORDER BY xxx DESC, add NULLS LAST to exclude null records: ORDER BY xxx DESC NULLS LAST.
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.Keep all decimals to four decimal places.

2025-01-19 03:23:13 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:23:13 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT "publication_number", YEAR(filing_date) AS filing_year, "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:23:13 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:23:13 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:23:13 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:23:15 - snowflake.connector.connection - INFO - closed
2025-01-19 03:23:15 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:23:15 - root - INFO - itercount: 1
2025-01-19 03:23:15 - root - INFO - 000904 (42000): 01b9ceab-0004-7b17-0001-11c300eec5ee: SQL compilation error: error line 72 at position 78
invalid identifier '"filing_year"'
2025-01-19 03:23:15 - root - INFO - Input sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT "publication_number", YEAR(filing_date) AS filing_year, "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT "filing_year" FROM top_patent_filing_year)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
The error information is:
000904 (42000): 01b9ceab-0004-7b17-0001-11c300eec5ee: SQL compilation error: error line 72 at position 78
invalid identifier '"filing_year"'
Please correct it and output only 1 complete SQL query.
2025-01-19 03:24:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:24:08 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT "publication_number", YEAR(filing_date) AS filing_year, "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    CROSS JOIN top_patent_filing_year tpfy
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = tpfy."filing_year"
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> tpfy."publication_number"
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:24:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:24:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:24:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:24:10 - snowflake.connector.connection - INFO - closed
2025-01-19 03:24:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:24:10 - root - INFO - itercount: 2
2025-01-19 03:24:10 - root - INFO - 000904 (42000): 01b9ceac-0004-7dde-0001-11c300eed2b6: SQL compilation error: error line 73 at position 70
invalid identifier 'TPFY."filing_year"'
2025-01-19 03:24:10 - root - INFO - Input sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
top_patent_filing_year AS (
    SELECT "publication_number", YEAR(filing_date) AS filing_year, "embedding_v1"
    FROM top_patent
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    CROSS JOIN top_patent_filing_year tpfy
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = tpfy."filing_year"
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> tpfy."publication_number"
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
The error information is:
000904 (42000): 01b9ceac-0004-7dde-0001-11c300eed2b6: SQL compilation error: error line 73 at position 70
invalid identifier 'TPFY."filing_year"'
Please correct it and output only 1 complete SQL query.
2025-01-19 03:25:08 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:25:08 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:25:08 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:25:08 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:25:08 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:25:10 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:25:10 - snowflake.connector.connection - INFO - closed
2025-01-19 03:25:10 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:25:11 - root - INFO - itercount: 3
2025-01-19 03:25:11 - root - INFO - 0
2025-01-19 03:25:11 - root - INFO - results: 
publication_number,most_similar_publication_number
,


2025-01-19 03:25:11 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,most_similar_publication_number
,
Current sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";Empty results in Column ['publication_number', 'most_similar_publication_number']. Please correct them.

2025-01-19 03:25:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:25:58 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.grant_date_date AS patent_grant_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_grant_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_grant_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:25:58 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:25:58 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:25:58 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:26:01 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:26:01 - snowflake.connector.connection - INFO - closed
2025-01-19 03:26:01 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:26:01 - root - INFO - itercount: 4
2025-01-19 03:26:01 - root - INFO - 0
2025-01-19 03:26:01 - root - INFO - results: 
publication_number,most_similar_publication_number
,


2025-01-19 03:26:01 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,most_similar_publication_number
,
Current sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') AS grant_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TRY_TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.grant_date_date AS patent_grant_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_grant_date,
        fc.citing_publication_number,
        TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
        AND TRY_TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_grant_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TRY_TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";Empty results in Column ['publication_number', 'most_similar_publication_number']. Please correct them.

2025-01-19 03:27:00 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:27:00 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
        AND patent_filing_date IS NOT NULL
        AND citing_filing_date IS NOT NULL
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:27:00 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:27:00 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:27:00 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:27:03 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:27:03 - snowflake.connector.connection - INFO - closed
2025-01-19 03:27:03 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:27:03 - root - INFO - itercount: 5
2025-01-19 03:27:03 - root - INFO - 0
2025-01-19 03:27:03 - root - INFO - results: 
publication_number,most_similar_publication_number
,


2025-01-19 03:27:03 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,most_similar_publication_number
,
Current sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != 0
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number",
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
),
citing_patents AS (
    SELECT 
        fc."publication_number",
        fc.patent_filing_date,
        fc.citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON fc.citing_publication_number = cp."publication_number"
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != 0
),
citations_within_month AS (
    SELECT 
        "publication_number",
        COUNT(*) AS citation_count
    FROM citing_patents
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
        AND patent_filing_date IS NOT NULL
        AND citing_filing_date IS NOT NULL
    GROUP BY "publication_number"
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != 0
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";Empty results in Column ['publication_number', 'most_similar_publication_number']. Please correct them.

2025-01-19 03:28:28 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:28:28 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value::VARIANT:"publication_number"::STRING AS citing_publication_number_with_kind
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
cleaned_citations AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        REGEXP_REPLACE(
            fc.citing_publication_number_with_kind, 
            '-[A-Z][0-9]*$', 
            ''
        ) AS citing_publication_number
    FROM flattened_citations fc
    WHERE fc.citing_publication_number_with_kind IS NOT NULL
),
citing_patents AS (
    SELECT 
        cp."publication_number",
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
),
citations_joined AS (
    SELECT
        c.patent_publication_number,
        c.patent_filing_date,
        c.citing_publication_number,
        cp.citing_filing_date
    FROM cleaned_citations c
    JOIN citing_patents cp
        ON c.citing_publication_number = cp."publication_number"
    WHERE 
        c.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:28:28 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:28:28 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:28:28 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:28:31 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:28:31 - snowflake.connector.connection - INFO - closed
2025-01-19 03:28:31 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:28:31 - root - INFO - itercount: 6
2025-01-19 03:28:31 - root - INFO - 0
2025-01-19 03:28:31 - root - INFO - results: 
publication_number,most_similar_publication_number
,


2025-01-19 03:28:31 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,most_similar_publication_number
,
Current sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value::VARIANT:"publication_number"::STRING AS citing_publication_number_with_kind
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
cleaned_citations AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        REGEXP_REPLACE(
            fc.citing_publication_number_with_kind, 
            '-[A-Z][0-9]*$', 
            ''
        ) AS citing_publication_number
    FROM flattened_citations fc
    WHERE fc.citing_publication_number_with_kind IS NOT NULL
),
citing_patents AS (
    SELECT 
        cp."publication_number",
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
),
citations_joined AS (
    SELECT
        c.patent_publication_number,
        c.patent_filing_date,
        c.citing_publication_number,
        cp.citing_filing_date
    FROM cleaned_citations c
    JOIN citing_patents cp
        ON c.citing_publication_number = cp."publication_number"
    WHERE 
        c.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";Empty results in Column ['publication_number', 'most_similar_publication_number']. Please correct them.

2025-01-19 03:29:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:29:42 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citing_patents AS (
    SELECT 
        cp."publication_number" AS citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_joined AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        fc.citing_publication_number,
        cp.citing_filing_date
    FROM flattened_citations fc
    JOIN citing_patents cp
        ON fc.citing_publication_number = cp.citing_publication_number
    WHERE 
        fc.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
        LATERAL FLATTEN(input => s."embedding_v1") spe,
        top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:29:42 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:29:42 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:29:42 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:29:44 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:29:44 - snowflake.connector.connection - INFO - closed
2025-01-19 03:29:45 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:29:45 - root - INFO - itercount: 7
2025-01-19 03:29:45 - root - INFO - 0
2025-01-19 03:29:45 - root - INFO - results: 
publication_number,most_similar_publication_number
,


2025-01-19 03:29:45 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,most_similar_publication_number
,
Current sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citing_patents AS (
    SELECT 
        cp."publication_number" AS citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_joined AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        fc.citing_publication_number,
        cp.citing_filing_date
    FROM flattened_citations fc
    JOIN citing_patents cp
        ON fc.citing_publication_number = cp.citing_publication_number
    WHERE 
        fc.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
        LATERAL FLATTEN(input => s."embedding_v1") spe,
        top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";Empty results in Column ['publication_number', 'most_similar_publication_number']. Please correct them.

2025-01-19 03:31:05 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:31:05 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value:"publication_number"::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citations_with_normalized_pub_nums AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        REGEXP_REPLACE(fc.citing_publication_number, '-[A-Z][0-9]*$', '') AS citing_publication_number
    FROM flattened_citations fc
    WHERE fc.citing_publication_number IS NOT NULL
),
citing_patents AS (
    SELECT 
        REGEXP_REPLACE(cp."publication_number", '-[A-Z][0-9]*$', '') AS citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_joined AS (
    SELECT
        cwnp.patent_publication_number,
        cwnp.patent_filing_date,
        cwnp.citing_publication_number,
        cp.citing_filing_date
    FROM citations_with_normalized_pub_nums cwnp
    JOIN citing_patents cp
        ON cwnp.citing_publication_number = cp.citing_publication_number
    WHERE 
        cwnp.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
        LATERAL FLATTEN(input => s."embedding_v1") spe,
        top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    WHERE similarity_score IS NOT NULL
    ORDER BY similarity_score DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:31:05 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:31:05 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:31:05 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:31:08 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:31:08 - snowflake.connector.connection - INFO - closed
2025-01-19 03:31:08 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:31:08 - root - INFO - itercount: 8
2025-01-19 03:31:08 - root - INFO - 0
2025-01-19 03:31:08 - root - INFO - results: 
publication_number,most_similar_publication_number
US-7877798-B2,


2025-01-19 03:31:08 - root - INFO - Please check the answer again by reviewing For United States utility patents under the B2 classification granted between 2010 and 2014, find the one with the most forward citations within a month of its filing date, and identify the most similar patent from the same filing year, regardless of its type., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
Keep all decimals to four decimal places.
The answer format should be like: ```csv
publication_number,most_similar_publication_number
publication_number:str,most_similar_publication_number:str(Attention: answer in one row)
```

To address the task:

- **publication_number**: This is the United States utility patent under the B2 classification granted between 2010 and 2014 that has the most forward citations within a month of its filing date.

- **most_similar_publication_number**: This is the publication number of the patent from the same filing year that is most similar to the first patent, identified based on the highest similarity score calculated using their text embeddings. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
publication_number,most_similar_publication_number
US-7877798-B2,
Current sql:
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value:"publication_number"::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citations_with_normalized_pub_nums AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        REGEXP_REPLACE(fc.citing_publication_number, '-[A-Z][0-9]*$', '') AS citing_publication_number
    FROM flattened_citations fc
    WHERE fc.citing_publication_number IS NOT NULL
),
citing_patents AS (
    SELECT 
        REGEXP_REPLACE(cp."publication_number", '-[A-Z][0-9]*$', '') AS citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_joined AS (
    SELECT
        cwnp.patent_publication_number,
        cwnp.patent_filing_date,
        cwnp.citing_publication_number,
        cp.citing_filing_date
    FROM citations_with_normalized_pub_nums cwnp
    JOIN citing_patents cp
        ON cwnp.citing_publication_number = cp.citing_publication_number
    WHERE 
        cwnp.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
        LATERAL FLATTEN(input => s."embedding_v1") spe,
        top_patent_embedding tpe
    WHERE 
        spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    WHERE similarity_score IS NOT NULL
    ORDER BY similarity_score DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";Empty results in Column ['most_similar_publication_number']. Please correct them.

2025-01-19 03:32:18 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:32:18 - root - INFO - ```sql
-- Create a UDF to compute the dot product of two arrays
CREATE OR REPLACE FUNCTION DOT_PRODUCT(a ARRAY, b ARRAY)
RETURNS FLOAT
LANGUAGE JAVASCRIPT
AS
$$
    if (a.length != b.length) {
        return null;
    }
    let sum = 0.0;
    for (let i = 0; i < a.length; i++) {
        sum += a[i] * b[i];
    }
    return sum;
$$;

WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value:"publication_number"::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citations_with_normalized_pub_nums AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        REGEXP_REPLACE(fc.citing_publication_number, '-[A-Z][0-9]*$', '') AS citing_publication_number
    FROM flattened_citations fc
    WHERE fc.citing_publication_number IS NOT NULL
),
citing_patents AS (
    SELECT 
        REGEXP_REPLACE(cp."publication_number", '-[A-Z][0-9]*$', '') AS citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_joined AS (
    SELECT
        cwnp.patent_publication_number,
        cwnp.patent_filing_date,
        cwnp.citing_publication_number,
        cp.citing_filing_date
    FROM citations_with_normalized_pub_nums cwnp
    JOIN citing_patents cp
        ON cwnp.citing_publication_number = cp.citing_publication_number
    WHERE 
        cwnp.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        DOT_PRODUCT(tpt."embedding_v1", s."embedding_v1") AS similarity_score
    FROM same_year_patents s
    CROSS JOIN (SELECT "embedding_v1" FROM top_patent) tpt
    WHERE s."embedding_v1" IS NOT NULL AND tpt."embedding_v1" IS NOT NULL
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    WHERE similarity_score IS NOT NULL
    ORDER BY similarity_score DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:32:18 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:32:18 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:32:18 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:32:20 - snowflake.connector.connection - INFO - closed
2025-01-19 03:32:20 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:32:20 - root - INFO - itercount: 9
2025-01-19 03:32:20 - root - INFO - 000008 (0A000): 01b9ceb4-0004-7b17-0001-11c300eec602: Actual statement count 2 did not match the desired statement count 1.
2025-01-19 03:32:20 - root - INFO - Input sql:
-- Create a UDF to compute the dot product of two arrays
CREATE OR REPLACE FUNCTION DOT_PRODUCT(a ARRAY, b ARRAY)
RETURNS FLOAT
LANGUAGE JAVASCRIPT
AS
$$
    if (a.length != b.length) {
        return null;
    }
    let sum = 0.0;
    for (let i = 0; i < a.length; i++) {
        sum += a[i] * b[i];
    }
    return sum;
$$;

WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value:"publication_number"::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citations_with_normalized_pub_nums AS (
    SELECT
        fc.patent_publication_number,
        fc.patent_filing_date,
        REGEXP_REPLACE(fc.citing_publication_number, '-[A-Z][0-9]*$', '') AS citing_publication_number
    FROM flattened_citations fc
    WHERE fc.citing_publication_number IS NOT NULL
),
citing_patents AS (
    SELECT 
        REGEXP_REPLACE(cp."publication_number", '-[A-Z][0-9]*$', '') AS citing_publication_number,
        TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') AS citing_filing_date
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
),
citations_joined AS (
    SELECT
        cwnp.patent_publication_number,
        cwnp.patent_filing_date,
        cwnp.citing_publication_number,
        cp.citing_filing_date
    FROM citations_with_normalized_pub_nums cwnp
    JOIN citing_patents cp
        ON cwnp.citing_publication_number = cp.citing_publication_number
    WHERE 
        cwnp.patent_filing_date IS NOT NULL
        AND cp.citing_filing_date IS NOT NULL
),
citations_within_month AS (
    SELECT 
        patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM citations_joined
    WHERE 
        DATEDIFF('day', patent_filing_date, citing_filing_date) BETWEEN 0 AND 30
    GROUP BY patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
similarity_scores AS (
    SELECT 
        s."publication_number",
        DOT_PRODUCT(tpt."embedding_v1", s."embedding_v1") AS similarity_score
    FROM same_year_patents s
    CROSS JOIN (SELECT "embedding_v1" FROM top_patent) tpt
    WHERE s."embedding_v1" IS NOT NULL AND tpt."embedding_v1" IS NOT NULL
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    WHERE similarity_score IS NOT NULL
    ORDER BY similarity_score DESC
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
The error information is:
000008 (0A000): 01b9ceb4-0004-7b17-0001-11c300eec602: Actual statement count 2 did not match the desired statement count 1.
Please correct it and output only 1 complete SQL query.
2025-01-19 03:33:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-02-15-preview "HTTP/1.1 200 OK"
2025-01-19 03:33:09 - root - INFO - ```sql
WITH us_b2_patents AS (
    SELECT 
        p."publication_number", 
        TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') AS filing_date_date,
        a."cited_by",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."country_code" = 'US'
        AND p."kind_code" = 'B2'
        AND p."grant_date" IS NOT NULL AND p."grant_date" != '0'
        AND TO_DATE(p."grant_date"::VARCHAR, 'YYYYMMDD') BETWEEN '2010-01-01' AND '2014-12-31'
        AND p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND a."cited_by" IS NOT NULL
        AND a."embedding_v1" IS NOT NULL
),
flattened_citations AS (
    SELECT 
        p."publication_number" AS patent_publication_number,
        p.filing_date_date AS patent_filing_date,
        c.value:"publication_number"::STRING AS citing_publication_number
    FROM us_b2_patents p,
    LATERAL FLATTEN(input => p."cited_by") c
    WHERE c.value IS NOT NULL
),
citations_within_month AS (
    SELECT 
        fc.patent_publication_number AS "publication_number",
        COUNT(*) AS citation_count
    FROM flattened_citations fc
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" cp
        ON REGEXP_REPLACE(fc.citing_publication_number, '-[A-Z][0-9]*$', '') = REGEXP_REPLACE(cp."publication_number", '-[A-Z][0-9]*$', '')
    WHERE 
        cp."filing_date" IS NOT NULL AND cp."filing_date" != '0'
        AND TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND DATEDIFF('day', fc.patent_filing_date, TO_DATE(cp."filing_date"::VARCHAR, 'YYYYMMDD')) BETWEEN 0 AND 30
    GROUP BY fc.patent_publication_number
),
top_patent AS (
    SELECT c."publication_number", c.citation_count, p.filing_date_date AS filing_date, p."embedding_v1"
    FROM citations_within_month c
    JOIN us_b2_patents p ON c."publication_number" = p."publication_number"
    ORDER BY c.citation_count DESC NULLS LAST
    LIMIT 1
),
top_patent_embedding AS (
    SELECT seq AS idx, value::FLOAT AS value
    FROM top_patent,
    LATERAL FLATTEN(input => "embedding_v1")
),
same_year_patents AS (
    SELECT 
        p."publication_number",
        a."embedding_v1"
    FROM "PATENTS_GOOGLE"."PATENTS_GOOGLE"."PUBLICATIONS" p
    JOIN "PATENTS_GOOGLE"."PATENTS_GOOGLE"."ABS_AND_EMB" a
        ON p."publication_number" = a."publication_number"
    WHERE 
        p."filing_date" IS NOT NULL AND p."filing_date" != '0'
        AND TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD') IS NOT NULL
        AND YEAR(TO_DATE(p."filing_date"::VARCHAR, 'YYYYMMDD')) = (SELECT YEAR(filing_date) FROM top_patent)
        AND a."embedding_v1" IS NOT NULL
        AND p."publication_number" <> (SELECT "publication_number" FROM top_patent)
),
similarity_scores AS (
    SELECT
        s."publication_number",
        SUM(tpe.value * spe.value::FLOAT) AS similarity_score
    FROM same_year_patents s,
    LATERAL FLATTEN(input => s."embedding_v1") spe,
    top_patent_embedding tpe
    WHERE spe.seq = tpe.idx
    GROUP BY s."publication_number"
),
most_similar_patent AS (
    SELECT "publication_number"
    FROM similarity_scores
    ORDER BY similarity_score DESC NULLS LAST
    LIMIT 1
)
SELECT 
    (SELECT "publication_number" FROM top_patent) AS "publication_number",
    (SELECT "publication_number" FROM most_similar_patent) AS "most_similar_publication_number";
```
2025-01-19 03:33:09 - snowflake.connector.connection - INFO - Snowflake Connector for Python Version: 3.12.4, Python Version: 3.11.11, Platform: Linux-6.1.62-x86_64-with-glibc2.31
2025-01-19 03:33:09 - snowflake.connector.connection - INFO - Connecting to GLOBAL Snowflake domain
2025-01-19 03:33:09 - snowflake.connector.connection - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
2025-01-19 03:33:12 - snowflake.connector.cursor - INFO - Number of results in first chunk: 1
2025-01-19 03:33:12 - snowflake.connector.connection - INFO - closed
2025-01-19 03:33:12 - snowflake.connector.connection - INFO - No async queries seem to be running, deleting session
2025-01-19 03:33:13 - root - INFO - Total iteration counts: 10
