I choose `1result.sql` as the correct SQL.

**Reason:**

The SQL query in `1result.sql` accurately computes the number of pseudo users who were active in the last 7 days but inactive in the last 2 days as of January 7, 2021. Here's a detailed explanation:

1. **Selection of Active Users:**
   - The query selects distinct `USER_PSEUDO_ID`s from the events data spanning January 1 to January 5, 2021 (inclusive), representing users active in the **last 7 days** excluding the last 2 days.
   - It uses `UNION` to combine the unique users from each day's events between `EVENTS_20210101` and `EVENTS_20210105`.

2. **Filtering Out Inactive Users in the Last 2 Days:**
   - The `WHERE` clause filters out any `USER_PSEUDO_ID` that appears in the events data for January 6 and January 7, 2021, which are the **last 2 days**.
   - It uses a `NOT IN` condition with a subquery that selects distinct `USER_PSEUDO_ID`s from `EVENTS_20210106` and `EVENTS_20210107`.

3. **Counting Distinct Users:**
   - The outer `SELECT` counts the remaining distinct `USER_PSEUDO_ID`s after applying the filter, resulting in the number of users who were active in the last 7 days but not in the last 2 days.

**Why `1result.sql` is Correct:**

- It precisely follows the requirement by considering the correct date ranges for both active and inactive periods.
- The structure of the query is logical and efficient:
  - Using `UNION` ensures that each `USER_PSEUDO_ID` is unique in the set of active users.
  - The `NOT IN` clause effectively excludes any users who were active in the last 2 days.
- The result matches the expected outcome, as all three queries yield the same count, but `1result.sql` does so with clarity and simplicity.

**SQL File Name:**

```plain
1result.sql
```