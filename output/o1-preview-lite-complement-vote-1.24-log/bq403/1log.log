2025-01-28 02:46:05 - openai._base_client - INFO - Retrying request to /chat/completions in 0.471215 seconds
2025-01-28 02:46:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:46:57 - root - INFO - SQL:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Results:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992

2025-01-28 02:46:59 - root - INFO - SQL:
SELECT DISTINCT `totrevenue`
   FROM `bigquery-public-data.irs_990.irs_990_2013`
   LIMIT 100;
Results:
totrevenue
122968
4389328
374905
346911
2906549
164209982
48273758
12670317
3685121
103383
428461
579869
300899
495671
22193824
1366967
9079299
17103145
129593
36356
95613
328831
456888
86962
97785
111837
215140
275954
87790
20046
428856
479921
77245
225421
229287
61598
321000
242059
139689
24939
872048
645674
150413
220210
105971
84372
1901169
19272452
2117575
30146
3069929
275814
3890462
10969785
121431918
-81596
39606
88313
703478
75219
61421
43047
234797
252565
246306
1492013
33852
367555
283937
247768
140696
237803
249118
64467
39322
27618
336305
528729
290773
428451
378704
376497
261322
486524
303514
100743
1369179
226187
169622
255524
339011
532077
271396
343281
132990
1308483
191796
258179
128316
384701

2025-01-28 02:47:01 - root - INFO - SQL:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2014`
   WHERE `totrevenue` IS NOT NULL
   LIMIT 100;
Results:
totrevenue,totfuncexpns
20694,19468
236657,301343
19819,26396
655125,578163
847870,826451
712182,712459
366711,353922
3447721,2909079
2621632,1366326
2871588,2928131
1015877,1001174
863595,530667
51218,153153
1185460,1172599
6830751,6142934
411892,506446
117976,109535
16330,25661
527676,508423
3996068,3814139
31462,15677
110869,75381
196609,192972
4856006,4435095
646143,882350
55653,54446
36255767,37918684
13401,42833
2497066,1966300
592497,579233
526551,542168
7598454,7415237
688824,695361
592390,548554
1899805,1721268
5275560,5094916
29024,4300
1430082,1180962
10618,12506
9344697,11265328
150016,225798
160825,162894
177716,173485
0,5280
355783,341269
200313,196189
84804,318702
988630,258610
299418,164213
721665,649140
27944,19206
375326,263299
213389,214720
205349,108411
7323005,7706633
504245,473816
2893102,2718660
469484,436588
460476,713786
309001,155099
447640,439713
27065,49924
631519,656660
156588,134766
559483,141491
8659447,8527621
10947718,10717634
1436783,1036703
73239,66127
2415779,2634196
601371,740935
135726,122830
90930,63194
8888752,9015272
439578,315975
466928,481516
11389699,11169785
8312329,6808366
609859,516240
20097194,17307341
1079509,1091845
1600525,1127166
64356,87744
9233,8946
120116,123827
21760972,20973199
1327524,1299522
104555,100085
134958,15702
1372261,157833
684340,373909
61713,0
0,157
152717,173234
138876,157099
2295981,2056378
194497,193369
244112,323411
1200,5900
571539,543849

2025-01-28 02:47:02 - root - INFO - SQL:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2015`
   WHERE `totrevenue` > 0
   LIMIT 100;
Results:
totrevenue,totfuncexpns
9475129863,8709938336
9021585970,8321905336
6740015230,4669997260
9890722789,4309105409
20796549014,18075847020
5717023246,4641560606
4477633568,3423617239
2279363000,1691395000
1094833976,940804147
2003505012,1163065944
2186337569,2072281956
4070665000,3151739000
45409123226,45030330413
2086259022,1551479259
6000839000,5191443000
4471027733,3916035766
11091388129,10459998873
1745011054,1659631419
1711501686,1607394030
1748347726,172312751
4372777340,2259456041
507813618,327009492
8655129029,8378464261
2895842638,2330997409
4368738915,3689909253
7523260077,6836839104
3504618972,3057685595
491684898,234576949
1974296447,1282624046
355610307,30410978
2776824017,2614420821
141110637,30174803
1229151613,1154548483
3273281179,3128457240
4560196033,4176701522
3919688726,3723702641
4623485966,3966218200
5133788413,4714230553
915020284,432878535
3601970032,3169289032
946444331,662638575
5569004000,5203749000
5090394271,4697479724
310866221,233001993
4861458246,4232122879
1938114417,2343778678
4769437583,4353104270
39458181,191470300
222084044,151593851
4028979910,3984258509
4540758825,4244955757
5126858838,4587233670
3389579680,2814397225
3554287841,3254875267
944091350,695084853
3645488350,3434235247
4332738809,3977980809
161601474,105896349
2470239000,2219842000
380991791,1117436173
2147061429,2093681419
1570825169,1710463545
1310504806,1038584402
1061173384,1089635824
236829269,141353465
245346868,181009292
949990421,748695565
644127211,789975312
660801887,635164186
1858309238,832408761
758868764,17396568
2522460717,2423225663
10098163008,9927833907
1576921105,1450587043
1371507609,1234269613
179269029,132353491
519162717,492886704
1463065976,1141818453
3065054623,2523731038
1443977422,1387395511
2326669188,911750423
482241939,260245181
2691040647,2394046683
3741634778,3287631456
242713372,199196712
625493534,1644603012
580320696,53281765
200753275,185814616
2094280227,1884583375
1100952729,946774041
366766097,31900381
687663239,631580639
3564353877,1830079594
582665814,581682872

2025-01-28 02:47:04 - root - INFO - SQL:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2016`
   WHERE `totfuncexpns` > 0
   LIMIT 100;
Results:
totrevenue,totfuncexpns
281124,330710
235819,238967
2552190,2669341
32425648,32098696
320525,351666
71895,88763
324899,254431
2837482,2807835
418695,416577
3588013,3541336
954519,875799
2522077,2424594
213962,195282
441877,465581
297098,303187
8630374,4068797
812435,825952
8800916,8804399
222935,222095
227088,198487
14444601,13631662
497791,414382
288044,276583
105620,97393
1284111,641602
1835152,1839043
63799,133204
454367,375392
91105,94542
224728,240526
64428,80427
413658,445372
507249,550897
93946,63512
547229,419381
209016,229679
280108,255848
216013,254466
1798994,1751480
5626,12614
71,59091
3780480,3566181
432724,382554
11784947,11725715
135815,130383
52800,37588
32124,26660
685972,629551
129973,68528
1554893,1471006
120359,137802
288407,248291
448341,523784
241561,239939
254246,246314
488981,500976
110749,237498
3616528,3612680
323944,460823
121076,202241
19216873,19742993
844831,931294
53268,55790
1631969,1543597
149544,151816
5292225,1345468
80738,164288
403099,399965
2775480,2737154
2280475,2204248
2180401,1036111
1004649,1048471
1216653,1303975
605128,691163
165213,141815
429152,296555
114657,186185
26812005,24130681
248058,226483
1164303,1349813
3165282,4348921
98526,178756
554244,531574
115273,119078
118461,103036
452171,437574
99733,70758
158926,112974
2797845,2862377
3986674,4059124
248791,244005
390191,159212
34277,62275
194544,84289
629384,627025
479677,494719
1357145,1120765
1168966,1366751
1191097,779120
2903032,2623680

2025-01-28 02:47:05 - root - INFO - SQL:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2017`
   WHERE `totrevenue` > 0 AND `totfuncexpns` > 0
   LIMIT 100;
Results:
totrevenue,totfuncexpns
209664,206188
564406,554294
305087,327877
174438,145544
136782,162179
98973,123407
423238,360261
534367,434935
221239,122749
1799089,1679500
88315,90730
56864,32844
280830,221205
1445877,1292425
2851684,2429237
2766734,2553178
23224,27590
12226484,12250496
691917,668296
3543524,3474760
302553,273441
581243,577432
5660659,5592920
5810324,5762193
138799,119130
171603,165534
227677,189736
3184134,2940477
577692,449305
1473661,1280200
604279,589834
523880,405749
941861,797961
352467,315528
831732,898309
592806,584235
324171,248674
49570,54222
277317,269248
419985,376117
375241,382133
2845066,4186957
462623,444236
12451,20712
248778,240474
6825559,6776912
882825,767107
404235,439815
148802,188035
626634,633118
26640,50232
64915,59141
22780457,20864582
405376,336613
1235910,1151524
329378,407577
198091095,180849706
981983,1134366
348225,328323
185935,201483
142052,145799
5356304,6383829
99505,100479
917614,971980
543501,443726
312691,318531
1039190,1019792
753134,604745
250190,245189
746711,724493
112132,108452
34582,61984
4200335,3963774
714109,727258
1540734,2244941
459682,371214
148831,132577
75577,32007
118600,91670
204859,195523
37326,323169
176269,226631
327547,168050
119645,123012
3110164,3158598
115312,27322
2942321,2681736
599096,149141
65707,86936
827426,683257
426703,117155
208710,177716
112512,116707
26426,20431
12651,1660
21428,34575
109340,118628
8866624,10840266
80045,64420
1542934,1303952

2025-01-28 02:47:07 - root - INFO - SQL:
SELECT ABS(`totrevenue` - `totfuncexpns`) AS `difference`
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Results:
difference
203904
91160
28065
22187
102199
4640
3205
3438
31899
44217
1455
14459
2025060
2289
33622
33174
52811
26638
9576
44014
1951
113974
56281
110886
8549
172318
15735
25439
116603
6633
54354
27718
13017
54791
5517
19941
48021
528334
32939
4737
4955
49512
78470
2055
8869
21600
18014
26648
272711
110259
97580
151048
31263
9985
180191
239738
8520
2997890
15403
93235
19760
2346822
77447
486292
1863
261845
5290920
16493
280038
283127
123664
87519
36676
826002
633502
18702
5438164
235269
2818881
72108
1801638
1492235
406692
4015258
5738450
1033623
11871835
103295
6283181
5153186
24388107
227834
82308
25799626
144342555
1188648
5466787
59316
9581189
1183813

2025-01-28 02:47:09 - root - INFO - SQL:
SELECT `ein`, `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2013`
   LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
237244328,314560,233219
522385104,2208052,2288933
311017154,264709,227663
521135824,365178,355579
237222193,483055,599928
246021385,2371701,2383014
990213908,2666924,2834679
716076840,3219672,2564742
866052021,27339091,27800070
237122650,16381263,16764161
436158894,6610202,7034850
592719781,2201691,2216131
200946697,14993695,16159574
561412117,133665,159964
411376272,254597,237306
651300847,277706,179781
460253627,301498,262734
363183692,609135,567923
222842803,3443245,1879670
636050522,223355,200209
362987519,536728,1203782
251559261,320516,335800
316064918,15930768,18203624
450493921,6604819,6777747
656088549,3348829,3752811
990269654,1008046,871965
436921041,1031181,369846
363489253,214551238,195393298
776224948,1322214,2072342
876128290,12409053,12266479
910853746,1682092,1586537
521937919,142799,116871
203631134,10527,0
386090659,31379,28885
300397278,601831,537077
750275625,135921,115296
043821981,109083,114117
630759180,271815,258585
916037678,460189,116733
237373972,327690,278455
341385441,231587,232567
911766944,251155,247641
591986067,317695,304915
346528417,81819,82445
050382356,152526,123099
391848508,347632,318377
721060866,216982,197502
956107034,28095,40488
943048491,1341052,1326458
237069111,95072,100868
486110616,2612,3221
382319307,316739,274338
486107677,240913,218579
236265518,39938,47303
586055206,62651,61123
486111957,341897,376031
931077620,287731,303526
203109607,174599,165337
231944161,287526,239688
366191936,1458359,1453804
942375212,26101547,26133951
522305267,1275783,1112593
571140642,62136,48684
376044257,683590,691852
130970295,165178,289714
931204757,19654326,17979683
596134291,2082021,2039803
920018710,5409934,5740392
237348596,432337,517267
996046220,2386777,2182007
133810146,22164086,12589344
526047277,4298181,4140864
841103552,138508,115499
593131383,298532,338948
351101396,672577,637842

2025-01-28 02:47:10 - root - INFO - SQL:
SELECT `ein`, `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2014`
   WHERE `totrevenue` > 1000000
   LIMIT 100;
Results:
ein,totrevenue,totfuncexpns
272345009,3069541,3252617
371371059,9206536,9781870
350589385,1877740,2047004
930825790,5037778,5948494
376304539,1890814,1938100
350830295,1479623,1436426
650004016,5973792,6846597
940745005,6164194,6283230
135007460,2844627,2211949
560172993,6260207,7108078
41200680,4649694,4200765
880087294,58123650,-1824273
946080365,19907790,19557915
383782755,7615823,5866294
366947279,1605234,1418794
221010190,6098197,5765228
203825348,6151686,4780278
351694366,1074093,1055651
264683543,146569081,136900651
550173315,1438181,1065061
231428823,2004567,1951109
41662000,11590973,10589990
411725229,4805993,5075148
941558464,3633532,3097156
580198114,4008217,3725420
990345010,1115947,398953
742301528,4779386,4266174
640714754,12616017,13395162
741883156,1105436,977831
311205596,17252450,14581406
530259366,6463088,6017170
750918872,1229292,1317997
610591008,1825215,707604
546004683,4009379,4979499
221128510,1709715,1632206
61369657,3272652,3269593
920139334,1084658,1092214
951948865,1001702,886904
621766996,34182088,36772413
616222164,3987347,2980525
581584613,35346594,31019694
741593195,1075496,1079899
416367654,3229921,4462036
310676582,649224664,623005115
810641625,2104612,0
741361102,2488952,2561425
56010637,20972361,21630217
50493920,3631647,3939582
416367653,3971171,3337905
941076364,1619851,2012565
630185430,1542502,1462945
591395087,2095795,2222520
940376375,1055529,1068121
270500843,9780677,13937
274018006,3914732,2378842
223183386,66150340,102083094
582170261,1293854,1173881
381162670,2001299,2352127
942535992,17920639,17633821
776138153,86753338,12282080
592603700,49073714,48625895
133443127,173408717,156577244
133718642,105346843,41542481
262732890,1105880,1120156
540537788,1281108,1304609
232122939,9320312,9349859
521844783,1217252,0
530159345,14553913,15045847
522156601,6969885,6736772
616156163,13901866,13789887
957055654,2645127616,2646670886
416037362,12039779,13173275
111569376,7300739,7909849
202313717,2648099,0

2025-01-28 02:47:12 - root - INFO - SQL:
SELECT AVG(`totrevenue`) AS `average_revenue`, AVG(`totfuncexpns`) AS `average_expenses`
    FROM `bigquery-public-data.irs_990.irs_990_2015`;
Results:
average_revenue,average_expenses
7952843.4174678065,7411628.804401246

2025-01-28 02:47:12 - root - INFO - itercount: 0
2025-01-28 02:47:12 - root - INFO - Database Name: bigquery-public-data
Schema Name: irs_990
DDL describes table information.
,0
table_name,irs_990_2016
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_2016`
(
  ein STRING NOT NULL,
  elf STRING,
  tax_pd INT64,
  subseccd INT64,
  s501c3or4947a1cd STRING,
  schdbind STRING,
  politicalactvtscd STRING,
  lbbyingactvtscd STRING,
  subjto6033cd STRING,
  dnradvisedfundscd STRING,
  prptyintrcvdcd STRING,
  maintwrkofartcd STRING,
  crcounselingqstncd STRING,
  hldassetsintermpermcd STRING,
  rptlndbldgeqptcd STRING,
  rptinvstothsecd STRING,
  rptinvstprgrelcd STRING,
  rptothasstcd STRING,
  rptothliabcd STRING,
  sepcnsldtfinstmtcd STRING,
  sepindaudfinstmtcd STRING,
  inclinfinstmtcd STRING,
  operateschools170cd STRING,
  frgnofficecd STRING,
  frgnrevexpnscd STRING,
  frgngrntscd STRING,
  frgnaggragrntscd STRING,
  rptprofndrsngfeescd STRING,
  rptincfnndrsngcd STRING,
  rptincgamingcd STRING,
  operatehosptlcd STRING,
  hospaudfinstmtcd STRING,
  rptgrntstogovtcd STRING,
  rptgrntstoindvcd STRING,
  rptyestocompnstncd STRING,
  txexmptbndcd STRING,
  invstproceedscd STRING,
  maintescrwaccntcd STRING,
  actonbehalfcd STRING,
  engageexcessbnftcd STRING,
  awarexcessbnftcd STRING,
  loantofficercd STRING,
  grantoofficercd STRING,
  dirbusnreltdcd STRING,
  fmlybusnreltdcd STRING,
  servasofficercd STRING,
  recvnoncashcd STRING,
  recvartcd STRING,
  ceaseoperationscd STRING,
  sellorexchcd STRING,
  ownsepentcd STRING,
  reltdorgcd STRING,
  intincntrlcd STRING,
  orgtrnsfrcd STRING,
  conduct5percentcd STRING,
  compltschocd STRING,
  f1096cnt INT64,
  fw2gcnt INT64,
  wthldngrulescd STRING,
  noemplyeesw3cnt INT64,
  filerqrdrtnscd STRING,
  unrelbusinccd STRING,
  filedf990tcd STRING,
  frgnacctcd STRING,
  prohibtdtxshltrcd STRING,
  prtynotifyorgcd STRING,
  filedf8886tcd STRING,
  solicitcntrbcd STRING,
  exprstmntcd STRING,
  providegoodscd STRING,
  notfydnrvalcd STRING,
  filedf8282cd STRING,
  f8282cnt INT64,
  fndsrcvdcd STRING,
  premiumspaidcd STRING,
  filedf8899cd STRING,
  filedf1098ccd STRING,
  excbushldngscd STRING,
  s4966distribcd STRING,
  distribtodonorcd STRING,
  initiationfees INT64,
  grsrcptspublicuse INT64,
  grsincmembers INT64,
  grsincother INT64,
  filedlieuf1041cd STRING,
  txexmptint INT64,
  qualhlthplncd STRING,
  qualhlthreqmntn INT64,
  qualhlthonhnd INT64,
  rcvdpdtngcd STRING,
  filedf720cd STRING,
  totreprtabled INT64,
  totcomprelatede INT64,
  totestcompf INT64,
  noindiv100kcnt INT64,
  nocontractor100kcnt INT64,
  totcntrbgfts INT64,
  prgmservcode2acd INT64,
  totrev2acola INT64,
  prgmservcode2bcd INT64,
  totrev2bcola INT64,
  prgmservcode2ccd INT64,
  totrev2ccola INT64,
  prgmservcode2dcd INT64,
  totrev2dcola INT64,
  prgmservcode2ecd INT64,
  totrev2ecola INT64,
  totrev2fcola INT64,
  totprgmrevnue INT64,
  invstmntinc INT64,
  txexmptbndsproceeds INT64,
  royaltsinc INT64,
  grsrntsreal INT64,
  grsrntsprsnl INT64,
  rntlexpnsreal INT64,
  rntlexpnsprsnl INT64,
  rntlincreal INT64,
  rntlincprsnl INT64,
  netrntlinc INT64,
  grsalesecur INT64,
  grsalesothr INT64,
  cstbasisecur INT64,
  cstbasisothr INT64,
  gnlsecur INT64,
  gnlsothr INT64,
  netgnls INT64,
  grsincfndrsng INT64,
  lessdirfndrsng INT64,
  netincfndrsng INT64,
  grsincgaming INT64,
  lessdirgaming INT64,
  netincgaming INT64,
  grsalesinvent INT64,
  lesscstofgoods INT64,
  netincsales INT64,
  miscrev11acd INT64,
  miscrevtota INT64,
  miscrev11bcd INT64,
  miscrevtot11b INT64,
  miscrev11ccd INT64,
  miscrevtot11c INT64,
  miscrevtot11d INT64,
  miscrevtot11e INT64,
  totrevenue INT64,
  grntstogovt INT64,
  grnsttoindiv INT64,
  grntstofrgngovt INT64,
  benifitsmembrs INT64,
  compnsatncurrofcr INT64,
  compnsatnandothr INT64,
  othrsalwages INT64,
  pensionplancontrb INT64,
  othremplyeebenef INT64,
  payrolltx INT64,
  feesforsrvcmgmt INT64,
  legalfees INT64,
  accntingfees INT64,
  feesforsrvclobby INT64,
  profndraising INT64,
  feesforsrvcinvstmgmt INT64,
  feesforsrvcothr INT64,
  advrtpromo INT64,
  officexpns INT64,
  infotech INT64,
  royaltsexpns INT64,
  occupancy INT64,
  travel INT64,
  travelofpublicoffcl INT64,
  converconventmtng INT64,
  interestamt INT64,
  pymtoaffiliates INT64,
  deprcatndepletn INT64,
  insurance INT64,
  othrexpnsa INT64,
  othrexpnsb INT64,
  othrexpnsc INT64,
  othrexpnsd INT64,
  othrexpnse INT64,
  othrexpnsf INT64,
  totfuncexpns INT64,
  nonintcashend INT64,
  svngstempinvend INT64,
  pldgegrntrcvblend INT64,
  accntsrcvblend INT64,
  currfrmrcvblend INT64,
  rcvbldisqualend INT64,
  notesloansrcvblend INT64,
  invntriesalesend INT64,
  prepaidexpnsend INT64,
  lndbldgsequipend INT64,
  invstmntsend INT64,
  invstmntsothrend INT64,
  invstmntsprgmend INT64,
  intangibleassetsend INT64,
  othrassetsend INT64,
  totassetsend INT64,
  accntspayableend INT64,
  grntspayableend INT64,
  deferedrevnuend INT64,
  txexmptbndsend INT64,
  escrwaccntliabend INT64,
  paybletoffcrsend INT64,
  secrdmrtgsend INT64,
  unsecurednotesend INT64,
  othrliabend INT64,
  totliabend INT64,
  unrstrctnetasstsend INT64,
  temprstrctnetasstsend INT64,
  permrstrctnetasstsend INT64,
  capitalstktrstend INT64,
  paidinsurplusend INT64,
  retainedearnend INT64,
  totnetassetend INT64,
  totnetliabastend INT64,
  nonpfrea INT64,
  totnooforgscnt INT64,
  totsupport INT64,
  gftgrntsrcvd170 INT64,
  txrevnuelevied170 INT64,
  srvcsval170 INT64,
  pubsuppsubtot170 INT64,
  exceeds2pct170 INT64,
  pubsupplesspct170 INT64,
  samepubsuppsubtot170 INT64,
  grsinc170 INT64,
  netincunreltd170 INT64,
  othrinc170 INT64,
  totsupp170 INT64,
  grsrcptsrelated170 INT64,
  totgftgrntrcvd509 INT64,
  grsrcptsadmissn509 INT64,
  grsrcptsactivities509 INT64,
  txrevnuelevied509 INT64,
  srvcsval509 INT64,
  pubsuppsubtot509 INT64,
  rcvdfrmdisqualsub509 INT64,
  exceeds1pct509 INT64,
  subtotpub509 INT64,
  pubsupplesub509 INT64,
  samepubsuppsubtot509 INT64,
  grsinc509 INT64,
  unreltxincls511tx509 INT64,
  subtotsuppinc509 INT64,
  netincunrelatd509 INT64,
  othrinc509 INT64,
  totsupp509 INT64
)
OPTIONS(
  description=""IRS 990 2016 dataset""
);"

Some other tables have the similar structure: ['irs_990_2016', 'irs_990_2012', 'irs_990_2017', 'irs_990_2014', 'irs_990_2015', 'irs_990_2013']
,1
table_name,irs_990_ez_2017
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_ez_2017`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number""),
  elf STRING OPTIONS(description=""E-file indicator""),
  tax_pd INT64 OPTIONS(description=""Tax period""),
  subseccd INT64 OPTIONS(description=""Subsection code""),
  totcntrbs INT64 OPTIONS(description=""Contributions gifts grants etc received""),
  prgmservrev INT64 OPTIONS(description=""Program service revenue""),
  duesassesmnts INT64 OPTIONS(description=""Membership dues and assessments""),
  othrinvstinc INT64 OPTIONS(description=""Investment income""),
  grsamtsalesastothr INT64 OPTIONS(description=""Gross amount from sale of assets""),
  basisalesexpnsothr INT64 OPTIONS(description=""Cost or other basis and sales expenses""),
  gnsaleofastothr INT64 OPTIONS(description=""Gain or (loss) from sale of assets""),
  grsincgaming INT64 OPTIONS(description=""Gross income from gaming""),
  grsrevnuefndrsng INT64 OPTIONS(description=""Special events gross revenue""),
  direxpns INT64 OPTIONS(description=""Special events direct expenses""),
  netincfndrsng INT64 OPTIONS(description=""Special events net income (or loss)""),
  grsalesminusret INT64 OPTIONS(description=""Gross sales of inventory""),
  costgoodsold INT64 OPTIONS(description=""Less: cost of goods sold""),
  grsprft INT64 OPTIONS(description=""Gross profit (or loss) from sales of inventory""),
  othrevnue INT64 OPTIONS(description=""Other revenue - total""),
  totrevnue INT64 OPTIONS(description=""Total revenue""),
  totexpns INT64 OPTIONS(description=""Total expenses""),
  totexcessyr INT64 OPTIONS(description=""Excess or deficit""),
  othrchgsnetassetfnd INT64 OPTIONS(description=""Other changes in net assets""),
  networthend INT64 OPTIONS(description=""Net assets EOY""),
  totassetsend INT64 OPTIONS(description=""Total assets e-o-y""),
  totliabend INT64 OPTIONS(description=""Total liabilities e-o-y""),
  totnetassetsend INT64 OPTIONS(description=""Total net worth e-o-y""),
  actvtynotprevrptcd STRING OPTIONS(description=""Activity not previously reported?""),
  chngsinorgcd STRING OPTIONS(description=""Significant changes to governing docs?""),
  unrelbusincd STRING OPTIONS(description=""UBI over $1000?""),
  filedf990tcd STRING OPTIONS(description=""Organization Filed 990T""),
  contractioncd STRING OPTIONS(description=""Liquidation dissolution termination or contraction""),
  politicalexpend INT64 OPTIONS(description=""Direct or indirect political expenditures""),
  filedf1120polcd STRING OPTIONS(description=""File Form 1120-POL?""),
  loanstoofficerscd STRING OPTIONS(description=""Loans to/from officers directors or trustees?""),
  loanstoofficers INT64 OPTIONS(description=""Amount of loans to/from officers""),
  initiationfee INT64 OPTIONS(description=""Initiation fees and capital contributions""),
  grspublicrcpts INT64 OPTIONS(description=""Gross receipts for public use of club facilities""),
  s4958excessbenefcd STRING OPTIONS(description=""Section 4958 excess benefit transactions?""),
  prohibtdtxshltrcd STRING OPTIONS(description=""Party to a prohibited tax shelter transaction?""),
  nonpfrea INT64 OPTIONS(description=""Reason for non-PF status""),
  totnooforgscnt INT64 OPTIONS(description=""Number of organizations supported""),
  totsupport INT64 OPTIONS(description=""Sum of amounts of support""),
  gftgrntsrcvd170 INT64 OPTIONS(description=""Gifts grants membership fees received (170)""),
  txrevnuelevied170 INT64 OPTIONS(description=""Tax revenues levied (170)""),
  srvcsval170 INT64 OPTIONS(description=""Services or facilities furnished by gov (170)""),
  pubsuppsubtot170 INT64 OPTIONS(description=""Public support subtotal (170)""),
  exceeds2pct170 INT64 OPTIONS(description=""Amount support exceeds total (170)""),
  pubsupplesspct170 INT64 OPTIONS(description=""Public support (170)""),
  samepubsuppsubtot170 INT64 OPTIONS(description=""Public support from line 4 (170)""),
  grsinc170 INT64 OPTIONS(description=""Gross income from interest etc (170)""),
  netincunreltd170 INT64 OPTIONS(description=""Net UBI (170)""),
  othrinc170 INT64 OPTIONS(description=""Other income (170)""),
  totsupp170 INT64 OPTIONS(description=""Total support (170)""),
  grsrcptsrelated170 INT64 OPTIONS(description=""Gross receipts from related activities (170)""),
  totgftgrntrcvd509 INT64 OPTIONS(description=""Gifts grants membership fees received (509)""),
  grsrcptsadmissn509 INT64 OPTIONS(description=""Receipts from admissions merchandise etc (509)""),
  grsrcptsactivities509 INT64 OPTIONS(description=""Gross receipts from related activities (509)""),
  txrevnuelevied509 INT64 OPTIONS(description=""Tax revenues levied (509)""),
  srvcsval509 INT64 OPTIONS(description=""Services or facilities furnished by gov (509)""),
  pubsuppsubtot509 INT64 OPTIONS(description=""Public support subtotal (509)""),
  rcvdfrmdisqualsub509 INT64 OPTIONS(description=""Amounts from disqualified persons (509)""),
  exceeds1pct509 INT64 OPTIONS(description=""Amount support exceeds total (509)""),
  subtotpub509 INT64 OPTIONS(description=""Public support subtotal (509)""),
  pubsupplesub509 INT64 OPTIONS(description=""Public support (509)""),
  samepubsuppsubtot509 INT64 OPTIONS(description=""Public support from line 6 (509)""),
  grsinc509 INT64 OPTIONS(description=""Gross income from interest etc (509)""),
  unreltxincls511tx509 INT64 OPTIONS(description=""Net UBI (509)""),
  subtotsuppinc509 INT64 OPTIONS(description=""Subtotal total support (509)""),
  netincunrelatd509 INT64 OPTIONS(description=""Net income from UBI not in 10b (509)""),
  othrinc509 INT64 OPTIONS(description=""Other income (509)""),
  totsupp509 INT64 OPTIONS(description=""Total support (509)"")
)
OPTIONS(
  description=""IRS 990 EZ 2017 dataset""
);"

Some other tables have the similar structure: ['irs_990_ez_2017', 'irs_990_ez_2016', 'irs_990_ez_2013', 'irs_990_ez_2015', 'irs_990_ez_2014', 'irs_990_ez_2012']
,2
table_name,irs_990_pf_2013
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_pf_2013`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number""),
  tax_prd STRING OPTIONS(description=""Tax period (YYYYMM format)""),
  eostatus STRING OPTIONS(description=""EO Status Code""),
  tax_yr INT64 OPTIONS(description=""SOI Year""),
  operatingcd STRING OPTIONS(description=""Operating foundation code""),
  subcd STRING OPTIONS(description=""Subsection code""),
  fairmrktvalamt INT64 OPTIONS(description=""Total assets – e-o-y fair market value""),
  grscontrgifts INT64 OPTIONS(description=""Contributions received""),
  schedbind STRING OPTIONS(description=""Schedule B indicator""),
  intrstrvnue INT64 OPTIONS(description=""Interest revenue""),
  dividndsamt INT64 OPTIONS(description=""Dividends""),
  grsrents INT64 OPTIONS(description=""Gross rents""),
  grsslspramt INT64 OPTIONS(description=""Gross sales price for assets""),
  costsold INT64 OPTIONS(description=""Cost-of-goods-sold""),
  grsprofitbus INT64 OPTIONS(description=""Gross profit""),
  otherincamt INT64 OPTIONS(description=""Other income""),
  totrcptperbks INT64 OPTIONS(description=""Total revenue""),
  compofficers INT64 OPTIONS(description=""Compensation of officers""),
  pensplemplbenf INT64 OPTIONS(description=""Pension plans, employee benefits""),
  legalfeesamt INT64 OPTIONS(description=""Legal fees""),
  accountingfees INT64 OPTIONS(description=""Accounting fees""),
  interestamt INT64 OPTIONS(description=""Interest""),
  depreciationamt INT64 OPTIONS(description=""Depreciation and depletion""),
  occupancyamt INT64 OPTIONS(description=""Occupancy""),
  travlconfmtngs INT64 OPTIONS(description=""Travel, conferences, and meetings""),
  printingpubl INT64 OPTIONS(description=""Printing and publications""),
  topradmnexpnsa INT64 OPTIONS(description=""Total operating and administrative expenses column a""),
  contrpdpbks INT64 OPTIONS(description=""Contributions, gifts, grants paid""),
  totexpnspbks INT64 OPTIONS(description=""Total expenses""),
  excessrcpts INT64 OPTIONS(description=""Net income less deficit""),
  totrcptnetinc INT64 OPTIONS(description=""Total receipts net investment income""),
  topradmnexpnsb INT64 OPTIONS(description=""Total operating and administrative expenses column b""),
  totexpnsnetinc INT64 OPTIONS(description=""Total expenses net investment income""),
  netinvstinc INT64 OPTIONS(description=""Net investment income""),
  trcptadjnetinc INT64 OPTIONS(description=""Total receipts adjusted net income""),
  totexpnsadjnet INT64 OPTIONS(description=""Total expenses adjusted net income""),
  adjnetinc INT64 OPTIONS(description=""Adjusted net income""),
  topradmnexpnsd INT64 OPTIONS(description=""Total operating and administrative expenses column d""),
  totexpnsexempt INT64 OPTIONS(description=""Total expenses – exempt purpose""),
  othrcashamt INT64 OPTIONS(description=""Cash non-interest-bearing – e-o-y book value""),
  invstgovtoblig INT64 OPTIONS(description=""Investments in U.S. & state government obligations – e-o-y book value""),
  invstcorpstk INT64 OPTIONS(description=""Investments in corporate stock – e-o-y book value""),
  invstcorpbnd INT64 OPTIONS(description=""Investments in corporate bonds– e-o-y book value""),
  totinvstsec INT64 OPTIONS(description=""Total investments in securities – e-o-y book value""),
  mrtgloans INT64 OPTIONS(description=""Investments mortgage loans – e-o-y book value""),
  othrinvstend INT64 OPTIONS(description=""Other investments – e-o-y book value""),
  othrassetseoy INT64 OPTIONS(description=""Other assets – e-o-y book value""),
  totassetsend INT64 OPTIONS(description=""Total assets – e-o-y book value""),
  mrtgnotespay INT64 OPTIONS(description=""Mortgage loans payable – e-o-y book value""),
  othrliabltseoy INT64 OPTIONS(description=""Other liabilities – e-o-y book value""),
  totliabend INT64 OPTIONS(description=""Total liabilities – e-o-y book value""),
  tfundnworth INT64 OPTIONS(description=""Total fund net worth – e-o-y book value""),
  fairmrktvaleoy INT64 OPTIONS(description=""Total assets – e-o-y fair market value""),
  totexcapgnls INT64 OPTIONS(description=""Capital gain net income""),
  totexcapgn INT64 OPTIONS(description=""Net gain – sales of assets""),
  totexcapls INT64 OPTIONS(description=""Net loss – sales of assets""),
  invstexcisetx INT64 OPTIONS(description=""Excise tax on net investment income""),
  sec4940notxcd STRING OPTIONS(description=""Section 4940 – no tax""),
  sec4940redtxcd STRING OPTIONS(description=""Section 4940 – 1 % tax""),
  sect511tx INT64 OPTIONS(description=""Section 511 tax""),
  subtitleatx INT64 OPTIONS(description=""Subtitle A tax""),
  totaxpyr INT64 OPTIONS(description=""Total excise tax""),
  esttaxcr INT64 OPTIONS(description=""Estimated tax credit""),
  txwithldsrc INT64 OPTIONS(description=""Tax withheld at source""),
  txpaidf2758 INT64 OPTIONS(description=""Tax paid with Form 2758 (filing extension)""),
  erronbkupwthld INT64 OPTIONS(description=""Erroneous backup withholding credit amount""),
  estpnlty INT64 OPTIONS(description=""Estimated tax penalty""),
  taxdue INT64 OPTIONS(description=""Tax due""),
  overpay INT64 OPTIONS(description=""Overpayment""),
  crelamt INT64 OPTIONS(description=""Credit elect amount""),
  infleg STRING OPTIONS(description=""Influence legislation question""),
  actnotpr STRING OPTIONS(description=""Activities not previously reported question""),
  chgnprvrptcd STRING OPTIONS(description=""Changes not previously reported question""),
  filedf990tcd STRING OPTIONS(description=""Filed 990-T question""),
  contractncd STRING OPTIONS(description=""Contraction question""),
  furnishcpycd STRING OPTIONS(description=""Furnished copy to Attorney General question""),
  claimstatcd STRING OPTIONS(description=""Claiming status question""),
  cntrbtrstxyrcd STRING OPTIONS(description=""Substantial contributors question""),
  acqdrindrintcd STRING OPTIONS(description=""Acquire interest in applicable insurance contract question""),
  orgcmplypubcd STRING OPTIONS(description=""Comply with public inspection question""),
  filedlf1041ind STRING OPTIONS(description=""Section 4947(a)(1) filing in lieu of Form 1041 question""),
  propexchcd STRING OPTIONS(description=""Property exchange question""),
  brwlndmnycd STRING OPTIONS(description=""Borrow lend money question""),
  furngoodscd STRING OPTIONS(description=""Furnished goods question""),
  paidcmpncd STRING OPTIONS(description=""Paid compensation question""),
  transfercd STRING OPTIONS(description=""Transfer question""),
  agremkpaycd STRING OPTIONS(description=""Agree to make pay question""),
  exceptactsind STRING OPTIONS(description=""Acts fail to qualify under section 53.4941(d)-3 question""),
  prioractvcd STRING OPTIONS(description=""Engage in acts in prior year question""),
  undistrinccd STRING OPTIONS(description=""Undistributed income question""),
  applyprovind STRING OPTIONS(description=""Not applying section 4942(a)(2) provisions question""),
  dirindirintcd STRING OPTIONS(description=""Direct indirect interest question""),
  excesshldcd STRING OPTIONS(description=""Excess business holdings question""),
  invstjexmptcd STRING OPTIONS(description=""Jeopardizing investments question""),
  prevjexmptcd STRING OPTIONS(description=""Prior year jeopardizing investments question""),
  propgndacd STRING OPTIONS(description=""Propaganda question""),
  ipubelectcd STRING OPTIONS(description=""Influence public election question""),
  grntindivcd STRING OPTIONS(description=""Grant individual question""),
  nchrtygrntcd STRING OPTIONS(description=""Non-charity grant question""),
  nreligiouscd STRING OPTIONS(description=""Non-religious question""),
  excptransind STRING OPTIONS(description=""Transactions fail to qualify under section 53.4945 question""),
  rfprsnlbnftind STRING OPTIONS(description=""Receive funds to pay premiums on personal benefit contract question""),
  pyprsnlbnftind STRING OPTIONS(description=""Pay premiums on personal benefit contract question""),
  tfairmrktunuse INT64 OPTIONS(description=""Fair market value of assets not used for charitable purposes""),
  valncharitassets INT64 OPTIONS(description=""Net value of noncharitable-use assets""),
  cmpmininvstret INT64 OPTIONS(description=""Minimum investment return""),
  distribamt INT64 OPTIONS(description=""Distributable amount""),
  undistribincyr INT64 OPTIONS(description=""Undistributed income""),
  adjnetinccola INT64 OPTIONS(description=""Adjusted net income column a""),
  adjnetinccolb INT64 OPTIONS(description=""Adjusted net income column b""),
  adjnetinccolc INT64 OPTIONS(description=""Adjusted net income column c""),
  adjnetinccold INT64 OPTIONS(description=""Adjusted net income column d""),
  adjnetinctot INT64 OPTIONS(description=""Adjusted net income total""),
  qlfydistriba INT64 OPTIONS(description=""Qualifying distributions column a""),
  qlfydistribb INT64 OPTIONS(description=""Qualifying distributions column b""),
  qlfydistribc INT64 OPTIONS(description=""Qualifying distributions column c""),
  qlfydistribd INT64 OPTIONS(description=""Qualifying distributions column d""),
  qlfydistribtot INT64 OPTIONS(description=""Qualifying distributions total""),
  valassetscola INT64 OPTIONS(description=""Value assets column a""),
  valassetscolb INT64 OPTIONS(description=""Value assets column b""),
  valassetscolc INT64 OPTIONS(description=""Value assets column c""),
  valassetscold INT64 OPTIONS(description=""Value assets column d""),
  valassetstot INT64 OPTIONS(description=""Value assets total""),
  qlfyasseta INT64 OPTIONS(description=""Qualifying assets column a""),
  qlfyassetb INT64 OPTIONS(description=""Qualifying assets column b""),
  qlfyassetc INT64 OPTIONS(description=""Qualifying assets column c""),
  qlfyassetd INT64 OPTIONS(description=""Qualifying assets column d""),
  qlfyassettot INT64 OPTIONS(description=""Qualifying assets total""),
  endwmntscola INT64 OPTIONS(description=""Endowments column a""),
  endwmntscolb INT64 OPTIONS(description=""Endowments column b""),
  endwmntscolc INT64 OPTIONS(description=""Endowments column c""),
  endwmntscold INT64 OPTIONS(description=""Endowments column d""),
  endwmntstot INT64 OPTIONS(description=""Endowments total""),
  totsuprtcola INT64 OPTIONS(description=""Total support column a""),
  totsuprtcolb INT64 OPTIONS(description=""Total support column b""),
  totsuprtcolc INT64 OPTIONS(description=""Total support column c""),
  totsuprtcold INT64 OPTIONS(description=""Total support column d""),
  totsuprttot INT64 OPTIONS(description=""Total support total""),
  pubsuprtcola INT64 OPTIONS(description=""Public support column a""),
  pubsuprtcolb INT64 OPTIONS(description=""Public support column b""),
  pubsuprtcolc INT64 OPTIONS(description=""Public support column c""),
  pubsuprtcold INT64 OPTIONS(description=""Public support column d""),
  pubsuprttot INT64 OPTIONS(description=""Public support total""),
  grsinvstinca INT64 OPTIONS(description=""Gross investment income column a""),
  grsinvstincb INT64 OPTIONS(description=""Gross investment income column b""),
  grsinvstincc INT64 OPTIONS(description=""Gross investment income column c""),
  grsinvstincd INT64 OPTIONS(description=""Gross investment income column d""),
  grsinvstinctot INT64 OPTIONS(description=""Gross investment income total""),
  grntapprvfut INT64 OPTIONS(description=""Grants approved for future payment""),
  progsrvcacold INT64 OPTIONS(description=""Program service revenue line 1a (excluded)""),
  progsrvcacole INT64 OPTIONS(description=""Program service revenue line 1a (exempt)""),
  progsrvcbcold INT64 OPTIONS(description=""Program service revenue line 1b (excluded)""),
  progsrvcbcole INT64 OPTIONS(description=""Program service revenue line 1b (exempt)""),
  progsrvcccold INT64 OPTIONS(description=""Program service revenue line 1c (excluded)""),
  progsrvcccole INT64 OPTIONS(description=""Program service revenue line 1c (exempt)""),
  progsrvcdcold INT64 OPTIONS(description=""Program service revenue line 1d (excluded)""),
  progsrvcdcole INT64 OPTIONS(description=""Program service revenue line 1d (exempt)""),
  progsrvcecold INT64 OPTIONS(description=""Program service revenue line 1e (excluded)""),
  progsrvcecole INT64 OPTIONS(description=""Program service revenue line 1e (exempt)""),
  progsrvcfcold INT64 OPTIONS(description=""Program service revenue line 1f (excluded)""),
  progsrvcfcole INT64 OPTIONS(description=""Program service revenue line 1f (exempt)""),
  progsrvcgcold INT64 OPTIONS(description=""Program service revenue--fees and contracts from government line 1g (excluded)""),
  progsrvcgcole INT64 OPTIONS(description=""Program service revenue--fees and contracts from government line 1g (exempt)""),
  membershpduesd INT64 OPTIONS(description=""Membership dues and assessments (excluded)""),
  membershpduese INT64 OPTIONS(description=""Membership dues and assessments (exempt)""),
  intonsvngsd INT64 OPTIONS(description=""Interest on savings and temporary cash investments (excluded)""),
  intonsvngse INT64 OPTIONS(description=""Interest on savings and temporary cash investments (exempt)""),
  dvdndsintd INT64 OPTIONS(description=""Dividends and interest from securities (excluded)""),
  dvdndsinte INT64 OPTIONS(description=""Dividends and interest from securities (exempt)""),
  trnsfrcashcd STRING OPTIONS(description=""Transfer cash to noncharitable exempt organization question""),
  trnsothasstscd STRING OPTIONS(description=""Transfer other assets to noncharitable exempt organization question""),
  salesasstscd STRING OPTIONS(description=""Sale of assets to noncharitable exempt organization question""),
  prchsasstscd STRING OPTIONS(description=""Purchase of assets from noncharitable exempt organization question""),
  rentlsfacltscd STRING OPTIONS(description=""Rental of facilities or other assets question""),
  reimbrsmntscd STRING OPTIONS(description=""Reimbursements arrangements question""),
  loansguarcd STRING OPTIONS(description=""Loans or other guarantees question""),
  perfservicescd STRING OPTIONS(description=""Performance of services or membership or fundraising solicitations question""),
  sharngasstscd STRING OPTIONS(description=""Sharing of facilities, equipment, mailing lists, other assets, or paid employees question"")
);"

Some other tables have the similar structure: ['irs_990_pf_2013', 'irs_990_pf_2012', 'irs_990_pf_2016', 'irs_990_pf_2014', 'irs_990_pf_2015']
,3
table_name,irs_990_ein
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_ein`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number (EIN)""),
  name STRING OPTIONS(description=""Primary Name of Organization""),
  ico STRING OPTIONS(description=""In Care of Name""),
  street STRING OPTIONS(description=""Street Address""),
  city STRING OPTIONS(description=""City""),
  state STRING OPTIONS(description=""State""),
  zip STRING OPTIONS(description=""Zip Code""),
  `group` INT64 OPTIONS(description=""Group Exemption Number""),
  subsection INT64 OPTIONS(description=""Subsection Code""),
  affiliation INT64 OPTIONS(description=""Affiliation Code""),
  classification INT64 OPTIONS(description=""Classification Code(s)""),
  ruling INT64 OPTIONS(description=""Ruling Date""),
  deductibility INT64 OPTIONS(description=""Deductibility Code""),
  foundation INT64 OPTIONS(description=""Foundation Code""),
  activity INT64 OPTIONS(description=""Activity Codes""),
  organization INT64 OPTIONS(description=""Organization Code""),
  status INT64 OPTIONS(description=""Exempt Organization Status Code""),
  tax_period INT64 OPTIONS(description=""Tax Period""),
  asset_cd INT64 OPTIONS(description=""Asset Code""),
  income_cd INT64 OPTIONS(description=""Income Code""),
  filing_req_cd INT64 OPTIONS(description=""Filing Requirement Code""),
  pf_filing_req_cd INT64 OPTIONS(description=""PF Filing Requirement Code""),
  acct_pd INT64 OPTIONS(description=""Accounting Period""),
  asset_amt INT64 OPTIONS(description=""Asset Amount""),
  income_amt INT64 OPTIONS(description=""Income Amount (includes negative sign if amount is negative)""),
  revenue_amt INT64 OPTIONS(description=""Form 990 Revenue Amount (includes negative sign if amount is negative)""),
  ntee_cd STRING OPTIONS(description=""National Taxonomy of Exempt Entities (NTEE) Code""),
  sort_name STRING OPTIONS(description=""Sort Name (Secondary Name Line)"")
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'irs_990': ['irs_990_2012', 'irs_990_2013', 'irs_990_2014', 'irs_990_2015', 'irs_990_2016', 'irs_990_2017', 'irs_990_ein', 'irs_990_ez_2012', 'irs_990_ez_2013', 'irs_990_ez_2014', 'irs_990_ez_2015', 'irs_990_ez_2016', 'irs_990_ez_2017', 'irs_990_pf_2012', 'irs_990_pf_2013', 'irs_990_pf_2014', 'irs_990_pf_2015', 'irs_990_pf_2016']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

To determine the three years between 2012 and 2017 with the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms, we need to consider the following:

**Tables:**

- `bigquery-public-data.irs_990.irs_990_2012`
- `bigquery-public-data.irs_990.irs_990_2013`
- `bigquery-public-data.irs_990.irs_990_2014`
- `bigquery-public-data.irs_990.irs_990_2015`
- `bigquery-public-data.irs_990.irs_990_2016`
- `bigquery-public-data.irs_990.irs_990_2017`

**Columns and Potential Usage:**

- `totrevenue`: Represents the **total revenue** of each organization for the tax year. This column is crucial for calculating the **median revenue** per year.
  
- `totfuncexpns`: Represents the **total functional expenses** of each organization for the tax year. This column is essential for calculating the **median functional expenses** per year.

**Conditions That May Be Used:**

- **Exclude records** where `totrevenue` or `totfuncexpns` is **NULL** or **zero**, to ensure accurate median calculations.
- Consider records where both `totrevenue` and `totfuncexpns` are **greater than zero**.
  
---

**SQL Queries:**

To understand the data in these columns, here are 10 different SQL queries:

1. **Query 1:** Retrieve `totrevenue` and `totfuncexpns` from the 2012 data.

   ```sql
   SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
   ```

2. **Query 2:** Get distinct `totrevenue` values from the 2013 data.

   ```sql
   SELECT DISTINCT `totrevenue`
   FROM `bigquery-public-data.irs_990.irs_990_2013`
   LIMIT 100;
   ```

3. **Query 3:** Select records from 2014 where `totrevenue` is not null.

   ```sql
   SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2014`
   WHERE `totrevenue` IS NOT NULL
   LIMIT 100;
   ```

4. **Query 4:** Retrieve entries from 2015 where `totrevenue` is greater than zero.

   ```sql
   SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2015`
   WHERE `totrevenue` > 0
   LIMIT 100;
   ```

5. **Query 5:** Select records from 2016 where `totfuncexpns` is greater than zero.

   ```sql
   SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2016`
   WHERE `totfuncexpns` > 0
   LIMIT 100;
   ```

6. **Query 6:** Get records from 2017 where both `totrevenue` and `totfuncexpns` are greater than zero.

   ```sql
   SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2017`
   WHERE `totrevenue` > 0 AND `totfuncexpns` > 0
   LIMIT 100;
   ```

7. **Query 7:** Calculate the absolute difference between `totrevenue` and `totfuncexpns` for 2012.

   ```sql
   SELECT ABS(`totrevenue` - `totfuncexpns`) AS `difference`
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
   ```

8. **Query 8:** Retrieve `ein`, `totrevenue`, and `totfuncexpns` from the 2013 data.

   ```sql
   SELECT `ein`, `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2013`
   LIMIT 100;
   ```

9. **Query 9:** Get organizations from 2014 where `totrevenue` exceeds $1,000,000.

   ```sql
   SELECT `ein`, `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2014`
   WHERE `totrevenue` > 1000000
   LIMIT 100;
   ```

10. **Query 10:** Compute the average `totrevenue` and `totfuncexpns` for 2015.

    ```sql
    SELECT AVG(`totrevenue`) AS `average_revenue`, AVG(`totfuncexpns`) AS `average_expenses`
    FROM `bigquery-public-data.irs_990.irs_990_2015`;
    ```

---

These queries help in understanding the distribution and values of `totrevenue` and `totfuncexpns` across different years. By analyzing the outputs:

- We can observe the range and typical values for revenue and expenses.
- Identify any anomalies or outliers that may affect median calculations.
- Ensure that data used for calculating medians is valid (i.e., non-null and positive values).

**Next Steps:**

To complete the original task:

1. **Calculate Median Values:**
   - For each year (2012-2017), calculate the median of `totrevenue` and `totfuncexpns`.

2. **Compute Absolute Differences:**
   - For each year, compute the absolute difference between the median revenue and median expenses.

3. **Identify Top Three Years:**
   - Select the three years with the smallest absolute differences.

**Note:** Actual computation of medians and differences would require additional SQL queries involving window functions or approximate quantile functions, which are beyond the scope of the provided simple SELECT statements.

---

Remember, our analysis is based solely on the data available in the specified tables and columns, without any external knowledge. The above steps and queries are designed to help us understand and process the data to answer the task accurately.Query:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992
Query:
SELECT DISTINCT `totrevenue`
   FROM `bigquery-public-data.irs_990.irs_990_2013`
   LIMIT 100;
Answer:
totrevenue
122968
4389328
374905
346911
2906549
164209982
48273758
12670317
3685121
103383
428461
579869
300899
495671
22193824
1366967
9079299
17103145
129593
36356
95613
328831
456888
86962
97785
111837
215140
275954
87790
20046
428856
479921
77245
225421
229287
61598
321000
242059
139689
24939
872048
645674
150413
220210
105971
84372
1901169
19272452
2117575
30146
3069929
275814
3890462
10969785
121431918
-81596
39606
88313
703478
75219
61421
43047
234797
252565
246306
1492013
33852
367555
283937
247768
140696
237803
249118
64467
39322
27618
336305
528729
290773
428451
378704
376497
261322
486524
303514
100743
1369179
226187
169622
255524
339011
532077
271396
343281
132990
1308483
191796
258179
128316
384701
Query:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2014`
   WHERE `totrevenue` IS NOT NULL
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
20694,19468
236657,301343
19819,26396
655125,578163
847870,826451
712182,712459
366711,353922
3447721,2909079
2621632,1366326
2871588,2928131
1015877,1001174
863595,530667
51218,153153
1185460,1172599
6830751,6142934
411892,506446
117976,109535
16330,25661
527676,508423
3996068,3814139
31462,15677
110869,75381
196609,192972
4856006,4435095
646143,882350
55653,54446
36255767,37918684
13401,42833
2497066,1966300
592497,579233
526551,542168
7598454,7415237
688824,695361
592390,548554
1899805,1721268
5275560,5094916
29024,4300
1430082,1180962
10618,12506
9344697,11265328
150016,225798
160825,162894
177716,173485
0,5280
355783,341269
200313,196189
84804,318702
988630,258610
299418,164213
721665,649140
27944,19206
375326,263299
213389,214720
205349,108411
7323005,7706633
504245,473816
2893102,2718660
469484,436588
460476,713786
309001,155099
447640,439713
27065,49924
631519,656660
156588,134766
559483,141491
8659447,8527621
10947718,10717634
1436783,1036703
73239,66127
2415779,2634196
601371,740935
135726,122830
90930,63194
8888752,9015272
439578,315975
466928,481516
11389699,11169785
8312329,6808366
609859,516240
20097194,17307341
1079509,1091845
1600525,1127166
64356,87744
9233,8946
120116,123827
21760972,20973199
1327524,1299522
104555,100085
134958,15702
1372261,157833
684340,373909
61713,0
0,157
152717,173234
138876,157099
2295981,2056378
194497,193369
244112,323411
1200,5900
571539,543849
Query:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2015`
   WHERE `totrevenue` > 0
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
9475129863,8709938336
9021585970,8321905336
6740015230,4669997260
9890722789,4309105409
20796549014,18075847020
5717023246,4641560606
4477633568,3423617239
2279363000,1691395000
1094833976,940804147
2003505012,1163065944
2186337569,2072281956
4070665000,3151739000
45409123226,45030330413
2086259022,1551479259
6000839000,5191443000
4471027733,3916035766
11091388129,10459998873
1745011054,1659631419
1711501686,1607394030
1748347726,172312751
4372777340,2259456041
507813618,327009492
8655129029,8378464261
2895842638,2330997409
4368738915,3689909253
7523260077,6836839104
3504618972,3057685595
491684898,234576949
1974296447,1282624046
355610307,30410978
2776824017,2614420821
141110637,30174803
1229151613,1154548483
3273281179,3128457240
4560196033,4176701522
3919688726,3723702641
4623485966,3966218200
5133788413,4714230553
915020284,432878535
3601970032,3169289032
946444331,662638575
5569004000,5203749000
5090394271,4697479724
310866221,233001993
4861458246,4232122879
1938114417,2343778678
4769437583,4353104270
39458181,191470300
222084044,151593851
4028979910,3984258509
4540758825,4244955757
5126858838,4587233670
3389579680,2814397225
3554287841,3254875267
944091350,695084853
3645488350,3434235247
4332738809,3977980809
161601474,105896349
2470239000,2219842000
380991791,1117436173
2147061429,2093681419
1570825169,1710463545
1310504806,1038584402
1061173384,1089635824
236829269,141353465
245346868,181009292
949990421,748695565
644127211,789975312
660801887,635164186
1858309238,832408761
758868764,17396568
2522460717,2423225663
10098163008,9927833907
1576921105,1450587043
1371507609,1234269613
179269029,132353491
519162717,492886704
1463065976,1141818453
3065054623,2523731038
1443977422,1387395511
2326669188,911750423
482241939,260245181
2691040647,2394046683
3741634778,3287631456
242713372,199196712
625493534,1644603012
580320696,53281765
200753275,185814616
2094280227,1884583375
1100952729,946774041
366766097,31900381
687663239,631580639
3564353877,1830079594
582665814,581682872
Query:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2016`
   WHERE `totfuncexpns` > 0
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
281124,330710
235819,238967
2552190,2669341
32425648,32098696
320525,351666
71895,88763
324899,254431
2837482,2807835
418695,416577
3588013,3541336
954519,875799
2522077,2424594
213962,195282
441877,465581
297098,303187
8630374,4068797
812435,825952
8800916,8804399
222935,222095
227088,198487
14444601,13631662
497791,414382
288044,276583
105620,97393
1284111,641602
1835152,1839043
63799,133204
454367,375392
91105,94542
224728,240526
64428,80427
413658,445372
507249,550897
93946,63512
547229,419381
209016,229679
280108,255848
216013,254466
1798994,1751480
5626,12614
71,59091
3780480,3566181
432724,382554
11784947,11725715
135815,130383
52800,37588
32124,26660
685972,629551
129973,68528
1554893,1471006
120359,137802
288407,248291
448341,523784
241561,239939
254246,246314
488981,500976
110749,237498
3616528,3612680
323944,460823
121076,202241
19216873,19742993
844831,931294
53268,55790
1631969,1543597
149544,151816
5292225,1345468
80738,164288
403099,399965
2775480,2737154
2280475,2204248
2180401,1036111
1004649,1048471
1216653,1303975
605128,691163
165213,141815
429152,296555
114657,186185
26812005,24130681
248058,226483
1164303,1349813
3165282,4348921
98526,178756
554244,531574
115273,119078
118461,103036
452171,437574
99733,70758
158926,112974
2797845,2862377
3986674,4059124
248791,244005
390191,159212
34277,62275
194544,84289
629384,627025
479677,494719
1357145,1120765
1168966,1366751
1191097,779120
2903032,2623680
Query:
SELECT `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2017`
   WHERE `totrevenue` > 0 AND `totfuncexpns` > 0
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
209664,206188
564406,554294
305087,327877
174438,145544
136782,162179
98973,123407
423238,360261
534367,434935
221239,122749
1799089,1679500
88315,90730
56864,32844
280830,221205
1445877,1292425
2851684,2429237
2766734,2553178
23224,27590
12226484,12250496
691917,668296
3543524,3474760
302553,273441
581243,577432
5660659,5592920
5810324,5762193
138799,119130
171603,165534
227677,189736
3184134,2940477
577692,449305
1473661,1280200
604279,589834
523880,405749
941861,797961
352467,315528
831732,898309
592806,584235
324171,248674
49570,54222
277317,269248
419985,376117
375241,382133
2845066,4186957
462623,444236
12451,20712
248778,240474
6825559,6776912
882825,767107
404235,439815
148802,188035
626634,633118
26640,50232
64915,59141
22780457,20864582
405376,336613
1235910,1151524
329378,407577
198091095,180849706
981983,1134366
348225,328323
185935,201483
142052,145799
5356304,6383829
99505,100479
917614,971980
543501,443726
312691,318531
1039190,1019792
753134,604745
250190,245189
746711,724493
112132,108452
34582,61984
4200335,3963774
714109,727258
1540734,2244941
459682,371214
148831,132577
75577,32007
118600,91670
204859,195523
37326,323169
176269,226631
327547,168050
119645,123012
3110164,3158598
115312,27322
2942321,2681736
599096,149141
65707,86936
827426,683257
426703,117155
208710,177716
112512,116707
26426,20431
12651,1660
21428,34575
109340,118628
8866624,10840266
80045,64420
1542934,1303952
Query:
SELECT ABS(`totrevenue` - `totfuncexpns`) AS `difference`
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Answer:
difference
203904
91160
28065
22187
102199
4640
3205
3438
31899
44217
1455
14459
2025060
2289
33622
33174
52811
26638
9576
44014
1951
113974
56281
110886
8549
172318
15735
25439
116603
6633
54354
27718
13017
54791
5517
19941
48021
528334
32939
4737
4955
49512
78470
2055
8869
21600
18014
26648
272711
110259
97580
151048
31263
9985
180191
239738
8520
2997890
15403
93235
19760
2346822
77447
486292
1863
261845
5290920
16493
280038
283127
123664
87519
36676
826002
633502
18702
5438164
235269
2818881
72108
1801638
1492235
406692
4015258
5738450
1033623
11871835
103295
6283181
5153186
24388107
227834
82308
25799626
144342555
1188648
5466787
59316
9581189
1183813
Query:
SELECT `ein`, `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2013`
   LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
237244328,314560,233219
522385104,2208052,2288933
311017154,264709,227663
521135824,365178,355579
237222193,483055,599928
246021385,2371701,2383014
990213908,2666924,2834679
716076840,3219672,2564742
866052021,27339091,27800070
237122650,16381263,16764161
436158894,6610202,7034850
592719781,2201691,2216131
200946697,14993695,16159574
561412117,133665,159964
411376272,254597,237306
651300847,277706,179781
460253627,301498,262734
363183692,609135,567923
222842803,3443245,1879670
636050522,223355,200209
362987519,536728,1203782
251559261,320516,335800
316064918,15930768,18203624
450493921,6604819,6777747
656088549,3348829,3752811
990269654,1008046,871965
436921041,1031181,369846
363489253,214551238,195393298
776224948,1322214,2072342
876128290,12409053,12266479
910853746,1682092,1586537
521937919,142799,116871
203631134,10527,0
386090659,31379,28885
300397278,601831,537077
750275625,135921,115296
043821981,109083,114117
630759180,271815,258585
916037678,460189,116733
237373972,327690,278455
341385441,231587,232567
911766944,251155,247641
591986067,317695,304915
346528417,81819,82445
050382356,152526,123099
391848508,347632,318377
721060866,216982,197502
956107034,28095,40488
943048491,1341052,1326458
237069111,95072,100868
486110616,2612,3221
382319307,316739,274338
486107677,240913,218579
236265518,39938,47303
586055206,62651,61123
486111957,341897,376031
931077620,287731,303526
203109607,174599,165337
231944161,287526,239688
366191936,1458359,1453804
942375212,26101547,26133951
522305267,1275783,1112593
571140642,62136,48684
376044257,683590,691852
130970295,165178,289714
931204757,19654326,17979683
596134291,2082021,2039803
920018710,5409934,5740392
237348596,432337,517267
996046220,2386777,2182007
133810146,22164086,12589344
526047277,4298181,4140864
841103552,138508,115499
593131383,298532,338948
351101396,672577,637842
Query:
SELECT `ein`, `totrevenue`, `totfuncexpns`
   FROM `bigquery-public-data.irs_990.irs_990_2014`
   WHERE `totrevenue` > 1000000
   LIMIT 100;
Answer:
ein,totrevenue,totfuncexpns
272345009,3069541,3252617
371371059,9206536,9781870
350589385,1877740,2047004
930825790,5037778,5948494
376304539,1890814,1938100
350830295,1479623,1436426
650004016,5973792,6846597
940745005,6164194,6283230
135007460,2844627,2211949
560172993,6260207,7108078
41200680,4649694,4200765
880087294,58123650,-1824273
946080365,19907790,19557915
383782755,7615823,5866294
366947279,1605234,1418794
221010190,6098197,5765228
203825348,6151686,4780278
351694366,1074093,1055651
264683543,146569081,136900651
550173315,1438181,1065061
231428823,2004567,1951109
41662000,11590973,10589990
411725229,4805993,5075148
941558464,3633532,3097156
580198114,4008217,3725420
990345010,1115947,398953
742301528,4779386,4266174
640714754,12616017,13395162
741883156,1105436,977831
311205596,17252450,14581406
530259366,6463088,6017170
750918872,1229292,1317997
610591008,1825215,707604
546004683,4009379,4979499
221128510,1709715,1632206
61369657,3272652,3269593
920139334,1084658,1092214
951948865,1001702,886904
621766996,34182088,36772413
616222164,3987347,2980525
581584613,35346594,31019694
741593195,1075496,1079899
416367654,3229921,4462036
310676582,649224664,623005115
810641625,2104612,0
741361102,2488952,2561425
56010637,20972361,21630217
50493920,3631647,3939582
416367653,3971171,3337905
941076364,1619851,2012565
630185430,1542502,1462945
591395087,2095795,2222520
940376375,1055529,1068121
270500843,9780677,13937
274018006,3914732,2378842
223183386,66150340,102083094
582170261,1293854,1173881
381162670,2001299,2352127
942535992,17920639,17633821
776138153,86753338,12282080
592603700,49073714,48625895
133443127,173408717,156577244
133718642,105346843,41542481
262732890,1105880,1120156
540537788,1281108,1304609
232122939,9320312,9349859
521844783,1217252,0
530159345,14553913,15045847
522156601,6969885,6736772
616156163,13901866,13789887
957055654,2645127616,2646670886
416037362,12039779,13173275
111569376,7300739,7909849
202313717,2648099,0
Query:
SELECT AVG(`totrevenue`) AS `average_revenue`, AVG(`totfuncexpns`) AS `average_expenses`
    FROM `bigquery-public-data.irs_990.irs_990_2015`;
Answer:
average_revenue,average_expenses
7952843.4174678065,7411628.804401246
End Exploring Related Columns
Task: Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'irs_990': ['irs_990_2012', 'irs_990_2013', 'irs_990_2014', 'irs_990_2015', 'irs_990_2016', 'irs_990_2017', 'irs_990_ein', 'irs_990_ez_2012', 'irs_990_ez_2013', 'irs_990_ez_2014', 'irs_990_ez_2015', 'irs_990_ez_2016', 'irs_990_ez_2017', 'irs_990_pf_2012', 'irs_990_pf_2013', 'irs_990_pf_2014', 'irs_990_pf_2015', 'irs_990_pf_2016']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-28 02:48:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:48:58 - root - INFO - ```sql
WITH medians AS (
  SELECT
    2012 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2013 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2014 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2015 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2016 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2017 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
)
SELECT
  Year,
  ABS(median_revenue - median_expenses) AS Difference
FROM medians
ORDER BY Difference
LIMIT 3;
```
2025-01-28 02:49:00 - root - INFO - itercount: 1
2025-01-28 02:49:00 - root - INFO - 0
2025-01-28 02:49:00 - root - INFO - results: 
Year,Difference
2012,20775
2013,21484
2017,26908


2025-01-28 02:49:00 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,20775
2013,21484
2017,26908
Current sql:
WITH medians AS (
  SELECT
    2012 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2013 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2014 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2015 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2016 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2017 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
)
SELECT
  Year,
  ABS(median_revenue - median_expenses) AS Difference
FROM medians
ORDER BY Difference
LIMIT 3;
2025-01-28 02:49:32 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:49:32 - root - INFO - ```sql
WITH medians AS (
  SELECT
    2012 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2013 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2014 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2015 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2016 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2017 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
)
SELECT
  Year,
  ROUND(ABS(median_revenue - median_expenses), 4) AS Difference
FROM medians
ORDER BY Difference
LIMIT 3;
```
2025-01-28 02:49:34 - root - INFO - itercount: 2
2025-01-28 02:49:34 - root - INFO - 0
2025-01-28 02:49:34 - root - INFO - results: 
Year,Difference
2012,20775.0
2013,21484.0
2017,26908.0


2025-01-28 02:49:34 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,20775.0
2013,21484.0
2017,26908.0
Current sql:
WITH medians AS (
  SELECT
    2012 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2013 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2014 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2015 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2016 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2017 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
)
SELECT
  Year,
  ROUND(ABS(median_revenue - median_expenses), 4) AS Difference
FROM medians
ORDER BY Difference
LIMIT 3;
2025-01-28 02:49:51 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:49:51 - root - INFO - ```sql
WITH medians AS (
  SELECT
    2012 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2013 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2014 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2015 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2016 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
  UNION ALL
  SELECT
    2017 AS Year,
    stat.*
  FROM (
    SELECT
      APPROX_QUANTILES(totrevenue, 1000)[OFFSET(500)] AS median_revenue,
      APPROX_QUANTILES(totfuncexpns, 1000)[OFFSET(500)] AS median_expenses
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue > 0 AND totfuncexpns > 0
  ) AS stat
)
SELECT
  Year,
  ROUND(ABS(median_revenue - median_expenses), 4) AS Difference
FROM medians
ORDER BY Difference
LIMIT 3;
```
2025-01-28 02:49:52 - root - INFO - itercount: 3
2025-01-28 02:49:52 - root - INFO - 0
2025-01-28 02:49:52 - root - INFO - Total iteration counts: 3
