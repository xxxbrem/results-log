2025-01-28 02:46:05 - openai._base_client - INFO - Retrying request to /chat/completions in 0.453224 seconds
2025-01-28 02:47:04 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:47:05 - root - INFO - SQL:
SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Results:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992

2025-01-28 02:47:07 - root - INFO - SQL:
SELECT DISTINCT tax_pd
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Results:
tax_pd
201112
201205
201106
201012
201206
201105
201109
201110
201210
201103
201104
201107
201108
201111
201201
201202
201203
201204
201207
201208
201006
201209
201008
201102
201101
201003
201009
200906
200908
200912
201010
200812
201011
200909
201002
200902
201005
200903
201004
200907
201007
200910
201001
200911
200905
200901
200805
200904
201211
200412
200806
200808
200512
200604
200807
200809
200612
200706
200712
200810

2025-01-28 02:47:08 - root - INFO - SQL:
SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0
   LIMIT 100;
Results:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992

2025-01-28 02:47:10 - root - INFO - SQL:
SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0
   LIMIT 100;
Results:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992

2025-01-28 02:47:11 - root - INFO - SQL:
SELECT COUNT(*) AS total_filings
   FROM `bigquery-public-data.irs_990.irs_990_2012`;
Results:
total_filings
294019

2025-01-28 02:47:13 - root - INFO - SQL:
SELECT COUNT(*) AS valid_filings
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0;
Results:
valid_filings
288114

2025-01-28 02:47:15 - root - INFO - SQL:
SELECT APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0;
Results:
median_revenue
404346

2025-01-28 02:47:16 - root - INFO - SQL:
SELECT APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totfuncexpns > 0;
Results:
median_expenses
390496

2025-01-28 02:47:18 - root - INFO - SQL:
SELECT
     APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
     APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0;
Results:
median_revenue,median_expenses
406380,396976

2025-01-28 02:47:19 - root - INFO - SQL:
SELECT
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
Results:
median_difference
9404

2025-01-28 02:47:21 - root - INFO - SQL:
SELECT
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
Results:
median_difference
19113

2025-01-28 02:47:23 - root - INFO - SQL:
SELECT '2012' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    UNION ALL
    SELECT '2013' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    UNION ALL
    SELECT '2014' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    UNION ALL
    SELECT '2015' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    UNION ALL
    SELECT '2016' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    UNION ALL
    SELECT '2017' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2017`;
Results:
year,total_filings
2013,289603
2012,294019
2016,307483
2017,300910
2015,294782
2014,299405

2025-01-28 02:47:24 - root - INFO - SQL:
SELECT '2014' AS year,
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
Results:
year,median_difference
2014,32436

2025-01-28 02:47:26 - root - INFO - SQL:
SELECT totrevenue, totfuncexpns
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totrevenue < 500000
    LIMIT 100;
Results:
totrevenue,totfuncexpns
1160,32586
6,0
1414,33526242
368617,444400
53293,7484611
17036,21083
81202,7531010
462,462
36215,603782
322352,1045792
198315,5573
131936,131936
1515,126328
421996,32196
26404,2944366
70001,69109
132742,349397
15553,0
190501,193047
282192,0
498926,394158
208843,234425
128645,0
4620,4925609
316895,5670451
241068,644276
305774,1956037
90000,0
108203,284636
275358,476267
153933,5572
325276,5850946
7340,7847330
106671,749238
447535,5108131
58224,750138
241127,0
378241,336465
485768,425039
429087,5640
179283,2982220
187644,228971
423304,31902
352044,60884
103317,16942895
291063,600950
150,1773102
338892,299545
500,5343
172050,1134409
19193,1676798
491728,97437
480803,93147
458158,501872
245792,4411317
130911,56686
93954,259448
20018,1716302
451279,399175
48950,63522
477156,10802483
336675,2157215
85946,8536843
219593,1987601
117999,117999
90721,53543
214095,2406197
12400,5607
8400,5675
361985,4214659
360512,1917811
267083,686062
2675,149846
349715,342018
2977,10444212
478148,477930
128764,419817
133002,177596
64461,220252
187969,1867570
159310,2253503
27043,1616311
1132,17180
8432,1952373
238400,1846139
128691,1159876
440887,668544
252600,3256409
301910,1599808
424657,451159
209039,417997
216685,44703
258433,21815
392127,923730
4,0
413608,1956672
78278,4142243
30259,12527778
266204,297283
31000,0

2025-01-28 02:47:27 - root - INFO - SQL:
SELECT COUNT(*) AS negative_entries
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue < 0 OR totfuncexpns < 0;
Results:
negative_entries
1498

2025-01-28 02:47:27 - root - INFO - itercount: 0
2025-01-28 02:47:27 - root - INFO - Database Name: bigquery-public-data
Schema Name: irs_990
DDL describes table information.
,0
table_name,irs_990_2016
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_2016`
(
  ein STRING NOT NULL,
  elf STRING,
  tax_pd INT64,
  subseccd INT64,
  s501c3or4947a1cd STRING,
  schdbind STRING,
  politicalactvtscd STRING,
  lbbyingactvtscd STRING,
  subjto6033cd STRING,
  dnradvisedfundscd STRING,
  prptyintrcvdcd STRING,
  maintwrkofartcd STRING,
  crcounselingqstncd STRING,
  hldassetsintermpermcd STRING,
  rptlndbldgeqptcd STRING,
  rptinvstothsecd STRING,
  rptinvstprgrelcd STRING,
  rptothasstcd STRING,
  rptothliabcd STRING,
  sepcnsldtfinstmtcd STRING,
  sepindaudfinstmtcd STRING,
  inclinfinstmtcd STRING,
  operateschools170cd STRING,
  frgnofficecd STRING,
  frgnrevexpnscd STRING,
  frgngrntscd STRING,
  frgnaggragrntscd STRING,
  rptprofndrsngfeescd STRING,
  rptincfnndrsngcd STRING,
  rptincgamingcd STRING,
  operatehosptlcd STRING,
  hospaudfinstmtcd STRING,
  rptgrntstogovtcd STRING,
  rptgrntstoindvcd STRING,
  rptyestocompnstncd STRING,
  txexmptbndcd STRING,
  invstproceedscd STRING,
  maintescrwaccntcd STRING,
  actonbehalfcd STRING,
  engageexcessbnftcd STRING,
  awarexcessbnftcd STRING,
  loantofficercd STRING,
  grantoofficercd STRING,
  dirbusnreltdcd STRING,
  fmlybusnreltdcd STRING,
  servasofficercd STRING,
  recvnoncashcd STRING,
  recvartcd STRING,
  ceaseoperationscd STRING,
  sellorexchcd STRING,
  ownsepentcd STRING,
  reltdorgcd STRING,
  intincntrlcd STRING,
  orgtrnsfrcd STRING,
  conduct5percentcd STRING,
  compltschocd STRING,
  f1096cnt INT64,
  fw2gcnt INT64,
  wthldngrulescd STRING,
  noemplyeesw3cnt INT64,
  filerqrdrtnscd STRING,
  unrelbusinccd STRING,
  filedf990tcd STRING,
  frgnacctcd STRING,
  prohibtdtxshltrcd STRING,
  prtynotifyorgcd STRING,
  filedf8886tcd STRING,
  solicitcntrbcd STRING,
  exprstmntcd STRING,
  providegoodscd STRING,
  notfydnrvalcd STRING,
  filedf8282cd STRING,
  f8282cnt INT64,
  fndsrcvdcd STRING,
  premiumspaidcd STRING,
  filedf8899cd STRING,
  filedf1098ccd STRING,
  excbushldngscd STRING,
  s4966distribcd STRING,
  distribtodonorcd STRING,
  initiationfees INT64,
  grsrcptspublicuse INT64,
  grsincmembers INT64,
  grsincother INT64,
  filedlieuf1041cd STRING,
  txexmptint INT64,
  qualhlthplncd STRING,
  qualhlthreqmntn INT64,
  qualhlthonhnd INT64,
  rcvdpdtngcd STRING,
  filedf720cd STRING,
  totreprtabled INT64,
  totcomprelatede INT64,
  totestcompf INT64,
  noindiv100kcnt INT64,
  nocontractor100kcnt INT64,
  totcntrbgfts INT64,
  prgmservcode2acd INT64,
  totrev2acola INT64,
  prgmservcode2bcd INT64,
  totrev2bcola INT64,
  prgmservcode2ccd INT64,
  totrev2ccola INT64,
  prgmservcode2dcd INT64,
  totrev2dcola INT64,
  prgmservcode2ecd INT64,
  totrev2ecola INT64,
  totrev2fcola INT64,
  totprgmrevnue INT64,
  invstmntinc INT64,
  txexmptbndsproceeds INT64,
  royaltsinc INT64,
  grsrntsreal INT64,
  grsrntsprsnl INT64,
  rntlexpnsreal INT64,
  rntlexpnsprsnl INT64,
  rntlincreal INT64,
  rntlincprsnl INT64,
  netrntlinc INT64,
  grsalesecur INT64,
  grsalesothr INT64,
  cstbasisecur INT64,
  cstbasisothr INT64,
  gnlsecur INT64,
  gnlsothr INT64,
  netgnls INT64,
  grsincfndrsng INT64,
  lessdirfndrsng INT64,
  netincfndrsng INT64,
  grsincgaming INT64,
  lessdirgaming INT64,
  netincgaming INT64,
  grsalesinvent INT64,
  lesscstofgoods INT64,
  netincsales INT64,
  miscrev11acd INT64,
  miscrevtota INT64,
  miscrev11bcd INT64,
  miscrevtot11b INT64,
  miscrev11ccd INT64,
  miscrevtot11c INT64,
  miscrevtot11d INT64,
  miscrevtot11e INT64,
  totrevenue INT64,
  grntstogovt INT64,
  grnsttoindiv INT64,
  grntstofrgngovt INT64,
  benifitsmembrs INT64,
  compnsatncurrofcr INT64,
  compnsatnandothr INT64,
  othrsalwages INT64,
  pensionplancontrb INT64,
  othremplyeebenef INT64,
  payrolltx INT64,
  feesforsrvcmgmt INT64,
  legalfees INT64,
  accntingfees INT64,
  feesforsrvclobby INT64,
  profndraising INT64,
  feesforsrvcinvstmgmt INT64,
  feesforsrvcothr INT64,
  advrtpromo INT64,
  officexpns INT64,
  infotech INT64,
  royaltsexpns INT64,
  occupancy INT64,
  travel INT64,
  travelofpublicoffcl INT64,
  converconventmtng INT64,
  interestamt INT64,
  pymtoaffiliates INT64,
  deprcatndepletn INT64,
  insurance INT64,
  othrexpnsa INT64,
  othrexpnsb INT64,
  othrexpnsc INT64,
  othrexpnsd INT64,
  othrexpnse INT64,
  othrexpnsf INT64,
  totfuncexpns INT64,
  nonintcashend INT64,
  svngstempinvend INT64,
  pldgegrntrcvblend INT64,
  accntsrcvblend INT64,
  currfrmrcvblend INT64,
  rcvbldisqualend INT64,
  notesloansrcvblend INT64,
  invntriesalesend INT64,
  prepaidexpnsend INT64,
  lndbldgsequipend INT64,
  invstmntsend INT64,
  invstmntsothrend INT64,
  invstmntsprgmend INT64,
  intangibleassetsend INT64,
  othrassetsend INT64,
  totassetsend INT64,
  accntspayableend INT64,
  grntspayableend INT64,
  deferedrevnuend INT64,
  txexmptbndsend INT64,
  escrwaccntliabend INT64,
  paybletoffcrsend INT64,
  secrdmrtgsend INT64,
  unsecurednotesend INT64,
  othrliabend INT64,
  totliabend INT64,
  unrstrctnetasstsend INT64,
  temprstrctnetasstsend INT64,
  permrstrctnetasstsend INT64,
  capitalstktrstend INT64,
  paidinsurplusend INT64,
  retainedearnend INT64,
  totnetassetend INT64,
  totnetliabastend INT64,
  nonpfrea INT64,
  totnooforgscnt INT64,
  totsupport INT64,
  gftgrntsrcvd170 INT64,
  txrevnuelevied170 INT64,
  srvcsval170 INT64,
  pubsuppsubtot170 INT64,
  exceeds2pct170 INT64,
  pubsupplesspct170 INT64,
  samepubsuppsubtot170 INT64,
  grsinc170 INT64,
  netincunreltd170 INT64,
  othrinc170 INT64,
  totsupp170 INT64,
  grsrcptsrelated170 INT64,
  totgftgrntrcvd509 INT64,
  grsrcptsadmissn509 INT64,
  grsrcptsactivities509 INT64,
  txrevnuelevied509 INT64,
  srvcsval509 INT64,
  pubsuppsubtot509 INT64,
  rcvdfrmdisqualsub509 INT64,
  exceeds1pct509 INT64,
  subtotpub509 INT64,
  pubsupplesub509 INT64,
  samepubsuppsubtot509 INT64,
  grsinc509 INT64,
  unreltxincls511tx509 INT64,
  subtotsuppinc509 INT64,
  netincunrelatd509 INT64,
  othrinc509 INT64,
  totsupp509 INT64
)
OPTIONS(
  description=""IRS 990 2016 dataset""
);"

Some other tables have the similar structure: ['irs_990_2016', 'irs_990_2012', 'irs_990_2017', 'irs_990_2014', 'irs_990_2015', 'irs_990_2013']
,1
table_name,irs_990_ez_2017
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_ez_2017`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number""),
  elf STRING OPTIONS(description=""E-file indicator""),
  tax_pd INT64 OPTIONS(description=""Tax period""),
  subseccd INT64 OPTIONS(description=""Subsection code""),
  totcntrbs INT64 OPTIONS(description=""Contributions gifts grants etc received""),
  prgmservrev INT64 OPTIONS(description=""Program service revenue""),
  duesassesmnts INT64 OPTIONS(description=""Membership dues and assessments""),
  othrinvstinc INT64 OPTIONS(description=""Investment income""),
  grsamtsalesastothr INT64 OPTIONS(description=""Gross amount from sale of assets""),
  basisalesexpnsothr INT64 OPTIONS(description=""Cost or other basis and sales expenses""),
  gnsaleofastothr INT64 OPTIONS(description=""Gain or (loss) from sale of assets""),
  grsincgaming INT64 OPTIONS(description=""Gross income from gaming""),
  grsrevnuefndrsng INT64 OPTIONS(description=""Special events gross revenue""),
  direxpns INT64 OPTIONS(description=""Special events direct expenses""),
  netincfndrsng INT64 OPTIONS(description=""Special events net income (or loss)""),
  grsalesminusret INT64 OPTIONS(description=""Gross sales of inventory""),
  costgoodsold INT64 OPTIONS(description=""Less: cost of goods sold""),
  grsprft INT64 OPTIONS(description=""Gross profit (or loss) from sales of inventory""),
  othrevnue INT64 OPTIONS(description=""Other revenue - total""),
  totrevnue INT64 OPTIONS(description=""Total revenue""),
  totexpns INT64 OPTIONS(description=""Total expenses""),
  totexcessyr INT64 OPTIONS(description=""Excess or deficit""),
  othrchgsnetassetfnd INT64 OPTIONS(description=""Other changes in net assets""),
  networthend INT64 OPTIONS(description=""Net assets EOY""),
  totassetsend INT64 OPTIONS(description=""Total assets e-o-y""),
  totliabend INT64 OPTIONS(description=""Total liabilities e-o-y""),
  totnetassetsend INT64 OPTIONS(description=""Total net worth e-o-y""),
  actvtynotprevrptcd STRING OPTIONS(description=""Activity not previously reported?""),
  chngsinorgcd STRING OPTIONS(description=""Significant changes to governing docs?""),
  unrelbusincd STRING OPTIONS(description=""UBI over $1000?""),
  filedf990tcd STRING OPTIONS(description=""Organization Filed 990T""),
  contractioncd STRING OPTIONS(description=""Liquidation dissolution termination or contraction""),
  politicalexpend INT64 OPTIONS(description=""Direct or indirect political expenditures""),
  filedf1120polcd STRING OPTIONS(description=""File Form 1120-POL?""),
  loanstoofficerscd STRING OPTIONS(description=""Loans to/from officers directors or trustees?""),
  loanstoofficers INT64 OPTIONS(description=""Amount of loans to/from officers""),
  initiationfee INT64 OPTIONS(description=""Initiation fees and capital contributions""),
  grspublicrcpts INT64 OPTIONS(description=""Gross receipts for public use of club facilities""),
  s4958excessbenefcd STRING OPTIONS(description=""Section 4958 excess benefit transactions?""),
  prohibtdtxshltrcd STRING OPTIONS(description=""Party to a prohibited tax shelter transaction?""),
  nonpfrea INT64 OPTIONS(description=""Reason for non-PF status""),
  totnooforgscnt INT64 OPTIONS(description=""Number of organizations supported""),
  totsupport INT64 OPTIONS(description=""Sum of amounts of support""),
  gftgrntsrcvd170 INT64 OPTIONS(description=""Gifts grants membership fees received (170)""),
  txrevnuelevied170 INT64 OPTIONS(description=""Tax revenues levied (170)""),
  srvcsval170 INT64 OPTIONS(description=""Services or facilities furnished by gov (170)""),
  pubsuppsubtot170 INT64 OPTIONS(description=""Public support subtotal (170)""),
  exceeds2pct170 INT64 OPTIONS(description=""Amount support exceeds total (170)""),
  pubsupplesspct170 INT64 OPTIONS(description=""Public support (170)""),
  samepubsuppsubtot170 INT64 OPTIONS(description=""Public support from line 4 (170)""),
  grsinc170 INT64 OPTIONS(description=""Gross income from interest etc (170)""),
  netincunreltd170 INT64 OPTIONS(description=""Net UBI (170)""),
  othrinc170 INT64 OPTIONS(description=""Other income (170)""),
  totsupp170 INT64 OPTIONS(description=""Total support (170)""),
  grsrcptsrelated170 INT64 OPTIONS(description=""Gross receipts from related activities (170)""),
  totgftgrntrcvd509 INT64 OPTIONS(description=""Gifts grants membership fees received (509)""),
  grsrcptsadmissn509 INT64 OPTIONS(description=""Receipts from admissions merchandise etc (509)""),
  grsrcptsactivities509 INT64 OPTIONS(description=""Gross receipts from related activities (509)""),
  txrevnuelevied509 INT64 OPTIONS(description=""Tax revenues levied (509)""),
  srvcsval509 INT64 OPTIONS(description=""Services or facilities furnished by gov (509)""),
  pubsuppsubtot509 INT64 OPTIONS(description=""Public support subtotal (509)""),
  rcvdfrmdisqualsub509 INT64 OPTIONS(description=""Amounts from disqualified persons (509)""),
  exceeds1pct509 INT64 OPTIONS(description=""Amount support exceeds total (509)""),
  subtotpub509 INT64 OPTIONS(description=""Public support subtotal (509)""),
  pubsupplesub509 INT64 OPTIONS(description=""Public support (509)""),
  samepubsuppsubtot509 INT64 OPTIONS(description=""Public support from line 6 (509)""),
  grsinc509 INT64 OPTIONS(description=""Gross income from interest etc (509)""),
  unreltxincls511tx509 INT64 OPTIONS(description=""Net UBI (509)""),
  subtotsuppinc509 INT64 OPTIONS(description=""Subtotal total support (509)""),
  netincunrelatd509 INT64 OPTIONS(description=""Net income from UBI not in 10b (509)""),
  othrinc509 INT64 OPTIONS(description=""Other income (509)""),
  totsupp509 INT64 OPTIONS(description=""Total support (509)"")
)
OPTIONS(
  description=""IRS 990 EZ 2017 dataset""
);"

Some other tables have the similar structure: ['irs_990_ez_2017', 'irs_990_ez_2016', 'irs_990_ez_2013', 'irs_990_ez_2015', 'irs_990_ez_2014', 'irs_990_ez_2012']
,2
table_name,irs_990_pf_2013
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_pf_2013`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number""),
  tax_prd STRING OPTIONS(description=""Tax period (YYYYMM format)""),
  eostatus STRING OPTIONS(description=""EO Status Code""),
  tax_yr INT64 OPTIONS(description=""SOI Year""),
  operatingcd STRING OPTIONS(description=""Operating foundation code""),
  subcd STRING OPTIONS(description=""Subsection code""),
  fairmrktvalamt INT64 OPTIONS(description=""Total assets – e-o-y fair market value""),
  grscontrgifts INT64 OPTIONS(description=""Contributions received""),
  schedbind STRING OPTIONS(description=""Schedule B indicator""),
  intrstrvnue INT64 OPTIONS(description=""Interest revenue""),
  dividndsamt INT64 OPTIONS(description=""Dividends""),
  grsrents INT64 OPTIONS(description=""Gross rents""),
  grsslspramt INT64 OPTIONS(description=""Gross sales price for assets""),
  costsold INT64 OPTIONS(description=""Cost-of-goods-sold""),
  grsprofitbus INT64 OPTIONS(description=""Gross profit""),
  otherincamt INT64 OPTIONS(description=""Other income""),
  totrcptperbks INT64 OPTIONS(description=""Total revenue""),
  compofficers INT64 OPTIONS(description=""Compensation of officers""),
  pensplemplbenf INT64 OPTIONS(description=""Pension plans, employee benefits""),
  legalfeesamt INT64 OPTIONS(description=""Legal fees""),
  accountingfees INT64 OPTIONS(description=""Accounting fees""),
  interestamt INT64 OPTIONS(description=""Interest""),
  depreciationamt INT64 OPTIONS(description=""Depreciation and depletion""),
  occupancyamt INT64 OPTIONS(description=""Occupancy""),
  travlconfmtngs INT64 OPTIONS(description=""Travel, conferences, and meetings""),
  printingpubl INT64 OPTIONS(description=""Printing and publications""),
  topradmnexpnsa INT64 OPTIONS(description=""Total operating and administrative expenses column a""),
  contrpdpbks INT64 OPTIONS(description=""Contributions, gifts, grants paid""),
  totexpnspbks INT64 OPTIONS(description=""Total expenses""),
  excessrcpts INT64 OPTIONS(description=""Net income less deficit""),
  totrcptnetinc INT64 OPTIONS(description=""Total receipts net investment income""),
  topradmnexpnsb INT64 OPTIONS(description=""Total operating and administrative expenses column b""),
  totexpnsnetinc INT64 OPTIONS(description=""Total expenses net investment income""),
  netinvstinc INT64 OPTIONS(description=""Net investment income""),
  trcptadjnetinc INT64 OPTIONS(description=""Total receipts adjusted net income""),
  totexpnsadjnet INT64 OPTIONS(description=""Total expenses adjusted net income""),
  adjnetinc INT64 OPTIONS(description=""Adjusted net income""),
  topradmnexpnsd INT64 OPTIONS(description=""Total operating and administrative expenses column d""),
  totexpnsexempt INT64 OPTIONS(description=""Total expenses – exempt purpose""),
  othrcashamt INT64 OPTIONS(description=""Cash non-interest-bearing – e-o-y book value""),
  invstgovtoblig INT64 OPTIONS(description=""Investments in U.S. & state government obligations – e-o-y book value""),
  invstcorpstk INT64 OPTIONS(description=""Investments in corporate stock – e-o-y book value""),
  invstcorpbnd INT64 OPTIONS(description=""Investments in corporate bonds– e-o-y book value""),
  totinvstsec INT64 OPTIONS(description=""Total investments in securities – e-o-y book value""),
  mrtgloans INT64 OPTIONS(description=""Investments mortgage loans – e-o-y book value""),
  othrinvstend INT64 OPTIONS(description=""Other investments – e-o-y book value""),
  othrassetseoy INT64 OPTIONS(description=""Other assets – e-o-y book value""),
  totassetsend INT64 OPTIONS(description=""Total assets – e-o-y book value""),
  mrtgnotespay INT64 OPTIONS(description=""Mortgage loans payable – e-o-y book value""),
  othrliabltseoy INT64 OPTIONS(description=""Other liabilities – e-o-y book value""),
  totliabend INT64 OPTIONS(description=""Total liabilities – e-o-y book value""),
  tfundnworth INT64 OPTIONS(description=""Total fund net worth – e-o-y book value""),
  fairmrktvaleoy INT64 OPTIONS(description=""Total assets – e-o-y fair market value""),
  totexcapgnls INT64 OPTIONS(description=""Capital gain net income""),
  totexcapgn INT64 OPTIONS(description=""Net gain – sales of assets""),
  totexcapls INT64 OPTIONS(description=""Net loss – sales of assets""),
  invstexcisetx INT64 OPTIONS(description=""Excise tax on net investment income""),
  sec4940notxcd STRING OPTIONS(description=""Section 4940 – no tax""),
  sec4940redtxcd STRING OPTIONS(description=""Section 4940 – 1 % tax""),
  sect511tx INT64 OPTIONS(description=""Section 511 tax""),
  subtitleatx INT64 OPTIONS(description=""Subtitle A tax""),
  totaxpyr INT64 OPTIONS(description=""Total excise tax""),
  esttaxcr INT64 OPTIONS(description=""Estimated tax credit""),
  txwithldsrc INT64 OPTIONS(description=""Tax withheld at source""),
  txpaidf2758 INT64 OPTIONS(description=""Tax paid with Form 2758 (filing extension)""),
  erronbkupwthld INT64 OPTIONS(description=""Erroneous backup withholding credit amount""),
  estpnlty INT64 OPTIONS(description=""Estimated tax penalty""),
  taxdue INT64 OPTIONS(description=""Tax due""),
  overpay INT64 OPTIONS(description=""Overpayment""),
  crelamt INT64 OPTIONS(description=""Credit elect amount""),
  infleg STRING OPTIONS(description=""Influence legislation question""),
  actnotpr STRING OPTIONS(description=""Activities not previously reported question""),
  chgnprvrptcd STRING OPTIONS(description=""Changes not previously reported question""),
  filedf990tcd STRING OPTIONS(description=""Filed 990-T question""),
  contractncd STRING OPTIONS(description=""Contraction question""),
  furnishcpycd STRING OPTIONS(description=""Furnished copy to Attorney General question""),
  claimstatcd STRING OPTIONS(description=""Claiming status question""),
  cntrbtrstxyrcd STRING OPTIONS(description=""Substantial contributors question""),
  acqdrindrintcd STRING OPTIONS(description=""Acquire interest in applicable insurance contract question""),
  orgcmplypubcd STRING OPTIONS(description=""Comply with public inspection question""),
  filedlf1041ind STRING OPTIONS(description=""Section 4947(a)(1) filing in lieu of Form 1041 question""),
  propexchcd STRING OPTIONS(description=""Property exchange question""),
  brwlndmnycd STRING OPTIONS(description=""Borrow lend money question""),
  furngoodscd STRING OPTIONS(description=""Furnished goods question""),
  paidcmpncd STRING OPTIONS(description=""Paid compensation question""),
  transfercd STRING OPTIONS(description=""Transfer question""),
  agremkpaycd STRING OPTIONS(description=""Agree to make pay question""),
  exceptactsind STRING OPTIONS(description=""Acts fail to qualify under section 53.4941(d)-3 question""),
  prioractvcd STRING OPTIONS(description=""Engage in acts in prior year question""),
  undistrinccd STRING OPTIONS(description=""Undistributed income question""),
  applyprovind STRING OPTIONS(description=""Not applying section 4942(a)(2) provisions question""),
  dirindirintcd STRING OPTIONS(description=""Direct indirect interest question""),
  excesshldcd STRING OPTIONS(description=""Excess business holdings question""),
  invstjexmptcd STRING OPTIONS(description=""Jeopardizing investments question""),
  prevjexmptcd STRING OPTIONS(description=""Prior year jeopardizing investments question""),
  propgndacd STRING OPTIONS(description=""Propaganda question""),
  ipubelectcd STRING OPTIONS(description=""Influence public election question""),
  grntindivcd STRING OPTIONS(description=""Grant individual question""),
  nchrtygrntcd STRING OPTIONS(description=""Non-charity grant question""),
  nreligiouscd STRING OPTIONS(description=""Non-religious question""),
  excptransind STRING OPTIONS(description=""Transactions fail to qualify under section 53.4945 question""),
  rfprsnlbnftind STRING OPTIONS(description=""Receive funds to pay premiums on personal benefit contract question""),
  pyprsnlbnftind STRING OPTIONS(description=""Pay premiums on personal benefit contract question""),
  tfairmrktunuse INT64 OPTIONS(description=""Fair market value of assets not used for charitable purposes""),
  valncharitassets INT64 OPTIONS(description=""Net value of noncharitable-use assets""),
  cmpmininvstret INT64 OPTIONS(description=""Minimum investment return""),
  distribamt INT64 OPTIONS(description=""Distributable amount""),
  undistribincyr INT64 OPTIONS(description=""Undistributed income""),
  adjnetinccola INT64 OPTIONS(description=""Adjusted net income column a""),
  adjnetinccolb INT64 OPTIONS(description=""Adjusted net income column b""),
  adjnetinccolc INT64 OPTIONS(description=""Adjusted net income column c""),
  adjnetinccold INT64 OPTIONS(description=""Adjusted net income column d""),
  adjnetinctot INT64 OPTIONS(description=""Adjusted net income total""),
  qlfydistriba INT64 OPTIONS(description=""Qualifying distributions column a""),
  qlfydistribb INT64 OPTIONS(description=""Qualifying distributions column b""),
  qlfydistribc INT64 OPTIONS(description=""Qualifying distributions column c""),
  qlfydistribd INT64 OPTIONS(description=""Qualifying distributions column d""),
  qlfydistribtot INT64 OPTIONS(description=""Qualifying distributions total""),
  valassetscola INT64 OPTIONS(description=""Value assets column a""),
  valassetscolb INT64 OPTIONS(description=""Value assets column b""),
  valassetscolc INT64 OPTIONS(description=""Value assets column c""),
  valassetscold INT64 OPTIONS(description=""Value assets column d""),
  valassetstot INT64 OPTIONS(description=""Value assets total""),
  qlfyasseta INT64 OPTIONS(description=""Qualifying assets column a""),
  qlfyassetb INT64 OPTIONS(description=""Qualifying assets column b""),
  qlfyassetc INT64 OPTIONS(description=""Qualifying assets column c""),
  qlfyassetd INT64 OPTIONS(description=""Qualifying assets column d""),
  qlfyassettot INT64 OPTIONS(description=""Qualifying assets total""),
  endwmntscola INT64 OPTIONS(description=""Endowments column a""),
  endwmntscolb INT64 OPTIONS(description=""Endowments column b""),
  endwmntscolc INT64 OPTIONS(description=""Endowments column c""),
  endwmntscold INT64 OPTIONS(description=""Endowments column d""),
  endwmntstot INT64 OPTIONS(description=""Endowments total""),
  totsuprtcola INT64 OPTIONS(description=""Total support column a""),
  totsuprtcolb INT64 OPTIONS(description=""Total support column b""),
  totsuprtcolc INT64 OPTIONS(description=""Total support column c""),
  totsuprtcold INT64 OPTIONS(description=""Total support column d""),
  totsuprttot INT64 OPTIONS(description=""Total support total""),
  pubsuprtcola INT64 OPTIONS(description=""Public support column a""),
  pubsuprtcolb INT64 OPTIONS(description=""Public support column b""),
  pubsuprtcolc INT64 OPTIONS(description=""Public support column c""),
  pubsuprtcold INT64 OPTIONS(description=""Public support column d""),
  pubsuprttot INT64 OPTIONS(description=""Public support total""),
  grsinvstinca INT64 OPTIONS(description=""Gross investment income column a""),
  grsinvstincb INT64 OPTIONS(description=""Gross investment income column b""),
  grsinvstincc INT64 OPTIONS(description=""Gross investment income column c""),
  grsinvstincd INT64 OPTIONS(description=""Gross investment income column d""),
  grsinvstinctot INT64 OPTIONS(description=""Gross investment income total""),
  grntapprvfut INT64 OPTIONS(description=""Grants approved for future payment""),
  progsrvcacold INT64 OPTIONS(description=""Program service revenue line 1a (excluded)""),
  progsrvcacole INT64 OPTIONS(description=""Program service revenue line 1a (exempt)""),
  progsrvcbcold INT64 OPTIONS(description=""Program service revenue line 1b (excluded)""),
  progsrvcbcole INT64 OPTIONS(description=""Program service revenue line 1b (exempt)""),
  progsrvcccold INT64 OPTIONS(description=""Program service revenue line 1c (excluded)""),
  progsrvcccole INT64 OPTIONS(description=""Program service revenue line 1c (exempt)""),
  progsrvcdcold INT64 OPTIONS(description=""Program service revenue line 1d (excluded)""),
  progsrvcdcole INT64 OPTIONS(description=""Program service revenue line 1d (exempt)""),
  progsrvcecold INT64 OPTIONS(description=""Program service revenue line 1e (excluded)""),
  progsrvcecole INT64 OPTIONS(description=""Program service revenue line 1e (exempt)""),
  progsrvcfcold INT64 OPTIONS(description=""Program service revenue line 1f (excluded)""),
  progsrvcfcole INT64 OPTIONS(description=""Program service revenue line 1f (exempt)""),
  progsrvcgcold INT64 OPTIONS(description=""Program service revenue--fees and contracts from government line 1g (excluded)""),
  progsrvcgcole INT64 OPTIONS(description=""Program service revenue--fees and contracts from government line 1g (exempt)""),
  membershpduesd INT64 OPTIONS(description=""Membership dues and assessments (excluded)""),
  membershpduese INT64 OPTIONS(description=""Membership dues and assessments (exempt)""),
  intonsvngsd INT64 OPTIONS(description=""Interest on savings and temporary cash investments (excluded)""),
  intonsvngse INT64 OPTIONS(description=""Interest on savings and temporary cash investments (exempt)""),
  dvdndsintd INT64 OPTIONS(description=""Dividends and interest from securities (excluded)""),
  dvdndsinte INT64 OPTIONS(description=""Dividends and interest from securities (exempt)""),
  trnsfrcashcd STRING OPTIONS(description=""Transfer cash to noncharitable exempt organization question""),
  trnsothasstscd STRING OPTIONS(description=""Transfer other assets to noncharitable exempt organization question""),
  salesasstscd STRING OPTIONS(description=""Sale of assets to noncharitable exempt organization question""),
  prchsasstscd STRING OPTIONS(description=""Purchase of assets from noncharitable exempt organization question""),
  rentlsfacltscd STRING OPTIONS(description=""Rental of facilities or other assets question""),
  reimbrsmntscd STRING OPTIONS(description=""Reimbursements arrangements question""),
  loansguarcd STRING OPTIONS(description=""Loans or other guarantees question""),
  perfservicescd STRING OPTIONS(description=""Performance of services or membership or fundraising solicitations question""),
  sharngasstscd STRING OPTIONS(description=""Sharing of facilities, equipment, mailing lists, other assets, or paid employees question"")
);"

Some other tables have the similar structure: ['irs_990_pf_2013', 'irs_990_pf_2012', 'irs_990_pf_2016', 'irs_990_pf_2014', 'irs_990_pf_2015']
,3
table_name,irs_990_ein
ddl,"CREATE TABLE `bigquery-public-data.irs_990.irs_990_ein`
(
  ein STRING NOT NULL OPTIONS(description=""Employer Identification Number (EIN)""),
  name STRING OPTIONS(description=""Primary Name of Organization""),
  ico STRING OPTIONS(description=""In Care of Name""),
  street STRING OPTIONS(description=""Street Address""),
  city STRING OPTIONS(description=""City""),
  state STRING OPTIONS(description=""State""),
  zip STRING OPTIONS(description=""Zip Code""),
  `group` INT64 OPTIONS(description=""Group Exemption Number""),
  subsection INT64 OPTIONS(description=""Subsection Code""),
  affiliation INT64 OPTIONS(description=""Affiliation Code""),
  classification INT64 OPTIONS(description=""Classification Code(s)""),
  ruling INT64 OPTIONS(description=""Ruling Date""),
  deductibility INT64 OPTIONS(description=""Deductibility Code""),
  foundation INT64 OPTIONS(description=""Foundation Code""),
  activity INT64 OPTIONS(description=""Activity Codes""),
  organization INT64 OPTIONS(description=""Organization Code""),
  status INT64 OPTIONS(description=""Exempt Organization Status Code""),
  tax_period INT64 OPTIONS(description=""Tax Period""),
  asset_cd INT64 OPTIONS(description=""Asset Code""),
  income_cd INT64 OPTIONS(description=""Income Code""),
  filing_req_cd INT64 OPTIONS(description=""Filing Requirement Code""),
  pf_filing_req_cd INT64 OPTIONS(description=""PF Filing Requirement Code""),
  acct_pd INT64 OPTIONS(description=""Accounting Period""),
  asset_amt INT64 OPTIONS(description=""Asset Amount""),
  income_amt INT64 OPTIONS(description=""Income Amount (includes negative sign if amount is negative)""),
  revenue_amt INT64 OPTIONS(description=""Form 990 Revenue Amount (includes negative sign if amount is negative)""),
  ntee_cd STRING OPTIONS(description=""National Taxonomy of Exempt Entities (NTEE) Code""),
  sort_name STRING OPTIONS(description=""Sort Name (Secondary Name Line)"")
);"

External knowledge that might be helpful: 
None
The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'irs_990': ['irs_990_2012', 'irs_990_2013', 'irs_990_2014', 'irs_990_2015', 'irs_990_2016', 'irs_990_2017', 'irs_990_ein', 'irs_990_ez_2012', 'irs_990_ez_2013', 'irs_990_ez_2014', 'irs_990_ez_2015', 'irs_990_ez_2016', 'irs_990_ez_2017', 'irs_990_pf_2012', 'irs_990_pf_2013', 'irs_990_pf_2014', 'irs_990_pf_2015', 'irs_990_pf_2016']}}
Begin Exploring Related Columns
**Relevant Tables and Columns:**

- **Tables:**
  - `bigquery-public-data.irs_990.irs_990_2012`
  - `bigquery-public-data.irs_990.irs_990_2013`
  - `bigquery-public-data.irs_990.irs_990_2014`
  - `bigquery-public-data.irs_990.irs_990_2015`
  - `bigquery-public-data.irs_990.irs_990_2016`
  - `bigquery-public-data.irs_990.irs_990_2017`

- **Columns:**
  - `totrevenue`: **Potential Usage** - Total revenue; used to calculate the median revenue for each year.
  - `totfuncexpns`: **Potential Usage** - Total functional expenses; used to calculate the median expenses for each year.
  - `tax_pd`: **Potential Usage** - Tax period; can be used to confirm the year if needed.

- **Conditions that may be used:**
  - Exclude records where `totrevenue` or `totfuncexpns` is `NULL` or less than or equal to zero to ensure accurate median calculations.
  - Ensure data consistency by filtering records with valid financial figures.

---

**SQL Queries:**

1. **Select total revenue and functional expenses from 2012 data:**
   ```sql
   SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
   ```

2. **Retrieve distinct tax periods from the 2012 dataset:**
   ```sql
   SELECT DISTINCT tax_pd
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
   ```

3. **Select records with positive total revenue from 2012 data:**
   ```sql
   SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0
   LIMIT 100;
   ```

4. **Select records with positive total revenue and expenses from 2012 data:**
   ```sql
   SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0
   LIMIT 100;
   ```

5. **Count total filings in the 2012 dataset:**
   ```sql
   SELECT COUNT(*) AS total_filings
   FROM `bigquery-public-data.irs_990.irs_990_2012`;
   ```

6. **Count filings with valid revenue and expenses in 2012 data:**
   ```sql
   SELECT COUNT(*) AS valid_filings
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0;
   ```

7. **Calculate the median total revenue for 2012:**
   ```sql
   SELECT APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0;
   ```

8. **Calculate the median total functional expenses for 2012:**
   ```sql
   SELECT APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totfuncexpns > 0;
   ```

9. **Calculate median revenue and expenses together for 2012:**
   ```sql
   SELECT
     APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
     APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0;
   ```

10. **Compute the absolute difference between median revenue and expenses for 2012:**
    ```sql
    SELECT
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
    ```

11. **Compute the median difference for 2013 data:**
    ```sql
    SELECT
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
    ```

12. **List the total number of filings per year from 2012 to 2017:**
    ```sql
    SELECT '2012' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    UNION ALL
    SELECT '2013' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    UNION ALL
    SELECT '2014' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    UNION ALL
    SELECT '2015' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    UNION ALL
    SELECT '2016' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    UNION ALL
    SELECT '2017' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2017`;
    ```

13. **Calculate median differences for each year (example for 2014):**
    ```sql
    SELECT '2014' AS year,
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
    ```

14. **Select filings from 2015 where revenue is less than $500,000:**
    ```sql
    SELECT totrevenue, totfuncexpns
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totrevenue < 500000
    LIMIT 100;
    ```

15. **Identify if there are any filings with negative revenue or expenses in 2017:**
    ```sql
    SELECT COUNT(*) AS negative_entries
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue < 0 OR totfuncexpns < 0;
    ```

These queries are designed to explore the relevant data and understand the distributions of total revenue and functional expenses for organizations filing IRS 990 forms from 2012 through 2017. By calculating the medians and their absolute differences for each year, we can determine which three years have the smallest differences as required by the task.Query:
SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992
Query:
SELECT DISTINCT tax_pd
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   LIMIT 100;
Answer:
tax_pd
201112
201205
201106
201012
201206
201105
201109
201110
201210
201103
201104
201107
201108
201111
201201
201202
201203
201204
201207
201208
201006
201209
201008
201102
201101
201003
201009
200906
200908
200912
201010
200812
201011
200909
201002
200902
201005
200903
201004
200907
201007
200910
201001
200911
200905
200901
200805
200904
201211
200412
200806
200808
200512
200604
200807
200809
200612
200706
200712
200810
Query:
SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992
Query:
SELECT totrevenue, totfuncexpns
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0
   LIMIT 100;
Answer:
totrevenue,totfuncexpns
615689,411785
123398,32238
339132,311067
184876,207063
194999,297198
208324,212964
110370,107165
294294,297732
252440,284339
231889,187672
816862,815407
374605,389064
2176110,151050
57648,59937
250907,284529
326516,359690
565417,618228
6191901,6218539
1259941,1250365
368550,324536
6263,8214
887518,1001492
554010,497729
1160268,1271154
217092,208543
402615,230297
267402,251667
142654,117215
3985749,4102352
1014987,1021620
214898,160544
132489,160207
404491,391474
6853798,6799007
48737,43220
205291,225232
239009,190988
799303,270969
68693,35754
41147,36410
101615,96660
117983,68471
592366,513896
246612,244557
242673,233804
245441,223841
123757,141771
106452,79804
634918,362207
1193694,1303953
391600,294020
2334422,2485470
247695,216432
162491,172476
4679679,4859870
3711792,3472054
235470,226950
2898551,5896441
153916,169319
527281,620516
1104162,1123922
19557978,17211156
1951296,1873849
4805178,5291470
652855,654718
2125329,1863484
13852889,8561969
1192197,1208690
42612778,42332740
2812483,2529356
160381,284045
1857316,1769797
346849,310173
2727976,3553978
7554730,8188232
774388,755686
11156787,5718623
1250968,1486237
21248493,18429612
493438,421330
24018285,25819923
24409280,22917045
2730287,2323595
22424056,18408798
10006131,4267681
2221319,3254942
105775719,117647554
19299093,19402388
17980075,11696894
70036549,64883363
33508177,9120070
3183041,3410875
2788432,2870740
205587007,231386633
997037763,852695208
2783164,3971812
49034556,43567769
694874,635558
21623111,12041922
2458179,3641992
Query:
SELECT COUNT(*) AS total_filings
   FROM `bigquery-public-data.irs_990.irs_990_2012`;
Answer:
total_filings
294019
Query:
SELECT COUNT(*) AS valid_filings
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0;
Answer:
valid_filings
288114
Query:
SELECT APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0;
Answer:
median_revenue
404346
Query:
SELECT APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totfuncexpns > 0;
Answer:
median_expenses
390496
Query:
SELECT
     APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
     APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
   FROM `bigquery-public-data.irs_990.irs_990_2012`
   WHERE totrevenue > 0 AND totfuncexpns > 0;
Answer:
median_revenue,median_expenses
406380,396976
Query:
SELECT
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
Answer:
median_difference
9404
Query:
SELECT
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
Answer:
median_difference
19113
Query:
SELECT '2012' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2012`
    UNION ALL
    SELECT '2013' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2013`
    UNION ALL
    SELECT '2014' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    UNION ALL
    SELECT '2015' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    UNION ALL
    SELECT '2016' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2016`
    UNION ALL
    SELECT '2017' AS year, COUNT(*) AS total_filings
    FROM `bigquery-public-data.irs_990.irs_990_2017`;
Answer:
year,total_filings
2013,289603
2012,294019
2016,307483
2017,300910
2015,294782
2014,299405
Query:
SELECT '2014' AS year,
      ABS(
        APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] -
        APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)]
      ) AS median_difference
    FROM `bigquery-public-data.irs_990.irs_990_2014`
    WHERE totrevenue > 0 AND totfuncexpns > 0;
Answer:
year,median_difference
2014,32436
Query:
SELECT totrevenue, totfuncexpns
    FROM `bigquery-public-data.irs_990.irs_990_2015`
    WHERE totrevenue > 0 AND totrevenue < 500000
    LIMIT 100;
Answer:
totrevenue,totfuncexpns
1160,32586
6,0
1414,33526242
368617,444400
53293,7484611
17036,21083
81202,7531010
462,462
36215,603782
322352,1045792
198315,5573
131936,131936
1515,126328
421996,32196
26404,2944366
70001,69109
132742,349397
15553,0
190501,193047
282192,0
498926,394158
208843,234425
128645,0
4620,4925609
316895,5670451
241068,644276
305774,1956037
90000,0
108203,284636
275358,476267
153933,5572
325276,5850946
7340,7847330
106671,749238
447535,5108131
58224,750138
241127,0
378241,336465
485768,425039
429087,5640
179283,2982220
187644,228971
423304,31902
352044,60884
103317,16942895
291063,600950
150,1773102
338892,299545
500,5343
172050,1134409
19193,1676798
491728,97437
480803,93147
458158,501872
245792,4411317
130911,56686
93954,259448
20018,1716302
451279,399175
48950,63522
477156,10802483
336675,2157215
85946,8536843
219593,1987601
117999,117999
90721,53543
214095,2406197
12400,5607
8400,5675
361985,4214659
360512,1917811
267083,686062
2675,149846
349715,342018
2977,10444212
478148,477930
128764,419817
133002,177596
64461,220252
187969,1867570
159310,2253503
27043,1616311
1132,17180
8432,1952373
238400,1846139
128691,1159876
440887,668544
252600,3256409
301910,1599808
424657,451159
209039,417997
216685,44703
258433,21815
392127,923730
4,0
413608,1956672
78278,4142243
30259,12527778
266204,297283
31000,0
Query:
SELECT COUNT(*) AS negative_entries
    FROM `bigquery-public-data.irs_990.irs_990_2017`
    WHERE totrevenue < 0 OR totfuncexpns < 0;
Answer:
negative_entries
1498
End Exploring Related Columns
Task: Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'irs_990': ['irs_990_2012', 'irs_990_2013', 'irs_990_2014', 'irs_990_2015', 'irs_990_2016', 'irs_990_2017', 'irs_990_ein', 'irs_990_ez_2012', 'irs_990_ez_2013', 'irs_990_ez_2014', 'irs_990_ez_2015', 'irs_990_ez_2016', 'irs_990_ez_2017', 'irs_990_pf_2012', 'irs_990_pf_2013', 'irs_990_pf_2014', 'irs_990_pf_2015', 'irs_990_pf_2016']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-28 02:47:58 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:47:58 - root - INFO - ```sql
WITH per_year_stats AS (
  SELECT
    '2012' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2013' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2014' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2015' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2016' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2017' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ABS(median_revenue - median_expenses) AS Difference
FROM per_year_stats
ORDER BY Difference ASC
LIMIT 3;
```
2025-01-28 02:48:00 - root - INFO - itercount: 1
2025-01-28 02:48:00 - root - INFO - 0
2025-01-28 02:48:00 - root - INFO - results: 
Year,Difference
2012,9404
2013,19113
2017,23371


2025-01-28 02:48:00 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,9404
2013,19113
2017,23371
Current sql:
WITH per_year_stats AS (
  SELECT
    '2012' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2013' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2014' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2015' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2016' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2017' AS Year,
    APPROX_QUANTILES(totrevenue, 2)[OFFSET(1)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 2)[OFFSET(1)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ABS(median_revenue - median_expenses) AS Difference
FROM per_year_stats
ORDER BY Difference ASC
LIMIT 3;
2025-01-28 02:48:33 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:48:33 - root - INFO - ```sql
WITH per_year_stats AS (
  SELECT
    '2012' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2013' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2014' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2015' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2016' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2017' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(median_revenue - median_expenses), 4) AS Difference
FROM per_year_stats
ORDER BY Difference ASC
LIMIT 3;
```
2025-01-28 02:48:35 - root - INFO - itercount: 2
2025-01-28 02:48:35 - root - INFO - 0
2025-01-28 02:48:35 - root - INFO - results: 
Year,Difference
2012,20788.0
2013,21424.0
2017,26814.0


2025-01-28 02:48:35 - root - INFO - Please check the answer again by reviewing Which three years in 2012-2017 have the smallest absolute difference between median revenue and median functional expenses for organizations filing IRS 990 forms? Please output three years and respective differences., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Year,Difference
year1:int,difference1:float
year2:int,difference2:float
year3:int,difference3:float
(Attention: answer in three rows)
```

**Explanation:**

The table above represents the three years between 2012 and 2017 that have the smallest absolute difference between the median revenue (`totrevenue`) and median functional expenses (`totfuncexpns`) for organizations filing IRS 990 forms. To arrive at these results:

1. **Data Extraction:** For each year from 2012 to 2017, extract the `totrevenue` and `totfuncexpns` columns from the corresponding `irs_990_<year>` table in the `bigquery-public-data.irs_990` dataset.

2. **Calculate Medians:** Compute the median `totrevenue` and median `totfuncexpns` for each year.

3. **Compute Differences:** Calculate the absolute difference between these median values for each year.

4. **Identify Years with Smallest Differences:** Sort the years based on the absolute differences calculated and select the three years with the smallest values.

This approach identifies the years where organizations had median revenues and expenses that were most closely aligned, indicating a balance between income and spending for those filing IRS 990 forms in those particular years. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Year,Difference
2012,20788.0
2013,21424.0
2017,26814.0
Current sql:
WITH per_year_stats AS (
  SELECT
    '2012' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2013' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2014' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2015' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2016' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    '2017' AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(median_revenue - median_expenses), 4) AS Difference
FROM per_year_stats
ORDER BY Difference ASC
LIMIT 3;
2025-01-28 02:49:27 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-28 02:49:27 - root - INFO - ```sql
WITH per_year_stats AS (
  SELECT
    2012 AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2012`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2013 AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2013`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2014 AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2014`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2015 AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2015`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2016 AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2016`
  WHERE totrevenue > 0 AND totfuncexpns > 0
  UNION ALL
  SELECT
    2017 AS Year,
    APPROX_QUANTILES(totrevenue, 1001)[OFFSET(500)] AS median_revenue,
    APPROX_QUANTILES(totfuncexpns, 1001)[OFFSET(500)] AS median_expenses
  FROM `bigquery-public-data.irs_990.irs_990_2017`
  WHERE totrevenue > 0 AND totfuncexpns > 0
)
SELECT
  Year,
  ROUND(ABS(median_revenue - median_expenses), 4) AS Difference
FROM per_year_stats
ORDER BY Difference ASC
LIMIT 3;
```
2025-01-28 02:49:29 - root - INFO - itercount: 3
2025-01-28 02:49:29 - root - INFO - 0
2025-01-28 02:49:29 - root - INFO - Total iteration counts: 3
