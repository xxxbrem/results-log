2025-01-25 11:18:08 - openai._base_client - INFO - Retrying request to /chat/completions in 0.427034 seconds
2025-01-25 11:19:35 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:19:38 - root - INFO - SQL:
SELECT DISTINCT assay_id
    FROM `bigquery-public-data.ebi_chembl.activities`
    LIMIT 100;
Results:
assay_id
24932
18154
17994
18254
2210167
1579804
815262
58389
1702184
1627159
2052851
619143
584926
704564
748210
574427
693160
496535
765171
736338
506792
554723
1537140
1360612
1616129
882175
1351359
1455000
861441
1716758
2034324
1672587
1619647
1932959
2156564
2116767
864774
1753597
574037
1690063
1629103
1738956
702633
1672586
1919524
1855213
1766640
976530
732034
1346867
1492977
1932901
2217560
493543
1740912
2024821
1572691
1716654
595233
2114548
1477732
760272
546157
919424
1449574
931107
1514130
1366078
1503593
987238
963584
1688273
1657249
1840321
1657227
1688328
1511266
907987
2055463
1683506
640397
907165
506154
611682
1914734
957545
1796613
131428
325099
197405
325037
1668651
1812149
774682
774688
774705
774680
774698
774655
1444590

2025-01-25 11:21:09 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:21:09 - root - INFO - The error you're encountering is due to a data type mismatch. In the `compound_properties` table, the `heavy_atoms` column is stored as a **STRING** type, not as an integer. When you use the `BETWEEN` operator, it expects the expressions to be of the same numeric type. Comparing a `STRING` to `INT64` values without casting leads to the error you've observed.

To fix this error, you need to **cast** the `heavy_atoms` column to an integer type before performing the comparison. Here's how you can modify your query:

```sql
SELECT molregno, CAST(heavy_atoms AS INT64) AS heavy_atoms
FROM `bigquery-public-data.ebi_chembl.compound_properties`
WHERE CAST(heavy_atoms AS INT64) BETWEEN 10 AND 15
LIMIT 100;
```

Alternatively, if there might be non-integer or null values in the `heavy_atoms` column that could cause casting errors, you can use `SAFE_CAST` to handle such cases gracefully:

```sql
SELECT molregno, SAFE_CAST(heavy_atoms AS INT64) AS heavy_atoms
FROM `bigquery-public-data.ebi_chembl.compound_properties`
WHERE SAFE_CAST(heavy_atoms AS INT64) BETWEEN 10 AND 15
LIMIT 100;
```

This ensures that any values in `heavy_atoms` that cannot be converted to an integer are treated as `NULL`, preventing runtime errors.

---

Here's the corrected query with results:

```sql
SELECT molregno, CAST(heavy_atoms AS INT64) AS heavy_atoms
FROM `bigquery-public-data.ebi_chembl.compound_properties`
WHERE CAST(heavy_atoms AS INT64) BETWEEN 10 AND 15
LIMIT 100;
```

---

**Explanation of the Error:**

- **Error Message:** No matching signature for operator BETWEEN
- **Cause:** The `heavy_atoms` column is of type `STRING`, and you're comparing it to integer values (`10` and `15`). The `BETWEEN` operator requires operands of the same type.
- **Solution:** Cast the `heavy_atoms` column to `INT64` using `CAST(heavy_atoms AS INT64)` or `SAFE_CAST`.

---

**Updated SQL Queries Incorporating the Fix:**

1. **Retrieve distinct assay IDs from the activities table:**

    ```sql
    SELECT DISTINCT assay_id
    FROM `bigquery-public-data.ebi_chembl.activities`
    LIMIT 100;
    ```

2. **List molecules (molregno) with heavy atom counts between 10 and 15, casting `heavy_atoms` to INT64:**

    ```sql
    SELECT molregno, CAST(heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.compound_properties`
    WHERE CAST(heavy_atoms AS INT64) BETWEEN 10 AND 15
    LIMIT 100;
    ```

3. **Find activities with non-null standard values and pChEMBL values over 10:**

    ```sql
    SELECT activity_id, molregno, standard_value, pchembl_value
    FROM `bigquery-public-data.ebi_chembl.activities`
    WHERE standard_value IS NOT NULL
      AND pchembl_value > 10
    LIMIT 100;
    ```

4. **Identify activities along with their assay IDs and standard types:**

    ```sql
    SELECT activity_id, assay_id, standard_type
    FROM `bigquery-public-data.ebi_chembl.activities`
    LIMIT 100;
    ```

5. **Count the number of activities per molecule in each assay to find those with fewer than 5 activities:**

    ```sql
    SELECT assay_id, molregno, COUNT(*) AS activity_count
    FROM `bigquery-public-data.ebi_chembl.activities`
    GROUP BY assay_id, molregno
    HAVING COUNT(*) < 5
    LIMIT 100;
    ```

6. **Find duplicate activities for each molecule in each assay (assuming duplicates have the same standard value and relation):**

    ```sql
    SELECT assay_id, molregno, standard_value, standard_relation, COUNT(*) AS duplicate_count
    FROM `bigquery-public-data.ebi_chembl.activities`
    GROUP BY assay_id, molregno, standard_value, standard_relation
    HAVING COUNT(*) > 1
    LIMIT 100;
    ```

7. **Retrieve activities with their document IDs to link to publication information:**

    ```sql
    SELECT activity_id, doc_id, molregno
    FROM `bigquery-public-data.ebi_chembl.activities`
    WHERE doc_id IS NOT NULL
    LIMIT 100;
    ```

8. **Join activities with documents to get publication year and journal:**

    ```sql
    SELECT a.activity_id, a.molregno, d.year, d.journal
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.docs` AS d
    ON a.doc_id = d.doc_id
    LIMIT 100;
    ```

9. **Get canonical SMILES for molecules to be used in UUID generation:**

    ```sql
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL
    LIMIT 100;
    ```

10. **Combine activities, compound properties, and documents to find all necessary information for the task, casting data types as needed:**

    ```sql
    SELECT
      a.activity_id,
      a.assay_id,
      a.molregno,
      CAST(p.heavy_atoms AS INT64) AS heavy_atoms,
      a.standard_value,
      a.standard_relation,
      a.pchembl_value,
      d.doc_id,
      d.year,
      d.journal,
      d.first_page
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS p
      ON a.molregno = p.molregno
    JOIN `bigquery-public-data.ebi_chembl.docs` AS d
      ON a.doc_id = d.doc_id
    WHERE SAFE_CAST(p.heavy_atoms AS INT64) BETWEEN 10 AND 15
      AND a.standard_value IS NOT NULL
      AND a.pchembl_value > 10
    LIMIT 100;
    ```

    - **Note:** Using `SAFE_CAST` on `p.heavy_atoms` in the `WHERE` clause ensures that any non-integer values don't cause errors and are treated as `NULL`.

---

**Understanding the Data Types:**

- In BigQuery, it's essential to ensure that data types are compatible when performing operations like comparisons or mathematical calculations.
- If you attempt to compare a `STRING` to an `INT64` without casting, you'll receive a data type error.
- Always check the schema of the tables you're querying to understand the data types of each column. You can inspect the schema using the BigQuery UI or by querying the `INFORMATION_SCHEMA` (if permitted).

**Additional Guidance:**

- When dealing with large datasets and complex queries, consider testing your queries on smaller subsets first to ensure correctness.
- Utilize `SAFE_CAST` when there's a possibility of encountering values that can't be cast to the desired type, as it prevents runtime errors and returns `NULL` for problematic values.
- Remember to alias your casted columns (e.g., `CAST(heavy_atoms AS INT64) AS heavy_atoms`) so that the result set has understandable column names.

---

Feel free to let me know if you have any more questions or need further assistance with other queries or data exploration steps.
2025-01-25 11:21:56 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:21:56 - root - INFO - SQL:
SELECT molregno, CAST(heavy_atoms AS INT64) AS heavy_atoms
FROM `bigquery-public-data.ebi_chembl.compound_properties`
WHERE CAST(heavy_atoms AS INT64) BETWEEN 10 AND 15
LIMIT 100;
Results:
molregno,heavy_atoms
182193,14
1160340,13
1294143,15
1674518,12
305967,15
483099,15
2426064,10
1294222,15
1940449,11
1314606,14
1619965,15
130320,14
171100,14
1287729,13
1301308,13
1322725,15
1494138,15
1672706,15
505881,15
2269258,14
1678124,14
377605,14
1674938,10
1819906,13
2474592,15
13570,15
481624,14
1303142,11
498105,11
1676200,15
2523647,14
323348,11
1160318,15
322485,12
1825886,14
1494407,15
323136,12
1160324,15
1296716,14
1489024,14
2377228,12
498190,14
2214081,12
1082102,13
1325750,13
832643,15
1102374,13
829811,14
361880,11
1160322,14
915804,10
1476836,14
1677187,12
13540,13
175105,15
446330,10
42652,12
1674960,15
305982,15
464938,14
1674198,13
2279427,15
1041793,15
322238,12
43292,12
204524,14
1287443,15
396902,12
1675866,10
896268,13
1160056,11
1486374,10
1678099,15
159518,12
573522,13
570639,10
929616,15
49260,13
2512512,14
744684,15
1822380,12
2208751,13
2125885,15
573523,14
374944,15
1120586,15
31838,14
1229486,15
2475010,15
1289563,13
1086009,15
405082,14
2231462,13
216001,15
272839,14
1739824,10
576108,14
1834170,13
1763714,14
1737325,15

2025-01-25 11:21:58 - root - INFO - SQL:
SELECT activity_id, molregno, standard_value, CAST(pchembl_value AS FLOAT64) AS pchembl_value
   FROM `bigquery-public-data.ebi_chembl.activities`
   WHERE standard_value IS NOT NULL
     AND CAST(pchembl_value AS FLOAT64) > 10
   LIMIT 100
Results:
activity_id,molregno,standard_value,pchembl_value
1083401,288175,0.02344,10.63
10876093,1339142,0.02512,10.6
1142054,42858,0.02884,10.54
22990965,2513639,0.0195,10.71
12490248,1489145,0.04467,10.35
6324469,366860,0.05012,10.3
2927281,297056,0.06457,10.19
24697699,2775217,0.08913,10.05
24827722,3012,0.06918,10.16
23306527,2564394,0.03802,10.42
5161720,1061285,0.03162,10.5
19108713,2348605,0.07413,10.13
1117606,550232,0.02512,10.6
1185916,64134,0.06761,10.17
1798591,472845,0.08511,10.07
902556,1341082,0.06607,10.18
786976,122733,0.02089,10.68
3441188,701423,0.01,11.0
20682356,2479182,0.03,10.52
18901548,2444394,0.01,11.0
18900933,2276502,0.07,10.15
18900977,2453595,0.08,10.1
18901547,2388728,0.02,10.7
18879690,2409771,0.019,10.72
1454751,310215,0.09,10.05
7844709,1250535,0.024,10.62
13934025,1619622,0.07,10.15
12634477,1513282,0.013,10.89
1461396,312186,0.02,10.7
715227,86292,0.037,10.43
841488,61181,0.07,10.15
1266572,1386459,0.09,10.05
1286417,186845,0.097,10.01
489432,100559,0.04,10.4
1198202,155348,0.025,10.6
1282679,28220,0.013,10.89
2619859,495682,0.051,10.29
1149047,677806,0.07,10.15
5220425,1070012,0.02,10.7
1508691,321345,0.014,10.85
1896222,386533,0.046,10.34
5148288,1063641,0.017,10.77
2362867,470329,0.041,10.39
15106732,1823871,0.011,10.96
610311,1384814,0.018,10.74
15770896,1972030,0.015,10.82
3120465,597293,0.06,10.22
526638,149402,0.073,10.14
15770804,1972043,0.022,10.66
17703895,2100444,0.026,10.59
17717247,2141436,0.021,10.68

2025-01-25 11:21:59 - root - INFO - SQL:
SELECT activity_id, assay_id, standard_type
   FROM `bigquery-public-data.ebi_chembl.activities`
   LIMIT 100
Results:
activity_id,assay_id,standard_type
198050,20581,D
205470,20581,D
1464260,302096,E
19257248,1901027,F
1993498,450386,F
2360974,512235,F
13341739,964983,F
13341842,964983,F
20605018,1971869,F
22418091,2019104,F
1717975,357339,F
24786611,2217847,F
14739499,1362999,F
17957048,1644921,F
1770262,391804,F
18671508,1777775,K
2502124,544326,K
18224690,1697680,K
22413973,2018490,K
22435597,2023642,K
18738570,1789911,K
524093,17989,P
14655457,1351391,AI
6262527,753650,AQ
105152,6532,CC
983681,207471,CF
24514833,2171835,CI
24899464,2246021,CI
23204128,2112485,CI
23215405,2114477,CI
15250306,1478357,CI
15250311,1476077,CI
15235120,1475389,CI
18562993,1766782,CI
18383322,1730879,CI
18383492,1730892,CI
18383388,1730884,CI
24899484,2246031,CI
15250241,1478198,CI
18221655,1696965,CI
18962574,1834581,CI
18383314,1730879,CI
18079656,1667393,CI
18508119,1756259,CI
18025141,1657207,CI
18383446,1730889,CI
23124275,2098063,CI
18383491,1730892,CI
18977849,1838370,CI
6183652,744195,CL
3240915,625047,CL
2676790,577246,CL
1730484,331973,CL
3240914,625047,CL
15651961,1505879,CL
13285426,956402,CL
13335803,965764,CL
15165681,1465073,CL
18069051,1664997,CL
15626024,1500465,CL
2239457,512154,CL
15246571,1477386,CL
18504454,1755166,CL
18534531,1760918,CL
16649842,1589661,CL
12085997,859382,Cp
10996184,834147,Cp
10941644,827058,Cp
12175045,882826,Cp
18444605,1742337,Cp

2025-01-25 11:22:03 - root - INFO - SQL:
SELECT assay_id, molregno, COUNT(*) AS activity_count
   FROM `bigquery-public-data.ebi_chembl.activities`
   GROUP BY assay_id, molregno
   HAVING COUNT(*) < 5
   LIMIT 100
Results:
assay_id,molregno,activity_count
20581,172545,1
964983,1565365,1
1777775,2308656,1
2023642,2510710,1
2112485,2572572,1
2114477,2560307,1
1478198,1844385,1
625047,623743,1
1465073,1834015,1
859382,1429303,1
834147,1361420,1
609670,382246,1
1301343,1626878,1
788370,1263965,1
1754173,446107,1
1847386,2380056,1
700653,1058383,1
555292,33134,1
2099110,2557039,1
566911,457897,1
772670,1179544,1
658233,701058,1
675363,710251,1
553636,56432,1
537781,512798,1
571219,557853,1
653346,2261,1
697343,6012,1
1547146,2059238,1
574038,390877,1
695118,1052612,1
1339211,1733684,1
1515671,1961516,1
1438713,1823439,1
861468,1430342,1
2222807,1442759,1
1780498,2324320,1
1636928,477344,1
1509263,1956103,1
1517686,1964140,1
1544346,2055585,2
2101126,2558320,1
2246584,1949867,1
1755419,1370456,1
1808100,2428812,1
1734802,968929,1
1891164,797310,1
1648136,2228843,1
2261988,2782168,1
2166266,2721627,1
2166334,2728681,1
1847379,2423437,1
1471433,72873,1
2199162,1413838,1
976481,1576120,1
873702,1442836,1
2101126,2540742,1
1510740,1957913,1
2081115,2513911,1
2166274,2725358,1
1812509,2443329,1
2223795,2753355,1
1437765,1794491,1
1667967,2231984,1
595233,15472,1
1447781,1783469,1
1875423,2362808,1
485838,484653,1
1511130,1958184,1
631858,627735,1
683962,712348,1
760268,1169288,1
632426,625739,1
1449856,1787656,1
830428,905858,1
892620,569257,1

2025-01-25 11:22:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:22:42 - root - INFO - ```sql
SELECT assay_id, molregno, standard_value, standard_relation, COUNT(*) AS duplicate_count
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE standard_value IS NOT NULL AND standard_relation IS NOT NULL
GROUP BY assay_id, molregno, standard_value, standard_relation
HAVING COUNT(*) > 1
LIMIT 100;
```
2025-01-25 11:23:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:23:42 - root - INFO - SQL:
SELECT assay_id, molregno, standard_value, standard_relation, COUNT(*) AS duplicate_count
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE standard_value IS NOT NULL AND standard_relation IS NOT NULL
GROUP BY assay_id, molregno, standard_value, standard_relation
HAVING COUNT(*) > 1
LIMIT 100;
Results:
assay_id,molregno,standard_value,standard_relation,duplicate_count
1640262,94571,1.1,=,13
1640262,31241,0.9,=,9
1640263,3859,1.9,=,16
1640263,1377887,2.1,=,3
1908474,2369540,3,=,2
809185,1308234,1258.93,=,2
809219,1317467,3981.07,>,2
809285,1293875,5011.87,=,2
809186,88232,2511.89,=,2
809139,438153,6309.57,=,2
809177,1291395,7943.28,>,2
521905,500512,100000,<,2
521930,500512,100000,<,2
1642763,2197071,4,<,2
1581710,2337609,100,=,2
1998115,1916792,100000,>,2
1998107,1908591,100000,>,2
1998114,1855905,30199.52,>,2
1998131,1886169,29512.09,>,2
1998103,1864784,50118.72,>,2
1998124,1920254,61659.5,>,2
1810083,2374223,100000,<,2
1907586,2457603,100000,<,2
1733619,2274706,100000,<,2
2144902,2676272,0,=,2
140500,188731,3.262,=,2
141402,188616,0.677,=,2
580478,560820,50,=,3
53931,23155,5.67,=,2
230223,27613,13,>,3
2069962,2039319,0,=,7
2069963,475598,1,=,5
2069959,881506,1,=,8
2069959,1017734,1,=,9
2069960,457258,1,=,4
2069961,31153,0,=,8
2069959,5371,0,=,10
2069959,2511996,0,=,7
2069959,131689,0,=,9
2069959,2222667,0,=,9
2069960,165078,1,=,6
2069962,1448219,0,=,8
2069962,579824,0,=,8

2025-01-25 11:23:44 - root - INFO - SQL:
SELECT activity_id, doc_id, molregno
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE doc_id IS NOT NULL AND doc_id != ''
LIMIT 100
Results:
activity_id,doc_id,molregno
400977,7417,283276
794406,16917,71172
1701575,30911,343251
13396471,74443,1573031
12637343,71750,1514445
12158150,66595,1439464
18504295,108040,2295532
17976504,103791,2207621
19435805,114211,2347062
1806663,34872,344830
2525916,47075,519898
1438653,20648,306007
332642,7408,279527
18704824,109279,2324239
15662164,92979,44752
18086941,104682,1442794
657519,10183,62237
861547,7685,270463
338886,11063,92405
1157210,6545,219000
1157203,6545,218764
560071,15592,188591
16790180,101591,2106746
858689,11826,53624
1066743,1181,24135
1079735,1181,24641
18383410,107067,2263184
487542,15204,230820
15250312,91757,1844385
15250258,91757,1844385
16599444,99393,315023
15250247,91757,1844385
15250272,91757,1844385
15107936,89774,1819359
18977791,111251,2457794
18973907,111220,2381467
18383306,107067,2279019
18982714,111296,2374995
18079815,104615,2206917
22762152,118404,1296181
18079637,104615,2228187
18221676,105751,436875
23215408,120598,2543852
22912350,119488,2505171
23215427,120598,2564639
16878655,102271,1449226
23277653,121052,444971
18383580,107067,2272237
18383415,107067,2264310
23215373,120598,2564639
18973908,111220,2381467
18383507,107067,2264310
24758334,123291,2762690
19100591,112106,1792869
23204169,120503,2561546
16599456,99393,11305
7850996,59430,1251134
3217152,50227,611678
6157277,57093,1140104
2053167,37915,416572
2641203,46685,480639
12105294,65939,1431808
10870265,61874,1137713
15201615,91413,1837743
2156285,38671,429724
2509438,47075,520034
6162815,57127,1138985
24753475,123227,2763484
16574656,99149,2083607
22921071,119548,2523550
1116791,15599,191751
13979068,77448,1612559
790046,9221,3829
2478087,44723,512662

2025-01-25 11:24:44 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:24:44 - root - INFO - ```sql
SELECT activity_id, doc_id, molregno
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE doc_id IS NOT NULL AND doc_id != ''
LIMIT 100;
```

---

```sql
SELECT a.activity_id, a.molregno, d.year, d.journal
FROM `bigquery-public-data.ebi_chembl.activities` AS a
JOIN `bigquery-public-data.ebi_chembl.docs` AS d
ON CAST(a.doc_id AS STRING) = d.doc_id
LIMIT 100;
```

---

```sql
SELECT molregno, canonical_smiles
FROM `bigquery-public-data.ebi_chembl.compound_structures`
WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
LIMIT 100;
```

---

```sql
SELECT
  a.activity_id,
  a.assay_id,
  a.molregno,
  CAST(p.heavy_atoms AS INT64) AS heavy_atoms,
  a.standard_value,
  a.standard_relation,
  CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
  d.doc_id,
  d.year,
  d.journal,
  d.first_page
FROM `bigquery-public-data.ebi_chembl.activities` AS a
JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS p
  ON a.molregno = p.molregno
JOIN `bigquery-public-data.ebi_chembl.docs` AS d
  ON CAST(a.doc_id AS STRING) = d.doc_id
WHERE CAST(p.heavy_atoms AS INT64) BETWEEN 10 AND 15
  AND a.standard_value IS NOT NULL AND a.standard_value != ''
  AND CAST(a.pchembl_value AS FLOAT64) > 10
LIMIT 100;
```

**Explanation:**

- **First Query:**

  - Ensured that `doc_id` is not only `NOT NULL` but also not an empty string (`doc_id != ''`).

- **Second Query:**

  - Corrected the data type mismatch by casting `a.doc_id` to `STRING` to match the data type of `d.doc_id`.
  - The error occurred because `a.doc_id` is of type `INT64`, and `d.doc_id` is of type `STRING`. Casting `a.doc_id` to `STRING` resolves the issue.

- **Third Query:**

  - Added a check to ensure `canonical_smiles` is not an empty string (`canonical_smiles != ''`) in addition to being `NOT NULL`.

- **Fourth Query:**

  - In the join condition with the `docs` table, cast `a.doc_id` to `STRING` to match the data type of `d.doc_id`.
  - Confirmed that `a.standard_value` is not an empty string (`a.standard_value != ''`) to avoid potential issues with string comparisons.

**Additional Notes:**

- **Data Type Casting:**

  - When performing joins or comparisons, it's crucial that the data types on both sides of the operator match.
  - Casting `a.doc_id` to `STRING` is appropriate here because `d.doc_id` is of type `STRING`, and converting an `INT64` to `STRING` is straightforward and safe.

- **Handling Empty Strings:**

  - Including a condition to exclude empty strings (`!= ''`) ensures that only valid, non-empty values are considered in the queries.
  - This practice helps prevent unexpected results or errors due to missing or incomplete data.

- **Consistency in Data Types:**

  - In the fourth query, ensure consistency by checking and casting other relevant fields if necessary.
  - For example, if `a.molregno` and `p.molregno` are of the same type, no casting is needed. However, always verify the data types in the schema.

---

By making these adjustments, the queries should execute without data type mismatch errors, and you'll be able to retrieve the desired data.
2025-01-25 11:25:38 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:25:38 - root - INFO - SQL:
SELECT activity_id, doc_id, molregno
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE doc_id IS NOT NULL AND doc_id != ''
LIMIT 100;
Results:
activity_id,doc_id,molregno
400977,7417,283276
794406,16917,71172
1701575,30911,343251
13396471,74443,1573031
12637343,71750,1514445
12158150,66595,1439464
18504295,108040,2295532
17976504,103791,2207621
19435805,114211,2347062
1806663,34872,344830
2525916,47075,519898
1438653,20648,306007
332642,7408,279527
18704824,109279,2324239
15662164,92979,44752
18086941,104682,1442794
657519,10183,62237
861547,7685,270463
338886,11063,92405
1157210,6545,219000
1157203,6545,218764
560071,15592,188591
16790180,101591,2106746
858689,11826,53624
1066743,1181,24135
1079735,1181,24641
18383410,107067,2263184
487542,15204,230820
15250312,91757,1844385
15250258,91757,1844385
16599444,99393,315023
15250247,91757,1844385
15250272,91757,1844385
15107936,89774,1819359
18977791,111251,2457794
18973907,111220,2381467
18383306,107067,2279019
18982714,111296,2374995
18079815,104615,2206917
22762152,118404,1296181
18079637,104615,2228187
18221676,105751,436875
23215408,120598,2543852
22912350,119488,2505171
23215427,120598,2564639
16878655,102271,1449226
23277653,121052,444971
18383580,107067,2272237
18383415,107067,2264310
23215373,120598,2564639
18973908,111220,2381467
18383507,107067,2264310
24758334,123291,2762690
19100591,112106,1792869
23204169,120503,2561546
16599456,99393,11305
7850996,59430,1251134
3217152,50227,611678
6157277,57093,1140104
2053167,37915,416572
2641203,46685,480639
12105294,65939,1431808
10870265,61874,1137713
15201615,91413,1837743
2156285,38671,429724
2509438,47075,520034
6162815,57127,1138985
24753475,123227,2763484
16574656,99149,2083607
22921071,119548,2523550
1116791,15599,191751
13979068,77448,1612559
790046,9221,3829
2478087,44723,512662

2025-01-25 11:25:40 - root - INFO - SQL:
SELECT CAST(molregno AS INT64) AS molregno, canonical_smiles
FROM `bigquery-public-data.ebi_chembl.compound_structures`
WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
LIMIT 100
Results:
molregno,canonical_smiles
1822592,CCn1nccc1Oc1cc(CCCCOC)cnc1NC(=O)NC
128,O=c1oc2c(F)c(F)ccc2c2cc(O)c(O)cc12
6538,COc1c(C)cnc(C[S+]([O-])c2nc3ccccc3n2CCN2CCOCC2)c1C
9678,C/C=C(\NC(=O)C(CCC)CCC)C(=O)O
10298,CCNS(=O)(=O)c1ccc2c(c1)C(n1ccccc1=O)=CC(C)(C)O2
1833716,CCCCCCCCCCCCCCCC(=O)Oc1ccc(/C=C2\CCC/C(=C\c3ccc(OC(=O)CCCCCCCCCCCCCCC)c(OC)c3)C2=O)cc1OC
1834533,CNC(=O)[C@@]12C[C@@H]1[C@@H](n1cnc3c(NC)nc(C#Cc4ccsc4)nc31)[C@H](O)[C@@H]2O
1838408,CCOC(=O)c1ccc2cc(C(=O)/C=C/c3ccccc3)sc2c1
1840256,Fc1cccc(-n2cc(NCCN3CCOCC3)nn2)c1
24961,CC[C@@H](C)[C@@H](NC(=O)[C@@H](C)NC(=O)[C@@H](CCC(=O)O)NC(=O)[C@@H](CC(C)C)NC(=O)[C@@H](Cc1ccccc1)NC(=O)[C@H](N)CCSC)C(=O)N1CCC[C@H]1C(=O)N[C@@H](CCSC)C(=O)O
1861143,CCn1cc(Cl)c(C(=O)NCc2cnn(C)c2)n1
39040,CCc1cc(-c2cc(C(F)(F)F)nn2-c2ccc(S(N)(=O)=O)cc2)ccc1OC
42807,CC(=O)c1c(-c2ccc(Cl)cc2)c(-c2ccc(Cl)cc2)nn(CCCCCCN2C(=O)c3ccccc3C2=O)c1=O
1886886,CN1C(=O)CC(c2ccccc2)C12CCN(c1ncccn1)CC2
1892689,CCC(C)N(Cc1cccnc1)C(=O)c1ccc(OC)cc1O
64248,COc1ccc(S(=O)(=O)C(CCCCc2ccc3c(c2)OCO3)CC(=O)NO)cc1OC
68360,COc1cnc(C)c2[nH]c3ccccc3c12
1897419,COc1cccc(C2CCCN2C(=O)CC2=CSC3=NCCCN23)c1
77870,Cc1cc(C)c(C2=NOC(C(=O)Nc3ccc(-c4ccccc4S(N)(=O)=O)cc3)C2)cc1C
78299,c1ccc(Cn2cncc2CCNCC23CC(c4ccccc42)c2ccccc23)cc1
82695,O=C(COc1ccccc1)N(O)CCc1ccccc1
1909093,Cc1cc(C(=O)N2CCCC(n3cncn3)C2)c(C)n1CC1CC1
1910145,CC(=O)N1CCCC1C(=O)NCCOc1cc(C)cc(C)c1
1910181,Cc1nn(C)c(C)c1C1COCCN1C(=O)c1ccccc1
1938013,O[C@@H]1C[C@@](CNCc2ccc(F)cc2)(COc2cccnc2)C[C@@H]1O
1939614,O=C1C[C@@H]2[C@H](CCN2Cc2ccccn2)N1Cc1ccncc1
1941547,C[C@H]1CN([C@@H](C)CO)C(=O)c2c(c3ccccc3n2C)-c2ccccc2CO[C@@H]1CN(C)Cc1cccc2c1OCCCO2
1943401,O=C(C1CC1)N1CC(=O)N2[C@H](C1)[C@@H](c1ccc(C#CCc3ccccc3)cc1)[C@@H]2CO
104146,COc1cc(OC)nc(OC(C(=O)O)C(OC)(c2ccc(Cl)cc2)c2ccc(Cl)cc2)n1
111374,COc1nsnc1C1=C(C)CCN(C)C1
112108,Cc1ccc(O)c2[nH]c(-c3ccc(N(C)C)cc3)nc12
117277,O=C(O)CC/C=C/C(CS)CCCCC(=O)O
117301,CC(=O)/C=C/c1ccccc1
1964971,Cc1nn2c(-c3nc4cc(C)c(C)cc4[nH]3)c(-c3ccccc3)nc2s1
1974481,CNc1nc(Nc2ccc(C(=O)NC3CC3)cc2OC)ncc1Cl
123418,CCCCCCc1noc([C@H](CC)NC(=O)[C@H](Cc2ccc(OP(=O)(O)O)cc2)NC(C)=O)n1
139230,O=c1ccc2cc(CBr)ccc2o1
1981159,CC1(C)CCN(Cc2ccc3c(c2)C[C@H](NC(=O)c2ccc(OC[C@@H]4CCCO4)cc2)C3)CC1
1982654,CO[C@@H]1C[C@@H](C(C)C)N(c2nc3cc(-c4noc(=O)[nH]4)nc(-c4cncc(Cl)c4)c3n2C[C@H]2CC[C@H](C)CC2)C1
1998302,Cn1c2c(c3ccc(-n4ncc(OCc5ccc(C(F)(F)F)nc5)cc4=O)cc31)CCNCC2
2006372,CCNC1CCc2ccc(CCCNS(=O)(=O)CC3CC3)cc2C1Cc1ccccc1
167023,COc1cc(C(C)=O)ccc1OCCCN1CCC(C(c2ccc(F)cc2)C2CCCCC2)CC1
167283,COc1c(Br)c(C(=O)O)c(-c2c3c(c(OC)c(Br)c2C(=O)O)OCO3)c2c1OCO2
2016718,O=C(c1nn([C@H]2CCCN(CCN3CCOCC3)C2)c2c1CS(=O)(=O)c1c(F)cccc1-2)N1CCOCC1
170968,CCN(C)CC#CCCC(=O)C(O)(c1ccccc1)C1CCC1
180064,C=C[C@@]1(C)CCC2[C@@H](CC[C@@H]3[C@](C)(C(=O)O)CCC[C@@]23C)C1
2021633,Nc1cnc(-c2ccc(-c3ccccc3S(=O)(=O)N3CCN(C4CC4)CC3)cc2F)cn1
2025765,CC(C)(O)C#Cc1cc2c(cc1F)C1CC(C1)n1c-2nc(C(N)=O)c1-c1nc(C2CC2)no1
2026947,Cc1cccc(C)c1Nc1ccc(C(=O)NCCCCCCC(=O)NO)cc1
2036919,OC1CS[C@@H](n2cnc3c(NCc4cccc(F)c4)nc(Cl)nc32)[C@H]1O
196758,CCC(Cc1ccc(OC)c(C(=O)NCc2ccc(OCc3ccccc3)cc2)c1)C(=O)O
199883,CCCC[C@H](NC(=O)[C@H](CCC(=O)O)NC(=O)[C@H](CC(C)C)NC(=O)[C@@H](NC(=O)[C@H](CCC(=O)O)NC(=O)[C@H](CCCN=C(N)N)NC(=O)[C@H](CC(C)C)NC(=O)[C@H](CC(C)C)NC(=O)[C@H]1CCCCNC(=O)CC[C@@H](NC(=O)[C@@H](N)CC(=O)O)C(=O)N[C@H]([C@@H](C)O)C(=O)N[C@H](Cc2ccccc2)C(=O)N1)C(C)C)C(=O)N[C@@H](C)C(=O)N[C@@H](CCCN=C(N)N)C(=O)N[C@@H](C)C(=O)N[C@@H](CCC(=O)O)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](CC(C)C)C(=O)N[C@@H](C)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](C)C(=O)N[C@@H](Cc1c[nH]cn1)C(=O)N[C@@H](CO)C(=O)N[C@@H](CC(N)=O)C(=O)N[C@@H](CCCN=C(N)N)C(=O)N[C@@H](CCCCN)C(=O)N[C@@H](CC(C)C)C(=O)N[C@@H](CCCC)C(=O)N[C@@H](CCC(=O)O)C(=O)N[C@H](C(=O)N[C@H](C(N)=O)[C@@H](C)CC)[C@@H](C)CC

2025-01-25 11:25:42 - root - INFO - SQL:
SELECT
  a.activity_id,
  a.assay_id,
  a.molregno,
  CAST(p.heavy_atoms AS INT64) AS heavy_atoms,
  a.standard_value,
  a.standard_relation,
  CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
  d.doc_id,
  d.year,
  d.journal,
  d.first_page
FROM `bigquery-public-data.ebi_chembl.activities` AS a
JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS p
  ON a.molregno = CAST(p.molregno AS STRING)
JOIN `bigquery-public-data.ebi_chembl.docs` AS d
  ON a.doc_id = CAST(d.doc_id AS STRING)
WHERE CAST(p.heavy_atoms AS INT64) BETWEEN 10 AND 15
  AND a.standard_value IS NOT NULL AND a.standard_value != ''
  AND CAST(a.pchembl_value AS FLOAT64) > 10
LIMIT 100
Results:
activity_id,assay_id,molregno,heavy_atoms,standard_value,standard_relation,pchembl_value,doc_id,year,journal,first_page
300841,143227,83069,12,0.031,=,10.51,6768,2004,Bioorg Med Chem Lett,1845
12092086,860161,117779,14,0.026,=,10.59,65821,2012,J Med Chem,6512
2282309,566860,2214,13,0.09,=,10.05,46215,2009,J Med Chem,1885
2559040,489287,675,14,0.061,=,10.21,43974,2008,J Med Chem,4751
1411429,303546,298415,14,0.05,=,10.3,21501,2005,J Med Chem,1221
1074399,143097,238953,15,0.027,=,10.57,16704,2002,J Med Chem,4755
13974899,1299428,1625988,14,0.0142,=,10.85,77288,2013,Medchemcomm,1222
2272254,565979,675,14,0.047,=,10.33,46138,2009,Bioorg Med Chem Lett,1682
740577,143860,86502,15,0.014,=,10.85,6774,2004,Bioorg Med Chem Lett,1889
1798430,422884,473467,15,0.032,=,10.49,34783,2006,J Med Chem,7843
15687549,1512514,1959748,15,0.01,=,11.0,93223,2015,Eur J Med Chem,334
1214077,143855,154061,13,0.076,=,10.12,2811,1998,Bioorg Med Chem Lett,2797
499051,32664,86151,14,0.018,=,10.74,16211,2001,J Med Chem,4039
1159295,33678,1122859,13,0.07,=,10.15,16330,2001,J Med Chem,863
15023493,1454461,93801,12,0.02,=,10.7,90223,2014,J Med Chem,8204
1861472,435003,11595,13,0.017,=,10.77,35664,2007,J Med Chem,2408
3480525,672663,391098,13,0.06,=,10.22,53323,2009,Nat Chem Biol,765
717774,144017,675,14,0.085,=,10.07,6774,2004,Bioorg Med Chem Lett,1889
1711783,352122,675,14,0.06,=,10.22,31100,2006,J Med Chem,2673
613970,142925,218801,12,0.05,=,10.3,13791,1996,J Med Chem,817
663564,143717,86293,13,0.02,=,10.7,16005,2001,J Med Chem,2229

2025-01-25 11:25:42 - root - INFO - itercount: 0
2025-01-25 11:25:42 - root - INFO - Database Name: bigquery-public-data
Schema Name: ebi_chembl
DDL describes table information.
,0
table_name,tissue_dictionary_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.tissue_dictionary_33`
(
  tissue_id STRING,
  uberon_id STRING,
  pref_name STRING,
  efo_id STRING,
  chembl_id STRING,
  bto_id STRING,
  caloha_id STRING
);"

Some other tables have the similar structure: ['tissue_dictionary_33', 'tissue_dictionary_23', 'tissue_dictionary_29', 'tissue_dictionary_28', 'tissue_dictionary_26', 'tissue_dictionary_30', 'tissue_dictionary_27', 'tissue_dictionary_25', 'tissue_dictionary_24']
,1
table_name,sqlite_stat1_27
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.sqlite_stat1_27`
(
  tbl STRING,
  idx STRING,
  stat STRING
);"

Some other tables have the similar structure: ['sqlite_stat1_27', 'sqlite_stat1_28', 'sqlite_stat1_24', 'sqlite_stat1_26', 'sqlite_stat1_33', 'sqlite_stat1_25', 'sqlite_stat1_29', 'sqlite_stat1_23']
,2
table_name,go_classification_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.go_classification_29`
(
  go_id STRING,
  parent_go_id STRING,
  pref_name STRING,
  class_level STRING,
  aspect STRING,
  path STRING
);"

Some other tables have the similar structure: ['go_classification_29', 'go_classification_28', 'go_classification_33', 'go_classification_24', 'go_classification_30', 'go_classification_25', 'go_classification_26', 'go_classification_27', 'go_classification_23']
,3
table_name,patent_use_codes_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.patent_use_codes_29`
(
  patent_use_code STRING,
  definition STRING
);"

Some other tables have the similar structure: ['patent_use_codes_29', 'patent_use_codes_30', 'patent_use_codes_24', 'patent_use_codes_33', 'patent_use_codes_23', 'patent_use_codes_27', 'patent_use_codes_28', 'patent_use_codes_25', 'patent_use_codes_26']
,4
table_name,frac_classification_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.frac_classification_28`
(
  frac_class_id STRING,
  active_ingredient STRING,
  level1 STRING,
  level1_description STRING,
  level2 STRING,
  level2_description STRING,
  level3 STRING,
  level3_description STRING,
  level4 STRING,
  level4_description STRING,
  level5 STRING,
  frac_code STRING
);"

Some other tables have the similar structure: ['frac_classification_28', 'frac_classification_33', 'frac_classification_24', 'frac_classification_30', 'frac_classification_26', 'frac_classification_27', 'frac_classification_23', 'frac_classification_29', 'frac_classification_25']
,5
table_name,predicted_binding_domains_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.predicted_binding_domains_24`
(
  predbind_id STRING,
  activity_id STRING,
  site_id STRING,
  prediction_method STRING,
  confidence STRING
);"

Some other tables have the similar structure: ['predicted_binding_domains_24', 'predicted_binding_domains_27', 'predicted_binding_domains_26', 'predicted_binding_domains_33', 'predicted_binding_domains_23', 'predicted_binding_domains_25', 'predicted_binding_domains_29', 'predicted_binding_domains_28', 'predicted_binding_domains_30']
,6
table_name,drug_mechanism_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.drug_mechanism_23`
(
  mec_id STRING,
  record_id STRING,
  molregno STRING,
  mechanism_of_action STRING,
  tid STRING,
  site_id STRING,
  action_type STRING,
  direct_interaction STRING,
  molecular_mechanism STRING,
  disease_efficacy STRING,
  mechanism_comment STRING,
  selectivity_comment STRING,
  binding_site_comment STRING
);"

Some other tables have the similar structure: ['drug_mechanism_23', 'drug_mechanism_28', 'drug_mechanism_24', 'drug_mechanism_25', 'drug_mechanism_30', 'drug_mechanism_27', 'drug_mechanism_26', 'drug_mechanism_33', 'drug_mechanism_29']
,7
table_name,structural_alert_sets_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.structural_alert_sets_29`
(
  alert_set_id STRING,
  set_name STRING,
  priority STRING
);"

Some other tables have the similar structure: ['structural_alert_sets_29', 'structural_alert_sets_33', 'structural_alert_sets_25', 'structural_alert_sets_27', 'structural_alert_sets_24', 'structural_alert_sets_30', 'structural_alert_sets_23', 'structural_alert_sets_28', 'structural_alert_sets_26']
,8
table_name,bio_component_sequences_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.bio_component_sequences_25`
(
  component_id STRING,
  component_type STRING,
  description STRING,
  sequence STRING,
  sequence_md5sum STRING,
  tax_id STRING,
  organism STRING
);"

Some other tables have the similar structure: ['bio_component_sequences_25', 'bio_component_sequences_28', 'bio_component_sequences_30', 'bio_component_sequences_24', 'bio_component_sequences_26', 'bio_component_sequences_29', 'bio_component_sequences_27', 'bio_component_sequences_23', 'bio_component_sequences_33']
,9
table_name,cell_dictionary_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.cell_dictionary_26`
(
  cell_id STRING,
  cell_name STRING,
  cell_description STRING,
  cell_source_tissue STRING,
  cell_source_organism STRING,
  cell_source_tax_id STRING,
  clo_id STRING,
  efo_id STRING,
  cellosaurus_id STRING,
  cl_lincs_id STRING,
  chembl_id STRING,
  cell_ontology_id STRING
);"

Some other tables have the similar structure: ['cell_dictionary_26', 'cell_dictionary_27', 'cell_dictionary_29', 'cell_dictionary_25', 'cell_dictionary_28', 'cell_dictionary_23', 'cell_dictionary_30', 'cell_dictionary_33', 'cell_dictionary_24']
,10
table_name,component_go_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_go_30`
(
  comp_go_id INT64 NOT NULL OPTIONS(description=""Primary key""),
  component_id INT64 NOT NULL OPTIONS(description=""Foreign key to COMPONENT_SEQUENCES table. The protein component this GO term applies to""),
  go_id STRING NOT NULL OPTIONS(description=""Foreign key to the GO_CLASSIFICATION table. The GO term that this protein is mapped to"")
);"

Some other tables have the similar structure: ['component_go_30', 'component_go_26', 'component_go_29', 'component_go_25', 'component_go_33', 'component_go_28', 'component_go_23', 'component_go_24', 'component_go_27']
,11
table_name,atc_classification_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.atc_classification_30`
(
  who_name STRING OPTIONS(description=""WHO/INN name for the compound""),
  level1 STRING OPTIONS(description=""First level of classification""),
  level2 STRING OPTIONS(description=""Second level of classification""),
  level3 STRING OPTIONS(description=""Third level of classification""),
  level4 STRING OPTIONS(description=""Fourth level of classification""),
  level5 STRING NOT NULL OPTIONS(description=""Complete ATC code for compound""),
  level1_description STRING OPTIONS(description=""Description of first level of classification""),
  level2_description STRING OPTIONS(description=""Description of second level of classification""),
  level3_description STRING OPTIONS(description=""Description of third level of classification""),
  level4_description STRING OPTIONS(description=""Description of fourth level of classification"")
);"

Some other tables have the similar structure: ['atc_classification_30', 'atc_classification_27', 'atc_classification_25', 'atc_classification_28', 'atc_classification_23', 'atc_classification_33', 'atc_classification_24', 'atc_classification_26', 'atc_classification_29']
,12
table_name,irac_classification_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.irac_classification_33`
(
  irac_class_id STRING,
  active_ingredient STRING,
  level1 STRING,
  level1_description STRING,
  level2 STRING,
  level2_description STRING,
  level3 STRING,
  level3_description STRING,
  level4 STRING,
  irac_code STRING
);"

Some other tables have the similar structure: ['irac_classification_33', 'irac_classification_28', 'irac_classification_26', 'irac_classification_29', 'irac_classification_30', 'irac_classification_25', 'irac_classification_27', 'irac_classification_23', 'irac_classification_24']
,13
table_name,indication_refs_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.indication_refs_33`
(
  indref_id STRING,
  drugind_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

Some other tables have the similar structure: ['indication_refs_33', 'indication_refs_29', 'indication_refs_30', 'indication_refs_27', 'indication_refs_26', 'indication_refs_23', 'indication_refs_24', 'indication_refs_25', 'indication_refs_28']
,14
table_name,target_dictionary_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_dictionary_28`
(
  tid STRING,
  target_type STRING,
  pref_name STRING,
  tax_id STRING,
  organism STRING,
  chembl_id STRING,
  species_group_flag STRING
);"

Some other tables have the similar structure: ['target_dictionary_28', 'target_dictionary_29', 'target_dictionary_30', 'target_dictionary_26', 'target_dictionary_27', 'target_dictionary_23', 'target_dictionary_33', 'target_dictionary_24', 'target_dictionary_25']
,15
table_name,drug_warning
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.drug_warning`
(
  warning_id STRING,
  record_id STRING,
  molregno STRING,
  warning_type STRING,
  warning_class STRING,
  warning_description STRING,
  warning_country STRING,
  warning_year STRING,
  efo_term STRING,
  efo_id STRING,
  efo_id_for_warning_class STRING
);"

,16
table_name,drug_warning_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.drug_warning_33`
(
  warning_id STRING,
  record_id STRING,
  molregno STRING,
  warning_type STRING,
  warning_class STRING,
  warning_description STRING,
  warning_country STRING,
  warning_year STRING,
  efo_term STRING,
  efo_id STRING,
  efo_id_for_warning_class STRING
);"

Some other tables have the similar structure: ['drug_warning_33', 'drug_warning_30', 'drug_warning_28', 'drug_warning_29']
,17
table_name,chembl_id_lookup_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.chembl_id_lookup_30`
(
  chembl_id STRING NOT NULL OPTIONS(description=""ChEMBL identifier""),
  entity_type STRING NOT NULL OPTIONS(description=""Type of entity (e.g., COMPOUND, ASSAY, TARGET)""),
  entity_id INT64 NOT NULL OPTIONS(description=""Primary key for that entity in corresponding table (e.g., molregno for compounds, tid for targets)""),
  status STRING NOT NULL OPTIONS(description=""Indicates whether the status of the entity within the database - ACTIVE, INACTIVE (downgraded), OBS (obsolete/removed).""),
  last_active INT64 OPTIONS(description=""indicates the last ChEMBL version where the CHEMBL_ID was active"")
);"

Some other tables have the similar structure: ['chembl_id_lookup_30', 'chembl_id_lookup_25', 'chembl_id_lookup_29', 'chembl_id_lookup_26', 'chembl_id_lookup_33', 'chembl_id_lookup_28', 'chembl_id_lookup_23', 'chembl_id_lookup_27', 'chembl_id_lookup_24']
,18
table_name,compound_structures_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_structures_23`
(
  molregno STRING,
  molfile STRING,
  standard_inchi STRING,
  standard_inchi_key STRING,
  canonical_smiles STRING
);"

Some other tables have the similar structure: ['compound_structures_23', 'compound_structures_24', 'compound_structures_28', 'compound_structures_25', 'compound_structures_29', 'compound_structures_30', 'compound_structures_26', 'compound_structures_27', 'compound_structures_33']
,19
table_name,activity_supp_map_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_supp_map_24`
(
  activity_id STRING,
  smid STRING
);"

Some other tables have the similar structure: ['activity_supp_map_24', 'activity_supp_map_27', 'activity_supp_map_26', 'activity_supp_map_25', 'activity_supp_map_33', 'activity_supp_map_28', 'activity_supp_map_29', 'activity_supp_map_30']
,20
table_name,molecule_hierarchy_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_hierarchy_33`
(
  molregno STRING,
  parent_molregno STRING,
  active_molregno STRING
);"

Some other tables have the similar structure: ['molecule_hierarchy_33', 'molecule_hierarchy_28', 'molecule_hierarchy_23', 'molecule_hierarchy_25', 'molecule_hierarchy_27', 'molecule_hierarchy_30', 'molecule_hierarchy_29', 'molecule_hierarchy_24', 'molecule_hierarchy_26']
,21
table_name,relationship_type_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.relationship_type_24`
(
  relationship_type STRING,
  relationship_desc STRING
);"

Some other tables have the similar structure: ['relationship_type_24', 'relationship_type_26', 'relationship_type_33', 'relationship_type_28', 'relationship_type_23', 'relationship_type_29', 'relationship_type_27', 'relationship_type_25', 'relationship_type_30']
,22
table_name,docs_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.docs_29`
(
  doc_id STRING,
  journal STRING,
  year STRING,
  volume STRING,
  issue STRING,
  first_page STRING,
  last_page STRING,
  pubmed_id STRING,
  doi STRING,
  chembl_id STRING,
  title STRING,
  doc_type STRING,
  authors STRING,
  abstract STRING,
  patent_id STRING,
  ridx STRING,
  src_id STRING
);"

Some other tables have the similar structure: ['docs_29', 'docs_28', 'docs_27', 'docs_30', 'docs_23', 'docs_33', 'docs_24', 'docs_26', 'docs_25']
,23
table_name,molecule_hrac_classification_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_hrac_classification_29`
(
  mol_hrac_id STRING,
  hrac_class_id STRING,
  molregno STRING
);"

Some other tables have the similar structure: ['molecule_hrac_classification_29', 'molecule_hrac_classification_28', 'molecule_hrac_classification_30', 'molecule_hrac_classification_25', 'molecule_hrac_classification_23', 'molecule_hrac_classification_27', 'molecule_hrac_classification_33', 'molecule_hrac_classification_26', 'molecule_hrac_classification_24']
,24
table_name,component_domains
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_domains`
(
  compd_id STRING,
  domain_id STRING,
  component_id STRING,
  start_position STRING,
  end_position STRING
);"

,25
table_name,bioassay_ontology_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.bioassay_ontology_26`
(
  bao_id STRING,
  label STRING
);"

Some other tables have the similar structure: ['bioassay_ontology_26', 'bioassay_ontology_27', 'bioassay_ontology_33', 'bioassay_ontology_24', 'bioassay_ontology_30', 'bioassay_ontology_29', 'bioassay_ontology_25', 'bioassay_ontology_28', 'bioassay_ontology_23']
,26
table_name,binding_sites_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.binding_sites_29`
(
  site_id STRING,
  site_name STRING,
  tid STRING
);"

Some other tables have the similar structure: ['binding_sites_29', 'binding_sites_33', 'binding_sites_24', 'binding_sites_27', 'binding_sites_26', 'binding_sites_28', 'binding_sites_23', 'binding_sites_30', 'binding_sites_25']
,27
table_name,protein_class_synonyms_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.protein_class_synonyms_24`
(
  protclasssyn_id STRING,
  protein_class_id STRING,
  protein_class_synonym STRING,
  syn_type STRING
);"

Some other tables have the similar structure: ['protein_class_synonyms_24', 'protein_class_synonyms_33', 'protein_class_synonyms_28', 'protein_class_synonyms_26', 'protein_class_synonyms_25', 'protein_class_synonyms_29', 'protein_class_synonyms_23', 'protein_class_synonyms_30', 'protein_class_synonyms_27']
,28
table_name,target_type
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_type`
(
  target_type STRING,
  target_desc STRING,
  parent_type STRING
);"

,29
table_name,mechanism_refs_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.mechanism_refs_33`
(
  mecref_id STRING,
  mec_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

Some other tables have the similar structure: ['mechanism_refs_33', 'mechanism_refs_27', 'mechanism_refs_25', 'mechanism_refs_26', 'mechanism_refs_24', 'mechanism_refs_29', 'mechanism_refs_23', 'mechanism_refs_28', 'mechanism_refs_30']
,30
table_name,biotherapeutics_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.biotherapeutics_30`
(
  molregno INT64 NOT NULL OPTIONS(description=""Foreign key to molecule_dictionary""),
  description STRING OPTIONS(description=""Description of the biotherapeutic.""),
  helm_notation STRING OPTIONS(description=""Sequence notation generated according to the HELM standard (http://www.openhelm.org/home). Currently for peptides only"")
);"

Some other tables have the similar structure: ['biotherapeutics_30', 'biotherapeutics_29', 'biotherapeutics_25', 'biotherapeutics_27', 'biotherapeutics_33', 'biotherapeutics_23', 'biotherapeutics_24', 'biotherapeutics_28', 'biotherapeutics_26']
,31
table_name,compound_structural_alerts_27
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_structural_alerts_27`
(
  cpd_str_alert_id STRING,
  molregno STRING,
  alert_id STRING
);"

Some other tables have the similar structure: ['compound_structural_alerts_27', 'compound_structural_alerts_30', 'compound_structural_alerts_26', 'compound_structural_alerts_23', 'compound_structural_alerts_28', 'compound_structural_alerts_33', 'compound_structural_alerts_25', 'compound_structural_alerts_24', 'compound_structural_alerts_29']
,32
table_name,usan_stems_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.usan_stems_29`
(
  usan_stem_id STRING,
  stem STRING,
  subgroup STRING,
  annotation STRING,
  stem_class STRING,
  major_class STRING,
  who_extra STRING
);"

Some other tables have the similar structure: ['usan_stems_29', 'usan_stems_25', 'usan_stems_23', 'usan_stems_27', 'usan_stems_30', 'usan_stems_26', 'usan_stems_24', 'usan_stems_28', 'usan_stems_33']
,33
table_name,component_sequences_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_sequences_29`
(
  component_id STRING,
  component_type STRING,
  accession STRING,
  sequence STRING,
  sequence_md5sum STRING,
  description STRING,
  tax_id STRING,
  organism STRING,
  db_source STRING,
  db_version STRING
);"

Some other tables have the similar structure: ['component_sequences_29', 'component_sequences_24', 'component_sequences_23', 'component_sequences_26', 'component_sequences_30', 'component_sequences_25', 'component_sequences_27', 'component_sequences_28', 'component_sequences_33']
,34
table_name,target_relations_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_relations_26`
(
  tid STRING,
  relationship STRING,
  related_tid STRING,
  targrel_id STRING
);"

Some other tables have the similar structure: ['target_relations_26', 'target_relations_24', 'target_relations_30', 'target_relations_29', 'target_relations_33', 'target_relations_27', 'target_relations_28', 'target_relations_23', 'target_relations_25']
,35
table_name,products_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.products_29`
(
  dosage_form STRING,
  route STRING,
  trade_name STRING,
  approval_date STRING,
  ad_type STRING,
  oral STRING,
  topical STRING,
  parenteral STRING,
  black_box_warning STRING,
  applicant_full_name STRING,
  innovator_company STRING,
  product_id STRING,
  nda_type STRING
);"

Some other tables have the similar structure: ['products_29', 'products_30', 'products_25', 'products_24', 'products_33', 'products_26', 'products_27', 'products_28', 'products_23']
,36
table_name,activity_supp_map
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_supp_map`
(
  actsm_id STRING,
  activity_id STRING,
  smid STRING
);"

,37
table_name,ligand_eff_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.ligand_eff_25`
(
  activity_id STRING,
  bei STRING,
  sei STRING,
  le STRING,
  lle STRING
);"

Some other tables have the similar structure: ['ligand_eff_25', 'ligand_eff_23', 'ligand_eff_29', 'ligand_eff_26', 'ligand_eff_24', 'ligand_eff_30', 'ligand_eff_28', 'ligand_eff_33', 'ligand_eff_27']
,38
table_name,drug_indication_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.drug_indication_33`
(
  drugind_id STRING,
  record_id STRING,
  molregno STRING,
  max_phase_for_ind STRING,
  mesh_id STRING,
  mesh_heading STRING,
  efo_id STRING,
  efo_term STRING
);"

Some other tables have the similar structure: ['drug_indication_33', 'drug_indication_30', 'drug_indication_28', 'drug_indication_27', 'drug_indication_29', 'drug_indication_24', 'drug_indication_25', 'drug_indication_26', 'drug_indication_23']
,39
table_name,hrac_classification_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.hrac_classification_23`
(
  hrac_class_id STRING,
  active_ingredient STRING,
  level1 STRING,
  level1_description STRING,
  level2 STRING,
  level2_description STRING,
  level3 STRING,
  hrac_code STRING
);"

Some other tables have the similar structure: ['hrac_classification_23', 'hrac_classification_33', 'hrac_classification_26', 'hrac_classification_28', 'hrac_classification_30', 'hrac_classification_25', 'hrac_classification_29', 'hrac_classification_27', 'hrac_classification_24']
,40
table_name,metabolism_refs_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.metabolism_refs_23`
(
  metref_id STRING,
  met_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

Some other tables have the similar structure: ['metabolism_refs_23', 'metabolism_refs_27', 'metabolism_refs_25', 'metabolism_refs_28', 'metabolism_refs_24', 'metabolism_refs_33', 'metabolism_refs_26', 'metabolism_refs_29', 'metabolism_refs_30']
,41
table_name,structural_alerts_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.structural_alerts_28`
(
  alert_id STRING,
  alert_set_id STRING,
  alert_name STRING,
  smarts STRING
);"

Some other tables have the similar structure: ['structural_alerts_28', 'structural_alerts_29', 'structural_alerts_24', 'structural_alerts_33', 'structural_alerts_30', 'structural_alerts_26', 'structural_alerts_25', 'structural_alerts_27', 'structural_alerts_23']
,42
table_name,assay_parameters_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_parameters_26`
(
  assay_param_id STRING,
  assay_id STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_type STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_text_value STRING,
  comments STRING
);"

Some other tables have the similar structure: ['assay_parameters_26', 'assay_parameters_33', 'assay_parameters_27', 'assay_parameters_28', 'assay_parameters_25', 'assay_parameters_24', 'assay_parameters_29', 'assay_parameters_30', 'assay_parameters_23']
,43
table_name,assay_class_map_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_class_map_33`
(
  ass_cls_map_id STRING,
  assay_id STRING,
  assay_class_id STRING
);"

Some other tables have the similar structure: ['assay_class_map_33', 'assay_class_map_29', 'assay_class_map_28', 'assay_class_map_27', 'assay_class_map_25', 'assay_class_map_30', 'assay_class_map_26']
,44
table_name,product_patents_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.product_patents_25`
(
  prod_pat_id STRING,
  product_id STRING,
  patent_no STRING,
  patent_expire_date STRING,
  drug_substance_flag STRING,
  drug_product_flag STRING,
  patent_use_code STRING,
  delist_flag STRING,
  submission_date STRING
);"

Some other tables have the similar structure: ['product_patents_25', 'product_patents_29', 'product_patents_30', 'product_patents_28', 'product_patents_23', 'product_patents_27', 'product_patents_26', 'product_patents_33', 'product_patents_24']
,45
table_name,organism_class_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.organism_class_25`
(
  oc_id STRING,
  tax_id STRING,
  l1 STRING,
  l2 STRING,
  l3 STRING
);"

Some other tables have the similar structure: ['organism_class_25', 'organism_class_24', 'organism_class_23', 'organism_class_33', 'organism_class_26', 'organism_class_27', 'organism_class_30', 'organism_class_29', 'organism_class_28']
,46
table_name,domains_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.domains_33`
(
  domain_id STRING,
  domain_type STRING,
  source_domain_id STRING,
  domain_name STRING,
  domain_description STRING
);"

Some other tables have the similar structure: ['domains_33', 'domains_28', 'domains_24', 'domains_30', 'domains_27', 'domains_25', 'domains_23', 'domains_29', 'domains_26']
,47
table_name,target_type_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_type_26`
(
  target_type STRING,
  target_desc STRING,
  parent_type STRING
);"

Some other tables have the similar structure: ['target_type_26', 'target_type_27', 'target_type_24', 'target_type_28', 'target_type_23', 'target_type_25', 'target_type_33', 'target_type_30', 'target_type_29']
,48
table_name,component_synonyms_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_synonyms_28`
(
  compsyn_id STRING,
  component_id STRING,
  component_synonym STRING,
  syn_type STRING
);"

Some other tables have the similar structure: ['component_synonyms_28', 'component_synonyms_23', 'component_synonyms_33', 'component_synonyms_25', 'component_synonyms_24', 'component_synonyms_29', 'component_synonyms_26', 'component_synonyms_30', 'component_synonyms_27']
,49
table_name,compound_records_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_records_25`
(
  record_id STRING,
  molregno STRING,
  doc_id STRING,
  compound_key STRING,
  compound_name STRING,
  src_id STRING,
  src_compound_id STRING,
  cidx STRING
);"

Some other tables have the similar structure: ['compound_records_25', 'compound_records_33', 'compound_records_29', 'compound_records_30', 'compound_records_28', 'compound_records_23', 'compound_records_26', 'compound_records_24', 'compound_records_27']
,50
table_name,activity_supp_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_supp_33`
(
  as_id STRING,
  rgid STRING,
  smid STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_type STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_text_value STRING,
  comments STRING
);"

Some other tables have the similar structure: ['activity_supp_33', 'activity_supp_26', 'activity_supp_25', 'activity_supp_27', 'activity_supp_29', 'activity_supp_24', 'activity_supp_28', 'activity_supp_30']
,51
table_name,action_type_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.action_type_24`
(
  action_type STRING,
  description STRING,
  parent_type STRING
);"

Some other tables have the similar structure: ['action_type_24', 'action_type_30', 'action_type_27', 'action_type_26', 'action_type_28', 'action_type_25', 'action_type_33', 'action_type_23', 'action_type_29']
,52
table_name,source_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.source_23`
(
  src_id STRING,
  src_description STRING,
  src_short_name STRING
);"

Some other tables have the similar structure: ['source_23', 'source_28', 'source_26', 'source_29', 'source_33', 'source_25', 'source_24', 'source_30', 'source_27']
,53
table_name,target_components_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_components_29`
(
  tid STRING,
  component_id STRING,
  targcomp_id STRING,
  homologue STRING
);"

Some other tables have the similar structure: ['target_components_29', 'target_components_27', 'target_components_24', 'target_components_23', 'target_components_25', 'target_components_30', 'target_components_28', 'target_components_26', 'target_components_33']
,54
table_name,site_components_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.site_components_25`
(
  sitecomp_id STRING,
  site_id STRING,
  component_id STRING,
  domain_id STRING,
  site_residues STRING
);"

Some other tables have the similar structure: ['site_components_25', 'site_components_27', 'site_components_23', 'site_components_33', 'site_components_26', 'site_components_24', 'site_components_30', 'site_components_28', 'site_components_29']
,55
table_name,molecule_dictionary
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_dictionary`
(
  molregno STRING,
  pref_name STRING,
  chembl_id STRING,
  max_phase STRING,
  therapeutic_flag STRING,
  dosed_ingredient STRING,
  structure_type STRING,
  chebi_par_id STRING,
  molecule_type STRING,
  first_approval STRING,
  oral STRING,
  parenteral STRING,
  topical STRING,
  black_box_warning STRING,
  first_in_class STRING,
  chirality STRING,
  prodrug STRING,
  inorganic_flag STRING,
  usan_year STRING,
  availability_type STRING,
  usan_stem STRING,
  polymer_flag STRING,
  usan_substem STRING,
  usan_stem_definition STRING,
  indication_class STRING,
  withdrawn_flag STRING,
  chemical_probe STRING,
  natural_product STRING
);"

,56
table_name,confidence_score_lookup_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.confidence_score_lookup_28`
(
  confidence_score STRING,
  description STRING,
  target_mapping STRING
);"

Some other tables have the similar structure: ['confidence_score_lookup_28', 'confidence_score_lookup_29', 'confidence_score_lookup_30', 'confidence_score_lookup_33', 'confidence_score_lookup_27', 'confidence_score_lookup_25', 'confidence_score_lookup_26', 'confidence_score_lookup_24', 'confidence_score_lookup_23']
,57
table_name,compound_properties_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_properties_30`
(
  molregno INT64 NOT NULL OPTIONS(description=""Foreign key to compounds table (compound structure)""),
  mw_freebase FLOAT64 OPTIONS(description=""Molecular weight of parent compound""),
  alogp FLOAT64 OPTIONS(description=""Calculated ALogP""),
  hba INT64 OPTIONS(description=""Number hydrogen bond acceptors""),
  hbd INT64 OPTIONS(description=""Number hydrogen bond donors""),
  psa FLOAT64 OPTIONS(description=""Polar surface area""),
  rtb INT64 OPTIONS(description=""Number rotatable bonds""),
  ro3_pass STRING OPTIONS(description="" Indicates whether the compound passes the rule-of-three (mw < 300, logP < 3 etc)""),
  num_ro5_violations INT64 OPTIONS(description=""Number of violations of Lipinski's rule-of-five, using HBA and HBD definitions""),
  cx_most_apka FLOAT64 OPTIONS(description=""The most acidic pKa calculated using ChemAxon v17.29.0""),
  cx_most_bpka FLOAT64 OPTIONS(description=""The most basic pKa calculated using ChemAxon v17.29.0""),
  cx_logp FLOAT64 OPTIONS(description=""The calculated octanol/water partition coefficient using ChemAxon v17.29.0""),
  cx_logd FLOAT64 OPTIONS(description=""The calculated octanol/water distribution coefficient at pH7.4 using ChemAxon v17.29.0""),
  molecular_species STRING OPTIONS(description=""Indicates whether the compound is an acid/base/neutral""),
  full_mwt FLOAT64 OPTIONS(description=""Molecular weight of the full compound including any salts""),
  aromatic_rings INT64 OPTIONS(description=""Number of aromatic rings""),
  heavy_atoms INT64 OPTIONS(description=""Number of heavy (non-hydrogen) atoms""),
  qed_weighted FLOAT64 OPTIONS(description=""Weighted quantitative estimate of drug likeness (as defined by Bickerton et al., Nature Chem 2012)""),
  mw_monoisotopic FLOAT64 OPTIONS(description=""Monoisotopic parent molecular weight""),
  full_molformula STRING OPTIONS(description="" Molecular formula for the full compound (including any salt)""),
  hba_lipinski INT64 OPTIONS(description=""Number of hydrogen bond acceptors calculated according to Lipinski's original rules (i.e., N + O count))""),
  hbd_lipinski INT64 OPTIONS(description=""Number of hydrogen bond donors calculated according to Lipinski's original rules (i.e., NH + OH count)""),
  num_lipinski_ro5_violations INT64 OPTIONS(description=""Number of violations of Lipinski's rule of five using HBA_LIPINSKI and HBD_LIPINSKI counts"")
);"

Some other tables have the similar structure: ['compound_properties_30', 'compound_properties_33', 'compound_properties_28', 'compound_properties_24', 'compound_properties_25', 'compound_properties_23', 'compound_properties_26', 'compound_properties_29', 'compound_properties_27']
,58
table_name,component_domains_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_domains_25`
(
  compd_id STRING,
  domain_id STRING,
  component_id STRING,
  start_position STRING,
  end_position STRING
);"

Some other tables have the similar structure: ['component_domains_25', 'component_domains_23', 'component_domains_33', 'component_domains_26', 'component_domains_30', 'component_domains_28', 'component_domains_27', 'component_domains_29', 'component_domains_24']
,59
table_name,assay_type_27
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_type_27`
(
  assay_type STRING,
  assay_desc STRING
);"

Some other tables have the similar structure: ['assay_type_27', 'assay_type_24', 'assay_type_23', 'assay_type_26', 'assay_type_25', 'assay_type_29', 'assay_type_33', 'assay_type_28', 'assay_type_30']
,60
table_name,component_synonyms
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_synonyms`
(
  compsyn_id STRING,
  component_id STRING,
  component_synonym STRING,
  syn_type STRING
);"

,61
table_name,formulations_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.formulations_25`
(
  product_id STRING,
  ingredient STRING,
  strength STRING,
  record_id STRING,
  molregno STRING,
  formulation_id STRING
);"

Some other tables have the similar structure: ['formulations_25', 'formulations_30', 'formulations_29', 'formulations_24', 'formulations_23', 'formulations_28', 'formulations_27', 'formulations_26', 'formulations_33']
,62
table_name,organism_class
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.organism_class`
(
  oc_id STRING,
  tax_id STRING,
  l1 STRING,
  l2 STRING,
  l3 STRING
);"

,63
table_name,defined_daily_dose_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.defined_daily_dose_33`
(
  atc_code STRING,
  ddd_units STRING,
  ddd_admr STRING,
  ddd_comment STRING,
  ddd_id STRING,
  ddd_value STRING
);"

Some other tables have the similar structure: ['defined_daily_dose_33', 'defined_daily_dose_28', 'defined_daily_dose_27', 'defined_daily_dose_26', 'defined_daily_dose_24', 'defined_daily_dose_25', 'defined_daily_dose_23', 'defined_daily_dose_30', 'defined_daily_dose_29']
,64
table_name,activity_stds_lookup_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_stds_lookup_26`
(
  std_act_id STRING,
  standard_type STRING,
  definition STRING,
  standard_units STRING,
  normal_range_min STRING,
  normal_range_max STRING
);"

Some other tables have the similar structure: ['activity_stds_lookup_26', 'activity_stds_lookup_33', 'activity_stds_lookup_25', 'activity_stds_lookup_30', 'activity_stds_lookup_27', 'activity_stds_lookup_23', 'activity_stds_lookup_24', 'activity_stds_lookup_29', 'activity_stds_lookup_28']
,65
table_name,activity_smid_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_smid_28`
(
  smid STRING
);"

Some other tables have the similar structure: ['activity_smid_28', 'activity_smid_29', 'activity_smid_24', 'activity_smid_25', 'activity_smid_26', 'activity_smid_33', 'activity_smid_30', 'activity_smid_27']
,66
table_name,research_stem_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.research_stem_30`
(
  res_stem_id INT64 NOT NULL OPTIONS(description=""Primary key. Unique ID for each research code stem.""),
  research_stem STRING OPTIONS(description=""The actual stem/prefix used in the research code."")
);"

Some other tables have the similar structure: ['research_stem_30', 'research_stem_26', 'research_stem_28', 'research_stem_25', 'research_stem_23', 'research_stem_27', 'research_stem_33', 'research_stem_24', 'research_stem_29']
,67
table_name,protein_classification_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.protein_classification_25`
(
  protein_class_id STRING,
  parent_id STRING,
  pref_name STRING,
  short_name STRING,
  protein_class_desc STRING,
  definition STRING,
  class_level STRING
);"

Some other tables have the similar structure: ['protein_classification_25', 'protein_classification_27', 'protein_classification_33', 'protein_classification_28', 'protein_classification_23', 'protein_classification_30', 'protein_classification_26', 'protein_classification_24', 'protein_classification_29']
,68
table_name,domains
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.domains`
(
  domain_id STRING,
  domain_type STRING,
  source_domain_id STRING,
  domain_name STRING,
  domain_description STRING
);"

,69
table_name,research_companies_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.research_companies_25`
(
  co_stem_id STRING,
  res_stem_id STRING,
  company STRING,
  country STRING,
  previous_company STRING
);"

Some other tables have the similar structure: ['research_companies_25', 'research_companies_27', 'research_companies_24', 'research_companies_28', 'research_companies_23', 'research_companies_30', 'research_companies_33', 'research_companies_29', 'research_companies_26']
,70
table_name,version_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.version_30`
(
  name STRING NOT NULL OPTIONS(description=""Name of release version""),
  creation_date DATETIME OPTIONS(description=""Date database created""),
  comments STRING OPTIONS(description=""Description of release version"")
);"

Some other tables have the similar structure: ['version_30', 'version_33', 'version_24', 'version_25', 'version_26', 'version_23', 'version_27', 'version_28', 'version_29']
,71
table_name,variant_sequences_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.variant_sequences_25`
(
  variant_id STRING,
  mutation STRING,
  accession STRING,
  version STRING,
  isoform STRING,
  sequence STRING,
  organism STRING
);"

Some other tables have the similar structure: ['variant_sequences_25', 'variant_sequences_33', 'variant_sequences_28', 'variant_sequences_23', 'variant_sequences_27', 'variant_sequences_30', 'variant_sequences_29', 'variant_sequences_24', 'variant_sequences_26']
,72
table_name,biotherapeutic_components
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.biotherapeutic_components`
(
  biocomp_id STRING,
  molregno STRING,
  component_id STRING
);"

,73
table_name,biotherapeutic_components_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.biotherapeutic_components_29`
(
  biocomp_id STRING,
  molregno STRING,
  component_id STRING
);"

Some other tables have the similar structure: ['biotherapeutic_components_29', 'biotherapeutic_components_24', 'biotherapeutic_components_28', 'biotherapeutic_components_26', 'biotherapeutic_components_23', 'biotherapeutic_components_25', 'biotherapeutic_components_33', 'biotherapeutic_components_27', 'biotherapeutic_components_30']
,74
table_name,relationship_type
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.relationship_type`
(
  relationship_type STRING,
  relationship_desc STRING
);"

,75
table_name,protein_class_synonyms
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.protein_class_synonyms`
(
  protclasssyn_id STRING,
  protein_class_id STRING,
  protein_class_synonym STRING,
  syn_type STRING
);"

,76
table_name,chembl_release_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.chembl_release_33`
(
  chembl_release_id STRING,
  chembl_release STRING,
  creation_date STRING
);"

,77
table_name,assays_27
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assays_27`
(
  assay_id STRING,
  doc_id STRING,
  description STRING,
  assay_type STRING,
  assay_test_type STRING,
  assay_category STRING,
  assay_organism STRING,
  assay_tax_id STRING,
  assay_strain STRING,
  assay_tissue STRING,
  assay_cell_type STRING,
  assay_subcellular_fraction STRING,
  tid STRING,
  relationship_type STRING,
  confidence_score STRING,
  curated_by STRING,
  activity_count STRING,
  assay_source STRING,
  src_id STRING,
  src_assay_id STRING,
  chembl_id STRING,
  updated_on STRING,
  updated_by STRING,
  orig_description STRING,
  mc_tax_id STRING,
  mc_organism STRING,
  mc_target_type STRING,
  mc_target_name STRING,
  mc_target_accession STRING,
  cell_id STRING,
  bao_format STRING,
  tissue_id STRING,
  curation_comment STRING,
  variant_id STRING,
  aidx STRING,
  job_id STRING,
  log_id STRING,
  ridx STRING,
  tid_fixed STRING
);"

Some other tables have the similar structure: ['assays_27', 'assays_24', 'assays_25', 'assays_26', 'assays_33', 'assays_28', 'assays_23', 'assays_30', 'assays_29']
,78
table_name,molecule_dictionary_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_dictionary_29`
(
  molregno STRING,
  pref_name STRING,
  chembl_id STRING,
  max_phase STRING,
  therapeutic_flag STRING,
  dosed_ingredient STRING,
  structure_type STRING,
  chebi_par_id STRING,
  molecule_type STRING,
  first_approval STRING,
  oral STRING,
  parenteral STRING,
  topical STRING,
  black_box_warning STRING,
  natural_product STRING,
  first_in_class STRING,
  chirality STRING,
  prodrug STRING,
  inorganic_flag STRING,
  usan_year STRING,
  availability_type STRING,
  usan_stem STRING,
  polymer_flag STRING,
  usan_substem STRING,
  usan_stem_definition STRING,
  indication_class STRING,
  withdrawn_flag STRING,
  withdrawn_year STRING,
  withdrawn_country STRING,
  withdrawn_reason STRING,
  withdrawn_class STRING
);"

Some other tables have the similar structure: ['molecule_dictionary_29', 'molecule_dictionary_25', 'molecule_dictionary_30', 'molecule_dictionary_28', 'molecule_dictionary_23', 'molecule_dictionary_26', 'molecule_dictionary_27', 'molecule_dictionary_33', 'molecule_dictionary_24']
,79
table_name,activity_properties_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_properties_33`
(
  ap_id STRING,
  activity_id STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_type STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_text_value STRING,
  comments STRING,
  result_flag STRING
);"

Some other tables have the similar structure: ['activity_properties_33', 'activity_properties_25', 'activity_properties_29', 'activity_properties_30', 'activity_properties_26', 'activity_properties_27', 'activity_properties_24', 'activity_properties_28']
,80
table_name,drug_indication
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.drug_indication`
(
  drugind_id STRING,
  record_id STRING,
  molregno STRING,
  max_phase_for_ind STRING,
  mesh_id STRING,
  mesh_heading STRING,
  efo_id STRING,
  efo_term STRING
);"

,81
table_name,assay_classification_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_classification_26`
(
  assay_class_id STRING,
  l1 STRING,
  l2 STRING,
  l3 STRING,
  class_type STRING,
  bao_id STRING,
  source STRING
);"

Some other tables have the similar structure: ['assay_classification_26', 'assay_classification_29', 'assay_classification_33', 'assay_classification_25', 'assay_classification_28', 'assay_classification_27', 'assay_classification_30']
,82
table_name,molecule_synonyms_26
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_synonyms_26`
(
  molregno STRING,
  syn_type STRING,
  molsyn_id STRING,
  res_stem_id STRING,
  synonyms STRING
);"

Some other tables have the similar structure: ['molecule_synonyms_26', 'molecule_synonyms_24', 'molecule_synonyms_33', 'molecule_synonyms_28', 'molecule_synonyms_27', 'molecule_synonyms_29', 'molecule_synonyms_23', 'molecule_synonyms_25', 'molecule_synonyms_30']
,83
table_name,component_class_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_class_24`
(
  component_id STRING,
  protein_class_id STRING,
  comp_class_id STRING
);"

Some other tables have the similar structure: ['component_class_24', 'component_class_27', 'component_class_28', 'component_class_29', 'component_class_23', 'component_class_30', 'component_class_33', 'component_class_26', 'component_class_25']
,84
table_name,molecule_irac_classification_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_irac_classification_24`
(
  mol_irac_id STRING,
  irac_class_id STRING,
  molregno STRING
);"

Some other tables have the similar structure: ['molecule_irac_classification_24', 'molecule_irac_classification_26', 'molecule_irac_classification_28', 'molecule_irac_classification_33', 'molecule_irac_classification_29', 'molecule_irac_classification_23', 'molecule_irac_classification_30', 'molecule_irac_classification_27', 'molecule_irac_classification_25']
,85
table_name,molecule_frac_classification_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_frac_classification_28`
(
  mol_frac_id STRING,
  frac_class_id STRING,
  molregno STRING
);"

Some other tables have the similar structure: ['molecule_frac_classification_28', 'molecule_frac_classification_26', 'molecule_frac_classification_23', 'molecule_frac_classification_24', 'molecule_frac_classification_33', 'molecule_frac_classification_25', 'molecule_frac_classification_27', 'molecule_frac_classification_30', 'molecule_frac_classification_29']
,86
table_name,molecule_atc_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_atc_classification`
(
  mol_atc_id STRING,
  level5 STRING,
  molregno STRING
);"

,87
table_name,activity_stds_lookup
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_stds_lookup`
(
  std_act_id STRING,
  standard_type STRING,
  definition STRING,
  standard_units STRING,
  normal_range_min STRING,
  normal_range_max STRING
);"

,88
table_name,molecule_synonyms
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_synonyms`
(
  molregno STRING,
  syn_type STRING,
  molsyn_id STRING,
  res_stem_id STRING,
  synonyms STRING
);"

,89
table_name,metabolism_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.metabolism_23`
(
  met_id STRING,
  drug_record_id STRING,
  substrate_record_id STRING,
  metabolite_record_id STRING,
  pathway_id STRING,
  pathway_key STRING,
  enzyme_name STRING,
  enzyme_tid STRING,
  met_conversion STRING,
  organism STRING,
  tax_id STRING,
  met_comment STRING
);"

Some other tables have the similar structure: ['metabolism_23', 'metabolism_25', 'metabolism_29', 'metabolism_28', 'metabolism_33', 'metabolism_24', 'metabolism_27', 'metabolism_26', 'metabolism_30']
,90
table_name,patent_use_codes
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.patent_use_codes`
(
  patent_use_code STRING,
  definition STRING
);"

,91
table_name,data_validity_lookup
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.data_validity_lookup`
(
  data_validity_comment STRING,
  description STRING
);"

,92
table_name,curation_lookup_25
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.curation_lookup_25`
(
  curated_by STRING,
  description STRING
);"

Some other tables have the similar structure: ['curation_lookup_25', 'curation_lookup_30', 'curation_lookup_28', 'curation_lookup_26', 'curation_lookup_27', 'curation_lookup_33', 'curation_lookup_23', 'curation_lookup_29', 'curation_lookup_24']
,93
table_name,ligand_eff
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.ligand_eff`
(
  activity_id STRING,
  bei STRING,
  sei STRING,
  le STRING,
  lle STRING
);"

,94
table_name,activities_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activities_24`
(
  activity_id STRING,
  assay_id STRING,
  doc_id STRING,
  record_id STRING,
  molregno STRING,
  standard_relation STRING,
  published_value STRING,
  published_units STRING,
  standard_value STRING,
  standard_units STRING,
  standard_flag STRING,
  standard_type STRING,
  activity_comment STRING,
  published_type STRING,
  data_validity_comment STRING,
  potential_duplicate STRING,
  published_relation STRING,
  pchembl_value STRING,
  bao_endpoint STRING,
  uo_units STRING,
  qudt_units STRING,
  toid STRING,
  upper_value STRING,
  standard_upper_value STRING,
  src_id STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_text_value STRING
);"

Some other tables have the similar structure: ['activities_24', 'activities_26', 'activities_30', 'activities_33', 'activities_23', 'activities_28', 'activities_29', 'activities_27', 'activities_25']
,95
table_name,source
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.source`
(
  src_id STRING,
  src_description STRING,
  src_short_name STRING
);"

,96
table_name,molecule_irac_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_irac_classification`
(
  mol_irac_id STRING,
  irac_class_id STRING,
  molregno STRING
);"

,97
table_name,biotherapeutics
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.biotherapeutics`
(
  molregno STRING,
  description STRING,
  helm_notation STRING
);"

,98
table_name,protein_family_classification_29
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.protein_family_classification_29`
(
  protein_class_id STRING,
  protein_class_desc STRING,
  l1 STRING,
  l2 STRING,
  l3 STRING,
  l4 STRING,
  l5 STRING,
  l6 STRING,
  l7 STRING,
  l8 STRING
);"

Some other tables have the similar structure: ['protein_family_classification_29', 'protein_family_classification_28', 'protein_family_classification_25', 'protein_family_classification_26', 'protein_family_classification_30', 'protein_family_classification_24', 'protein_family_classification_27', 'protein_family_classification_23']
,99
table_name,metabolism
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.metabolism`
(
  met_id STRING,
  drug_record_id STRING,
  substrate_record_id STRING,
  metabolite_record_id STRING,
  pathway_id STRING,
  pathway_key STRING,
  enzyme_name STRING,
  enzyme_tid STRING,
  met_conversion STRING,
  organism STRING,
  tax_id STRING,
  met_comment STRING
);"

,100
table_name,activity_properties
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_properties`
(
  ap_id STRING,
  activity_id STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_type STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_text_value STRING,
  comments STRING,
  result_flag STRING
);"

,101
table_name,irac_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.irac_classification`
(
  irac_class_id STRING,
  active_ingredient STRING,
  level1 STRING,
  level1_description STRING,
  level2 STRING,
  level2_description STRING,
  level3 STRING,
  level3_description STRING,
  level4 STRING,
  irac_code STRING
);"

,102
table_name,bio_component_sequences
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.bio_component_sequences`
(
  component_id STRING,
  component_type STRING,
  description STRING,
  sequence STRING,
  sequence_md5sum STRING,
  tax_id STRING,
  organism STRING
);"

,103
table_name,chembl_release
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.chembl_release`
(
  chembl_release_id STRING,
  chembl_release STRING,
  creation_date STRING
);"

,104
table_name,cell_dictionary
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.cell_dictionary`
(
  cell_id STRING,
  cell_name STRING,
  cell_description STRING,
  cell_source_tissue STRING,
  cell_source_organism STRING,
  cell_source_tax_id STRING,
  clo_id STRING,
  efo_id STRING,
  cellosaurus_id STRING,
  cl_lincs_id STRING,
  chembl_id STRING,
  cell_ontology_id STRING
);"

,105
table_name,warning_refs_30
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.warning_refs_30`
(
  warnref_id INT64 NOT NULL OPTIONS(description=""Primary key for the warning reference""),
  warning_id INT64 OPTIONS(description=""Foreign key to the drug_warning table""),
  ref_type STRING OPTIONS(description=""Type/source of reference""),
  ref_id STRING OPTIONS(description=""Identifier for the reference in the source""),
  ref_url STRING OPTIONS(description=""Full URL linking to the reference"")
);"

Some other tables have the similar structure: ['warning_refs_30', 'warning_refs_29', 'warning_refs_28', 'warning_refs_33']
,106
table_name,sqlite_stat1
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.sqlite_stat1`
(
  tbl STRING,
  idx STRING,
  stat STRING
);"

,107
table_name,data_validity_lookup_33
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.data_validity_lookup_33`
(
  data_validity_comment STRING,
  description STRING
);"

Some other tables have the similar structure: ['data_validity_lookup_33', 'data_validity_lookup_30', 'data_validity_lookup_25', 'data_validity_lookup_27', 'data_validity_lookup_26', 'data_validity_lookup_28', 'data_validity_lookup_23', 'data_validity_lookup_29', 'data_validity_lookup_24']
,108
table_name,molecule_atc_classification_28
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_atc_classification_28`
(
  mol_atc_id STRING,
  level5 STRING,
  molregno STRING
);"

Some other tables have the similar structure: ['molecule_atc_classification_28', 'molecule_atc_classification_25', 'molecule_atc_classification_30', 'molecule_atc_classification_33', 'molecule_atc_classification_26', 'molecule_atc_classification_24', 'molecule_atc_classification_27', 'molecule_atc_classification_23', 'molecule_atc_classification_29']
,109
table_name,molecule_frac_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_frac_classification`
(
  mol_frac_id STRING,
  frac_class_id STRING,
  molregno STRING
);"

,110
table_name,component_sequences
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_sequences`
(
  component_id STRING,
  component_type STRING,
  accession STRING,
  sequence STRING,
  sequence_md5sum STRING,
  description STRING,
  tax_id STRING,
  organism STRING,
  db_source STRING,
  db_version STRING
);"

,111
table_name,products
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.products`
(
  dosage_form STRING,
  route STRING,
  trade_name STRING,
  approval_date STRING,
  ad_type STRING,
  oral STRING,
  topical STRING,
  parenteral STRING,
  black_box_warning STRING,
  applicant_full_name STRING,
  innovator_company STRING,
  product_id STRING,
  nda_type STRING
);"

,112
table_name,compound_properties
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_properties`
(
  molregno STRING,
  mw_freebase STRING,
  alogp STRING,
  hba STRING,
  hbd STRING,
  psa STRING,
  rtb STRING,
  ro3_pass STRING,
  num_ro5_violations STRING,
  cx_most_apka STRING,
  cx_most_bpka STRING,
  cx_logp STRING,
  cx_logd STRING,
  molecular_species STRING,
  full_mwt STRING,
  aromatic_rings STRING,
  heavy_atoms STRING,
  qed_weighted STRING,
  mw_monoisotopic STRING,
  full_molformula STRING,
  hba_lipinski STRING,
  hbd_lipinski STRING,
  num_lipinski_ro5_violations STRING,
  np_likeness_score STRING
);"

,113
table_name,protein_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.protein_classification`
(
  protein_class_id STRING,
  parent_id STRING,
  pref_name STRING,
  short_name STRING,
  protein_class_desc STRING,
  definition STRING,
  class_level STRING
);"

,114
table_name,parameter_type_23
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.parameter_type_23`
(
  parameter_type STRING,
  description STRING
);"

,115
table_name,indication_refs
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.indication_refs`
(
  indref_id STRING,
  drugind_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

,116
table_name,metabolism_refs
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.metabolism_refs`
(
  metref_id STRING,
  met_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

,117
table_name,target_relations
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_relations`
(
  tid STRING,
  relationship STRING,
  related_tid STRING,
  targrel_id STRING
);"

,118
table_name,structural_alert_sets
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.structural_alert_sets`
(
  alert_set_id STRING,
  set_name STRING,
  priority STRING
);"

,119
table_name,confidence_score_lookup
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.confidence_score_lookup`
(
  confidence_score STRING,
  description STRING,
  target_mapping STRING
);"

,120
table_name,predicted_binding_domains
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.predicted_binding_domains`
(
  predbind_id STRING,
  activity_id STRING,
  site_id STRING,
  prediction_method STRING,
  confidence STRING
);"

,121
table_name,match_24
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.match_24`
(
  patent_no STRING,
  publication_number STRING
);"

Some other tables have the similar structure: ['match_24', 'match_23']
,122
table_name,frac_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.frac_classification`
(
  frac_class_id STRING,
  active_ingredient STRING,
  level1 STRING,
  level1_description STRING,
  level2 STRING,
  level2_description STRING,
  level3 STRING,
  level3_description STRING,
  level4 STRING,
  level4_description STRING,
  level5 STRING,
  frac_code STRING
);"

,123
table_name,mechanism_refs
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.mechanism_refs`
(
  mecref_id STRING,
  mec_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

,124
table_name,curation_lookup
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.curation_lookup`
(
  curated_by STRING,
  description STRING
);"

,125
table_name,usan_stems
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.usan_stems`
(
  usan_stem_id STRING,
  stem STRING,
  subgroup STRING,
  annotation STRING,
  stem_class STRING,
  major_class STRING
);"

,126
table_name,structural_alerts
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.structural_alerts`
(
  alert_id STRING,
  alert_set_id STRING,
  alert_name STRING,
  smarts STRING
);"

,127
table_name,drug_mechanism
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.drug_mechanism`
(
  mec_id STRING,
  record_id STRING,
  molregno STRING,
  mechanism_of_action STRING,
  tid STRING,
  site_id STRING,
  action_type STRING,
  direct_interaction STRING,
  molecular_mechanism STRING,
  disease_efficacy STRING,
  mechanism_comment STRING,
  selectivity_comment STRING,
  binding_site_comment STRING,
  variant_id STRING
);"

,128
table_name,compound_structures
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_structures`
(
  molregno STRING,
  molfile STRING,
  standard_inchi STRING,
  standard_inchi_key STRING,
  canonical_smiles STRING
);"

,129
table_name,binding_sites
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.binding_sites`
(
  site_id STRING,
  site_name STRING,
  tid STRING
);"

,130
table_name,chembl_id_lookup
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.chembl_id_lookup`
(
  chembl_id STRING,
  entity_type STRING,
  entity_id STRING,
  status STRING,
  last_active STRING
);"

,131
table_name,tissue_dictionary
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.tissue_dictionary`
(
  tissue_id STRING,
  uberon_id STRING,
  pref_name STRING,
  efo_id STRING,
  chembl_id STRING,
  bto_id STRING,
  caloha_id STRING
);"

,132
table_name,atc_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.atc_classification`
(
  who_name STRING,
  level1 STRING,
  level2 STRING,
  level3 STRING,
  level4 STRING,
  level5 STRING,
  level1_description STRING,
  level2_description STRING,
  level3_description STRING,
  level4_description STRING
);"

,133
table_name,assay_class_map
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_class_map`
(
  ass_cls_map_id STRING,
  assay_id STRING,
  assay_class_id STRING
);"

,134
table_name,target_components
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_components`
(
  tid STRING,
  component_id STRING,
  targcomp_id STRING,
  homologue STRING
);"

,135
table_name,component_class
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_class`
(
  component_id STRING,
  protein_class_id STRING,
  comp_class_id STRING
);"

,136
table_name,molecule_hierarchy
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_hierarchy`
(
  molregno STRING,
  parent_molregno STRING,
  active_molregno STRING
);"

,137
table_name,bioassay_ontology
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.bioassay_ontology`
(
  bao_id STRING,
  label STRING
);"

,138
table_name,version
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.version`
(
  name STRING,
  creation_date STRING,
  comments STRING
);"

,139
table_name,protein_family_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.protein_family_classification`
(
  protein_class_id STRING,
  protein_class_desc STRING,
  l1 STRING,
  l2 STRING,
  l3 STRING,
  l4 STRING,
  l5 STRING,
  l6 STRING,
  l7 STRING,
  l8 STRING
);"

,140
table_name,activities
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activities`
(
  activity_id STRING,
  assay_id STRING,
  doc_id STRING,
  record_id STRING,
  molregno STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_flag STRING,
  standard_type STRING,
  activity_comment STRING,
  data_validity_comment STRING,
  potential_duplicate STRING,
  pchembl_value STRING,
  bao_endpoint STRING,
  uo_units STRING,
  qudt_units STRING,
  toid STRING,
  upper_value STRING,
  standard_upper_value STRING,
  src_id STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_text_value STRING,
  action_type STRING
);"

,141
table_name,formulations
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.formulations`
(
  product_id STRING,
  ingredient STRING,
  strength STRING,
  record_id STRING,
  molregno STRING,
  formulation_id STRING
);"

,142
table_name,component_go
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.component_go`
(
  comp_go_id STRING,
  component_id STRING,
  go_id STRING
);"

,143
table_name,docs
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.docs`
(
  doc_id STRING,
  journal STRING,
  year STRING,
  volume STRING,
  issue STRING,
  first_page STRING,
  last_page STRING,
  pubmed_id STRING,
  doi STRING,
  chembl_id STRING,
  title STRING,
  doc_type STRING,
  authors STRING,
  abstract STRING,
  patent_id STRING,
  ridx STRING,
  src_id STRING,
  chembl_release_id STRING
);"

,144
table_name,activity_smid
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_smid`
(
  smid STRING
);"

,145
table_name,warning_refs
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.warning_refs`
(
  warnref_id STRING,
  warning_id STRING,
  ref_type STRING,
  ref_id STRING,
  ref_url STRING
);"

,146
table_name,go_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.go_classification`
(
  go_id STRING,
  parent_go_id STRING,
  pref_name STRING,
  class_level STRING,
  aspect STRING,
  path STRING
);"

,147
table_name,site_components
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.site_components`
(
  sitecomp_id STRING,
  site_id STRING,
  component_id STRING,
  domain_id STRING,
  site_residues STRING
);"

,148
table_name,assay_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_classification`
(
  assay_class_id STRING,
  l1 STRING,
  l2 STRING,
  l3 STRING,
  class_type STRING,
  source STRING
);"

,149
table_name,assays
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assays`
(
  assay_id STRING,
  doc_id STRING,
  description STRING,
  assay_type STRING,
  assay_test_type STRING,
  assay_category STRING,
  assay_organism STRING,
  assay_tax_id STRING,
  assay_strain STRING,
  assay_tissue STRING,
  assay_cell_type STRING,
  assay_subcellular_fraction STRING,
  tid STRING,
  relationship_type STRING,
  confidence_score STRING,
  curated_by STRING,
  src_id STRING,
  src_assay_id STRING,
  chembl_id STRING,
  cell_id STRING,
  bao_format STRING,
  tissue_id STRING,
  variant_id STRING,
  aidx STRING
);"

,150
table_name,assay_type
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_type`
(
  assay_type STRING,
  assay_desc STRING
);"

,151
table_name,compound_structural_alerts
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_structural_alerts`
(
  cpd_str_alert_id STRING,
  molregno STRING,
  alert_id STRING
);"

,152
table_name,activity_supp
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.activity_supp`
(
  as_id STRING,
  rgid STRING,
  smid STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_type STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_text_value STRING,
  comments STRING
);"

,153
table_name,target_dictionary
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.target_dictionary`
(
  tid STRING,
  target_type STRING,
  pref_name STRING,
  tax_id STRING,
  organism STRING,
  chembl_id STRING,
  species_group_flag STRING
);"

,154
table_name,research_stem
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.research_stem`
(
  res_stem_id STRING,
  research_stem STRING
);"

,155
table_name,assay_parameters
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.assay_parameters`
(
  assay_param_id STRING,
  assay_id STRING,
  type STRING,
  relation STRING,
  value STRING,
  units STRING,
  text_value STRING,
  standard_type STRING,
  standard_relation STRING,
  standard_value STRING,
  standard_units STRING,
  standard_text_value STRING,
  comments STRING
);"

,156
table_name,action_type
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.action_type`
(
  action_type STRING,
  description STRING,
  parent_type STRING
);"

,157
table_name,product_patents
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.product_patents`
(
  prod_pat_id STRING,
  product_id STRING,
  patent_no STRING,
  patent_expire_date STRING,
  drug_substance_flag STRING,
  drug_product_flag STRING,
  patent_use_code STRING,
  delist_flag STRING,
  submission_date STRING
);"

,158
table_name,compound_records
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.compound_records`
(
  record_id STRING,
  molregno STRING,
  doc_id STRING,
  compound_key STRING,
  compound_name STRING,
  src_id STRING,
  src_compound_id STRING,
  cidx STRING
);"

,159
table_name,hrac_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.hrac_classification`
(
  hrac_class_id STRING,
  active_ingredient STRING,
  level1 STRING,
  level1_description STRING,
  level2 STRING,
  level2_description STRING,
  level3 STRING,
  hrac_code STRING
);"

,160
table_name,research_companies
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.research_companies`
(
  co_stem_id STRING,
  res_stem_id STRING,
  company STRING,
  country STRING,
  previous_company STRING
);"

,161
table_name,variant_sequences
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.variant_sequences`
(
  variant_id STRING,
  mutation STRING,
  accession STRING,
  version STRING,
  isoform STRING,
  sequence STRING,
  organism STRING,
  tax_id STRING
);"

,162
table_name,molecule_hrac_classification
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.molecule_hrac_classification`
(
  mol_hrac_id STRING,
  hrac_class_id STRING,
  molregno STRING
);"

,163
table_name,defined_daily_dose
ddl,"CREATE TABLE `bigquery-public-data.ebi_chembl.defined_daily_dose`
(
  atc_code STRING,
  ddd_units STRING,
  ddd_admr STRING,
  ddd_comment STRING,
  ddd_id STRING,
  ddd_value STRING
);"

External knowledge that might be helpful: 
### Data Sources:
Part tables of ChEMBL database:
- activity data: patents-public-data.ebi_chembl.activities_29
- compound structures: patents-public-data.ebi_chembl.compound_structures_29 
- compound properties: patents-public-data.ebi_chembl.compound_properties_29 
- publication documents: patents-public-data.ebi_chembl.docs_29 

### UUID Generation:
Activity Pair UUID (mmp_delta_uuid):
Generated using the MD5 hash of the JSON string of the pair's activity IDs:
to_hex(md5(to_json_string(struct(A, B))))
Both A and B can be activity id or canonical_smiles

### Standard Change Classification:
Determines whether the standard value between two molecules has increased, decreased, or stayed the same:
'decrease': If standard_value_1 >(>>) standard_value_2 and measurement relations do not conflict.
'increase': If standard_value_1 <(<<) standard_value_2 and measurement relations do not conflict.
'no-change': If standard_value_1 =(~) standard_value_2 and both standard relations indicate equality.

### How to Got the publication Date
To compute a publication date for each document, we use the following method, which assigns a date based on the document's relative position within its journal and year, ordered by its first page number.

#### 1. Year Calculation

- **Year**: Use the document's publication year as the year in the date.
  - If the document's year is known, use that year.
  - If the year is missing or unavailable, default to **1970**.

#### 2. Month Calculation

- **Grouping**: For all documents within the same **journal** and **year**, group them together.
- **Ordering**: Within each group, order the documents by their `first_page` number (converted to an integer).
- **Percent Rank Computation**:
  - Calculate the **percent rank** of each document in the ordered list.
  - **Percent Rank Formula**:

    $$\text{Percent Rank} = \frac{\text{Rank of Document} - 1}{\text{Total Documents in Group} - 1}$$

    - The rank starts at 1 for the first document.
    - The percent rank ranges from 0 to 1.
- **Month Assignment**:
  - Scale the percent rank to months by multiplying it by 11:

    $$\text{Scaled Value} = \text{Percent Rank} \times 11$$

  - Take the integer part of the scaled value (floor it):

    $$\text{Floor Value} = \left\lfloor \text{Scaled Value} \right\rfloor$$

  - Add 1 to get the month number (since months are from 1 to 12):

    $$\text{Month} = \text{Floor Value} + 1$$

  - **Note**: If the computed month is not available (e.g., due to missing data), default the month to **1**.

#### 3. Day Calculation

- **Using the Same Percent Rank**: Use the percent rank computed in the month calculation.
- **Day Assignment**:
  - Scale the percent rank to days by multiplying it by **308**:

    $$\text{Scaled Value} = \text{Percent Rank} \times 308$$

    - The number 308 is chosen because it is the product of 11 months and 28 days (11 × 28), representing the total number of days in an 11-month period with 28 days per month.
  - Take the integer part of the scaled value (floor it):

    $$\text{Floor Value} = \left\lfloor \text{Scaled Value} \right\rfloor$$

  - Compute the modulus of the floor value with 28:

    $$\text{Modulo Value} = \text{Floor Value} \bmod 28$$

  - Add 1 to get the day number (since days are from 1 to 28):

    $$\text{Day} = \text{Modulo Value} + 1$$

  - **Note**: If the computed day is not available, default the day to **1**.

### 4. Constructing the publication Date

- Combine the computed **Year**, **Month**, and **Day** to form the publication date.

  $$\text{publication Date} : \text{Year}-\text{Month}-\text{Day}$$

  For example, 2002-06-15.

The table structure information is ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'ebi_chembl': ['action_type', 'action_type_23', 'action_type_24', 'action_type_25', 'action_type_26', 'action_type_27', 'action_type_28', 'action_type_29', 'action_type_30', 'action_type_33', 'activities', 'activities_23', 'activities_24', 'activities_25', 'activities_26', 'activities_27', 'activities_28', 'activities_29', 'activities_30', 'activities_33', 'activity_properties', 'activity_properties_24', 'activity_properties_25', 'activity_properties_26', 'activity_properties_27', 'activity_properties_28', 'activity_properties_29', 'activity_properties_30', 'activity_properties_33', 'activity_smid', 'activity_smid_24', 'activity_smid_25', 'activity_smid_26', 'activity_smid_27', 'activity_smid_28', 'activity_smid_29', 'activity_smid_30', 'activity_smid_33', 'activity_stds_lookup', 'activity_stds_lookup_23', 'activity_stds_lookup_24', 'activity_stds_lookup_25', 'activity_stds_lookup_26', 'activity_stds_lookup_27', 'activity_stds_lookup_28', 'activity_stds_lookup_29', 'activity_stds_lookup_30', 'activity_stds_lookup_33', 'activity_supp', 'activity_supp_24', 'activity_supp_25', 'activity_supp_26', 'activity_supp_27', 'activity_supp_28', 'activity_supp_29', 'activity_supp_30', 'activity_supp_33', 'activity_supp_map', 'activity_supp_map_24', 'activity_supp_map_25', 'activity_supp_map_26', 'activity_supp_map_27', 'activity_supp_map_28', 'activity_supp_map_29', 'activity_supp_map_30', 'activity_supp_map_33', 'assay_class_map', 'assay_class_map_25', 'assay_class_map_26', 'assay_class_map_27', 'assay_class_map_28', 'assay_class_map_29', 'assay_class_map_30', 'assay_class_map_33', 'assay_classification', 'assay_classification_25', 'assay_classification_26', 'assay_classification_27', 'assay_classification_28', 'assay_classification_29', 'assay_classification_30', 'assay_classification_33', 'assay_parameters', 'assay_parameters_23', 'assay_parameters_24', 'assay_parameters_25', 'assay_parameters_26', 'assay_parameters_27', 'assay_parameters_28', 'assay_parameters_29', 'assay_parameters_30', 'assay_parameters_33', 'assay_type', 'assay_type_23', 'assay_type_24', 'assay_type_25', 'assay_type_26', 'assay_type_27', 'assay_type_28', 'assay_type_29', 'assay_type_30', 'assay_type_33', 'assays', 'assays_23', 'assays_24', 'assays_25', 'assays_26', 'assays_27', 'assays_28', 'assays_29', 'assays_30', 'assays_33', 'atc_classification', 'atc_classification_23', 'atc_classification_24', 'atc_classification_25', 'atc_classification_26', 'atc_classification_27', 'atc_classification_28', 'atc_classification_29', 'atc_classification_30', 'atc_classification_33', 'binding_sites', 'binding_sites_23', 'binding_sites_24', 'binding_sites_25', 'binding_sites_26', 'binding_sites_27', 'binding_sites_28', 'binding_sites_29', 'binding_sites_30', 'binding_sites_33', 'bio_component_sequences', 'bio_component_sequences_23', 'bio_component_sequences_24', 'bio_component_sequences_25', 'bio_component_sequences_26', 'bio_component_sequences_27', 'bio_component_sequences_28', 'bio_component_sequences_29', 'bio_component_sequences_30', 'bio_component_sequences_33', 'bioassay_ontology', 'bioassay_ontology_23', 'bioassay_ontology_24', 'bioassay_ontology_25', 'bioassay_ontology_26', 'bioassay_ontology_27', 'bioassay_ontology_28', 'bioassay_ontology_29', 'bioassay_ontology_30', 'bioassay_ontology_33', 'biotherapeutic_components', 'biotherapeutic_components_23', 'biotherapeutic_components_24', 'biotherapeutic_components_25', 'biotherapeutic_components_26', 'biotherapeutic_components_27', 'biotherapeutic_components_28', 'biotherapeutic_components_29', 'biotherapeutic_components_30', 'biotherapeutic_components_33', 'biotherapeutics', 'biotherapeutics_23', 'biotherapeutics_24', 'biotherapeutics_25', 'biotherapeutics_26', 'biotherapeutics_27', 'biotherapeutics_28', 'biotherapeutics_29', 'biotherapeutics_30', 'biotherapeutics_33', 'cell_dictionary', 'cell_dictionary_23', 'cell_dictionary_24', 'cell_dictionary_25', 'cell_dictionary_26', 'cell_dictionary_27', 'cell_dictionary_28', 'cell_dictionary_29', 'cell_dictionary_30', 'cell_dictionary_33', 'chembl_id_lookup', 'chembl_id_lookup_23', 'chembl_id_lookup_24', 'chembl_id_lookup_25', 'chembl_id_lookup_26', 'chembl_id_lookup_27', 'chembl_id_lookup_28', 'chembl_id_lookup_29', 'chembl_id_lookup_30', 'chembl_id_lookup_33', 'chembl_release', 'chembl_release_33', 'component_class', 'component_class_23', 'component_class_24', 'component_class_25', 'component_class_26', 'component_class_27', 'component_class_28', 'component_class_29', 'component_class_30', 'component_class_33', 'component_domains', 'component_domains_23', 'component_domains_24', 'component_domains_25', 'component_domains_26', 'component_domains_27', 'component_domains_28', 'component_domains_29', 'component_domains_30', 'component_domains_33', 'component_go', 'component_go_23', 'component_go_24', 'component_go_25', 'component_go_26', 'component_go_27', 'component_go_28', 'component_go_29', 'component_go_30', 'component_go_33', 'component_sequences', 'component_sequences_23', 'component_sequences_24', 'component_sequences_25', 'component_sequences_26', 'component_sequences_27', 'component_sequences_28', 'component_sequences_29', 'component_sequences_30', 'component_sequences_33', 'component_synonyms', 'component_synonyms_23', 'component_synonyms_24', 'component_synonyms_25', 'component_synonyms_26', 'component_synonyms_27', 'component_synonyms_28', 'component_synonyms_29', 'component_synonyms_30', 'component_synonyms_33', 'compound_properties', 'compound_properties_23', 'compound_properties_24', 'compound_properties_25', 'compound_properties_26', 'compound_properties_27', 'compound_properties_28', 'compound_properties_29', 'compound_properties_30', 'compound_properties_33', 'compound_records', 'compound_records_23', 'compound_records_24', 'compound_records_25', 'compound_records_26', 'compound_records_27', 'compound_records_28', 'compound_records_29', 'compound_records_30', 'compound_records_33', 'compound_structural_alerts', 'compound_structural_alerts_23', 'compound_structural_alerts_24', 'compound_structural_alerts_25', 'compound_structural_alerts_26', 'compound_structural_alerts_27', 'compound_structural_alerts_28', 'compound_structural_alerts_29', 'compound_structural_alerts_30', 'compound_structural_alerts_33', 'compound_structures', 'compound_structures_23', 'compound_structures_24', 'compound_structures_25', 'compound_structures_26', 'compound_structures_27', 'compound_structures_28', 'compound_structures_29', 'compound_structures_30', 'compound_structures_33', 'confidence_score_lookup', 'confidence_score_lookup_23', 'confidence_score_lookup_24', 'confidence_score_lookup_25', 'confidence_score_lookup_26', 'confidence_score_lookup_27', 'confidence_score_lookup_28', 'confidence_score_lookup_29', 'confidence_score_lookup_30', 'confidence_score_lookup_33', 'curation_lookup', 'curation_lookup_23', 'curation_lookup_24', 'curation_lookup_25', 'curation_lookup_26', 'curation_lookup_27', 'curation_lookup_28', 'curation_lookup_29', 'curation_lookup_30', 'curation_lookup_33', 'data_validity_lookup', 'data_validity_lookup_23', 'data_validity_lookup_24', 'data_validity_lookup_25', 'data_validity_lookup_26', 'data_validity_lookup_27', 'data_validity_lookup_28', 'data_validity_lookup_29', 'data_validity_lookup_30', 'data_validity_lookup_33', 'defined_daily_dose', 'defined_daily_dose_23', 'defined_daily_dose_24', 'defined_daily_dose_25', 'defined_daily_dose_26', 'defined_daily_dose_27', 'defined_daily_dose_28', 'defined_daily_dose_29', 'defined_daily_dose_30', 'defined_daily_dose_33', 'docs', 'docs_23', 'docs_24', 'docs_25', 'docs_26', 'docs_27', 'docs_28', 'docs_29', 'docs_30', 'docs_33', 'domains', 'domains_23', 'domains_24', 'domains_25', 'domains_26', 'domains_27', 'domains_28', 'domains_29', 'domains_30', 'domains_33', 'drug_indication', 'drug_indication_23', 'drug_indication_24', 'drug_indication_25', 'drug_indication_26', 'drug_indication_27', 'drug_indication_28', 'drug_indication_29', 'drug_indication_30', 'drug_indication_33', 'drug_mechanism', 'drug_mechanism_23', 'drug_mechanism_24', 'drug_mechanism_25', 'drug_mechanism_26', 'drug_mechanism_27', 'drug_mechanism_28', 'drug_mechanism_29', 'drug_mechanism_30', 'drug_mechanism_33', 'drug_warning', 'drug_warning_28', 'drug_warning_29', 'drug_warning_30', 'drug_warning_33', 'formulations', 'formulations_23', 'formulations_24', 'formulations_25', 'formulations_26', 'formulations_27', 'formulations_28', 'formulations_29', 'formulations_30', 'formulations_33', 'frac_classification', 'frac_classification_23', 'frac_classification_24', 'frac_classification_25', 'frac_classification_26', 'frac_classification_27', 'frac_classification_28', 'frac_classification_29', 'frac_classification_30', 'frac_classification_33', 'go_classification', 'go_classification_23', 'go_classification_24', 'go_classification_25', 'go_classification_26', 'go_classification_27', 'go_classification_28', 'go_classification_29', 'go_classification_30', 'go_classification_33', 'hrac_classification', 'hrac_classification_23', 'hrac_classification_24', 'hrac_classification_25', 'hrac_classification_26', 'hrac_classification_27', 'hrac_classification_28', 'hrac_classification_29', 'hrac_classification_30', 'hrac_classification_33', 'indication_refs', 'indication_refs_23', 'indication_refs_24', 'indication_refs_25', 'indication_refs_26', 'indication_refs_27', 'indication_refs_28', 'indication_refs_29', 'indication_refs_30', 'indication_refs_33', 'irac_classification', 'irac_classification_23', 'irac_classification_24', 'irac_classification_25', 'irac_classification_26', 'irac_classification_27', 'irac_classification_28', 'irac_classification_29', 'irac_classification_30', 'irac_classification_33', 'ligand_eff', 'ligand_eff_23', 'ligand_eff_24', 'ligand_eff_25', 'ligand_eff_26', 'ligand_eff_27', 'ligand_eff_28', 'ligand_eff_29', 'ligand_eff_30', 'ligand_eff_33', 'match_23', 'match_24', 'mechanism_refs', 'mechanism_refs_23', 'mechanism_refs_24', 'mechanism_refs_25', 'mechanism_refs_26', 'mechanism_refs_27', 'mechanism_refs_28', 'mechanism_refs_29', 'mechanism_refs_30', 'mechanism_refs_33', 'metabolism', 'metabolism_23', 'metabolism_24', 'metabolism_25', 'metabolism_26', 'metabolism_27', 'metabolism_28', 'metabolism_29', 'metabolism_30', 'metabolism_33', 'metabolism_refs', 'metabolism_refs_23', 'metabolism_refs_24', 'metabolism_refs_25', 'metabolism_refs_26', 'metabolism_refs_27', 'metabolism_refs_28', 'metabolism_refs_29', 'metabolism_refs_30', 'metabolism_refs_33', 'molecule_atc_classification', 'molecule_atc_classification_23', 'molecule_atc_classification_24', 'molecule_atc_classification_25', 'molecule_atc_classification_26', 'molecule_atc_classification_27', 'molecule_atc_classification_28', 'molecule_atc_classification_29', 'molecule_atc_classification_30', 'molecule_atc_classification_33', 'molecule_dictionary', 'molecule_dictionary_23', 'molecule_dictionary_24', 'molecule_dictionary_25', 'molecule_dictionary_26', 'molecule_dictionary_27', 'molecule_dictionary_28', 'molecule_dictionary_29', 'molecule_dictionary_30', 'molecule_dictionary_33', 'molecule_frac_classification', 'molecule_frac_classification_23', 'molecule_frac_classification_24', 'molecule_frac_classification_25', 'molecule_frac_classification_26', 'molecule_frac_classification_27', 'molecule_frac_classification_28', 'molecule_frac_classification_29', 'molecule_frac_classification_30', 'molecule_frac_classification_33', 'molecule_hierarchy', 'molecule_hierarchy_23', 'molecule_hierarchy_24', 'molecule_hierarchy_25', 'molecule_hierarchy_26', 'molecule_hierarchy_27', 'molecule_hierarchy_28', 'molecule_hierarchy_29', 'molecule_hierarchy_30', 'molecule_hierarchy_33', 'molecule_hrac_classification', 'molecule_hrac_classification_23', 'molecule_hrac_classification_24', 'molecule_hrac_classification_25', 'molecule_hrac_classification_26', 'molecule_hrac_classification_27', 'molecule_hrac_classification_28', 'molecule_hrac_classification_29', 'molecule_hrac_classification_30', 'molecule_hrac_classification_33', 'molecule_irac_classification', 'molecule_irac_classification_23', 'molecule_irac_classification_24', 'molecule_irac_classification_25', 'molecule_irac_classification_26', 'molecule_irac_classification_27', 'molecule_irac_classification_28', 'molecule_irac_classification_29', 'molecule_irac_classification_30', 'molecule_irac_classification_33', 'molecule_synonyms', 'molecule_synonyms_23', 'molecule_synonyms_24', 'molecule_synonyms_25', 'molecule_synonyms_26', 'molecule_synonyms_27', 'molecule_synonyms_28', 'molecule_synonyms_29', 'molecule_synonyms_30', 'molecule_synonyms_33', 'organism_class', 'organism_class_23', 'organism_class_24', 'organism_class_25', 'organism_class_26', 'organism_class_27', 'organism_class_28', 'organism_class_29', 'organism_class_30', 'organism_class_33', 'parameter_type_23', 'patent_use_codes', 'patent_use_codes_23', 'patent_use_codes_24', 'patent_use_codes_25', 'patent_use_codes_26', 'patent_use_codes_27', 'patent_use_codes_28', 'patent_use_codes_29', 'patent_use_codes_30', 'patent_use_codes_33', 'predicted_binding_domains', 'predicted_binding_domains_23', 'predicted_binding_domains_24', 'predicted_binding_domains_25', 'predicted_binding_domains_26', 'predicted_binding_domains_27', 'predicted_binding_domains_28', 'predicted_binding_domains_29', 'predicted_binding_domains_30', 'predicted_binding_domains_33', 'product_patents', 'product_patents_23', 'product_patents_24', 'product_patents_25', 'product_patents_26', 'product_patents_27', 'product_patents_28', 'product_patents_29', 'product_patents_30', 'product_patents_33', 'products', 'products_23', 'products_24', 'products_25', 'products_26', 'products_27', 'products_28', 'products_29', 'products_30', 'products_33', 'protein_class_synonyms', 'protein_class_synonyms_23', 'protein_class_synonyms_24', 'protein_class_synonyms_25', 'protein_class_synonyms_26', 'protein_class_synonyms_27', 'protein_class_synonyms_28', 'protein_class_synonyms_29', 'protein_class_synonyms_30', 'protein_class_synonyms_33', 'protein_classification', 'protein_classification_23', 'protein_classification_24', 'protein_classification_25', 'protein_classification_26', 'protein_classification_27', 'protein_classification_28', 'target_components_30', 'protein_classification_29', 'protein_classification_30', 'protein_classification_33', 'protein_family_classification', 'protein_family_classification_23', 'protein_family_classification_24', 'protein_family_classification_25', 'protein_family_classification_26', 'protein_family_classification_27', 'protein_family_classification_28', 'protein_family_classification_29', 'protein_family_classification_30', 'relationship_type', 'relationship_type_23', 'relationship_type_24', 'relationship_type_25', 'relationship_type_26', 'relationship_type_27', 'relationship_type_28', 'relationship_type_29', 'relationship_type_30', 'relationship_type_33', 'research_companies', 'research_companies_23', 'research_companies_24', 'research_companies_25', 'research_companies_26', 'research_companies_27', 'research_companies_28', 'research_companies_29', 'research_companies_30', 'research_companies_33', 'research_stem', 'research_stem_23', 'research_stem_24', 'research_stem_25', 'research_stem_26', 'research_stem_27', 'research_stem_28', 'research_stem_29', 'research_stem_30', 'research_stem_33', 'site_components', 'site_components_23', 'site_components_24', 'site_components_25', 'site_components_26', 'site_components_27', 'site_components_28', 'site_components_29', 'site_components_30', 'site_components_33', 'source', 'source_23', 'source_24', 'source_25', 'source_26', 'source_27', 'source_28', 'source_29', 'source_30', 'source_33', 'sqlite_stat1', 'sqlite_stat1_23', 'sqlite_stat1_24', 'sqlite_stat1_25', 'sqlite_stat1_26', 'sqlite_stat1_27', 'sqlite_stat1_28', 'sqlite_stat1_29', 'sqlite_stat1_33', 'structural_alert_sets', 'structural_alert_sets_23', 'structural_alert_sets_24', 'structural_alert_sets_25', 'structural_alert_sets_26', 'structural_alert_sets_27', 'structural_alert_sets_28', 'structural_alert_sets_29', 'structural_alert_sets_30', 'structural_alert_sets_33', 'structural_alerts', 'structural_alerts_23', 'structural_alerts_24', 'structural_alerts_25', 'structural_alerts_26', 'structural_alerts_27', 'structural_alerts_28', 'structural_alerts_29', 'structural_alerts_30', 'structural_alerts_33', 'target_components', 'target_components_23', 'target_components_24', 'target_components_25', 'target_components_26', 'target_components_27', 'target_components_28', 'target_components_29', 'target_components_33', 'target_dictionary', 'target_dictionary_23', 'target_dictionary_24', 'target_dictionary_25', 'target_dictionary_26', 'target_dictionary_27', 'target_dictionary_28', 'target_dictionary_29', 'target_dictionary_30', 'target_dictionary_33', 'target_relations', 'target_relations_23', 'target_relations_24', 'target_relations_25', 'target_relations_26', 'target_relations_27', 'target_relations_28', 'target_relations_29', 'target_relations_30', 'target_relations_33', 'target_type', 'target_type_23', 'target_type_24', 'target_type_25', 'target_type_26', 'target_type_27', 'target_type_28', 'target_type_29', 'target_type_30', 'target_type_33', 'tissue_dictionary', 'tissue_dictionary_23', 'tissue_dictionary_24', 'tissue_dictionary_25', 'tissue_dictionary_26', 'tissue_dictionary_27', 'tissue_dictionary_28', 'tissue_dictionary_29', 'tissue_dictionary_30', 'tissue_dictionary_33', 'usan_stems', 'usan_stems_23', 'usan_stems_24', 'usan_stems_25', 'usan_stems_26', 'usan_stems_27', 'usan_stems_28', 'usan_stems_29', 'usan_stems_30', 'usan_stems_33', 'variant_sequences', 'variant_sequences_23', 'variant_sequences_24', 'variant_sequences_25', 'variant_sequences_26', 'variant_sequences_27', 'variant_sequences_28', 'variant_sequences_29', 'variant_sequences_30', 'variant_sequences_33', 'version', 'version_23', 'version_24', 'version_25', 'version_26', 'version_27', 'version_28', 'version_29', 'version_30', 'version_33', 'warning_refs', 'warning_refs_28', 'warning_refs_29', 'warning_refs_30', 'warning_refs_33']}}
Begin Exploring Related Columns
Columns and potential usage:

- `activities.activity_id`: Used to generate UUIDs from activity IDs.
- `activities.assay_id`: To identify activities tested in the same assay.
- `activities.standard_type`: To ensure activities have the same standard type.
- `activities.molregno`: Molecule identifier; used to join with molecule properties and structures.
- `activities.standard_value`: Non-null standard values; used for change classification.
- `activities.standard_relation`: Relation of the standard value (e.g., '=', '<', '>'); used for change classification.
- `activities.pchembl_value`: pChEMBL values over 10.
- `activities.doc_id`: Document identifier; used to find publication details.
- `compound_properties.molregno`: Used to join with activities to get molecule properties.
- `compound_properties.heavy_atoms`: Number of heavy atoms; needed to filter molecules with 10–15 heavy atoms.
- `compound_structures.molregno`: Used to join with molecules to get canonical SMILES.
- `compound_structures.canonical_smiles`: Used to generate UUIDs from canonical SMILES.
- `docs.doc_id`: Used to join with activities to get publication details.
- `docs.journal`: Used in calculating the publication date.
- `docs.year`: Used in calculating the publication date.
- `docs.first_page`: Used in calculating the publication date.

Conditions that may be used:

- `compound_properties.heavy_atoms BETWEEN 10 AND 15`
- Activities with `standard_value IS NOT NULL`
- Activities with `pchembl_value > 10`
- Molecules with fewer than 5 activities in the same assay
- Molecules with fewer than 2 duplicate activities
- Activities tested in the same assay and standard type

---

**SQL Queries:**

1. **Retrieve distinct assay IDs from the activities table to understand available assays:**

    ```sql
    SELECT DISTINCT assay_id
    FROM `bigquery-public-data.ebi_chembl.activities`
    LIMIT 100;
    ```

2. **List molecules (molregno) with their heavy atom counts between 10 and 15:**

    ```sql
    SELECT molregno, heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.compound_properties`
    WHERE heavy_atoms BETWEEN 10 AND 15
    LIMIT 100;
    ```

3. **Find activities with non-null standard values and pChEMBL values over 10:**

    ```sql
    SELECT activity_id, molregno, standard_value, pchembl_value
    FROM `bigquery-public-data.ebi_chembl.activities`
    WHERE standard_value IS NOT NULL
      AND pchembl_value > 10
    LIMIT 100;
    ```

4. **Identify activities along with their assay IDs and standard types:**

    ```sql
    SELECT activity_id, assay_id, standard_type
    FROM `bigquery-public-data.ebi_chembl.activities`
    LIMIT 100;
    ```

5. **Count the number of activities per molecule in each assay to find those with fewer than 5 activities:**

    ```sql
    SELECT assay_id, molregno, COUNT(*) AS activity_count
    FROM `bigquery-public-data.ebi_chembl.activities`
    GROUP BY assay_id, molregno
    HAVING COUNT(*) < 5
    LIMIT 100;
    ```

6. **Find duplicate activities for each molecule in each assay (assuming duplicates have the same standard value and relation):**

    ```sql
    SELECT assay_id, molregno, standard_value, standard_relation, COUNT(*) AS duplicate_count
    FROM `bigquery-public-data.ebi_chembl.activities`
    GROUP BY assay_id, molregno, standard_value, standard_relation
    HAVING COUNT(*) > 1
    LIMIT 100;
    ```

7. **Retrieve activities with their document IDs to link to publication information:**

    ```sql
    SELECT activity_id, doc_id, molregno
    FROM `bigquery-public-data.ebi_chembl.activities`
    WHERE doc_id IS NOT NULL
    LIMIT 100;
    ```

8. **Join activities with documents to get publication year and journal:**

    ```sql
    SELECT a.activity_id, a.molregno, d.year, d.journal
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.docs` AS d
    ON a.doc_id = d.doc_id
    LIMIT 100;
    ```

9. **Get canonical SMILES for molecules to be used in UUID generation:**

    ```sql
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL
    LIMIT 100;
    ```

10. **Combine activities, compound properties, and documents to find all necessary information for the task:**

    ```sql
    SELECT
      a.activity_id,
      a.assay_id,
      a.molregno,
      p.heavy_atoms,
      a.standard_value,
      a.standard_relation,
      a.pchembl_value,
      d.doc_id,
      d.year,
      d.journal,
      d.first_page
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS p
      ON a.molregno = p.molregno
    JOIN `bigquery-public-data.ebi_chembl.docs` AS d
      ON a.doc_id = d.doc_id
    WHERE p.heavy_atoms BETWEEN 10 AND 15
      AND a.standard_value IS NOT NULL
      AND a.pchembl_value > 10
    LIMIT 100;
    ```

Each query above helps to understand the data needed for the task. Starting from simple queries to inspect individual tables, to more complex ones that join multiple tables and apply conditions relevant to the task.Query:
SELECT DISTINCT assay_id
    FROM `bigquery-public-data.ebi_chembl.activities`
    LIMIT 100;
Answer:
assay_id
24932
18154
17994
18254
2210167
1579804
815262
58389
1702184
1627159
2052851
619143
584926
704564
748210
574427
693160
496535
765171
736338
506792
554723
1537140
1360612
1616129
882175
1351359
1455000
861441
1716758
2034324
1672587
1619647
1932959
2156564
2116767
864774
1753597
574037
1690063
1629103
1738956
702633
1672586
1919524
1855213
1766640
976530
732034
1346867
1492977
1932901
2217560
493543
1740912
2024821
1572691
1716654
595233
2114548
1477732
760272
546157
919424
1449574
931107
1514130
1366078
1503593
987238
963584
1688273
1657249
1840321
1657227
1688328
1511266
907987
2055463
1683506
640397
907165
506154
611682
1914734
957545
1796613
131428
325099
197405
325037
1668651
1812149
774682
774688
774705
774680
774698
774655
1444590
Query:
SELECT molregno, CAST(heavy_atoms AS INT64) AS heavy_atoms
FROM `bigquery-public-data.ebi_chembl.compound_properties`
WHERE CAST(heavy_atoms AS INT64) BETWEEN 10 AND 15
LIMIT 100;
Answer:
molregno,heavy_atoms
182193,14
1160340,13
1294143,15
1674518,12
305967,15
483099,15
2426064,10
1294222,15
1940449,11
1314606,14
1619965,15
130320,14
171100,14
1287729,13
1301308,13
1322725,15
1494138,15
1672706,15
505881,15
2269258,14
1678124,14
377605,14
1674938,10
1819906,13
2474592,15
13570,15
481624,14
1303142,11
498105,11
1676200,15
2523647,14
323348,11
1160318,15
322485,12
1825886,14
1494407,15
323136,12
1160324,15
1296716,14
1489024,14
2377228,12
498190,14
2214081,12
1082102,13
1325750,13
832643,15
1102374,13
829811,14
361880,11
1160322,14
915804,10
1476836,14
1677187,12
13540,13
175105,15
446330,10
42652,12
1674960,15
305982,15
464938,14
1674198,13
2279427,15
1041793,15
322238,12
43292,12
204524,14
1287443,15
396902,12
1675866,10
896268,13
1160056,11
1486374,10
1678099,15
159518,12
573522,13
570639,10
929616,15
49260,13
2512512,14
744684,15
1822380,12
2208751,13
2125885,15
573523,14
374944,15
1120586,15
31838,14
1229486,15
2475010,15
1289563,13
1086009,15
405082,14
2231462,13
216001,15
272839,14
1739824,10
576108,14
1834170,13
1763714,14
1737325,15
Query:
SELECT activity_id, molregno, standard_value, CAST(pchembl_value AS FLOAT64) AS pchembl_value
   FROM `bigquery-public-data.ebi_chembl.activities`
   WHERE standard_value IS NOT NULL
     AND CAST(pchembl_value AS FLOAT64) > 10
   LIMIT 100
Answer:
activity_id,molregno,standard_value,pchembl_value
1083401,288175,0.02344,10.63
10876093,1339142,0.02512,10.6
1142054,42858,0.02884,10.54
22990965,2513639,0.0195,10.71
12490248,1489145,0.04467,10.35
6324469,366860,0.05012,10.3
2927281,297056,0.06457,10.19
24697699,2775217,0.08913,10.05
24827722,3012,0.06918,10.16
23306527,2564394,0.03802,10.42
5161720,1061285,0.03162,10.5
19108713,2348605,0.07413,10.13
1117606,550232,0.02512,10.6
1185916,64134,0.06761,10.17
1798591,472845,0.08511,10.07
902556,1341082,0.06607,10.18
786976,122733,0.02089,10.68
3441188,701423,0.01,11.0
20682356,2479182,0.03,10.52
18901548,2444394,0.01,11.0
18900933,2276502,0.07,10.15
18900977,2453595,0.08,10.1
18901547,2388728,0.02,10.7
18879690,2409771,0.019,10.72
1454751,310215,0.09,10.05
7844709,1250535,0.024,10.62
13934025,1619622,0.07,10.15
12634477,1513282,0.013,10.89
1461396,312186,0.02,10.7
715227,86292,0.037,10.43
841488,61181,0.07,10.15
1266572,1386459,0.09,10.05
1286417,186845,0.097,10.01
489432,100559,0.04,10.4
1198202,155348,0.025,10.6
1282679,28220,0.013,10.89
2619859,495682,0.051,10.29
1149047,677806,0.07,10.15
5220425,1070012,0.02,10.7
1508691,321345,0.014,10.85
1896222,386533,0.046,10.34
5148288,1063641,0.017,10.77
2362867,470329,0.041,10.39
15106732,1823871,0.011,10.96
610311,1384814,0.018,10.74
15770896,1972030,0.015,10.82
3120465,597293,0.06,10.22
526638,149402,0.073,10.14
15770804,1972043,0.022,10.66
17703895,2100444,0.026,10.59
17717247,2141436,0.021,10.68
Query:
SELECT activity_id, assay_id, standard_type
   FROM `bigquery-public-data.ebi_chembl.activities`
   LIMIT 100
Answer:
activity_id,assay_id,standard_type
198050,20581,D
205470,20581,D
1464260,302096,E
19257248,1901027,F
1993498,450386,F
2360974,512235,F
13341739,964983,F
13341842,964983,F
20605018,1971869,F
22418091,2019104,F
1717975,357339,F
24786611,2217847,F
14739499,1362999,F
17957048,1644921,F
1770262,391804,F
18671508,1777775,K
2502124,544326,K
18224690,1697680,K
22413973,2018490,K
22435597,2023642,K
18738570,1789911,K
524093,17989,P
14655457,1351391,AI
6262527,753650,AQ
105152,6532,CC
983681,207471,CF
24514833,2171835,CI
24899464,2246021,CI
23204128,2112485,CI
23215405,2114477,CI
15250306,1478357,CI
15250311,1476077,CI
15235120,1475389,CI
18562993,1766782,CI
18383322,1730879,CI
18383492,1730892,CI
18383388,1730884,CI
24899484,2246031,CI
15250241,1478198,CI
18221655,1696965,CI
18962574,1834581,CI
18383314,1730879,CI
18079656,1667393,CI
18508119,1756259,CI
18025141,1657207,CI
18383446,1730889,CI
23124275,2098063,CI
18383491,1730892,CI
18977849,1838370,CI
6183652,744195,CL
3240915,625047,CL
2676790,577246,CL
1730484,331973,CL
3240914,625047,CL
15651961,1505879,CL
13285426,956402,CL
13335803,965764,CL
15165681,1465073,CL
18069051,1664997,CL
15626024,1500465,CL
2239457,512154,CL
15246571,1477386,CL
18504454,1755166,CL
18534531,1760918,CL
16649842,1589661,CL
12085997,859382,Cp
10996184,834147,Cp
10941644,827058,Cp
12175045,882826,Cp
18444605,1742337,Cp
Query:
SELECT assay_id, molregno, COUNT(*) AS activity_count
   FROM `bigquery-public-data.ebi_chembl.activities`
   GROUP BY assay_id, molregno
   HAVING COUNT(*) < 5
   LIMIT 100
Answer:
assay_id,molregno,activity_count
20581,172545,1
964983,1565365,1
1777775,2308656,1
2023642,2510710,1
2112485,2572572,1
2114477,2560307,1
1478198,1844385,1
625047,623743,1
1465073,1834015,1
859382,1429303,1
834147,1361420,1
609670,382246,1
1301343,1626878,1
788370,1263965,1
1754173,446107,1
1847386,2380056,1
700653,1058383,1
555292,33134,1
2099110,2557039,1
566911,457897,1
772670,1179544,1
658233,701058,1
675363,710251,1
553636,56432,1
537781,512798,1
571219,557853,1
653346,2261,1
697343,6012,1
1547146,2059238,1
574038,390877,1
695118,1052612,1
1339211,1733684,1
1515671,1961516,1
1438713,1823439,1
861468,1430342,1
2222807,1442759,1
1780498,2324320,1
1636928,477344,1
1509263,1956103,1
1517686,1964140,1
1544346,2055585,2
2101126,2558320,1
2246584,1949867,1
1755419,1370456,1
1808100,2428812,1
1734802,968929,1
1891164,797310,1
1648136,2228843,1
2261988,2782168,1
2166266,2721627,1
2166334,2728681,1
1847379,2423437,1
1471433,72873,1
2199162,1413838,1
976481,1576120,1
873702,1442836,1
2101126,2540742,1
1510740,1957913,1
2081115,2513911,1
2166274,2725358,1
1812509,2443329,1
2223795,2753355,1
1437765,1794491,1
1667967,2231984,1
595233,15472,1
1447781,1783469,1
1875423,2362808,1
485838,484653,1
1511130,1958184,1
631858,627735,1
683962,712348,1
760268,1169288,1
632426,625739,1
1449856,1787656,1
830428,905858,1
892620,569257,1
Query:
SELECT assay_id, molregno, standard_value, standard_relation, COUNT(*) AS duplicate_count
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE standard_value IS NOT NULL AND standard_relation IS NOT NULL
GROUP BY assay_id, molregno, standard_value, standard_relation
HAVING COUNT(*) > 1
LIMIT 100;
Answer:
assay_id,molregno,standard_value,standard_relation,duplicate_count
1640262,94571,1.1,=,13
1640262,31241,0.9,=,9
1640263,3859,1.9,=,16
1640263,1377887,2.1,=,3
1908474,2369540,3,=,2
809185,1308234,1258.93,=,2
809219,1317467,3981.07,>,2
809285,1293875,5011.87,=,2
809186,88232,2511.89,=,2
809139,438153,6309.57,=,2
809177,1291395,7943.28,>,2
521905,500512,100000,<,2
521930,500512,100000,<,2
1642763,2197071,4,<,2
1581710,2337609,100,=,2
1998115,1916792,100000,>,2
1998107,1908591,100000,>,2
1998114,1855905,30199.52,>,2
1998131,1886169,29512.09,>,2
1998103,1864784,50118.72,>,2
1998124,1920254,61659.5,>,2
1810083,2374223,100000,<,2
1907586,2457603,100000,<,2
1733619,2274706,100000,<,2
2144902,2676272,0,=,2
140500,188731,3.262,=,2
141402,188616,0.677,=,2
580478,560820,50,=,3
53931,23155,5.67,=,2
230223,27613,13,>,3
2069962,2039319,0,=,7
2069963,475598,1,=,5
2069959,881506,1,=,8
2069959,1017734,1,=,9
2069960,457258,1,=,4
2069961,31153,0,=,8
2069959,5371,0,=,10
2069959,2511996,0,=,7
2069959,131689,0,=,9
2069959,2222667,0,=,9
2069960,165078,1,=,6
2069962,1448219,0,=,8
2069962,579824,0,=,8
Query:
SELECT activity_id, doc_id, molregno
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE doc_id IS NOT NULL AND doc_id != ''
LIMIT 100
Answer:
activity_id,doc_id,molregno
400977,7417,283276
794406,16917,71172
1701575,30911,343251
13396471,74443,1573031
12637343,71750,1514445
12158150,66595,1439464
18504295,108040,2295532
17976504,103791,2207621
19435805,114211,2347062
1806663,34872,344830
2525916,47075,519898
1438653,20648,306007
332642,7408,279527
18704824,109279,2324239
15662164,92979,44752
18086941,104682,1442794
657519,10183,62237
861547,7685,270463
338886,11063,92405
1157210,6545,219000
1157203,6545,218764
560071,15592,188591
16790180,101591,2106746
858689,11826,53624
1066743,1181,24135
1079735,1181,24641
18383410,107067,2263184
487542,15204,230820
15250312,91757,1844385
15250258,91757,1844385
16599444,99393,315023
15250247,91757,1844385
15250272,91757,1844385
15107936,89774,1819359
18977791,111251,2457794
18973907,111220,2381467
18383306,107067,2279019
18982714,111296,2374995
18079815,104615,2206917
22762152,118404,1296181
18079637,104615,2228187
18221676,105751,436875
23215408,120598,2543852
22912350,119488,2505171
23215427,120598,2564639
16878655,102271,1449226
23277653,121052,444971
18383580,107067,2272237
18383415,107067,2264310
23215373,120598,2564639
18973908,111220,2381467
18383507,107067,2264310
24758334,123291,2762690
19100591,112106,1792869
23204169,120503,2561546
16599456,99393,11305
7850996,59430,1251134
3217152,50227,611678
6157277,57093,1140104
2053167,37915,416572
2641203,46685,480639
12105294,65939,1431808
10870265,61874,1137713
15201615,91413,1837743
2156285,38671,429724
2509438,47075,520034
6162815,57127,1138985
24753475,123227,2763484
16574656,99149,2083607
22921071,119548,2523550
1116791,15599,191751
13979068,77448,1612559
790046,9221,3829
2478087,44723,512662
Query:
SELECT activity_id, doc_id, molregno
FROM `bigquery-public-data.ebi_chembl.activities`
WHERE doc_id IS NOT NULL AND doc_id != ''
LIMIT 100;
Answer:
activity_id,doc_id,molregno
400977,7417,283276
794406,16917,71172
1701575,30911,343251
13396471,74443,1573031
12637343,71750,1514445
12158150,66595,1439464
18504295,108040,2295532
17976504,103791,2207621
19435805,114211,2347062
1806663,34872,344830
2525916,47075,519898
1438653,20648,306007
332642,7408,279527
18704824,109279,2324239
15662164,92979,44752
18086941,104682,1442794
657519,10183,62237
861547,7685,270463
338886,11063,92405
1157210,6545,219000
1157203,6545,218764
560071,15592,188591
16790180,101591,2106746
858689,11826,53624
1066743,1181,24135
1079735,1181,24641
18383410,107067,2263184
487542,15204,230820
15250312,91757,1844385
15250258,91757,1844385
16599444,99393,315023
15250247,91757,1844385
15250272,91757,1844385
15107936,89774,1819359
18977791,111251,2457794
18973907,111220,2381467
18383306,107067,2279019
18982714,111296,2374995
18079815,104615,2206917
22762152,118404,1296181
18079637,104615,2228187
18221676,105751,436875
23215408,120598,2543852
22912350,119488,2505171
23215427,120598,2564639
16878655,102271,1449226
23277653,121052,444971
18383580,107067,2272237
18383415,107067,2264310
23215373,120598,2564639
18973908,111220,2381467
18383507,107067,2264310
24758334,123291,2762690
19100591,112106,1792869
23204169,120503,2561546
16599456,99393,11305
7850996,59430,1251134
3217152,50227,611678
6157277,57093,1140104
2053167,37915,416572
2641203,46685,480639
12105294,65939,1431808
10870265,61874,1137713
15201615,91413,1837743
2156285,38671,429724
2509438,47075,520034
6162815,57127,1138985
24753475,123227,2763484
16574656,99149,2083607
22921071,119548,2523550
1116791,15599,191751
13979068,77448,1612559
790046,9221,3829
2478087,44723,512662
Query:
SELECT CAST(molregno AS INT64) AS molregno, canonical_smiles
FROM `bigquery-public-data.ebi_chembl.compound_structures`
WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
LIMIT 100
Answer:
molregno,canonical_smiles
1822592,CCn1nccc1Oc1cc(CCCCOC)cnc1NC(=O)NC
128,O=c1oc2c(F)c(F)ccc2c2cc(O)c(O)cc12
6538,COc1c(C)cnc(C[S+]([O-])c2nc3ccccc3n2CCN2CCOCC2)c1C
9678,C/C=C(\NC(=O)C(CCC)CCC)C(=O)O
10298,CCNS(=O)(=O)c1ccc2c(c1)C(n1ccccc1=O)=CC(C)(C)O2
1833716,CCCCCCCCCCCCCCCC(=O)Oc1ccc(/C=C2\CCC/C(=C\c3ccc(OC(=O)CCCCCCCCCCCCCCC)c(OC)c3)C2=O)cc1OC
1834533,CNC(=O)[C@@]12C[C@@H]1[C@@H](n1cnc3c(NC)nc(C#Cc4ccsc4)nc31)[C@H](O)[C@@H]2O
1838408,CCOC(=O)c1ccc2cc(C(=O)/C=C/c3ccccc3)sc2c1
1840256,Fc1cccc(-n2cc(NCCN3CCOCC3)nn2)c1
24961,CC[C@@H](C)[C@@H](NC(=O)[C@@H](C)NC(=O)[C@@H](CCC(=O)O)NC(=O)[C@@H](CC(C)C)NC(=O)[C@@H](Cc1ccccc1)NC(=O)[C@H](N)CCSC)C(=O)N1CCC[C@H]1C(=O)N[C@@H](CCSC)C(=O)O
1861143,CCn1cc(Cl)c(C(=O)NCc2cnn(C)c2)n1
39040,CCc1cc(-c2cc(C(F)(F)F)nn2-c2ccc(S(N)(=O)=O)cc2)ccc1OC
42807,CC(=O)c1c(-c2ccc(Cl)cc2)c(-c2ccc(Cl)cc2)nn(CCCCCCN2C(=O)c3ccccc3C2=O)c1=O
1886886,CN1C(=O)CC(c2ccccc2)C12CCN(c1ncccn1)CC2
1892689,CCC(C)N(Cc1cccnc1)C(=O)c1ccc(OC)cc1O
64248,COc1ccc(S(=O)(=O)C(CCCCc2ccc3c(c2)OCO3)CC(=O)NO)cc1OC
68360,COc1cnc(C)c2[nH]c3ccccc3c12
1897419,COc1cccc(C2CCCN2C(=O)CC2=CSC3=NCCCN23)c1
77870,Cc1cc(C)c(C2=NOC(C(=O)Nc3ccc(-c4ccccc4S(N)(=O)=O)cc3)C2)cc1C
78299,c1ccc(Cn2cncc2CCNCC23CC(c4ccccc42)c2ccccc23)cc1
82695,O=C(COc1ccccc1)N(O)CCc1ccccc1
1909093,Cc1cc(C(=O)N2CCCC(n3cncn3)C2)c(C)n1CC1CC1
1910145,CC(=O)N1CCCC1C(=O)NCCOc1cc(C)cc(C)c1
1910181,Cc1nn(C)c(C)c1C1COCCN1C(=O)c1ccccc1
1938013,O[C@@H]1C[C@@](CNCc2ccc(F)cc2)(COc2cccnc2)C[C@@H]1O
1939614,O=C1C[C@@H]2[C@H](CCN2Cc2ccccn2)N1Cc1ccncc1
1941547,C[C@H]1CN([C@@H](C)CO)C(=O)c2c(c3ccccc3n2C)-c2ccccc2CO[C@@H]1CN(C)Cc1cccc2c1OCCCO2
1943401,O=C(C1CC1)N1CC(=O)N2[C@H](C1)[C@@H](c1ccc(C#CCc3ccccc3)cc1)[C@@H]2CO
104146,COc1cc(OC)nc(OC(C(=O)O)C(OC)(c2ccc(Cl)cc2)c2ccc(Cl)cc2)n1
111374,COc1nsnc1C1=C(C)CCN(C)C1
112108,Cc1ccc(O)c2[nH]c(-c3ccc(N(C)C)cc3)nc12
117277,O=C(O)CC/C=C/C(CS)CCCCC(=O)O
117301,CC(=O)/C=C/c1ccccc1
1964971,Cc1nn2c(-c3nc4cc(C)c(C)cc4[nH]3)c(-c3ccccc3)nc2s1
1974481,CNc1nc(Nc2ccc(C(=O)NC3CC3)cc2OC)ncc1Cl
123418,CCCCCCc1noc([C@H](CC)NC(=O)[C@H](Cc2ccc(OP(=O)(O)O)cc2)NC(C)=O)n1
139230,O=c1ccc2cc(CBr)ccc2o1
1981159,CC1(C)CCN(Cc2ccc3c(c2)C[C@H](NC(=O)c2ccc(OC[C@@H]4CCCO4)cc2)C3)CC1
1982654,CO[C@@H]1C[C@@H](C(C)C)N(c2nc3cc(-c4noc(=O)[nH]4)nc(-c4cncc(Cl)c4)c3n2C[C@H]2CC[C@H](C)CC2)C1
1998302,Cn1c2c(c3ccc(-n4ncc(OCc5ccc(C(F)(F)F)nc5)cc4=O)cc31)CCNCC2
2006372,CCNC1CCc2ccc(CCCNS(=O)(=O)CC3CC3)cc2C1Cc1ccccc1
167023,COc1cc(C(C)=O)ccc1OCCCN1CCC(C(c2ccc(F)cc2)C2CCCCC2)CC1
167283,COc1c(Br)c(C(=O)O)c(-c2c3c(c(OC)c(Br)c2C(=O)O)OCO3)c2c1OCO2
2016718,O=C(c1nn([C@H]2CCCN(CCN3CCOCC3)C2)c2c1CS(=O)(=O)c1c(F)cccc1-2)N1CCOCC1
170968,CCN(C)CC#CCCC(=O)C(O)(c1ccccc1)C1CCC1
180064,C=C[C@@]1(C)CCC2[C@@H](CC[C@@H]3[C@](C)(C(=O)O)CCC[C@@]23C)C1
2021633,Nc1cnc(-c2ccc(-c3ccccc3S(=O)(=O)N3CCN(C4CC4)CC3)cc2F)cn1
2025765,CC(C)(O)C#Cc1cc2c(cc1F)C1CC(C1)n1c-2nc(C(N)=O)c1-c1nc(C2CC2)no1
2026947,Cc1cccc(C)c1Nc1ccc(C(=O)NCCCCCCC(=O)NO)cc1
2036919,OC1CS[C@@H](n2cnc3c(NCc4cccc(F)c4)nc(Cl)nc32)[C@H]1O
196758,CCC(Cc1ccc(OC)c(C(=O)NCc2ccc(OCc3ccccc3)cc2)c1)C(=O)O
199883,CCCC[C@H](NC(=O)[C@H](CCC(=O)O)NC(=O)[C@H](CC(C)C)NC(=O)[C@@H](NC(=O)[C@H](CCC(=O)O)NC(=O)[C@H](CCCN=C(N)N)NC(=O)[C@H](CC(C)C)NC(=O)[C@H](CC(C)C)NC(=O)[C@H]1CCCCNC(=O)CC[C@@H](NC(=O)[C@@H](N)CC(=O)O)C(=O)N[C@H]([C@@H](C)O)C(=O)N[C@H](Cc2ccccc2)C(=O)N1)C(C)C)C(=O)N[C@@H](C)C(=O)N[C@@H](CCCN=C(N)N)C(=O)N[C@@H](C)C(=O)N[C@@H](CCC(=O)O)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](CC(C)C)C(=O)N[C@@H](C)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](C)C(=O)N[C@@H](Cc1c[nH]cn1)C(=O)N[C@@H](CO)C(=O)N[C@@H](CC(N)=O)C(=O)N[C@@H](CCCN=C(N)N)C(=O)N[C@@H](CCCCN)C(=O)N[C@@H](CC(C)C)C(=O)N[C@@H](CCCC)C(=O)N[C@@H](CCC(=O)O)C(=O)N[C@H](C(=O)N[C@H](C(N)=O)[C@@H](C)CC)[C@@H](C)CC
Query:
SELECT
  a.activity_id,
  a.assay_id,
  a.molregno,
  CAST(p.heavy_atoms AS INT64) AS heavy_atoms,
  a.standard_value,
  a.standard_relation,
  CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
  d.doc_id,
  d.year,
  d.journal,
  d.first_page
FROM `bigquery-public-data.ebi_chembl.activities` AS a
JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS p
  ON a.molregno = CAST(p.molregno AS STRING)
JOIN `bigquery-public-data.ebi_chembl.docs` AS d
  ON a.doc_id = CAST(d.doc_id AS STRING)
WHERE CAST(p.heavy_atoms AS INT64) BETWEEN 10 AND 15
  AND a.standard_value IS NOT NULL AND a.standard_value != ''
  AND CAST(a.pchembl_value AS FLOAT64) > 10
LIMIT 100
Answer:
activity_id,assay_id,molregno,heavy_atoms,standard_value,standard_relation,pchembl_value,doc_id,year,journal,first_page
300841,143227,83069,12,0.031,=,10.51,6768,2004,Bioorg Med Chem Lett,1845
12092086,860161,117779,14,0.026,=,10.59,65821,2012,J Med Chem,6512
2282309,566860,2214,13,0.09,=,10.05,46215,2009,J Med Chem,1885
2559040,489287,675,14,0.061,=,10.21,43974,2008,J Med Chem,4751
1411429,303546,298415,14,0.05,=,10.3,21501,2005,J Med Chem,1221
1074399,143097,238953,15,0.027,=,10.57,16704,2002,J Med Chem,4755
13974899,1299428,1625988,14,0.0142,=,10.85,77288,2013,Medchemcomm,1222
2272254,565979,675,14,0.047,=,10.33,46138,2009,Bioorg Med Chem Lett,1682
740577,143860,86502,15,0.014,=,10.85,6774,2004,Bioorg Med Chem Lett,1889
1798430,422884,473467,15,0.032,=,10.49,34783,2006,J Med Chem,7843
15687549,1512514,1959748,15,0.01,=,11.0,93223,2015,Eur J Med Chem,334
1214077,143855,154061,13,0.076,=,10.12,2811,1998,Bioorg Med Chem Lett,2797
499051,32664,86151,14,0.018,=,10.74,16211,2001,J Med Chem,4039
1159295,33678,1122859,13,0.07,=,10.15,16330,2001,J Med Chem,863
15023493,1454461,93801,12,0.02,=,10.7,90223,2014,J Med Chem,8204
1861472,435003,11595,13,0.017,=,10.77,35664,2007,J Med Chem,2408
3480525,672663,391098,13,0.06,=,10.22,53323,2009,Nat Chem Biol,765
717774,144017,675,14,0.085,=,10.07,6774,2004,Bioorg Med Chem Lett,1889
1711783,352122,675,14,0.06,=,10.22,31100,2006,J Med Chem,2673
613970,142925,218801,12,0.05,=,10.3,13791,1996,J Med Chem,817
663564,143717,86293,13,0.02,=,10.7,16005,2001,J Med Chem,2229
End Exploring Related Columns
Task: Find pairs of different molecules tested in the same assay and standard type, where both have 10–15 heavy atoms, fewer than 5 activities in that assay, fewer than 2 duplicate activities, non-null standard values, and pChEMBL values over 10. For each pair, report the maximum heavy atom count, the latest publication date (calculated based on the document's rank within the same journal and year, and map it to a synthetic month and day), the highest document ID, classify the change in standard values as 'increase', 'decrease', or 'no-change' based on their values and relations, and generate UUIDs from their activity IDs and canonical SMILES.

Please answer only one complete SQL in bigquery dialect in ```sql``` format.
Usage example: ```sql
SELECT `column_name` FROM `database.schema.table` WHERE ... ``` (Replace `database`, `schema`, and `table` with actual names. Enclose column names and table identifiers with backticks.)
Follow the answer format like: ```csv
Max_heavy_atom_count,Latest_publication_date,Highest_doc_id,Change_classification,UUID
count:int between 10 and 15,date:YYYY-MM-DD,id:int >0,classification:str (increase/decrease/no-change),uuid:str
count:int between 10 and 15,date:YYYY-MM-DD,id:int >0,classification:str (increase/decrease/no-change),uuid:str
...
```

This table displays pairs of different molecules that were tested in the same assay and standard type, meeting the specified criteria:

- **Max_heavy_atom_count**: The maximum number of heavy atoms (non-hydrogen atoms) in the pair of molecules, ranging between 10 and 15.
- **Latest_publication_date**: The latest publication date among the documents associated with the molecules, calculated based on the method described for assigning synthetic months and days.
- **Highest_doc_id**: The highest document ID among the documents associated with the molecules.
- **Change_classification**: Indicates whether the standard value between the two molecules has increased, decreased, or stayed the same ('increase', 'decrease', or 'no-change') based on their values and relations.
- **UUID**: A unique identifier generated from the activity IDs and canonical SMILES of the molecule pair.

Each row represents a pair of molecules satisfying all the conditions specified in the task..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: ({database name: {schema name: {table name}}}): 
{'bigquery-public-data': {'ebi_chembl': ['action_type', 'action_type_23', 'action_type_24', 'action_type_25', 'action_type_26', 'action_type_27', 'action_type_28', 'action_type_29', 'action_type_30', 'action_type_33', 'activities', 'activities_23', 'activities_24', 'activities_25', 'activities_26', 'activities_27', 'activities_28', 'activities_29', 'activities_30', 'activities_33', 'activity_properties', 'activity_properties_24', 'activity_properties_25', 'activity_properties_26', 'activity_properties_27', 'activity_properties_28', 'activity_properties_29', 'activity_properties_30', 'activity_properties_33', 'activity_smid', 'activity_smid_24', 'activity_smid_25', 'activity_smid_26', 'activity_smid_27', 'activity_smid_28', 'activity_smid_29', 'activity_smid_30', 'activity_smid_33', 'activity_stds_lookup', 'activity_stds_lookup_23', 'activity_stds_lookup_24', 'activity_stds_lookup_25', 'activity_stds_lookup_26', 'activity_stds_lookup_27', 'activity_stds_lookup_28', 'activity_stds_lookup_29', 'activity_stds_lookup_30', 'activity_stds_lookup_33', 'activity_supp', 'activity_supp_24', 'activity_supp_25', 'activity_supp_26', 'activity_supp_27', 'activity_supp_28', 'activity_supp_29', 'activity_supp_30', 'activity_supp_33', 'activity_supp_map', 'activity_supp_map_24', 'activity_supp_map_25', 'activity_supp_map_26', 'activity_supp_map_27', 'activity_supp_map_28', 'activity_supp_map_29', 'activity_supp_map_30', 'activity_supp_map_33', 'assay_class_map', 'assay_class_map_25', 'assay_class_map_26', 'assay_class_map_27', 'assay_class_map_28', 'assay_class_map_29', 'assay_class_map_30', 'assay_class_map_33', 'assay_classification', 'assay_classification_25', 'assay_classification_26', 'assay_classification_27', 'assay_classification_28', 'assay_classification_29', 'assay_classification_30', 'assay_classification_33', 'assay_parameters', 'assay_parameters_23', 'assay_parameters_24', 'assay_parameters_25', 'assay_parameters_26', 'assay_parameters_27', 'assay_parameters_28', 'assay_parameters_29', 'assay_parameters_30', 'assay_parameters_33', 'assay_type', 'assay_type_23', 'assay_type_24', 'assay_type_25', 'assay_type_26', 'assay_type_27', 'assay_type_28', 'assay_type_29', 'assay_type_30', 'assay_type_33', 'assays', 'assays_23', 'assays_24', 'assays_25', 'assays_26', 'assays_27', 'assays_28', 'assays_29', 'assays_30', 'assays_33', 'atc_classification', 'atc_classification_23', 'atc_classification_24', 'atc_classification_25', 'atc_classification_26', 'atc_classification_27', 'atc_classification_28', 'atc_classification_29', 'atc_classification_30', 'atc_classification_33', 'binding_sites', 'binding_sites_23', 'binding_sites_24', 'binding_sites_25', 'binding_sites_26', 'binding_sites_27', 'binding_sites_28', 'binding_sites_29', 'binding_sites_30', 'binding_sites_33', 'bio_component_sequences', 'bio_component_sequences_23', 'bio_component_sequences_24', 'bio_component_sequences_25', 'bio_component_sequences_26', 'bio_component_sequences_27', 'bio_component_sequences_28', 'bio_component_sequences_29', 'bio_component_sequences_30', 'bio_component_sequences_33', 'bioassay_ontology', 'bioassay_ontology_23', 'bioassay_ontology_24', 'bioassay_ontology_25', 'bioassay_ontology_26', 'bioassay_ontology_27', 'bioassay_ontology_28', 'bioassay_ontology_29', 'bioassay_ontology_30', 'bioassay_ontology_33', 'biotherapeutic_components', 'biotherapeutic_components_23', 'biotherapeutic_components_24', 'biotherapeutic_components_25', 'biotherapeutic_components_26', 'biotherapeutic_components_27', 'biotherapeutic_components_28', 'biotherapeutic_components_29', 'biotherapeutic_components_30', 'biotherapeutic_components_33', 'biotherapeutics', 'biotherapeutics_23', 'biotherapeutics_24', 'biotherapeutics_25', 'biotherapeutics_26', 'biotherapeutics_27', 'biotherapeutics_28', 'biotherapeutics_29', 'biotherapeutics_30', 'biotherapeutics_33', 'cell_dictionary', 'cell_dictionary_23', 'cell_dictionary_24', 'cell_dictionary_25', 'cell_dictionary_26', 'cell_dictionary_27', 'cell_dictionary_28', 'cell_dictionary_29', 'cell_dictionary_30', 'cell_dictionary_33', 'chembl_id_lookup', 'chembl_id_lookup_23', 'chembl_id_lookup_24', 'chembl_id_lookup_25', 'chembl_id_lookup_26', 'chembl_id_lookup_27', 'chembl_id_lookup_28', 'chembl_id_lookup_29', 'chembl_id_lookup_30', 'chembl_id_lookup_33', 'chembl_release', 'chembl_release_33', 'component_class', 'component_class_23', 'component_class_24', 'component_class_25', 'component_class_26', 'component_class_27', 'component_class_28', 'component_class_29', 'component_class_30', 'component_class_33', 'component_domains', 'component_domains_23', 'component_domains_24', 'component_domains_25', 'component_domains_26', 'component_domains_27', 'component_domains_28', 'component_domains_29', 'component_domains_30', 'component_domains_33', 'component_go', 'component_go_23', 'component_go_24', 'component_go_25', 'component_go_26', 'component_go_27', 'component_go_28', 'component_go_29', 'component_go_30', 'component_go_33', 'component_sequences', 'component_sequences_23', 'component_sequences_24', 'component_sequences_25', 'component_sequences_26', 'component_sequences_27', 'component_sequences_28', 'component_sequences_29', 'component_sequences_30', 'component_sequences_33', 'component_synonyms', 'component_synonyms_23', 'component_synonyms_24', 'component_synonyms_25', 'component_synonyms_26', 'component_synonyms_27', 'component_synonyms_28', 'component_synonyms_29', 'component_synonyms_30', 'component_synonyms_33', 'compound_properties', 'compound_properties_23', 'compound_properties_24', 'compound_properties_25', 'compound_properties_26', 'compound_properties_27', 'compound_properties_28', 'compound_properties_29', 'compound_properties_30', 'compound_properties_33', 'compound_records', 'compound_records_23', 'compound_records_24', 'compound_records_25', 'compound_records_26', 'compound_records_27', 'compound_records_28', 'compound_records_29', 'compound_records_30', 'compound_records_33', 'compound_structural_alerts', 'compound_structural_alerts_23', 'compound_structural_alerts_24', 'compound_structural_alerts_25', 'compound_structural_alerts_26', 'compound_structural_alerts_27', 'compound_structural_alerts_28', 'compound_structural_alerts_29', 'compound_structural_alerts_30', 'compound_structural_alerts_33', 'compound_structures', 'compound_structures_23', 'compound_structures_24', 'compound_structures_25', 'compound_structures_26', 'compound_structures_27', 'compound_structures_28', 'compound_structures_29', 'compound_structures_30', 'compound_structures_33', 'confidence_score_lookup', 'confidence_score_lookup_23', 'confidence_score_lookup_24', 'confidence_score_lookup_25', 'confidence_score_lookup_26', 'confidence_score_lookup_27', 'confidence_score_lookup_28', 'confidence_score_lookup_29', 'confidence_score_lookup_30', 'confidence_score_lookup_33', 'curation_lookup', 'curation_lookup_23', 'curation_lookup_24', 'curation_lookup_25', 'curation_lookup_26', 'curation_lookup_27', 'curation_lookup_28', 'curation_lookup_29', 'curation_lookup_30', 'curation_lookup_33', 'data_validity_lookup', 'data_validity_lookup_23', 'data_validity_lookup_24', 'data_validity_lookup_25', 'data_validity_lookup_26', 'data_validity_lookup_27', 'data_validity_lookup_28', 'data_validity_lookup_29', 'data_validity_lookup_30', 'data_validity_lookup_33', 'defined_daily_dose', 'defined_daily_dose_23', 'defined_daily_dose_24', 'defined_daily_dose_25', 'defined_daily_dose_26', 'defined_daily_dose_27', 'defined_daily_dose_28', 'defined_daily_dose_29', 'defined_daily_dose_30', 'defined_daily_dose_33', 'docs', 'docs_23', 'docs_24', 'docs_25', 'docs_26', 'docs_27', 'docs_28', 'docs_29', 'docs_30', 'docs_33', 'domains', 'domains_23', 'domains_24', 'domains_25', 'domains_26', 'domains_27', 'domains_28', 'domains_29', 'domains_30', 'domains_33', 'drug_indication', 'drug_indication_23', 'drug_indication_24', 'drug_indication_25', 'drug_indication_26', 'drug_indication_27', 'drug_indication_28', 'drug_indication_29', 'drug_indication_30', 'drug_indication_33', 'drug_mechanism', 'drug_mechanism_23', 'drug_mechanism_24', 'drug_mechanism_25', 'drug_mechanism_26', 'drug_mechanism_27', 'drug_mechanism_28', 'drug_mechanism_29', 'drug_mechanism_30', 'drug_mechanism_33', 'drug_warning', 'drug_warning_28', 'drug_warning_29', 'drug_warning_30', 'drug_warning_33', 'formulations', 'formulations_23', 'formulations_24', 'formulations_25', 'formulations_26', 'formulations_27', 'formulations_28', 'formulations_29', 'formulations_30', 'formulations_33', 'frac_classification', 'frac_classification_23', 'frac_classification_24', 'frac_classification_25', 'frac_classification_26', 'frac_classification_27', 'frac_classification_28', 'frac_classification_29', 'frac_classification_30', 'frac_classification_33', 'go_classification', 'go_classification_23', 'go_classification_24', 'go_classification_25', 'go_classification_26', 'go_classification_27', 'go_classification_28', 'go_classification_29', 'go_classification_30', 'go_classification_33', 'hrac_classification', 'hrac_classification_23', 'hrac_classification_24', 'hrac_classification_25', 'hrac_classification_26', 'hrac_classification_27', 'hrac_classification_28', 'hrac_classification_29', 'hrac_classification_30', 'hrac_classification_33', 'indication_refs', 'indication_refs_23', 'indication_refs_24', 'indication_refs_25', 'indication_refs_26', 'indication_refs_27', 'indication_refs_28', 'indication_refs_29', 'indication_refs_30', 'indication_refs_33', 'irac_classification', 'irac_classification_23', 'irac_classification_24', 'irac_classification_25', 'irac_classification_26', 'irac_classification_27', 'irac_classification_28', 'irac_classification_29', 'irac_classification_30', 'irac_classification_33', 'ligand_eff', 'ligand_eff_23', 'ligand_eff_24', 'ligand_eff_25', 'ligand_eff_26', 'ligand_eff_27', 'ligand_eff_28', 'ligand_eff_29', 'ligand_eff_30', 'ligand_eff_33', 'match_23', 'match_24', 'mechanism_refs', 'mechanism_refs_23', 'mechanism_refs_24', 'mechanism_refs_25', 'mechanism_refs_26', 'mechanism_refs_27', 'mechanism_refs_28', 'mechanism_refs_29', 'mechanism_refs_30', 'mechanism_refs_33', 'metabolism', 'metabolism_23', 'metabolism_24', 'metabolism_25', 'metabolism_26', 'metabolism_27', 'metabolism_28', 'metabolism_29', 'metabolism_30', 'metabolism_33', 'metabolism_refs', 'metabolism_refs_23', 'metabolism_refs_24', 'metabolism_refs_25', 'metabolism_refs_26', 'metabolism_refs_27', 'metabolism_refs_28', 'metabolism_refs_29', 'metabolism_refs_30', 'metabolism_refs_33', 'molecule_atc_classification', 'molecule_atc_classification_23', 'molecule_atc_classification_24', 'molecule_atc_classification_25', 'molecule_atc_classification_26', 'molecule_atc_classification_27', 'molecule_atc_classification_28', 'molecule_atc_classification_29', 'molecule_atc_classification_30', 'molecule_atc_classification_33', 'molecule_dictionary', 'molecule_dictionary_23', 'molecule_dictionary_24', 'molecule_dictionary_25', 'molecule_dictionary_26', 'molecule_dictionary_27', 'molecule_dictionary_28', 'molecule_dictionary_29', 'molecule_dictionary_30', 'molecule_dictionary_33', 'molecule_frac_classification', 'molecule_frac_classification_23', 'molecule_frac_classification_24', 'molecule_frac_classification_25', 'molecule_frac_classification_26', 'molecule_frac_classification_27', 'molecule_frac_classification_28', 'molecule_frac_classification_29', 'molecule_frac_classification_30', 'molecule_frac_classification_33', 'molecule_hierarchy', 'molecule_hierarchy_23', 'molecule_hierarchy_24', 'molecule_hierarchy_25', 'molecule_hierarchy_26', 'molecule_hierarchy_27', 'molecule_hierarchy_28', 'molecule_hierarchy_29', 'molecule_hierarchy_30', 'molecule_hierarchy_33', 'molecule_hrac_classification', 'molecule_hrac_classification_23', 'molecule_hrac_classification_24', 'molecule_hrac_classification_25', 'molecule_hrac_classification_26', 'molecule_hrac_classification_27', 'molecule_hrac_classification_28', 'molecule_hrac_classification_29', 'molecule_hrac_classification_30', 'molecule_hrac_classification_33', 'molecule_irac_classification', 'molecule_irac_classification_23', 'molecule_irac_classification_24', 'molecule_irac_classification_25', 'molecule_irac_classification_26', 'molecule_irac_classification_27', 'molecule_irac_classification_28', 'molecule_irac_classification_29', 'molecule_irac_classification_30', 'molecule_irac_classification_33', 'molecule_synonyms', 'molecule_synonyms_23', 'molecule_synonyms_24', 'molecule_synonyms_25', 'molecule_synonyms_26', 'molecule_synonyms_27', 'molecule_synonyms_28', 'molecule_synonyms_29', 'molecule_synonyms_30', 'molecule_synonyms_33', 'organism_class', 'organism_class_23', 'organism_class_24', 'organism_class_25', 'organism_class_26', 'organism_class_27', 'organism_class_28', 'organism_class_29', 'organism_class_30', 'organism_class_33', 'parameter_type_23', 'patent_use_codes', 'patent_use_codes_23', 'patent_use_codes_24', 'patent_use_codes_25', 'patent_use_codes_26', 'patent_use_codes_27', 'patent_use_codes_28', 'patent_use_codes_29', 'patent_use_codes_30', 'patent_use_codes_33', 'predicted_binding_domains', 'predicted_binding_domains_23', 'predicted_binding_domains_24', 'predicted_binding_domains_25', 'predicted_binding_domains_26', 'predicted_binding_domains_27', 'predicted_binding_domains_28', 'predicted_binding_domains_29', 'predicted_binding_domains_30', 'predicted_binding_domains_33', 'product_patents', 'product_patents_23', 'product_patents_24', 'product_patents_25', 'product_patents_26', 'product_patents_27', 'product_patents_28', 'product_patents_29', 'product_patents_30', 'product_patents_33', 'products', 'products_23', 'products_24', 'products_25', 'products_26', 'products_27', 'products_28', 'products_29', 'products_30', 'products_33', 'protein_class_synonyms', 'protein_class_synonyms_23', 'protein_class_synonyms_24', 'protein_class_synonyms_25', 'protein_class_synonyms_26', 'protein_class_synonyms_27', 'protein_class_synonyms_28', 'protein_class_synonyms_29', 'protein_class_synonyms_30', 'protein_class_synonyms_33', 'protein_classification', 'protein_classification_23', 'protein_classification_24', 'protein_classification_25', 'protein_classification_26', 'protein_classification_27', 'protein_classification_28', 'target_components_30', 'protein_classification_29', 'protein_classification_30', 'protein_classification_33', 'protein_family_classification', 'protein_family_classification_23', 'protein_family_classification_24', 'protein_family_classification_25', 'protein_family_classification_26', 'protein_family_classification_27', 'protein_family_classification_28', 'protein_family_classification_29', 'protein_family_classification_30', 'relationship_type', 'relationship_type_23', 'relationship_type_24', 'relationship_type_25', 'relationship_type_26', 'relationship_type_27', 'relationship_type_28', 'relationship_type_29', 'relationship_type_30', 'relationship_type_33', 'research_companies', 'research_companies_23', 'research_companies_24', 'research_companies_25', 'research_companies_26', 'research_companies_27', 'research_companies_28', 'research_companies_29', 'research_companies_30', 'research_companies_33', 'research_stem', 'research_stem_23', 'research_stem_24', 'research_stem_25', 'research_stem_26', 'research_stem_27', 'research_stem_28', 'research_stem_29', 'research_stem_30', 'research_stem_33', 'site_components', 'site_components_23', 'site_components_24', 'site_components_25', 'site_components_26', 'site_components_27', 'site_components_28', 'site_components_29', 'site_components_30', 'site_components_33', 'source', 'source_23', 'source_24', 'source_25', 'source_26', 'source_27', 'source_28', 'source_29', 'source_30', 'source_33', 'sqlite_stat1', 'sqlite_stat1_23', 'sqlite_stat1_24', 'sqlite_stat1_25', 'sqlite_stat1_26', 'sqlite_stat1_27', 'sqlite_stat1_28', 'sqlite_stat1_29', 'sqlite_stat1_33', 'structural_alert_sets', 'structural_alert_sets_23', 'structural_alert_sets_24', 'structural_alert_sets_25', 'structural_alert_sets_26', 'structural_alert_sets_27', 'structural_alert_sets_28', 'structural_alert_sets_29', 'structural_alert_sets_30', 'structural_alert_sets_33', 'structural_alerts', 'structural_alerts_23', 'structural_alerts_24', 'structural_alerts_25', 'structural_alerts_26', 'structural_alerts_27', 'structural_alerts_28', 'structural_alerts_29', 'structural_alerts_30', 'structural_alerts_33', 'target_components', 'target_components_23', 'target_components_24', 'target_components_25', 'target_components_26', 'target_components_27', 'target_components_28', 'target_components_29', 'target_components_33', 'target_dictionary', 'target_dictionary_23', 'target_dictionary_24', 'target_dictionary_25', 'target_dictionary_26', 'target_dictionary_27', 'target_dictionary_28', 'target_dictionary_29', 'target_dictionary_30', 'target_dictionary_33', 'target_relations', 'target_relations_23', 'target_relations_24', 'target_relations_25', 'target_relations_26', 'target_relations_27', 'target_relations_28', 'target_relations_29', 'target_relations_30', 'target_relations_33', 'target_type', 'target_type_23', 'target_type_24', 'target_type_25', 'target_type_26', 'target_type_27', 'target_type_28', 'target_type_29', 'target_type_30', 'target_type_33', 'tissue_dictionary', 'tissue_dictionary_23', 'tissue_dictionary_24', 'tissue_dictionary_25', 'tissue_dictionary_26', 'tissue_dictionary_27', 'tissue_dictionary_28', 'tissue_dictionary_29', 'tissue_dictionary_30', 'tissue_dictionary_33', 'usan_stems', 'usan_stems_23', 'usan_stems_24', 'usan_stems_25', 'usan_stems_26', 'usan_stems_27', 'usan_stems_28', 'usan_stems_29', 'usan_stems_30', 'usan_stems_33', 'variant_sequences', 'variant_sequences_23', 'variant_sequences_24', 'variant_sequences_25', 'variant_sequences_26', 'variant_sequences_27', 'variant_sequences_28', 'variant_sequences_29', 'variant_sequences_30', 'variant_sequences_33', 'version', 'version_23', 'version_24', 'version_25', 'version_26', 'version_27', 'version_28', 'version_29', 'version_30', 'version_33', 'warning_refs', 'warning_refs_28', 'warning_refs_29', 'warning_refs_30', 'warning_refs_33']}}

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-25 11:27:41 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:27:41 - root - INFO - ```sql
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
    ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
    AND a.pchembl_value > 10
    AND cp.heavy_atoms BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
    ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
    ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
        AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
    AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (PARTITION BY d.journal, CAST(d.year AS INT64) ORDER BY CAST(d.first_page AS INT64)) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(FLOOR( (CASE WHEN total_docs >1 THEN (doc_rank -1)/(total_docs -1) ELSE 0 END ) * 11),0
            ) +1 AS INT64
            ),
            CAST(
                MOD( FLOOR( (CASE WHEN total_docs >1 THEN (doc_rank -1)/(total_docs -1) ELSE 0 END ) * 308 ),28 ) +1
            AS INT64)
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
    ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
    ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
    ON md1.assay_id = md2.assay_id
    AND md1.standard_type = md2.standard_type
    AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
```
2025-01-25 11:27:42 - root - INFO - itercount: 1
2025-01-25 11:27:42 - root - INFO - 400 No matching signature for operator > for argument types: STRING, INT64
  Signature: T1 > T1
    Unable to find common supertype for templated argument <T1>
      Input types for <T1>: {INT64, STRING} at [16:9]; reason: invalidQuery, location: query, message: No matching signature for operator > for argument types: STRING, INT64
  Signature: T1 > T1
    Unable to find common supertype for templated argument <T1>
      Input types for <T1>: {INT64, STRING} at [16:9]

Location: US
Job ID: f24df932-fc57-48fc-bd88-1a5d2bcc057f

2025-01-25 11:27:42 - root - INFO - Input sql:
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
    ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
    AND a.pchembl_value > 10
    AND cp.heavy_atoms BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
    ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
    ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
        AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
    AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (PARTITION BY d.journal, CAST(d.year AS INT64) ORDER BY CAST(d.first_page AS INT64)) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(FLOOR( (CASE WHEN total_docs >1 THEN (doc_rank -1)/(total_docs -1) ELSE 0 END ) * 11),0
            ) +1 AS INT64
            ),
            CAST(
                MOD( FLOOR( (CASE WHEN total_docs >1 THEN (doc_rank -1)/(total_docs -1) ELSE 0 END ) * 308 ),28 ) +1
            AS INT64)
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
    ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
    ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
    ON md1.assay_id = md2.assay_id
    AND md1.standard_type = md2.standard_type
    AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
The error information is:
400 No matching signature for operator > for argument types: STRING, INT64
  Signature: T1 > T1
    Unable to find common supertype for templated argument <T1>
      Input types for <T1>: {INT64, STRING} at [16:9]; reason: invalidQuery, location: query, message: No matching signature for operator > for argument types: STRING, INT64
  Signature: T1 > T1
    Unable to find common supertype for templated argument <T1>
      Input types for <T1>: {INT64, STRING} at [16:9]

Location: US
Job ID: f24df932-fc57-48fc-bd88-1a5d2bcc057f

Please correct it and output only 1 complete SQL query.
2025-01-25 11:29:30 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:29:30 - root - INFO - ```sql
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
        ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
      AND CAST(a.pchembl_value AS FLOAT64) > 10
      AND CAST(cp.heavy_atoms AS INT64) BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
        ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
        ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
           AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
      AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (
            PARTITION BY d.journal, CAST(d.year AS INT64)
            ORDER BY CAST(d.first_page AS INT64)
        ) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
      AND d.first_page IS NOT NULL AND REGEXP_CONTAINS(d.first_page, r'^\d+$')
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(FLOOR(
                    CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END
                * 11), 0) + 1 AS INT64
            ),
            CAST(
                MOD(
                    FLOOR(
                        CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END
                    * 308
                    ), 28
                ) + 1 AS INT64
            )
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
        ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
        ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
        ON md1.assay_id = md2.assay_id
        AND md1.standard_type = md2.standard_type
        AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
```
2025-01-25 11:29:31 - root - INFO - itercount: 2
2025-01-25 11:29:31 - root - INFO - 400 No matching signature for function MOD
  Argument types: FLOAT64, INT64
  Signature: MOD(INT64, INT64)
    Argument 1: Unable to coerce type FLOAT64 to expected type INT64
  Signature: MOD(NUMERIC, NUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type NUMERIC
  Signature: MOD(BIGNUMERIC, BIGNUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type BIGNUMERIC at [74:17]; reason: invalidQuery, location: query, message: No matching signature for function MOD
  Argument types: FLOAT64, INT64
  Signature: MOD(INT64, INT64)
    Argument 1: Unable to coerce type FLOAT64 to expected type INT64
  Signature: MOD(NUMERIC, NUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type NUMERIC
  Signature: MOD(BIGNUMERIC, BIGNUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type BIGNUMERIC at [74:17]

Location: US
Job ID: 6a52de33-5a8e-45c4-b3c4-1fdc998b5228

2025-01-25 11:29:31 - root - INFO - Input sql:
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
        ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
      AND CAST(a.pchembl_value AS FLOAT64) > 10
      AND CAST(cp.heavy_atoms AS INT64) BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
        ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
        ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
           AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
      AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (
            PARTITION BY d.journal, CAST(d.year AS INT64)
            ORDER BY CAST(d.first_page AS INT64)
        ) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
      AND d.first_page IS NOT NULL AND REGEXP_CONTAINS(d.first_page, r'^\d+$')
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(FLOOR(
                    CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END
                * 11), 0) + 1 AS INT64
            ),
            CAST(
                MOD(
                    FLOOR(
                        CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END
                    * 308
                    ), 28
                ) + 1 AS INT64
            )
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
        ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
        ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
        ON md1.assay_id = md2.assay_id
        AND md1.standard_type = md2.standard_type
        AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
The error information is:
400 No matching signature for function MOD
  Argument types: FLOAT64, INT64
  Signature: MOD(INT64, INT64)
    Argument 1: Unable to coerce type FLOAT64 to expected type INT64
  Signature: MOD(NUMERIC, NUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type NUMERIC
  Signature: MOD(BIGNUMERIC, BIGNUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type BIGNUMERIC at [74:17]; reason: invalidQuery, location: query, message: No matching signature for function MOD
  Argument types: FLOAT64, INT64
  Signature: MOD(INT64, INT64)
    Argument 1: Unable to coerce type FLOAT64 to expected type INT64
  Signature: MOD(NUMERIC, NUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type NUMERIC
  Signature: MOD(BIGNUMERIC, BIGNUMERIC)
    Argument 1: Unable to coerce type FLOAT64 to expected type BIGNUMERIC at [74:17]

Location: US
Job ID: 6a52de33-5a8e-45c4-b3c4-1fdc998b5228

Please correct it and output only 1 complete SQL query.
2025-01-25 11:30:23 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:30:23 - root - INFO - ```sql
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
        ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
      AND CAST(a.pchembl_value AS FLOAT64) > 10
      AND CAST(cp.heavy_atoms AS INT64) BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
        ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
        ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
           AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
      AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (
            PARTITION BY d.journal, CAST(d.year AS INT64)
            ORDER BY CAST(d.first_page AS INT64)
        ) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
      AND d.first_page IS NOT NULL AND REGEXP_CONTAINS(d.first_page, r'^\d+$')
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(
                    FLOOR(
                        (CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END) * 11
                    ), 0
                ) + 1 AS INT64
            ),
            CAST(
                MOD(
                    CAST(
                        FLOOR(
                            (CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END) * 308
                        ) AS INT64
                    ), 28
                ) + 1 AS INT64
            )
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
        ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
        ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
        ON md1.assay_id = md2.assay_id
        AND md1.standard_type = md2.standard_type
        AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
```
2025-01-25 11:30:29 - root - INFO - itercount: 3
2025-01-25 11:30:29 - root - INFO - 0
2025-01-25 11:30:29 - root - INFO - results: 
Max_heavy_atom_count,Latest_publication_date,Highest_doc_id,Change_classification,UUID
14,2007-06-24,36133,increase,6142806e3b5e75abe1a21f8b4f448f39
14,2007-06-24,36133,decrease,c4bd61440a95edea4e1253eae2e06478
14,2007-06-24,36133,decrease,8d3bad6466ce6abd616390bead10ce4f
14,2007-06-24,36133,increase,375c8ea26732ce08a1a469da65cc6fa7
14,2007-06-24,36133,increase,9f923e6d763fe4957a0c9c490de38810
14,2007-06-24,36133,decrease,10ffd93e81e02c889446858a7bb0cc3f
14,2007-06-24,36133,decrease,4a03bce7d2c197bf701f08708b44f81e
14,2007-06-24,36133,increase,38e70eb896fb01b9bce5ed3573a21a10
14,2007-06-24,36133,increase,4b34daba2375d8a355e02db6f1c34d48
14,2007-06-24,36133,increase,a438159dad31fc1689770a8987c0e15e
15,1998-09-09,2811,increase,f69493bb9b864a7ab074d2de0be1996c
15,1998-09-09,2811,increase,14d74aba39dc4324cbfbeaa54856445e
13,1998-09-09,2811,decrease,54328e72084b60a57153e8764d59acc8
13,1998-09-09,2811,decrease,16f5897c51e6ca683b19fa2350a833c8
13,1998-09-09,2811,decrease,496f769c5decc3d1d4cab4c960b9ca25
13,1998-09-09,2811,no-change,53a845bc9e28f087e61e1ce949b8cc93
14,2004-04-15,6774,increase,02b90b92ac9b3c71de4feee15ab175e3
14,2003-05-02,16992,decrease,a5be8d1e556e749149637804de517c4c
15,2007-06-24,36133,decrease,3e90db66c81f6f4a94675734db6d8aea
15,2007-06-24,36133,decrease,1c0e54602f37582825936a998048213a
15,2007-06-24,36133,increase,dbbc6c80942c8291cc8991347b88971e
15,2007-06-24,36133,decrease,0edab04836c3b7da44ac446b0d3a3a43
15,2007-06-24,36133,decrease,f29ba71a0555ba2e7a5df58df5020520
15,2007-06-24,36133,increase,443bca712c1ad6d053e423c82dfa437c
15,2007-06-24,36133,increase,d38b924ce0832aaeaac3be26b31c2ac5
15,2007-06-24,36133,decrease,46cd9a695ed860be8c6c7b744194261f
15,2007-06-24,36133,decrease,62a3dda970ed73c8c3b332a44acac945
15,2007-06-24,36133,increase,4f2670331c9cd8ce4b55fd9e75d6e721
15,2007-06-24,36133,increase,8d45d6c42ef9e6859d568203ca567579
15,2007-06-24,36133,increase,a627fc628c963b3bcfab5cea01fd947d
15,1998-09-09,2811,no-change,5ce01ecbb4615eca0ae79fbe3bc90084
15,1998-09-09,2811,decrease,b04ff92e74c4e3c4f4cb5e68dc05d96e
15,1998-09-09,2811,decrease,4b856ae8e0a074e07d401296b16c12be
15,1998-09-17,14663,increase,cd4050d21eb5672f57c42387b4ec0bd6
14,1998-09-17,14663,increase,d0122a9347967301e7cdd2b02472c2d9
14,1998-09-17,14663,increase,baabd8ced5830c35d12071f639fd057d
14,2007-06-24,36133,increase,7846b9d7243080890387e0fa4352fc4e
14,2007-06-24,36133,increase,ca3e818757d3ddd7389f475d8f6b95ce
14,2007-06-24,36133,increase,a65995d0dbe42638e9aa4ce7b1062851
14,2007-06-24,36133,increase,1feebccdbd83f1abb59ae8f526454115
15,2007-06-24,36133,decrease,f1dc5d2f19deedd1c29ee98ba91a85d1
15,2007-06-24,36133,decrease,ee1e8ce7583f688e7dd213b997fe2bbc
15,2007-06-24,36133,decrease,a91b3311662ee1cb5bba2788dabdf73d
15,2007-06-24,36133,decrease,efc6cb527faa743c4012981e1e9a4c68
15,2007-06-24,36133,decrease,4cdd4ca0bda5d2efbe4d37bccf92d2f0
15,2007-06-24,36133,decrease,ea2e6d09b3f3874eb1b2a688f1d7d5e2
15,2007-06-24,36133,decrease,6025103d4ecfb1f8c4b3ecacbef4d2b2
15,2007-06-24,36133,decrease,7889a169a32e8195770cee7aa061017f
15,2007-06-24,36133,decrease,18112c93caaadea955c3461e5cf0051b
15,2007-06-24,36133,decrease,d35b7c06df0187c1b6e680f3e63c0622
15,2007-06-24,36133,decrease,e19168474354827472748a4dc12f9ad0
15,2007-06-24,36133,decrease,56ae150690adf849dec91d686382a693
15,2007-06-24,36133,decrease,8a291e98dc239eef1a1399162564b0e5
15,2007-06-24,36133,decrease,1b18233c078650e497de701190d143ae
15,2007-06-24,36133,decrease,460778b02de6a795338a7c9fc305d278
15,2007-06-24,36133,decrease,70e9b3d1856cbb69b7da31b3b59e3938
14,2005-02-18,21501,increase,85fa21532e47b7d923360f6d6389cbdd
14,2005-02-18,21501,increase,d1d8ee15bf702d34a0fd6c2ae75e6727
14,2005-02-18,21501,increase,0a96751e1a8a9446516fb2c2ca562ab8
14,2007-06-24,36133,increase,0e185ff05a0d487b094503b5eda6d477
14,2007-06-24,36133,increase,d01fcd2d61ecbd10f66abfb08053130d
15,2007-06-24,36133,increase,ca80caf60b4416bcf07e7f56b00059fe
14,2007-06-24,36133,increase,ade7829eca34c499a753e4ddf399709f
14,2007-06-24,36133,decrease,5d201101ee8e638fff23104d0ae883b9
14,2007-06-24,36133,decrease,f98fe0db45add2e48348ff1fcb82a0e3
14,2007-06-24,36133,increase,a9dae028c02095afcb9cdbede5865a35
14,2007-06-24,36133,increase,007c7e74bd4916de65c620a619ca82d9
15,2007-06-24,36133,increase,eebd2eed7e8ce77a7af9fd76ba8ff62f
14,2007-06-24,36133,decrease,e0c2040fc28513447461a678e651642b
14,2007-06-24,36133,decrease,81ada53ed4eff1c0e946931c51e37f92
14,2007-06-24,36133,increase,4d40d4454ed441626e2cd09ea2d3fdfe
14,2007-06-24,36133,increase,c65b64553b981805b426c43f45f3d68f
14,2007-06-24,36133,increase,5a90ef8e2eb7d72a0afeb5cfd5e425f5
15,2003-05-02,16992,increase,b83e3e05c0ce496c823db392afb0df9e
15,2003-05-02,16992,increase,a4cd3f07ebf463448fa045544a322ffa
15,2003-05-02,16992,increase,b3f8fc59b408af97f0c1050a79eb00ac
15,2003-05-02,16992,increase,99be5ddd8fe0e52760b59ab50fcabdaf
15,2003-05-02,16992,increase,87dcc5d11084e7121585784df91267de
14,1998-09-09,2811,decrease,7ca3cd607386a61f85dd61a4e8ab1ee3
14,1998-09-09,2811,decrease,e0a1d50b2da6d446e409b598f3128f49
15,1998-09-09,2811,decrease,6435294055ce8a989fcf8227cde633e4
14,1998-09-09,2811,decrease,3b74be48bf9e441e163aaf7e20cfc33e
14,1998-09-09,2811,decrease,98b95c6f53de8c79c408c13af487f76e
14,1998-09-09,2811,decrease,76fbfe839edd7faf0bfa4631ee013175
14,1998-09-09,2811,decrease,9aad46db7ab989f088e6ebf27924e35d
15,1998-09-09,2811,decrease,7ca83fdfcf482bf41598a3b769626326
14,1998-09-09,2811,decrease,c1c317ac1a771da418beeb338298f49e
14,1998-09-09,2811,decrease,bd3e414f89ea359651b32229b690786f
14,1998-09-09,2811,decrease,13586b35d269c57f8d556a9cd0164f5d
14,1998-09-09,2811,decrease,7a9ff8d1a791df5bd28a7e71ee5915fb
14,1998-09-09,2811,decrease,886ce9d69550ec8a0891bdf3c6911f3e
14,1998-09-09,2811,decrease,1ec1df84bfe6a57c1c2d242f612ad557
14,1998-09-09,2811,decrease,ca1ce54f28490fab3b3118e773bdc0de
14,1998-09-09,2811,decrease,2345befc87b7f8e2c5280aacfff3ca88
14,2007-06-24,36133,increase,2be8362de460b6997f1f0989736bda17
14,2007-06-24,36133,increase,ef50bf5196c1e2cc24d24a288bb36c59
14,2007-06-24,36133,increase,1682d8ed5d91e731aee33d3cfefd8d18
14,2007-06-24,36133,increase,6f6033f7de5d52411e64e04af1caf629
14,2008-11-05,45856,increase,0c50049584bd9bc255f77583bc2e1c50
14,2004-08-07,21068,no-change,01d0a34524639eac2997994f8a319c9f


2025-01-25 11:30:29 - root - INFO - Please check the answer again by reviewing Find pairs of different molecules tested in the same assay and standard type, where both have 10–15 heavy atoms, fewer than 5 activities in that assay, fewer than 2 duplicate activities, non-null standard values, and pChEMBL values over 10. For each pair, report the maximum heavy atom count, the latest publication date (calculated based on the document's rank within the same journal and year, and map it to a synthetic month and day), the highest document ID, classify the change in standard values as 'increase', 'decrease', or 'no-change' based on their values and relations, and generate UUIDs from their activity IDs and canonical SMILES., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
Max_heavy_atom_count,Latest_publication_date,Highest_doc_id,Change_classification,UUID
count:int between 10 and 15,date:YYYY-MM-DD,id:int >0,classification:str (increase/decrease/no-change),uuid:str
count:int between 10 and 15,date:YYYY-MM-DD,id:int >0,classification:str (increase/decrease/no-change),uuid:str
...
```

This table displays pairs of different molecules that were tested in the same assay and standard type, meeting the specified criteria:

- **Max_heavy_atom_count**: The maximum number of heavy atoms (non-hydrogen atoms) in the pair of molecules, ranging between 10 and 15.
- **Latest_publication_date**: The latest publication date among the documents associated with the molecules, calculated based on the method described for assigning synthetic months and days.
- **Highest_doc_id**: The highest document ID among the documents associated with the molecules.
- **Change_classification**: Indicates whether the standard value between the two molecules has increased, decreased, or stayed the same ('increase', 'decrease', or 'no-change') based on their values and relations.
- **UUID**: A unique identifier generated from the activity IDs and canonical SMILES of the molecule pair.

Each row represents a pair of molecules satisfying all the conditions specified in the task. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Max_heavy_atom_count,Latest_publication_date,Highest_doc_id,Change_classification,UUID
14,2007-06-24,36133,increase,6142806e3b5e75abe1a21f8b4f448f39
14,2007-06-24,36133,decrease,c4bd61440a95edea4e1253eae2e06478
14,2007-06-24,36133,decrease,8d3bad6466ce6abd616390bead10ce4f
14,2007-06-24,36133,increase,375c8ea26732ce08a1a469da65cc6fa7
14,2007-06-24,36133,increase,9f923e6d763fe4957a0c9c490de38810
14,2007-06-24,36133,decrease,10ffd93e81e02c889446858a7bb0cc3f
14,2007-06-24,36133,decrease,4a03bce7d2c197bf701f08708b44f81e
14,2007-06-24,36133,increase,38e70eb896fb01b9bce5ed3573a21a10
14,2007-06-24,36133,increase,4b34daba2375d8a355e02db6f1c34d48
14,2007-06-24,36133,increase,a438159dad31fc1689770a8987c0e15e
15,1998-09-09,2811,increase,f69493bb9b864a7ab074d2de0be1996c
15,1998-09-09,2811,increase,14d74aba39dc4324cbfbeaa54856445e
13,1998-09-09,2811,decrease,54328e72084b60a57153e8764d59acc8
13,1998-09-09,2811,decrease,16f5897c51e6ca683b19fa2350a833c8
13,1998-09-09,2811,decrease,496f769c5decc3d1d4cab4c960b9ca25
13,1998-09-09,2811,no-change,53a845bc9e28f087e61e1ce949b8cc93
14,2004-04-15,6774,increase,02b90b92ac9b3c71de4feee15ab175e3
14,2003-05-02,16992,decrease,a5be8d1e556e749149637804de517c4c
15,2007-06-24,36133,decrease,3e90db66c81f6f4a94675734db6d8aea
15,2007-06-24,36133,decrease,1c0e54602f37582825936a998048213a
15,2007-06-24,36133,increase,dbbc6c80942c8291cc8991347b88971e
15,2007-06-24,36133,decrease,0edab04836c3b7da44ac446b0d3a3a43
15,2007-06-24,36133,decrease,f29ba71a0555ba2e7a5df58df5020520
15,2007-06-24,36133,increase,443bca712c1ad6d053e423c82dfa437c
15,2007-06-24,36133,increase,d38b924ce0832aaeaac3be26b31c2ac5
15,2007-06-24,36133,decrease,46cd9a695ed860be8c6c7b744194261f
15,2007-06-24,36133,decrease,62a3dda970ed73c8c3b332a44acac945
15,2007-06-24,36133,increase,4f2670331c9cd8ce4b55fd9e75d6e721
15,2007-06-24,36133,increase,8d45d6c42ef9e6859d568203ca567579
15,2007-06-24,36133,increase,a627fc628c963b3bcfab5cea01fd947d
15,1998-09-09,2811,no-change,5ce01ecbb4615eca0ae79fbe3bc90084
15,1998-09-09,2811,decrease,b04ff92e74c4e3c4f4cb5e68dc05d96e
15,1998-09-09,2811,decrease,4b856ae8e0a074e07d401296b16c12be
15,1998-09-17,14663,increase,cd4050d21eb5672f57c42387b4ec0bd6
14,1998-09-17,14663,increase,d0122a9347967301e7cdd2b02472c2d9
14,1998-09-17,14663,increase,baabd8ced5830c35d12071f639fd057d
14,2007-06-24,36133,increase,7846b9d7243080890387e0fa4352fc4e
14,2007-06-24,36133,increase,ca3e818757d3ddd7389f475d8f6b95ce
14,2007-06-24,36133,increase,a65995d0dbe42638e9aa4ce7b1062851
14,2007-06-24,36133,increase,1feebccdbd83f1abb59ae8f526454115
15,2007-06-24,36133,decrease,f1dc5d2f19deedd1c29ee98ba91a85d1
15,2007-06-24,36133,decrease,ee1e8ce7583f688e7dd213b997fe2bbc
15,2007-06-24,36133,decrease,a91b3311662ee1cb5bba2788dabdf73d
15,2007-06-24,36133,decrease,efc6cb527faa743c4012981e1e9a4c68
15,2007-06-24,36133,decrease,4cdd4ca0bda5d2efbe4d37bccf92d2f0
15,2007-06-24,36133,decrease,ea2e6d09b3f3874eb1b2a688f1d7d5e2
15,2007-06-24,36133,decrease,6025103d4ecfb1f8c4b3ecacbef4d2b2
15,2007-06-24,36133,decrease,7889a169a32e8195770cee7aa061017f
15,2007-06-24,36133,decrease,18112c93caaadea955c3461e5cf0051b
15,2007-06-24,36133,decrease,d35b7c06df0187c1b6e680f3e63c0622
15,2007-06-24,36133,decrease,e19168474354827472748a4dc12f9ad0
15,2007-06-24,36133,decrease,56ae150690adf849dec91d686382a693
15,2007-06-24,36133,decrease,8a291e98dc239eef1a1399162564b0e5
15,2007-06-24,36133,decrease,1b18233c078650e497de701190d143ae
15,2007-06-24,36133,decrease,460778b02de6a795338a7c9fc305d278
15,2007-06-24,36133,decrease,70e9b3d1856cbb69b7da31b3b59e3938
14,2005-02-18,21501,increase,85fa21532e47b7d923360f6d6389cbdd
14,2005-02-18,21501,increase,d1d8ee15bf702d34a0fd6c2ae75e6727
14,2005-02-18,21501,increase,0a96751e1a8a9446516fb2c2ca562ab8
14,2007-06-24,36133,increase,0e185ff05a0d487b094503b5eda6d477
14,2007-06-24,36133,increase,d01fcd2d61ecbd10f66abfb08053130d
15,2007-06-24,36133,increase,ca80caf60b4416bcf07e7f56b00059fe
14,2007-06-24,36133,increase,ade7829eca34c499a753e4ddf399709f
14,2007-06-24,36133,decrease,5d201101ee8e638fff23104d0ae883b9
14,2007-06-24,36133,decrease,f98fe0db45add2e48348ff1fcb82a0e3
14,2007-06-24,36133,increase,a9dae028c02095afcb9cdbede5865a35
14,2007-06-24,36133,increase,007c7e74bd4916de65c620a619ca82d9
15,2007-06-24,36133,increase,eebd2eed7e8ce77a7af9fd76ba8ff62f
14,2007-06-24,36133,decrease,e0c2040fc28513447461a678e651642b
14,2007-06-24,36133,decrease,81ada53ed4eff1c0e946931c51e37f92
14,2007-06-24,36133,increase,4d40d4454ed441626e2cd09ea2d3fdfe
14,2007-06-24,36133,increase,c65b64553b981805b426c43f45f3d68f
14,2007-06-24,36133,increase,5a90ef8e2eb7d72a0afeb5cfd5e425f5
15,2003-05-02,16992,increase,b83e3e05c0ce496c823db392afb0df9e
15,2003-05-02,16992,increase,a4cd3f07ebf463448fa045544a322ffa
15,2003-05-02,16992,increase,b3f8fc59b408af97f0c1050a79eb00ac
15,2003-05-02,16992,increase,99be5ddd8fe0e52760b59ab50fcabdaf
15,2003-05-02,16992,increase,87dcc5d11084e7121585784df91267de
14,1998-09-09,2811,decrease,7ca3cd607386a61f85dd61a4e8ab1ee3
14,1998-09-09,2811,decrease,e0a1d50b2da6d446e409b598f3128f49
15,1998-09-09,2811,decrease,6435294055ce8a989fcf8227cde633e4
14,1998-09-09,2811,decrease,3b74be48bf9e441e163aaf7e20cfc33e
14,1998-09-09,2811,decrease,98b95c6f53de8c79c408c13af487f76e
14,1998-09-09,2811,decrease,76fbfe839edd7faf0bfa4631ee013175
14,1998-09-09,2811,decrease,9aad46db7ab989f088e6ebf27924e35d
15,1998-09-09,2811,decrease,7ca83fdfcf482bf41598a3b769626326
14,1998-09-09,2811,decrease,c1c317ac1a771da418beeb338298f49e
14,1998-09-09,2811,decrease,bd3e414f89ea359651b32229b690786f
14,1998-09-09,2811,decrease,13586b35d269c57f8d556a9cd0164f5d
14,1998-09-09,2811,decrease,7a9ff8d1a791df5bd28a7e71ee5915fb
14,1998-09-09,2811,decrease,886ce9d69550ec8a0891bdf3c6911f3e
14,1998-09-09,2811,decrease,1ec1df84bfe6a57c1c2d242f612ad557
14,1998-09-09,2811,decrease,ca1ce54f28490fab3b3118e773bdc0de
14,1998-09-09,2811,decrease,2345befc87b7f8e2c5280aacfff3ca88
14,2007-06-24,36133,increase,2be8362de460b6997f1f0989736bda17
14,2007-06-24,36133,increase,ef50bf5196c1e2cc24d24a288bb36c59
14,2007-06-24,36133,increase,1682d8ed5d91e731aee33d3cfefd8d18
14,2007-06-24,36133,increase,6f6033f7de5d52411e64e04af1caf629
14,2008-11-05,45856,increase,0c50049584bd9bc255f77583bc2e1c50
14,2004-08-07,21068,no-change,01d0a34524639eac2997994f8a319c9f
Current sql:
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
        ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
      AND CAST(a.pchembl_value AS FLOAT64) > 10
      AND CAST(cp.heavy_atoms AS INT64) BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
        ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
        ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
           AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
      AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (
            PARTITION BY d.journal, CAST(d.year AS INT64)
            ORDER BY CAST(d.first_page AS INT64)
        ) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
      AND d.first_page IS NOT NULL AND REGEXP_CONTAINS(d.first_page, r'^\d+$')
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(
                    FLOOR(
                        (CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END) * 11
                    ), 0
                ) + 1 AS INT64
            ),
            CAST(
                MOD(
                    CAST(
                        FLOOR(
                            (CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END) * 308
                        ) AS INT64
                    ), 28
                ) + 1 AS INT64
            )
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
        ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
        ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
        ON md1.assay_id = md2.assay_id
        AND md1.standard_type = md2.standard_type
        AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
2025-01-25 11:31:16 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-25 11:31:16 - root - INFO - ```sql
WITH candidate_activities AS (
    SELECT
        a.activity_id,
        a.assay_id,
        a.standard_type,
        a.molregno,
        CAST(a.standard_value AS FLOAT64) AS standard_value,
        a.standard_relation,
        CAST(a.pchembl_value AS FLOAT64) AS pchembl_value,
        a.doc_id,
        CAST(cp.heavy_atoms AS INT64) AS heavy_atoms
    FROM `bigquery-public-data.ebi_chembl.activities` AS a
    JOIN `bigquery-public-data.ebi_chembl.compound_properties` AS cp
        ON a.molregno = cp.molregno
    WHERE a.standard_value IS NOT NULL
      AND CAST(a.pchembl_value AS FLOAT64) > 10
      AND CAST(cp.heavy_atoms AS INT64) BETWEEN 10 AND 15
),
activity_counts AS (
    SELECT
        assay_id,
        molregno,
        COUNT(*) AS activity_count
    FROM candidate_activities
    GROUP BY assay_id, molregno
),
duplicate_counts AS (
    SELECT
        assay_id,
        molregno,
        standard_value,
        standard_relation,
        COUNT(*) AS duplicate_count
    FROM candidate_activities
    GROUP BY assay_id, molregno, standard_value, standard_relation
),
filtered_activities AS (
    SELECT ca.*
    FROM candidate_activities AS ca
    JOIN activity_counts AS ac
        ON ca.assay_id = ac.assay_id AND ca.molregno = ac.molregno
    JOIN duplicate_counts AS dc
        ON ca.assay_id = dc.assay_id AND ca.molregno = dc.molregno
           AND ca.standard_value = dc.standard_value AND ca.standard_relation = dc.standard_relation
    WHERE ac.activity_count < 5
      AND dc.duplicate_count < 2
),
docs_publication_dates AS (
    SELECT
        d.doc_id,
        CAST(d.year AS INT64) AS year,
        d.journal,
        CAST(d.first_page AS INT64) AS first_page,
        ROW_NUMBER() OVER (
            PARTITION BY d.journal, CAST(d.year AS INT64)
            ORDER BY CAST(d.first_page AS INT64)
        ) AS doc_rank,
        COUNT(*) OVER (PARTITION BY d.journal, CAST(d.year AS INT64)) AS total_docs
    FROM `bigquery-public-data.ebi_chembl.docs` AS d
    WHERE d.year IS NOT NULL AND d.year != ''
      AND d.first_page IS NOT NULL AND REGEXP_CONTAINS(d.first_page, r'^\d+$')
),
publication_dates AS (
    SELECT
        doc_id,
        DATE(
            IFNULL(year, 1970),
            CAST(
                IFNULL(
                    FLOOR(
                        (CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END) * 11
                    ), 0
                ) + 1 AS INT64
            ),
            CAST(
                MOD(
                    CAST(
                        FLOOR(
                            (CASE WHEN total_docs > 1 THEN (doc_rank - 1)/(total_docs - 1) ELSE 0 END) * 308
                        ) AS INT64
                    ), 28
                ) + 1 AS INT64
            )
        ) AS publication_date
    FROM docs_publication_dates
),
canonical_smiles AS (
    SELECT molregno, canonical_smiles
    FROM `bigquery-public-data.ebi_chembl.compound_structures`
    WHERE canonical_smiles IS NOT NULL AND canonical_smiles != ''
),
molecule_data AS (
    SELECT
        fa.*,
        pd.publication_date,
        cs.canonical_smiles
    FROM filtered_activities AS fa
    LEFT JOIN publication_dates AS pd
        ON fa.doc_id = pd.doc_id
    LEFT JOIN canonical_smiles AS cs
        ON fa.molregno = cs.molregno
),
molecule_pairs AS (
    SELECT
        md1.assay_id,
        md1.standard_type,
        md1.molregno AS molregno1,
        md1.activity_id AS activity_id1,
        md1.standard_value AS standard_value1,
        md1.standard_relation AS standard_relation1,
        md1.pchembl_value AS pchembl_value1,
        md1.doc_id AS doc_id1,
        md1.heavy_atoms AS heavy_atoms1,
        md1.publication_date AS publication_date1,
        md1.canonical_smiles AS canonical_smiles1,
        md2.molregno AS molregno2,
        md2.activity_id AS activity_id2,
        md2.standard_value AS standard_value2,
        md2.standard_relation AS standard_relation2,
        md2.pchembl_value AS pchembl_value2,
        md2.doc_id AS doc_id2,
        md2.heavy_atoms AS heavy_atoms2,
        md2.publication_date AS publication_date2,
        md2.canonical_smiles AS canonical_smiles2
    FROM molecule_data AS md1
    JOIN molecule_data AS md2
        ON md1.assay_id = md2.assay_id
        AND md1.standard_type = md2.standard_type
        AND md1.molregno < md2.molregno
)
SELECT
    GREATEST(mp.heavy_atoms1, mp.heavy_atoms2) AS Max_heavy_atom_count,
    FORMAT_DATE('%Y-%m-%d', GREATEST(mp.publication_date1, mp.publication_date2)) AS Latest_publication_date,
    GREATEST(CAST(mp.doc_id1 AS INT64), CAST(mp.doc_id2 AS INT64)) AS Highest_doc_id,
    CASE
        WHEN mp.standard_relation1 = '=' AND mp.standard_relation2 = '=' THEN
            CASE
                WHEN mp.standard_value1 > mp.standard_value2 THEN 'decrease'
                WHEN mp.standard_value1 < mp.standard_value2 THEN 'increase'
                WHEN mp.standard_value1 = mp.standard_value2 THEN 'no-change'
                ELSE 'unknown'
            END
        ELSE 'unknown'
    END AS Change_classification,
    TO_HEX(MD5(TO_JSON_STRING(STRUCT(mp.activity_id1, mp.activity_id2)))) AS UUID
FROM molecule_pairs AS mp
LIMIT 100
```
2025-01-25 11:31:17 - root - INFO - itercount: 4
2025-01-25 11:31:17 - root - INFO - 0
2025-01-25 11:31:17 - root - INFO - Total iteration counts: 4
