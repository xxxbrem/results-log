2025-01-27 00:11:04 - openai._base_client - INFO - Retrying request to /chat/completions in 0.428966 seconds
2025-01-27 00:12:42 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 00:12:42 - root - INFO - SQL:
SELECT DISTINCT "match_id"
   FROM "ball_by_ball"
   LIMIT 100;
Results:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT *
   FROM "ball_by_ball"
   LIMIT 100;
Results:
match_id,over_id,ball_id,innings_no,team_batting,team_bowling,striker_batting_position,striker,non_striker,bowler
335987,1,1,2,2,1,1,6,7,106
335987,1,2,1,1,2,2,2,1,14
335987,1,2,2,2,1,2,7,6,106
335987,1,3,1,1,2,2,2,1,14
335987,1,3,2,2,1,2,7,6,106
335987,1,4,1,1,2,2,2,1,14
335987,1,4,2,2,1,2,7,6,106
335987,1,5,1,1,2,2,2,1,14
335987,1,5,2,2,1,1,6,7,106
335987,1,6,1,1,2,2,2,1,14
335987,1,6,2,2,1,2,7,6,106
335987,1,7,1,1,2,2,2,1,14
335987,1,7,2,2,1,2,7,6,106
335987,2,1,1,1,2,2,2,1,15
335987,2,1,2,2,1,1,6,7,84
335987,2,2,1,1,2,2,2,1,15
335987,2,2,2,2,1,3,8,7,84
335987,2,3,1,1,2,2,2,1,15
335987,2,3,2,2,1,3,8,7,84
335987,2,4,1,1,2,2,2,1,15
335987,2,4,2,2,1,3,8,7,84
335987,2,5,1,1,2,2,2,1,15
335987,2,5,2,2,1,2,7,8,84
335987,2,6,1,1,2,2,2,1,15
335987,2,6,2,2,1,2,7,8,84
335987,3,1,1,1,2,1,1,2,14
335987,3,1,2,2,1,3,8,7,106
335987,3,2,1,1,2,1,1,2,14
335987,3,2,2,2,1,3,8,7,106
335987,3,3,1,1,2,1,1,2,14
335987,3,3,2,2,1,4,9,7,106
335987,3,4,1,1,2,2,2,1,14
335987,3,4,2,2,1,2,7,9,106
335987,3,5,1,1,2,2,2,1,14
335987,3,5,2,2,1,2,7,9,106
335987,3,6,1,1,2,1,1,2,14
335987,3,6,2,2,1,2,7,9,106
335987,3,7,2,2,1,2,7,9,106
335987,4,1,1,1,2,2,2,1,13
335987,4,1,2,2,1,2,7,9,84
335987,4,2,1,1,2,2,2,1,13
335987,4,2,2,2,1,2,7,9,84
335987,4,3,1,1,2,2,2,1,13
335987,4,3,2,2,1,4,9,7,84
335987,4,4,1,1,2,1,1,2,13
335987,4,4,2,2,1,4,9,7,84
335987,4,5,1,1,2,1,1,2,13
335987,4,5,2,2,1,2,7,9,84
335987,4,6,1,1,2,1,1,2,13
335987,4,6,2,2,1,2,7,9,84
335987,4,7,1,1,2,2,2,1,13
335987,5,1,1,1,2,1,1,2,14
335987,5,1,2,2,1,4,9,7,82
335987,5,2,1,1,2,1,1,2,14
335987,5,2,2,2,1,2,7,9,82
335987,5,3,1,1,2,2,2,1,14
335987,5,3,2,2,1,4,9,7,82
335987,5,4,1,1,2,2,2,1,14
335987,5,4,2,2,1,4,9,7,82
335987,5,5,1,1,2,2,2,1,14
335987,5,5,2,2,1,4,9,7,82
335987,5,6,1,1,2,1,1,2,14
335987,5,6,2,2,1,5,10,7,82
335987,6,1,1,1,2,2,2,1,15
335987,6,1,2,2,1,2,7,10,106
335987,6,2,1,1,2,1,1,2,15
335987,6,2,2,2,1,2,7,10,106
335987,6,3,1,1,2,3,3,2,15
335987,6,3,2,2,1,6,11,10,106
335987,6,4,1,1,2,3,3,2,15
335987,6,4,2,2,1,6,11,10,106
335987,6,5,1,1,2,3,3,2,15
335987,6,5,2,2,1,5,10,11,106
335987,6,6,1,1,2,3,3,2,15
335987,6,6,2,2,1,6,11,10,106
335987,7,1,1,1,2,2,2,3,13
335987,7,1,2,2,1,5,10,11,82
335987,7,2,1,1,2,3,3,2,13
335987,7,2,2,2,1,5,10,11,82
335987,7,3,1,1,2,2,2,3,13
335987,7,3,2,2,1,5,10,11,82
335987,7,4,1,1,2,3,3,2,13
335987,7,4,2,2,1,6,11,10,82
335987,7,5,1,1,2,3,3,2,13
335987,7,5,2,2,1,6,11,10,82
335987,7,6,1,1,2,2,2,3,13
335987,7,6,2,2,1,6,11,10,82
335987,7,7,2,2,1,6,11,10,82
335987,7,8,2,2,1,6,11,10,82
335987,8,1,1,1,2,2,2,3,15
335987,8,1,2,2,1,5,10,11,1
335987,8,2,1,1,2,2,2,3,15
335987,8,2,2,2,1,6,11,10,1
335987,8,3,1,1,2,3,3,2,15
335987,8,3,2,2,1,5,10,11,1
335987,8,4,1,1,2,2,2,3,15
335987,8,4,2,2,1,6,11,10,1
335987,8,5,1,1,2,3,3,2,15
335987,8,5,2,2,1,6,11,10,1
335987,8,6,1,1,2,2,2,3,15

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT DISTINCT "striker"
   FROM "ball_by_ball"
   LIMIT 100;
Results:
striker
6
2
7
8
1
9
10
3
11
12
13
14
15
4
16
5
17
24
18
25
19
26
20
21
27
22
28
23
29
30
40
31
41
42
32
33
34
35
36
37
38
39
43
51
44
45
46
52
47
48
49
50
53
62
54
55
56
57
58
232
59
63
60
61
69
64
65
66
67
68
70
71
72
73
74
75
79
76
80
77
78
81
82
83
84
85
86
87
88
89
92
90
91
93
94
95
96
100
97
98

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
   FROM "batsman_scored"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
   FROM "wicket_taken"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,player_out,kind_out
419167,1,10,3,154,caught
419167,2,10,3,46,caught
419167,2,12,4,8,caught
419167,2,14,4,96,caught
419167,1,18,4,208,caught
419168,1,2,7,18,caught
419168,1,5,5,21,caught
419168,2,6,1,53,caught
419168,2,6,5,178,caught
419168,2,8,2,57,caught
419168,1,14,2,20,caught
419168,1,15,5,109,caught
419168,2,16,2,56,caught
419168,2,18,4,188,caught
419168,2,20,2,131,caught
419168,1,20,4,125,caught
419169,1,1,4,53,caught
419169,1,4,2,57,caught
419169,1,7,1,56,caught
419169,1,17,3,54,caught
419169,1,19,3,131,caught
419170,2,2,4,42,caught
419170,1,8,2,185,caught
419170,1,9,4,18,caught
419170,1,12,2,23,caught
419170,2,15,2,133,caught
419170,2,15,5,79,caught
419170,2,17,6,154,caught
419170,1,18,1,20,caught
419170,2,19,6,221,caught
501203,1,1,6,185,caught
501203,1,11,3,21,caught
501203,2,16,2,9,caught
501203,1,18,2,20,caught
501203,2,20,2,63,caught
501204,1,5,5,42,caught
501204,1,6,3,26,caught
501204,2,6,5,252,caught
501204,1,11,1,257,caught
501204,1,13,6,154,caught
501204,1,18,3,258,caught
501204,1,20,1,112,caught
501204,1,20,3,94,caught
501205,2,2,2,135,caught
501205,1,9,6,55,caught
501205,2,10,6,260,caught
501205,1,12,3,2,caught
501205,2,18,4,79,caught
501205,1,19,4,259,caught
501206,1,7,6,254,caught
501206,1,15,2,183,caught
501206,1,18,4,106,caught
501207,2,1,1,74,caught
501207,1,1,4,53,caught
501207,1,2,3,100,caught
501207,1,3,4,167,caught
501207,1,4,3,88,caught
501207,2,8,5,171,caught
501207,1,9,3,48,caught
501207,2,9,3,157,caught
501207,1,18,1,67,caught
501207,1,20,1,14,caught
501208,2,9,6,26,caught
501208,2,13,2,154,caught
501208,1,13,3,9,caught
501208,2,14,6,93,caught
501208,2,17,4,258,caught
501208,2,18,1,112,caught
501208,1,20,6,31,caught
501209,1,1,3,41,caught
501209,1,5,5,254,caught
501209,1,8,1,262,caught
501209,1,8,3,183,caught
501209,2,8,3,6,caught
501209,2,11,5,266,caught
501209,1,18,4,187,caught
501209,1,19,7,54,caught
501210,1,5,4,8,caught
501211,1,1,2,21,caught
501211,2,6,5,53,caught
501211,2,14,6,264,caught
501212,1,1,1,2,caught
501212,1,3,5,64,caught
501212,1,5,5,17,caught
501212,2,8,4,74,caught
501212,2,10,5,171,caught
501212,2,12,2,27,caught
501212,1,16,2,104,caught
501212,1,17,1,35,caught
501213,2,2,6,135,caught
501213,1,3,5,42,caught
501213,2,5,6,260,caught
501213,2,7,4,110,caught
501213,1,9,6,65,caught
501213,2,12,1,79,caught
501213,1,15,4,26,caught
501213,2,17,5,203,caught
501213,2,17,6,268,caught
501213,2,20,1,269,caught
501213,1,20,2,154,caught

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT DISTINCT "striker", "non_striker"
   FROM "ball_by_ball"
   LIMIT 100;
Results:
striker,non_striker
6,7
2,1
7,6
8,7
7,8
1,2
9,7
7,9
10,7
7,10
3,2
11,10
10,11
2,3
10,12
12,10
13,10
10,13
13,14
14,13
15,14
14,15
2,4
4,2
16,14
14,16
2,5
5,2
17,18
24,25
18,17
25,24
19,18
18,19
25,26
26,25
20,19
19,20
21,19
19,21
26,27
27,26
19,22
22,19
26,28
28,26
23,19
19,23
28,29
29,28
30,31
40,41
31,30
41,40
42,40
40,42
32,31
31,32
32,33
33,32
33,34
34,33
35,33
33,35
36,35
35,36
37,35
35,37
38,37
37,38
39,37
37,39
43,44
51,6
6,51
44,43
45,44
44,45
46,44
44,46
52,6
6,52
46,47
47,46
9,52
52,9
8,9
9,8
46,48
48,46
11,9
9,11
49,48
48,49
12,11
49,50
50,49
11,12
53,54
62,2

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT "player_id", "player_name"
   FROM "player"
   LIMIT 100;
Results:
player_id,player_name
1,SC Ganguly
2,BB McCullum
3,RT Ponting
4,DJ Hussey
5,Mohammad Hafeez
6,R Dravid
7,W Jaffer
8,V Kohli
9,JH Kallis
10,CL White
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
16,SB Joshi
17,PA Patel
18,ML Hayden
19,MEK Hussey
20,MS Dhoni
21,SK Raina
22,JDP Oram
23,S Badrinath
24,K Goel
25,JR Hopes
26,KC Sangakkara
27,Yuvraj Singh
28,SM Katich
29,IK Pathan
30,T Kohli
31,YK Pathan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
40,G Gambhir
41,V Sehwag
42,S Dhawan
43,L Ronchi
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
51,S Chanderpaul
52,LRPL Taylor
53,AC Gilchrist
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
59,SB Bangar
60,WPUJC Vaas
61,RP Singh
62,WP Saha
63,LR Shukla
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
69,Kamran Akmal
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
76,RR Sarwan
77,S Sreesanth
78,VRV Singh
79,SS Tiwary
80,DS Kulkarni
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
90,MF Maharoof
91,VY Mahesh
92,TM Srivastava
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
100,SE Marsh
101,SA Asnodkar

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT b."match_id", b."innings_no", b."over_id", b."ball_id", b."striker", s."runs_scored"
   FROM "ball_by_ball" AS b
   JOIN "batsman_scored" AS s
     ON b."match_id" = s."match_id"
     AND b."innings_no" = s."innings_no"
     AND b."over_id" = s."over_id"
     AND b."ball_id" = s."ball_id"
   LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,striker,runs_scored
335987,2,1,1,6,1
335987,1,1,2,2,0
335987,2,1,3,7,0
335987,1,1,4,2,0
335987,2,1,4,7,1
335987,1,1,5,2,0
335987,2,1,5,6,1
335987,1,1,6,2,0
335987,2,1,6,7,0
335987,1,1,7,2,0
335987,2,1,7,7,0
335987,1,2,1,2,0
335987,2,2,1,6,0
335987,1,2,2,2,4
335987,2,2,2,8,0
335987,1,2,3,2,4
335987,2,2,3,8,0
335987,1,2,4,2,6
335987,2,2,4,8,1
335987,1,2,5,2,4
335987,2,2,5,7,0
335987,1,2,6,2,0
335987,2,2,6,7,0
335987,1,3,1,1,0
335987,2,3,1,8,0
335987,1,3,2,1,0
335987,2,3,2,8,0
335987,1,3,3,1,0
335987,2,3,3,9,1
335987,1,3,4,2,4
335987,2,3,4,7,0
335987,1,3,5,2,1
335987,1,3,6,1,0
335987,2,3,6,7,0
335987,2,3,7,7,1
335987,2,4,1,7,2
335987,1,4,2,2,6
335987,2,4,2,7,1
335987,1,4,3,2,0
335987,2,4,3,9,0
335987,1,4,4,1,4
335987,2,4,4,9,0
335987,1,4,5,1,0
335987,2,4,5,7,0
335987,1,4,6,1,1
335987,2,4,6,7,0
335987,1,4,7,2,6
335987,1,5,1,1,4
335987,2,5,1,9,1
335987,1,5,2,1,1
335987,2,5,2,7,1
335987,1,5,3,2,4
335987,2,5,3,9,0
335987,1,5,4,2,0
335987,2,5,4,9,6
335987,1,5,5,2,1
335987,2,5,5,9,0
335987,1,5,6,1,0
335987,2,5,6,10,0
335987,1,6,1,2,1
335987,2,6,1,7,0
335987,1,6,2,1,0
335987,2,6,2,7,0
335987,1,6,3,3,0
335987,2,6,3,11,0
335987,1,6,4,3,0
335987,2,6,4,11,1
335987,1,6,5,3,0
335987,2,6,5,10,1
335987,1,6,6,3,0
335987,2,6,6,11,0
335987,1,7,1,2,1
335987,2,7,1,10,0
335987,1,7,2,3,1
335987,2,7,2,10,0
335987,1,7,3,2,1
335987,2,7,3,10,1
335987,1,7,4,3,2
335987,1,7,5,3,1
335987,1,7,6,2,1
335987,2,7,6,11,0
335987,2,7,7,11,0
335987,2,7,8,11,4
335987,1,8,1,2,0
335987,2,8,1,10,1
335987,1,8,2,2,1
335987,2,8,2,11,0
335987,1,8,3,3,1
335987,2,8,3,10,1
335987,1,8,4,2,1
335987,2,8,4,11,2
335987,1,8,5,3,1
335987,2,8,5,11,0
335987,1,8,6,2,1
335987,2,8,6,10,0
335987,1,9,1,2,0
335987,2,9,1,12,0
335987,1,9,2,2,0
335987,2,9,2,12,0
335987,1,9,3,2,0

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT b."match_id", b."striker", SUM(s."runs_scored") AS "total_runs"
   FROM "ball_by_ball" AS b
   JOIN "batsman_scored" AS s
     ON b."match_id" = s."match_id"
     AND b."innings_no" = s."innings_no"
     AND b."over_id" = s."over_id"
     AND b."ball_id" = s."ball_id"
   GROUP BY b."match_id", b."striker"
   LIMIT 100;
Results:
match_id,striker,total_runs
335987,1,10
335987,2,158
335987,3,20
335987,4,12
335987,5,5
335987,6,2
335987,7,6
335987,8,1
335987,9,8
335987,10,6
335987,11,7
335987,12,0
335987,13,9
335987,14,18
335987,15,3
335987,16,3
335988,17,15
335988,18,25
335988,19,116
335988,20,2
335988,21,32
335988,22,13
335988,23,31
335988,24,24
335988,25,71
335988,26,54
335988,27,23
335988,28,21
335988,29,3
335989,30,7
335989,31,10
335989,32,17
335989,33,9
335989,34,1
335989,35,29
335989,36,2
335989,37,26
335989,38,14
335989,39,3
335989,40,58
335989,41,12
335989,42,52
335990,6,32
335990,8,23
335990,9,25
335990,11,39
335990,12,3
335990,43,8
335990,44,29
335990,45,0
335990,46,48
335990,47,19
335990,48,20
335990,49,28
335990,50,2
335990,51,16
335990,52,23
335991,1,14
335991,2,5
335991,3,0
335991,4,38
335991,5,13
335991,53,23
335991,54,14
335991,55,0
335991,56,32
335991,57,0
335991,58,6
335991,59,14
335991,60,0
335991,61,1
335991,62,10
335991,63,4
335991,232,10
335992,24,26
335992,25,16
335992,26,20
335992,27,57
335992,29,12
335992,31,7
335992,32,76
335992,33,5
335992,34,17
335992,35,36
335992,64,2
335992,65,4
335992,66,0
335992,67,24
335992,68,1
335992,69,15
335993,40,12
335993,41,94
335993,42,25
335993,53,8
335993,54,14
335993,55,2
335993,56,12
335993,57,66
335993,59,8
335993,60,12

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT b."match_id", b."innings_no", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
    FROM "ball_by_ball" AS b
    JOIN "batsman_scored" AS s
      ON b."match_id" = s."match_id"
      AND b."innings_no" = s."innings_no"
      AND b."over_id" = s."over_id"
      AND b."ball_id" = s."ball_id"
    GROUP BY b."match_id", b."innings_no", b."striker", b."non_striker"
    LIMIT 100;
Results:
match_id,innings_no,striker,non_striker,partnership_runs
335987,1,1,2,10
335987,1,2,1,41
335987,1,2,3,27
335987,1,2,4,45
335987,1,2,5,45
335987,1,3,2,20
335987,1,4,2,12
335987,1,5,2,5
335987,2,6,7,2
335987,2,7,6,1
335987,2,7,8,0
335987,2,7,9,5
335987,2,7,10,0
335987,2,8,7,1
335987,2,9,7,8
335987,2,10,7,0
335987,2,10,11,4
335987,2,10,12,0
335987,2,10,13,2
335987,2,11,10,7
335987,2,12,10,0
335987,2,13,10,1
335987,2,13,14,8
335987,2,14,13,4
335987,2,14,15,8
335987,2,14,16,6
335987,2,15,14,3
335987,2,16,14,3
335988,1,17,18,15
335988,1,18,17,9
335988,1,18,19,16
335988,1,19,18,14
335988,1,19,20,3
335988,1,19,21,33
335988,1,19,22,24
335988,1,19,23,42
335988,1,20,19,2
335988,1,21,19,32
335988,1,22,19,13
335988,1,23,19,31
335988,2,24,25,24
335988,2,25,24,31
335988,2,25,26,40
335988,2,26,25,12
335988,2,26,27,15
335988,2,26,28,27
335988,2,27,26,23
335988,2,28,26,8
335988,2,28,29,13
335988,2,29,28,3
335989,1,30,31,7
335989,1,31,30,9
335989,1,31,32,1
335989,1,32,31,5
335989,1,32,33,12
335989,1,33,32,1
335989,1,33,34,4
335989,1,33,35,4
335989,1,34,33,1
335989,1,35,33,4
335989,1,35,36,12
335989,1,35,37,13
335989,1,36,35,2
335989,1,37,35,7
335989,1,37,38,3
335989,1,37,39,16
335989,1,38,37,14
335989,1,39,37,3
335989,2,40,41,8
335989,2,40,42,50
335989,2,41,40,12
335989,2,42,40,52
335990,1,43,44,8
335990,1,44,43,1
335990,1,44,45,6
335990,1,44,46,22
335990,1,45,44,0
335990,1,46,44,3
335990,1,46,47,30
335990,1,46,48,15
335990,1,47,46,19
335990,1,48,46,10
335990,1,48,49,10
335990,1,49,48,17
335990,1,49,50,11
335990,1,50,49,2
335990,2,6,51,20
335990,2,6,52,12
335990,2,8,9,23
335990,2,9,8,6
335990,2,9,11,16
335990,2,9,52,3
335990,2,11,9,38
335990,2,11,12,1
335990,2,12,11,3
335990,2,51,6,16
335990,2,52,6,18
335990,2,52,9,5
335991,1,53,54,3
335991,1,53,55,1

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT w."match_id", w."innings_no", w."over_id", w."ball_id", w."player_out"
    FROM "wicket_taken" AS w
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,player_out
419167,1,10,3,154
419167,2,10,3,46
419167,2,12,4,8
419167,2,14,4,96
419167,1,18,4,208
419168,1,2,7,18
419168,1,5,5,21
419168,2,6,1,53
419168,2,6,5,178
419168,2,8,2,57
419168,1,14,2,20
419168,1,15,5,109
419168,2,16,2,56
419168,2,18,4,188
419168,2,20,2,131
419168,1,20,4,125
419169,1,1,4,53
419169,1,4,2,57
419169,1,7,1,56
419169,1,17,3,54
419169,1,19,3,131
419170,2,2,4,42
419170,1,8,2,185
419170,1,9,4,18
419170,1,12,2,23
419170,2,15,2,133
419170,2,15,5,79
419170,2,17,6,154
419170,1,18,1,20
419170,2,19,6,221
501203,1,1,6,185
501203,1,11,3,21
501203,2,16,2,9
501203,1,18,2,20
501203,2,20,2,63
501204,1,5,5,42
501204,1,6,3,26
501204,2,6,5,252
501204,1,11,1,257
501204,1,13,6,154
501204,1,18,3,258
501204,1,20,1,112
501204,1,20,3,94
501205,2,2,2,135
501205,1,9,6,55
501205,2,10,6,260
501205,1,12,3,2
501205,2,18,4,79
501205,1,19,4,259
501206,1,7,6,254
501206,1,15,2,183
501206,1,18,4,106
501207,2,1,1,74
501207,1,1,4,53
501207,1,2,3,100
501207,1,3,4,167
501207,1,4,3,88
501207,2,8,5,171
501207,1,9,3,48
501207,2,9,3,157
501207,1,18,1,67
501207,1,20,1,14
501208,2,9,6,26
501208,2,13,2,154
501208,1,13,3,9
501208,2,14,6,93
501208,2,17,4,258
501208,2,18,1,112
501208,1,20,6,31
501209,1,1,3,41
501209,1,5,5,254
501209,1,8,1,262
501209,1,8,3,183
501209,2,8,3,6
501209,2,11,5,266
501209,1,18,4,187
501209,1,19,7,54
501210,1,5,4,8
501211,1,1,2,21
501211,2,6,5,53
501211,2,14,6,264
501212,1,1,1,2
501212,1,3,5,64
501212,1,5,5,17
501212,2,8,4,74
501212,2,10,5,171
501212,2,12,2,27
501212,1,16,2,104
501212,1,17,1,35
501213,2,2,6,135
501213,1,3,5,42
501213,2,5,6,260
501213,2,7,4,110
501213,1,9,6,65
501213,2,12,1,79
501213,1,15,4,26
501213,2,17,5,203
501213,2,17,6,268
501213,2,20,1,269
501213,1,20,2,154

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT DISTINCT "match_id", "innings_no"
    FROM "ball_by_ball"
    LIMIT 100;
Results:
match_id,innings_no
335987,2
335987,1
335988,1
335988,2
335989,1
335989,2
335990,1
335990,2
335991,1
335991,2
335992,1
335992,2
335993,1
335993,2
335994,1
335994,2
335995,1
335995,2
335996,1
335996,2
335997,1
335997,2
335998,1
335998,2
335999,1
335999,2
336000,1
336000,2
336001,1
336001,2
336002,1
336002,2
336003,1
336003,2
336004,1
336004,2
336005,1
336005,2
336006,1
336006,2
336007,1
336007,2
336008,1
336008,2
336009,1
336009,2
336010,1
336010,2
336011,1
336011,2
336012,1
336012,2
336013,1
336013,2
336014,1
336014,2
336015,1
336015,2
336016,1
336016,2
336017,1
336017,2
336018,1
336018,2
336019,1
336019,2
336020,1
336020,2
336021,1
336021,2
336022,1
336022,2
336023,1
336023,2
336024,1
336024,2
336025,1
336025,2
336026,1
336026,2
336027,1
336027,2
336028,1
336028,2
336029,1
336029,2
336030,1
336030,2
336031,1
336031,2
336032,1
336032,2
336033,1
336033,2
336034,1
336034,2
336036,1
336036,2
336037,1
336037,2

2025-01-27 00:12:42 - root - INFO - SQL:
SELECT "match_id", "innings_no", "over_id", "ball_id", "striker", "non_striker"
    FROM "ball_by_ball"
    ORDER BY "match_id", "innings_no", "over_id", "ball_id"
    LIMIT 100;
Results:
match_id,innings_no,over_id,ball_id,striker,non_striker
335987,1,1,2,2,1
335987,1,1,3,2,1
335987,1,1,4,2,1
335987,1,1,5,2,1
335987,1,1,6,2,1
335987,1,1,7,2,1
335987,1,2,1,2,1
335987,1,2,2,2,1
335987,1,2,3,2,1
335987,1,2,4,2,1
335987,1,2,5,2,1
335987,1,2,6,2,1
335987,1,3,1,1,2
335987,1,3,2,1,2
335987,1,3,3,1,2
335987,1,3,4,2,1
335987,1,3,5,2,1
335987,1,3,6,1,2
335987,1,4,1,2,1
335987,1,4,2,2,1
335987,1,4,3,2,1
335987,1,4,4,1,2
335987,1,4,5,1,2
335987,1,4,6,1,2
335987,1,4,7,2,1
335987,1,5,1,1,2
335987,1,5,2,1,2
335987,1,5,3,2,1
335987,1,5,4,2,1
335987,1,5,5,2,1
335987,1,5,6,1,2
335987,1,6,1,2,1
335987,1,6,2,1,2
335987,1,6,3,3,2
335987,1,6,4,3,2
335987,1,6,5,3,2
335987,1,6,6,3,2
335987,1,7,1,2,3
335987,1,7,2,3,2
335987,1,7,3,2,3
335987,1,7,4,3,2
335987,1,7,5,3,2
335987,1,7,6,2,3
335987,1,8,1,2,3
335987,1,8,2,2,3
335987,1,8,3,3,2
335987,1,8,4,2,3
335987,1,8,5,3,2
335987,1,8,6,2,3
335987,1,9,1,2,3
335987,1,9,2,2,3
335987,1,9,3,2,3
335987,1,9,4,2,3
335987,1,9,5,3,2
335987,1,9,6,2,3
335987,1,10,1,3,2
335987,1,10,2,2,3
335987,1,10,3,3,2
335987,1,10,4,2,3
335987,1,10,5,2,3
335987,1,10,6,2,3
335987,1,11,1,2,3
335987,1,11,2,3,2
335987,1,11,3,3,2
335987,1,11,4,3,2
335987,1,11,5,3,2
335987,1,11,6,3,2
335987,1,12,1,2,3
335987,1,12,2,2,3
335987,1,12,3,2,3
335987,1,12,4,2,3
335987,1,12,5,3,2
335987,1,12,6,3,2
335987,1,13,1,3,2
335987,1,13,2,2,4
335987,1,13,3,2,4
335987,1,13,4,2,4
335987,1,13,5,2,4
335987,1,13,6,2,4
335987,1,13,7,2,4
335987,1,14,1,2,4
335987,1,14,2,4,2
335987,1,14,3,4,2
335987,1,14,4,2,4
335987,1,14,5,4,2
335987,1,14,6,2,4
335987,1,15,1,4,2
335987,1,15,2,4,2
335987,1,15,3,2,4
335987,1,15,4,2,4
335987,1,15,5,2,4
335987,1,15,6,4,2
335987,1,15,7,2,4
335987,1,16,1,4,2
335987,1,16,2,4,2
335987,1,16,3,2,4
335987,1,16,4,2,4
335987,1,16,5,2,4
335987,1,16,6,4,2
335987,1,17,1,2,4

2025-01-27 00:12:43 - root - INFO - SQL:
SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
    FROM "ball_by_ball" AS b
    JOIN "batsman_scored" AS s
      ON b."match_id" = s."match_id"
      AND b."innings_no" = s."innings_no"
      AND b."over_id" = s."over_id"
      AND b."ball_id" = s."ball_id"
    GROUP BY b."match_id", b."striker", b."non_striker"
    ORDER BY b."match_id", "partnership_runs" DESC
    LIMIT 100;
Results:
match_id,striker,non_striker,partnership_runs
335987,2,4,45
335987,2,5,45
335987,2,1,41
335987,2,3,27
335987,3,2,20
335987,4,2,12
335987,1,2,10
335987,9,7,8
335987,13,14,8
335987,14,15,8
335987,11,10,7
335987,14,16,6
335987,5,2,5
335987,7,9,5
335987,10,11,4
335987,14,13,4
335987,15,14,3
335987,16,14,3
335987,6,7,2
335987,10,13,2
335987,7,6,1
335987,8,7,1
335987,13,10,1
335987,7,8,0
335987,7,10,0
335987,10,7,0
335987,10,12,0
335987,12,10,0
335988,19,23,42
335988,25,26,40
335988,19,21,33
335988,21,19,32
335988,23,19,31
335988,25,24,31
335988,26,28,27
335988,19,22,24
335988,24,25,24
335988,27,26,23
335988,18,19,16
335988,17,18,15
335988,26,27,15
335988,19,18,14
335988,22,19,13
335988,28,29,13
335988,26,25,12
335988,18,17,9
335988,28,26,8
335988,19,20,3
335988,29,28,3
335988,20,19,2
335989,42,40,52
335989,40,42,50
335989,37,39,16
335989,38,37,14
335989,35,37,13
335989,32,33,12
335989,35,36,12
335989,41,40,12
335989,31,30,9
335989,40,41,8
335989,30,31,7
335989,37,35,7
335989,32,31,5
335989,33,34,4
335989,33,35,4
335989,35,33,4
335989,37,38,3
335989,39,37,3
335989,36,35,2
335989,31,32,1
335989,33,32,1
335989,34,33,1
335990,11,9,38
335990,46,47,30
335990,8,9,23
335990,44,46,22
335990,6,51,20
335990,47,46,19
335990,52,6,18
335990,49,48,17
335990,9,11,16
335990,51,6,16
335990,46,48,15
335990,6,52,12
335990,49,50,11
335990,48,46,10
335990,48,49,10
335990,43,44,8
335990,9,8,6
335990,44,45,6
335990,52,9,5
335990,9,52,3
335990,12,11,3
335990,46,44,3
335990,50,49,2
335990,11,12,1
335990,44,43,1
335990,45,44,0
335991,56,59,22
335991,53,56,19

2025-01-27 00:12:43 - root - INFO - SQL:
SELECT "player_out", COUNT(*) AS "dismissals"
    FROM "wicket_taken"
    GROUP BY "player_out"
    LIMIT 100;
Results:
player_out,dismissals
1,52
2,86
3,9
4,49
5,7
6,77
7,8
8,105
9,84
10,35
11,14
12,6
13,1
14,37
15,13
16,2
17,88
18,29
19,51
20,83
21,121
22,8
23,46
24,15
25,16
26,63
27,90
28,10
29,51
30,3
31,89
32,76
33,17
34,2
35,67
36,5
37,2
38,20
39,7
40,118
41,97
42,96
43,5
44,28
45,3
46,114
47,8
48,38
49,8
50,49
51,3
52,40
53,76
54,44
55,19
56,27
57,115
58,7
59,6
60,8
61,15
62,50
63,26
64,61
65,20
66,10
67,40
68,6
69,5
70,8
71,55
72,2
73,7
74,25
75,2
76,4
77,4
78,2
79,44
80,7
81,26
82,10
83,7
84,3
85,74
86,4
87,46
88,106
89,29
90,10
91,2
92,1
93,15
94,22
95,14
96,69
97,32
98,1
99,1
100,53

2025-01-27 00:12:43 - root - INFO - itercount: 0
2025-01-27 00:12:43 - root - INFO - Table: playerDDL:
CREATE TABLE player(
        player_id INTEGER PRIMARY KEY,
        player_name TEXT,
        dob DATE,
        batting_hand TEXT,
        bowling_skill TEXT,
        country_name TEXT
    )
Table: teamDDL:
CREATE TABLE team(
        team_id INTEGER PRIMARY KEY,
        name TEXT
    )
Table: matchDDL:
CREATE TABLE match(
        match_id INTEGER PRIMARY KEY,
        team_1 INTEGER,
        team_2 INTEGER,
        match_date DATE,
        season_id INTEGER,
        venue TEXT,
        toss_winner INTEGER,
        toss_decision TEXT,
        win_type TEXT,
        win_margin INTEGER,
        outcome_type TEXT,
        match_winner INTEGER,
        man_of_the_match INTEGER
    )
Table: player_matchDDL:
CREATE TABLE player_match(
        match_id INTEGER NOT NULL,
        player_id INTEGER NOT NULL,
        role TEXT,
        team_id INTEGER,
        PRIMARY KEY(match_id, player_id)
    )
Table: ball_by_ballDDL:
CREATE TABLE ball_by_ball(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        innings_no INTEGER NOT NULL,
        team_batting INTEGER,
        team_bowling INTEGER,
        striker_batting_position INTEGER,
        striker INTEGER,
        non_striker INTEGER,
        bowler INTEGER,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: batsman_scoredDDL:
CREATE TABLE batsman_scored(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        runs_scored INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: wicket_takenDDL:
CREATE TABLE wicket_taken(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        player_out INTEGER,
        kind_out TEXT,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
Table: extra_runsDDL:
CREATE TABLE extra_runs(
        match_id INTEGER NOT NULL,
        over_id INTEGER NOT NULL,
        ball_id INTEGER NOT NULL,
        extra_type TEXT,
        extra_runs INTEGER,
        innings_no INTEGER NOT NULL,
        PRIMARY KEY(match_id, over_id, ball_id, innings_no)
    )
External knowledge that might be helpful: 
None
The table structure information is (table names): 
['player', 'team', 'match', 'player_match', 'ball_by_ball', 'batsman_scored', 'wicket_taken', 'extra_runs']
Begin Exploring Related Columns
**Tables and Columns Relevant to the Task:**

1. **`ball_by_ball`**

   - `match_id`: To identify each match.
   - `innings_no`: To distinguish between the innings in a match.
   - `over_id`: To order the deliveries within an innings.
   - `ball_id`: To identify each delivery.
   - `striker`: Player ID of the batsman on strike.
   - `non_striker`: Player ID of the batsman at the non-striker's end.
   - `team_batting`: Team ID of the batting team.

2. **`batsman_scored`**

   - `match_id`: To link to the corresponding match.
   - `innings_no`: To link to the correct innings.
   - `over_id`: To link to the correct over.
   - `ball_id`: To link to the correct ball.
   - `runs_scored`: Runs scored by the batsman on that delivery.

3. **`wicket_taken`**

   - `match_id`: To link to the corresponding match.
   - `innings_no`: To link to the correct innings.
   - `over_id`: To link to the correct over.
   - `ball_id`: To link to the correct ball.
   - `player_out`: Player ID of the batsman who was dismissed.

4. **`player`**

   - `player_id`: To identify players.
   - `player_name`: For reference (if needed).

**Conditions That May Be Used:**

- Join `ball_by_ball`, `batsman_scored`, and `wicket_taken` tables on `match_id`, `innings_no`, `over_id`, and `ball_id` to combine delivery information.
- Group data by `match_id`, `innings_no`, and the combination of `striker` and `non_striker` to calculate partnership runs.
- Detect changes in `striker` and `non_striker` to identify when a partnership starts and ends.
- Use `wicket_taken` to determine when a batsman is dismissed, indicating the end of a partnership.
- Order data by `over_id` and `ball_id` to process deliveries in sequence.

---

**Sample SQLite Queries to Understand the Data:**

1. **List distinct match IDs:**
   ```sql
   SELECT DISTINCT "match_id"
   FROM "ball_by_ball"
   LIMIT 100;
   ```

2. **Retrieve the first 100 rows from the `ball_by_ball` table:**
   ```sql
   SELECT *
   FROM "ball_by_ball"
   LIMIT 100;
   ```

3. **List distinct striker player IDs:**
   ```sql
   SELECT DISTINCT "striker"
   FROM "ball_by_ball"
   LIMIT 100;
   ```

4. **Get runs scored on each delivery:**
   ```sql
   SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
   FROM "batsman_scored"
   LIMIT 100;
   ```

5. **Find deliveries where wickets were taken:**
   ```sql
   SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
   FROM "wicket_taken"
   LIMIT 100;
   ```

6. **List distinct combinations of strikers and non-strikers:**
   ```sql
   SELECT DISTINCT "striker", "non_striker"
   FROM "ball_by_ball"
   LIMIT 100;
   ```

7. **Retrieve player IDs and names:**
   ```sql
   SELECT "player_id", "player_name"
   FROM "player"
   LIMIT 100;
   ```

8. **Join `ball_by_ball` and `batsman_scored` to get runs scored by the striker on each delivery:**
   ```sql
   SELECT b."match_id", b."innings_no", b."over_id", b."ball_id", b."striker", s."runs_scored"
   FROM "ball_by_ball" AS b
   JOIN "batsman_scored" AS s
     ON b."match_id" = s."match_id"
     AND b."innings_no" = s."innings_no"
     AND b."over_id" = s."over_id"
     AND b."ball_id" = s."ball_id"
   LIMIT 100;
   ```

9. **Calculate total runs scored by each batsman in each match:**
   ```sql
   SELECT b."match_id", b."striker", SUM(s."runs_scored") AS "total_runs"
   FROM "ball_by_ball" AS b
   JOIN "batsman_scored" AS s
     ON b."match_id" = s."match_id"
     AND b."innings_no" = s."innings_no"
     AND b."over_id" = s."over_id"
     AND b."ball_id" = s."ball_id"
   GROUP BY b."match_id", b."striker"
   LIMIT 100;
   ```

10. **Identify partnerships and their total runs in each innings:**
    ```sql
    SELECT b."match_id", b."innings_no", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
    FROM "ball_by_ball" AS b
    JOIN "batsman_scored" AS s
      ON b."match_id" = s."match_id"
      AND b."innings_no" = s."innings_no"
      AND b."over_id" = s."over_id"
      AND b."ball_id" = s."ball_id"
    GROUP BY b."match_id", b."innings_no", b."striker", b."non_striker"
    LIMIT 100;
    ```

11. **Find instances where a batsman was dismissed:**
    ```sql
    SELECT w."match_id", w."innings_no", w."over_id", w."ball_id", w."player_out"
    FROM "wicket_taken" AS w
    LIMIT 100;
    ```

12. **List distinct innings numbers in matches:**
    ```sql
    SELECT DISTINCT "match_id", "innings_no"
    FROM "ball_by_ball"
    LIMIT 100;
    ```

13. **Order deliveries to observe changes in batsmen:**
    ```sql
    SELECT "match_id", "innings_no", "over_id", "ball_id", "striker", "non_striker"
    FROM "ball_by_ball"
    ORDER BY "match_id", "innings_no", "over_id", "ball_id"
    LIMIT 100;
    ```

14. **Identify top partnerships by runs in each match:**
    ```sql
    SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
    FROM "ball_by_ball" AS b
    JOIN "batsman_scored" AS s
      ON b."match_id" = s."match_id"
      AND b."innings_no" = s."innings_no"
      AND b."over_id" = s."over_id"
      AND b."ball_id" = s."ball_id"
    GROUP BY b."match_id", b."striker", b."non_striker"
    ORDER BY b."match_id", "partnership_runs" DESC
    LIMIT 100;
    ```

15. **Count the number of dismissals for each player:**
    ```sql
    SELECT "player_out", COUNT(*) AS "dismissals"
    FROM "wicket_taken"
    GROUP BY "player_out"
    LIMIT 100;
    ```

---

These queries range from simple data retrieval to more complex joins and aggregations, providing insights into the structure of the tables and helping to understand how the data is organized. This understanding is crucial for tackling the original task of identifying the players who scored the highest number of partnership runs for each match.Query:
SELECT DISTINCT "match_id"
   FROM "ball_by_ball"
   LIMIT 100;
Answer:
match_id
335987
335988
335989
335990
335991
335992
335993
335994
335995
335996
335997
335998
335999
336000
336001
336002
336003
336004
336005
336006
336007
336008
336009
336010
336011
336012
336013
336014
336015
336016
336017
336018
336019
336020
336021
336022
336023
336024
336025
336026
336027
336028
336029
336030
336031
336032
336033
336034
336036
336037
336038
336039
336040
336041
336042
336043
336044
336045
392186
392187
392188
392189
392190
392191
392193
392194
392196
392197
392199
392200
392201
392202
392203
392204
392205
392206
392207
392208
392209
392210
392211
392212
392213
392214
392215
392216
392217
392218
392219
392220
392221
392222
392223
392224
392225
392226
392227
392228
392229
392230
Query:
SELECT *
   FROM "ball_by_ball"
   LIMIT 100;
Answer:
match_id,over_id,ball_id,innings_no,team_batting,team_bowling,striker_batting_position,striker,non_striker,bowler
335987,1,1,2,2,1,1,6,7,106
335987,1,2,1,1,2,2,2,1,14
335987,1,2,2,2,1,2,7,6,106
335987,1,3,1,1,2,2,2,1,14
335987,1,3,2,2,1,2,7,6,106
335987,1,4,1,1,2,2,2,1,14
335987,1,4,2,2,1,2,7,6,106
335987,1,5,1,1,2,2,2,1,14
335987,1,5,2,2,1,1,6,7,106
335987,1,6,1,1,2,2,2,1,14
335987,1,6,2,2,1,2,7,6,106
335987,1,7,1,1,2,2,2,1,14
335987,1,7,2,2,1,2,7,6,106
335987,2,1,1,1,2,2,2,1,15
335987,2,1,2,2,1,1,6,7,84
335987,2,2,1,1,2,2,2,1,15
335987,2,2,2,2,1,3,8,7,84
335987,2,3,1,1,2,2,2,1,15
335987,2,3,2,2,1,3,8,7,84
335987,2,4,1,1,2,2,2,1,15
335987,2,4,2,2,1,3,8,7,84
335987,2,5,1,1,2,2,2,1,15
335987,2,5,2,2,1,2,7,8,84
335987,2,6,1,1,2,2,2,1,15
335987,2,6,2,2,1,2,7,8,84
335987,3,1,1,1,2,1,1,2,14
335987,3,1,2,2,1,3,8,7,106
335987,3,2,1,1,2,1,1,2,14
335987,3,2,2,2,1,3,8,7,106
335987,3,3,1,1,2,1,1,2,14
335987,3,3,2,2,1,4,9,7,106
335987,3,4,1,1,2,2,2,1,14
335987,3,4,2,2,1,2,7,9,106
335987,3,5,1,1,2,2,2,1,14
335987,3,5,2,2,1,2,7,9,106
335987,3,6,1,1,2,1,1,2,14
335987,3,6,2,2,1,2,7,9,106
335987,3,7,2,2,1,2,7,9,106
335987,4,1,1,1,2,2,2,1,13
335987,4,1,2,2,1,2,7,9,84
335987,4,2,1,1,2,2,2,1,13
335987,4,2,2,2,1,2,7,9,84
335987,4,3,1,1,2,2,2,1,13
335987,4,3,2,2,1,4,9,7,84
335987,4,4,1,1,2,1,1,2,13
335987,4,4,2,2,1,4,9,7,84
335987,4,5,1,1,2,1,1,2,13
335987,4,5,2,2,1,2,7,9,84
335987,4,6,1,1,2,1,1,2,13
335987,4,6,2,2,1,2,7,9,84
335987,4,7,1,1,2,2,2,1,13
335987,5,1,1,1,2,1,1,2,14
335987,5,1,2,2,1,4,9,7,82
335987,5,2,1,1,2,1,1,2,14
335987,5,2,2,2,1,2,7,9,82
335987,5,3,1,1,2,2,2,1,14
335987,5,3,2,2,1,4,9,7,82
335987,5,4,1,1,2,2,2,1,14
335987,5,4,2,2,1,4,9,7,82
335987,5,5,1,1,2,2,2,1,14
335987,5,5,2,2,1,4,9,7,82
335987,5,6,1,1,2,1,1,2,14
335987,5,6,2,2,1,5,10,7,82
335987,6,1,1,1,2,2,2,1,15
335987,6,1,2,2,1,2,7,10,106
335987,6,2,1,1,2,1,1,2,15
335987,6,2,2,2,1,2,7,10,106
335987,6,3,1,1,2,3,3,2,15
335987,6,3,2,2,1,6,11,10,106
335987,6,4,1,1,2,3,3,2,15
335987,6,4,2,2,1,6,11,10,106
335987,6,5,1,1,2,3,3,2,15
335987,6,5,2,2,1,5,10,11,106
335987,6,6,1,1,2,3,3,2,15
335987,6,6,2,2,1,6,11,10,106
335987,7,1,1,1,2,2,2,3,13
335987,7,1,2,2,1,5,10,11,82
335987,7,2,1,1,2,3,3,2,13
335987,7,2,2,2,1,5,10,11,82
335987,7,3,1,1,2,2,2,3,13
335987,7,3,2,2,1,5,10,11,82
335987,7,4,1,1,2,3,3,2,13
335987,7,4,2,2,1,6,11,10,82
335987,7,5,1,1,2,3,3,2,13
335987,7,5,2,2,1,6,11,10,82
335987,7,6,1,1,2,2,2,3,13
335987,7,6,2,2,1,6,11,10,82
335987,7,7,2,2,1,6,11,10,82
335987,7,8,2,2,1,6,11,10,82
335987,8,1,1,1,2,2,2,3,15
335987,8,1,2,2,1,5,10,11,1
335987,8,2,1,1,2,2,2,3,15
335987,8,2,2,2,1,6,11,10,1
335987,8,3,1,1,2,3,3,2,15
335987,8,3,2,2,1,5,10,11,1
335987,8,4,1,1,2,2,2,3,15
335987,8,4,2,2,1,6,11,10,1
335987,8,5,1,1,2,3,3,2,15
335987,8,5,2,2,1,6,11,10,1
335987,8,6,1,1,2,2,2,3,15
Query:
SELECT DISTINCT "striker"
   FROM "ball_by_ball"
   LIMIT 100;
Answer:
striker
6
2
7
8
1
9
10
3
11
12
13
14
15
4
16
5
17
24
18
25
19
26
20
21
27
22
28
23
29
30
40
31
41
42
32
33
34
35
36
37
38
39
43
51
44
45
46
52
47
48
49
50
53
62
54
55
56
57
58
232
59
63
60
61
69
64
65
66
67
68
70
71
72
73
74
75
79
76
80
77
78
81
82
83
84
85
86
87
88
89
92
90
91
93
94
95
96
100
97
98
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "runs_scored"
   FROM "batsman_scored"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,runs_scored
335987,2,1,1,1
335987,1,1,2,0
335987,2,1,3,0
335987,1,1,4,0
335987,2,1,4,1
335987,1,1,5,0
335987,2,1,5,1
335987,1,1,6,0
335987,2,1,6,0
335987,1,1,7,0
335987,2,1,7,0
335987,1,2,1,0
335987,2,2,1,0
335987,1,2,2,4
335987,2,2,2,0
335987,1,2,3,4
335987,2,2,3,0
335987,1,2,4,6
335987,2,2,4,1
335987,1,2,5,4
335987,2,2,5,0
335987,1,2,6,0
335987,2,2,6,0
335987,1,3,1,0
335987,2,3,1,0
335987,1,3,2,0
335987,2,3,2,0
335987,1,3,3,0
335987,2,3,3,1
335987,1,3,4,4
335987,2,3,4,0
335987,1,3,5,1
335987,1,3,6,0
335987,2,3,6,0
335987,2,3,7,1
335987,2,4,1,2
335987,1,4,2,6
335987,2,4,2,1
335987,1,4,3,0
335987,2,4,3,0
335987,1,4,4,4
335987,2,4,4,0
335987,1,4,5,0
335987,2,4,5,0
335987,1,4,6,1
335987,2,4,6,0
335987,1,4,7,6
335987,1,5,1,4
335987,2,5,1,1
335987,1,5,2,1
335987,2,5,2,1
335987,1,5,3,4
335987,2,5,3,0
335987,1,5,4,0
335987,2,5,4,6
335987,1,5,5,1
335987,2,5,5,0
335987,1,5,6,0
335987,2,5,6,0
335987,1,6,1,1
335987,2,6,1,0
335987,1,6,2,0
335987,2,6,2,0
335987,1,6,3,0
335987,2,6,3,0
335987,1,6,4,0
335987,2,6,4,1
335987,1,6,5,0
335987,2,6,5,1
335987,1,6,6,0
335987,2,6,6,0
335987,1,7,1,1
335987,2,7,1,0
335987,1,7,2,1
335987,2,7,2,0
335987,1,7,3,1
335987,2,7,3,1
335987,1,7,4,2
335987,1,7,5,1
335987,1,7,6,1
335987,2,7,6,0
335987,2,7,7,0
335987,2,7,8,4
335987,1,8,1,0
335987,2,8,1,1
335987,1,8,2,1
335987,2,8,2,0
335987,1,8,3,1
335987,2,8,3,1
335987,1,8,4,1
335987,2,8,4,2
335987,1,8,5,1
335987,2,8,5,0
335987,1,8,6,1
335987,2,8,6,0
335987,1,9,1,0
335987,2,9,1,0
335987,1,9,2,0
335987,2,9,2,0
335987,1,9,3,0
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "player_out", "kind_out"
   FROM "wicket_taken"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,player_out,kind_out
419167,1,10,3,154,caught
419167,2,10,3,46,caught
419167,2,12,4,8,caught
419167,2,14,4,96,caught
419167,1,18,4,208,caught
419168,1,2,7,18,caught
419168,1,5,5,21,caught
419168,2,6,1,53,caught
419168,2,6,5,178,caught
419168,2,8,2,57,caught
419168,1,14,2,20,caught
419168,1,15,5,109,caught
419168,2,16,2,56,caught
419168,2,18,4,188,caught
419168,2,20,2,131,caught
419168,1,20,4,125,caught
419169,1,1,4,53,caught
419169,1,4,2,57,caught
419169,1,7,1,56,caught
419169,1,17,3,54,caught
419169,1,19,3,131,caught
419170,2,2,4,42,caught
419170,1,8,2,185,caught
419170,1,9,4,18,caught
419170,1,12,2,23,caught
419170,2,15,2,133,caught
419170,2,15,5,79,caught
419170,2,17,6,154,caught
419170,1,18,1,20,caught
419170,2,19,6,221,caught
501203,1,1,6,185,caught
501203,1,11,3,21,caught
501203,2,16,2,9,caught
501203,1,18,2,20,caught
501203,2,20,2,63,caught
501204,1,5,5,42,caught
501204,1,6,3,26,caught
501204,2,6,5,252,caught
501204,1,11,1,257,caught
501204,1,13,6,154,caught
501204,1,18,3,258,caught
501204,1,20,1,112,caught
501204,1,20,3,94,caught
501205,2,2,2,135,caught
501205,1,9,6,55,caught
501205,2,10,6,260,caught
501205,1,12,3,2,caught
501205,2,18,4,79,caught
501205,1,19,4,259,caught
501206,1,7,6,254,caught
501206,1,15,2,183,caught
501206,1,18,4,106,caught
501207,2,1,1,74,caught
501207,1,1,4,53,caught
501207,1,2,3,100,caught
501207,1,3,4,167,caught
501207,1,4,3,88,caught
501207,2,8,5,171,caught
501207,1,9,3,48,caught
501207,2,9,3,157,caught
501207,1,18,1,67,caught
501207,1,20,1,14,caught
501208,2,9,6,26,caught
501208,2,13,2,154,caught
501208,1,13,3,9,caught
501208,2,14,6,93,caught
501208,2,17,4,258,caught
501208,2,18,1,112,caught
501208,1,20,6,31,caught
501209,1,1,3,41,caught
501209,1,5,5,254,caught
501209,1,8,1,262,caught
501209,1,8,3,183,caught
501209,2,8,3,6,caught
501209,2,11,5,266,caught
501209,1,18,4,187,caught
501209,1,19,7,54,caught
501210,1,5,4,8,caught
501211,1,1,2,21,caught
501211,2,6,5,53,caught
501211,2,14,6,264,caught
501212,1,1,1,2,caught
501212,1,3,5,64,caught
501212,1,5,5,17,caught
501212,2,8,4,74,caught
501212,2,10,5,171,caught
501212,2,12,2,27,caught
501212,1,16,2,104,caught
501212,1,17,1,35,caught
501213,2,2,6,135,caught
501213,1,3,5,42,caught
501213,2,5,6,260,caught
501213,2,7,4,110,caught
501213,1,9,6,65,caught
501213,2,12,1,79,caught
501213,1,15,4,26,caught
501213,2,17,5,203,caught
501213,2,17,6,268,caught
501213,2,20,1,269,caught
501213,1,20,2,154,caught
Query:
SELECT DISTINCT "striker", "non_striker"
   FROM "ball_by_ball"
   LIMIT 100;
Answer:
striker,non_striker
6,7
2,1
7,6
8,7
7,8
1,2
9,7
7,9
10,7
7,10
3,2
11,10
10,11
2,3
10,12
12,10
13,10
10,13
13,14
14,13
15,14
14,15
2,4
4,2
16,14
14,16
2,5
5,2
17,18
24,25
18,17
25,24
19,18
18,19
25,26
26,25
20,19
19,20
21,19
19,21
26,27
27,26
19,22
22,19
26,28
28,26
23,19
19,23
28,29
29,28
30,31
40,41
31,30
41,40
42,40
40,42
32,31
31,32
32,33
33,32
33,34
34,33
35,33
33,35
36,35
35,36
37,35
35,37
38,37
37,38
39,37
37,39
43,44
51,6
6,51
44,43
45,44
44,45
46,44
44,46
52,6
6,52
46,47
47,46
9,52
52,9
8,9
9,8
46,48
48,46
11,9
9,11
49,48
48,49
12,11
49,50
50,49
11,12
53,54
62,2
Query:
SELECT "player_id", "player_name"
   FROM "player"
   LIMIT 100;
Answer:
player_id,player_name
1,SC Ganguly
2,BB McCullum
3,RT Ponting
4,DJ Hussey
5,Mohammad Hafeez
6,R Dravid
7,W Jaffer
8,V Kohli
9,JH Kallis
10,CL White
11,MV Boucher
12,B Akhil
13,AA Noffke
14,P Kumar
15,Z Khan
16,SB Joshi
17,PA Patel
18,ML Hayden
19,MEK Hussey
20,MS Dhoni
21,SK Raina
22,JDP Oram
23,S Badrinath
24,K Goel
25,JR Hopes
26,KC Sangakkara
27,Yuvraj Singh
28,SM Katich
29,IK Pathan
30,T Kohli
31,YK Pathan
32,SR Watson
33,M Kaif
34,DS Lehmann
36,M Rawat
37,D Salunkhe
38,SK Warne
39,SK Trivedi
40,G Gambhir
41,V Sehwag
42,S Dhawan
43,L Ronchi
44,ST Jayasuriya
45,DJ Thornely
46,RV Uthappa
47,PR Shah
48,AM Nayar
49,SM Pollock
50,Harbhajan Singh
51,S Chanderpaul
52,LRPL Taylor
53,AC Gilchrist
54,Y Venugopal Rao
55,VVS Laxman
56,A Symonds
57,RG Sharma
58,SB Styris
59,SB Bangar
60,WPUJC Vaas
61,RP Singh
62,WP Saha
63,LR Shukla
64,DPMD Jayawardene
65,S Sohal
66,B Lee
67,PP Chawla
68,WA Mota
69,Kamran Akmal
70,Shahid Afridi
71,DJ Bravo
72,MA Khote
73,A Nehra
74,GC Smith
75,Pankaj Singh
76,RR Sarwan
77,S Sreesanth
78,VRV Singh
79,SS Tiwary
80,DS Kulkarni
81,R Vinay Kumar
82,AB Agarkar
83,M Kartik
84,I Sharma
85,AM Rahane
86,Shoaib Malik
87,MK Tiwary
88,KD Karthik
89,R Bhatia
90,MF Maharoof
91,VY Mahesh
92,TM Srivastava
93,B Chipli
94,DW Steyn
95,DB Das
96,MK Pandey
97,HH Gibbs
98,DNT Zoysa
99,D Kalyankrishna
100,SE Marsh
101,SA Asnodkar
Query:
SELECT b."match_id", b."innings_no", b."over_id", b."ball_id", b."striker", s."runs_scored"
   FROM "ball_by_ball" AS b
   JOIN "batsman_scored" AS s
     ON b."match_id" = s."match_id"
     AND b."innings_no" = s."innings_no"
     AND b."over_id" = s."over_id"
     AND b."ball_id" = s."ball_id"
   LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,striker,runs_scored
335987,2,1,1,6,1
335987,1,1,2,2,0
335987,2,1,3,7,0
335987,1,1,4,2,0
335987,2,1,4,7,1
335987,1,1,5,2,0
335987,2,1,5,6,1
335987,1,1,6,2,0
335987,2,1,6,7,0
335987,1,1,7,2,0
335987,2,1,7,7,0
335987,1,2,1,2,0
335987,2,2,1,6,0
335987,1,2,2,2,4
335987,2,2,2,8,0
335987,1,2,3,2,4
335987,2,2,3,8,0
335987,1,2,4,2,6
335987,2,2,4,8,1
335987,1,2,5,2,4
335987,2,2,5,7,0
335987,1,2,6,2,0
335987,2,2,6,7,0
335987,1,3,1,1,0
335987,2,3,1,8,0
335987,1,3,2,1,0
335987,2,3,2,8,0
335987,1,3,3,1,0
335987,2,3,3,9,1
335987,1,3,4,2,4
335987,2,3,4,7,0
335987,1,3,5,2,1
335987,1,3,6,1,0
335987,2,3,6,7,0
335987,2,3,7,7,1
335987,2,4,1,7,2
335987,1,4,2,2,6
335987,2,4,2,7,1
335987,1,4,3,2,0
335987,2,4,3,9,0
335987,1,4,4,1,4
335987,2,4,4,9,0
335987,1,4,5,1,0
335987,2,4,5,7,0
335987,1,4,6,1,1
335987,2,4,6,7,0
335987,1,4,7,2,6
335987,1,5,1,1,4
335987,2,5,1,9,1
335987,1,5,2,1,1
335987,2,5,2,7,1
335987,1,5,3,2,4
335987,2,5,3,9,0
335987,1,5,4,2,0
335987,2,5,4,9,6
335987,1,5,5,2,1
335987,2,5,5,9,0
335987,1,5,6,1,0
335987,2,5,6,10,0
335987,1,6,1,2,1
335987,2,6,1,7,0
335987,1,6,2,1,0
335987,2,6,2,7,0
335987,1,6,3,3,0
335987,2,6,3,11,0
335987,1,6,4,3,0
335987,2,6,4,11,1
335987,1,6,5,3,0
335987,2,6,5,10,1
335987,1,6,6,3,0
335987,2,6,6,11,0
335987,1,7,1,2,1
335987,2,7,1,10,0
335987,1,7,2,3,1
335987,2,7,2,10,0
335987,1,7,3,2,1
335987,2,7,3,10,1
335987,1,7,4,3,2
335987,1,7,5,3,1
335987,1,7,6,2,1
335987,2,7,6,11,0
335987,2,7,7,11,0
335987,2,7,8,11,4
335987,1,8,1,2,0
335987,2,8,1,10,1
335987,1,8,2,2,1
335987,2,8,2,11,0
335987,1,8,3,3,1
335987,2,8,3,10,1
335987,1,8,4,2,1
335987,2,8,4,11,2
335987,1,8,5,3,1
335987,2,8,5,11,0
335987,1,8,6,2,1
335987,2,8,6,10,0
335987,1,9,1,2,0
335987,2,9,1,12,0
335987,1,9,2,2,0
335987,2,9,2,12,0
335987,1,9,3,2,0
Query:
SELECT b."match_id", b."striker", SUM(s."runs_scored") AS "total_runs"
   FROM "ball_by_ball" AS b
   JOIN "batsman_scored" AS s
     ON b."match_id" = s."match_id"
     AND b."innings_no" = s."innings_no"
     AND b."over_id" = s."over_id"
     AND b."ball_id" = s."ball_id"
   GROUP BY b."match_id", b."striker"
   LIMIT 100;
Answer:
match_id,striker,total_runs
335987,1,10
335987,2,158
335987,3,20
335987,4,12
335987,5,5
335987,6,2
335987,7,6
335987,8,1
335987,9,8
335987,10,6
335987,11,7
335987,12,0
335987,13,9
335987,14,18
335987,15,3
335987,16,3
335988,17,15
335988,18,25
335988,19,116
335988,20,2
335988,21,32
335988,22,13
335988,23,31
335988,24,24
335988,25,71
335988,26,54
335988,27,23
335988,28,21
335988,29,3
335989,30,7
335989,31,10
335989,32,17
335989,33,9
335989,34,1
335989,35,29
335989,36,2
335989,37,26
335989,38,14
335989,39,3
335989,40,58
335989,41,12
335989,42,52
335990,6,32
335990,8,23
335990,9,25
335990,11,39
335990,12,3
335990,43,8
335990,44,29
335990,45,0
335990,46,48
335990,47,19
335990,48,20
335990,49,28
335990,50,2
335990,51,16
335990,52,23
335991,1,14
335991,2,5
335991,3,0
335991,4,38
335991,5,13
335991,53,23
335991,54,14
335991,55,0
335991,56,32
335991,57,0
335991,58,6
335991,59,14
335991,60,0
335991,61,1
335991,62,10
335991,63,4
335991,232,10
335992,24,26
335992,25,16
335992,26,20
335992,27,57
335992,29,12
335992,31,7
335992,32,76
335992,33,5
335992,34,17
335992,35,36
335992,64,2
335992,65,4
335992,66,0
335992,67,24
335992,68,1
335992,69,15
335993,40,12
335993,41,94
335993,42,25
335993,53,8
335993,54,14
335993,55,2
335993,56,12
335993,57,66
335993,59,8
335993,60,12
Query:
SELECT b."match_id", b."innings_no", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
    FROM "ball_by_ball" AS b
    JOIN "batsman_scored" AS s
      ON b."match_id" = s."match_id"
      AND b."innings_no" = s."innings_no"
      AND b."over_id" = s."over_id"
      AND b."ball_id" = s."ball_id"
    GROUP BY b."match_id", b."innings_no", b."striker", b."non_striker"
    LIMIT 100;
Answer:
match_id,innings_no,striker,non_striker,partnership_runs
335987,1,1,2,10
335987,1,2,1,41
335987,1,2,3,27
335987,1,2,4,45
335987,1,2,5,45
335987,1,3,2,20
335987,1,4,2,12
335987,1,5,2,5
335987,2,6,7,2
335987,2,7,6,1
335987,2,7,8,0
335987,2,7,9,5
335987,2,7,10,0
335987,2,8,7,1
335987,2,9,7,8
335987,2,10,7,0
335987,2,10,11,4
335987,2,10,12,0
335987,2,10,13,2
335987,2,11,10,7
335987,2,12,10,0
335987,2,13,10,1
335987,2,13,14,8
335987,2,14,13,4
335987,2,14,15,8
335987,2,14,16,6
335987,2,15,14,3
335987,2,16,14,3
335988,1,17,18,15
335988,1,18,17,9
335988,1,18,19,16
335988,1,19,18,14
335988,1,19,20,3
335988,1,19,21,33
335988,1,19,22,24
335988,1,19,23,42
335988,1,20,19,2
335988,1,21,19,32
335988,1,22,19,13
335988,1,23,19,31
335988,2,24,25,24
335988,2,25,24,31
335988,2,25,26,40
335988,2,26,25,12
335988,2,26,27,15
335988,2,26,28,27
335988,2,27,26,23
335988,2,28,26,8
335988,2,28,29,13
335988,2,29,28,3
335989,1,30,31,7
335989,1,31,30,9
335989,1,31,32,1
335989,1,32,31,5
335989,1,32,33,12
335989,1,33,32,1
335989,1,33,34,4
335989,1,33,35,4
335989,1,34,33,1
335989,1,35,33,4
335989,1,35,36,12
335989,1,35,37,13
335989,1,36,35,2
335989,1,37,35,7
335989,1,37,38,3
335989,1,37,39,16
335989,1,38,37,14
335989,1,39,37,3
335989,2,40,41,8
335989,2,40,42,50
335989,2,41,40,12
335989,2,42,40,52
335990,1,43,44,8
335990,1,44,43,1
335990,1,44,45,6
335990,1,44,46,22
335990,1,45,44,0
335990,1,46,44,3
335990,1,46,47,30
335990,1,46,48,15
335990,1,47,46,19
335990,1,48,46,10
335990,1,48,49,10
335990,1,49,48,17
335990,1,49,50,11
335990,1,50,49,2
335990,2,6,51,20
335990,2,6,52,12
335990,2,8,9,23
335990,2,9,8,6
335990,2,9,11,16
335990,2,9,52,3
335990,2,11,9,38
335990,2,11,12,1
335990,2,12,11,3
335990,2,51,6,16
335990,2,52,6,18
335990,2,52,9,5
335991,1,53,54,3
335991,1,53,55,1
Query:
SELECT w."match_id", w."innings_no", w."over_id", w."ball_id", w."player_out"
    FROM "wicket_taken" AS w
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,player_out
419167,1,10,3,154
419167,2,10,3,46
419167,2,12,4,8
419167,2,14,4,96
419167,1,18,4,208
419168,1,2,7,18
419168,1,5,5,21
419168,2,6,1,53
419168,2,6,5,178
419168,2,8,2,57
419168,1,14,2,20
419168,1,15,5,109
419168,2,16,2,56
419168,2,18,4,188
419168,2,20,2,131
419168,1,20,4,125
419169,1,1,4,53
419169,1,4,2,57
419169,1,7,1,56
419169,1,17,3,54
419169,1,19,3,131
419170,2,2,4,42
419170,1,8,2,185
419170,1,9,4,18
419170,1,12,2,23
419170,2,15,2,133
419170,2,15,5,79
419170,2,17,6,154
419170,1,18,1,20
419170,2,19,6,221
501203,1,1,6,185
501203,1,11,3,21
501203,2,16,2,9
501203,1,18,2,20
501203,2,20,2,63
501204,1,5,5,42
501204,1,6,3,26
501204,2,6,5,252
501204,1,11,1,257
501204,1,13,6,154
501204,1,18,3,258
501204,1,20,1,112
501204,1,20,3,94
501205,2,2,2,135
501205,1,9,6,55
501205,2,10,6,260
501205,1,12,3,2
501205,2,18,4,79
501205,1,19,4,259
501206,1,7,6,254
501206,1,15,2,183
501206,1,18,4,106
501207,2,1,1,74
501207,1,1,4,53
501207,1,2,3,100
501207,1,3,4,167
501207,1,4,3,88
501207,2,8,5,171
501207,1,9,3,48
501207,2,9,3,157
501207,1,18,1,67
501207,1,20,1,14
501208,2,9,6,26
501208,2,13,2,154
501208,1,13,3,9
501208,2,14,6,93
501208,2,17,4,258
501208,2,18,1,112
501208,1,20,6,31
501209,1,1,3,41
501209,1,5,5,254
501209,1,8,1,262
501209,1,8,3,183
501209,2,8,3,6
501209,2,11,5,266
501209,1,18,4,187
501209,1,19,7,54
501210,1,5,4,8
501211,1,1,2,21
501211,2,6,5,53
501211,2,14,6,264
501212,1,1,1,2
501212,1,3,5,64
501212,1,5,5,17
501212,2,8,4,74
501212,2,10,5,171
501212,2,12,2,27
501212,1,16,2,104
501212,1,17,1,35
501213,2,2,6,135
501213,1,3,5,42
501213,2,5,6,260
501213,2,7,4,110
501213,1,9,6,65
501213,2,12,1,79
501213,1,15,4,26
501213,2,17,5,203
501213,2,17,6,268
501213,2,20,1,269
501213,1,20,2,154
Query:
SELECT DISTINCT "match_id", "innings_no"
    FROM "ball_by_ball"
    LIMIT 100;
Answer:
match_id,innings_no
335987,2
335987,1
335988,1
335988,2
335989,1
335989,2
335990,1
335990,2
335991,1
335991,2
335992,1
335992,2
335993,1
335993,2
335994,1
335994,2
335995,1
335995,2
335996,1
335996,2
335997,1
335997,2
335998,1
335998,2
335999,1
335999,2
336000,1
336000,2
336001,1
336001,2
336002,1
336002,2
336003,1
336003,2
336004,1
336004,2
336005,1
336005,2
336006,1
336006,2
336007,1
336007,2
336008,1
336008,2
336009,1
336009,2
336010,1
336010,2
336011,1
336011,2
336012,1
336012,2
336013,1
336013,2
336014,1
336014,2
336015,1
336015,2
336016,1
336016,2
336017,1
336017,2
336018,1
336018,2
336019,1
336019,2
336020,1
336020,2
336021,1
336021,2
336022,1
336022,2
336023,1
336023,2
336024,1
336024,2
336025,1
336025,2
336026,1
336026,2
336027,1
336027,2
336028,1
336028,2
336029,1
336029,2
336030,1
336030,2
336031,1
336031,2
336032,1
336032,2
336033,1
336033,2
336034,1
336034,2
336036,1
336036,2
336037,1
336037,2
Query:
SELECT "match_id", "innings_no", "over_id", "ball_id", "striker", "non_striker"
    FROM "ball_by_ball"
    ORDER BY "match_id", "innings_no", "over_id", "ball_id"
    LIMIT 100;
Answer:
match_id,innings_no,over_id,ball_id,striker,non_striker
335987,1,1,2,2,1
335987,1,1,3,2,1
335987,1,1,4,2,1
335987,1,1,5,2,1
335987,1,1,6,2,1
335987,1,1,7,2,1
335987,1,2,1,2,1
335987,1,2,2,2,1
335987,1,2,3,2,1
335987,1,2,4,2,1
335987,1,2,5,2,1
335987,1,2,6,2,1
335987,1,3,1,1,2
335987,1,3,2,1,2
335987,1,3,3,1,2
335987,1,3,4,2,1
335987,1,3,5,2,1
335987,1,3,6,1,2
335987,1,4,1,2,1
335987,1,4,2,2,1
335987,1,4,3,2,1
335987,1,4,4,1,2
335987,1,4,5,1,2
335987,1,4,6,1,2
335987,1,4,7,2,1
335987,1,5,1,1,2
335987,1,5,2,1,2
335987,1,5,3,2,1
335987,1,5,4,2,1
335987,1,5,5,2,1
335987,1,5,6,1,2
335987,1,6,1,2,1
335987,1,6,2,1,2
335987,1,6,3,3,2
335987,1,6,4,3,2
335987,1,6,5,3,2
335987,1,6,6,3,2
335987,1,7,1,2,3
335987,1,7,2,3,2
335987,1,7,3,2,3
335987,1,7,4,3,2
335987,1,7,5,3,2
335987,1,7,6,2,3
335987,1,8,1,2,3
335987,1,8,2,2,3
335987,1,8,3,3,2
335987,1,8,4,2,3
335987,1,8,5,3,2
335987,1,8,6,2,3
335987,1,9,1,2,3
335987,1,9,2,2,3
335987,1,9,3,2,3
335987,1,9,4,2,3
335987,1,9,5,3,2
335987,1,9,6,2,3
335987,1,10,1,3,2
335987,1,10,2,2,3
335987,1,10,3,3,2
335987,1,10,4,2,3
335987,1,10,5,2,3
335987,1,10,6,2,3
335987,1,11,1,2,3
335987,1,11,2,3,2
335987,1,11,3,3,2
335987,1,11,4,3,2
335987,1,11,5,3,2
335987,1,11,6,3,2
335987,1,12,1,2,3
335987,1,12,2,2,3
335987,1,12,3,2,3
335987,1,12,4,2,3
335987,1,12,5,3,2
335987,1,12,6,3,2
335987,1,13,1,3,2
335987,1,13,2,2,4
335987,1,13,3,2,4
335987,1,13,4,2,4
335987,1,13,5,2,4
335987,1,13,6,2,4
335987,1,13,7,2,4
335987,1,14,1,2,4
335987,1,14,2,4,2
335987,1,14,3,4,2
335987,1,14,4,2,4
335987,1,14,5,4,2
335987,1,14,6,2,4
335987,1,15,1,4,2
335987,1,15,2,4,2
335987,1,15,3,2,4
335987,1,15,4,2,4
335987,1,15,5,2,4
335987,1,15,6,4,2
335987,1,15,7,2,4
335987,1,16,1,4,2
335987,1,16,2,4,2
335987,1,16,3,2,4
335987,1,16,4,2,4
335987,1,16,5,2,4
335987,1,16,6,4,2
335987,1,17,1,2,4
Query:
SELECT b."match_id", b."striker", b."non_striker", SUM(s."runs_scored") AS "partnership_runs"
    FROM "ball_by_ball" AS b
    JOIN "batsman_scored" AS s
      ON b."match_id" = s."match_id"
      AND b."innings_no" = s."innings_no"
      AND b."over_id" = s."over_id"
      AND b."ball_id" = s."ball_id"
    GROUP BY b."match_id", b."striker", b."non_striker"
    ORDER BY b."match_id", "partnership_runs" DESC
    LIMIT 100;
Answer:
match_id,striker,non_striker,partnership_runs
335987,2,4,45
335987,2,5,45
335987,2,1,41
335987,2,3,27
335987,3,2,20
335987,4,2,12
335987,1,2,10
335987,9,7,8
335987,13,14,8
335987,14,15,8
335987,11,10,7
335987,14,16,6
335987,5,2,5
335987,7,9,5
335987,10,11,4
335987,14,13,4
335987,15,14,3
335987,16,14,3
335987,6,7,2
335987,10,13,2
335987,7,6,1
335987,8,7,1
335987,13,10,1
335987,7,8,0
335987,7,10,0
335987,10,7,0
335987,10,12,0
335987,12,10,0
335988,19,23,42
335988,25,26,40
335988,19,21,33
335988,21,19,32
335988,23,19,31
335988,25,24,31
335988,26,28,27
335988,19,22,24
335988,24,25,24
335988,27,26,23
335988,18,19,16
335988,17,18,15
335988,26,27,15
335988,19,18,14
335988,22,19,13
335988,28,29,13
335988,26,25,12
335988,18,17,9
335988,28,26,8
335988,19,20,3
335988,29,28,3
335988,20,19,2
335989,42,40,52
335989,40,42,50
335989,37,39,16
335989,38,37,14
335989,35,37,13
335989,32,33,12
335989,35,36,12
335989,41,40,12
335989,31,30,9
335989,40,41,8
335989,30,31,7
335989,37,35,7
335989,32,31,5
335989,33,34,4
335989,33,35,4
335989,35,33,4
335989,37,38,3
335989,39,37,3
335989,36,35,2
335989,31,32,1
335989,33,32,1
335989,34,33,1
335990,11,9,38
335990,46,47,30
335990,8,9,23
335990,44,46,22
335990,6,51,20
335990,47,46,19
335990,52,6,18
335990,49,48,17
335990,9,11,16
335990,51,6,16
335990,46,48,15
335990,6,52,12
335990,49,50,11
335990,48,46,10
335990,48,49,10
335990,43,44,8
335990,9,8,6
335990,44,45,6
335990,52,9,5
335990,9,52,3
335990,12,11,3
335990,46,44,3
335990,50,49,2
335990,11,12,1
335990,44,43,1
335990,45,44,0
335991,56,59,22
335991,53,56,19
Query:
SELECT "player_out", COUNT(*) AS "dismissals"
    FROM "wicket_taken"
    GROUP BY "player_out"
    LIMIT 100;
Answer:
player_out,dismissals
1,52
2,86
3,9
4,49
5,7
6,77
7,8
8,105
9,84
10,35
11,14
12,6
13,1
14,37
15,13
16,2
17,88
18,29
19,51
20,83
21,121
22,8
23,46
24,15
25,16
26,63
27,90
28,10
29,51
30,3
31,89
32,76
33,17
34,2
35,67
36,5
37,2
38,20
39,7
40,118
41,97
42,96
43,5
44,28
45,3
46,114
47,8
48,38
49,8
50,49
51,3
52,40
53,76
54,44
55,19
56,27
57,115
58,7
59,6
60,8
61,15
62,50
63,26
64,61
65,20
66,10
67,40
68,6
69,5
70,8
71,55
72,2
73,7
74,25
75,2
76,4
77,4
78,2
79,44
80,7
81,26
82,10
83,7
84,3
85,74
86,4
87,46
88,106
89,29
90,10
91,2
92,1
93,15
94,22
95,14
96,69
97,32
98,1
99,1
100,53
End Exploring Related Columns
Task: Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match.

Please answer only one complete SQL in sqlite dialect in ```sql``` format.
Usage example: ```sql
SELECT DISTINCT "column_name" FROM "table_name" WHERE ... ``` (Replace "table_name" with the actual table name. Enclose table and column names with double quotations if they contain special characters or match reserved keywords.)
Follow the answer format like: ```csv
match_id,player1_id,player1_runs,player2_id,player2_runs,partnership_runs
match_id:int,player1_id:int,player1_runs:int,player2_id:int,player2_runs:int,partnership_runs:int
...
```

The output includes the match ID, the IDs of the two players who together scored the highest number of partnership runs in each match, their individual run totals, and the total partnership runs they scored together. Player 1 is the player with the higher individual score; if both players have the same score, Player 1 is the one with the higher player ID. There can be multiple rows for a single match if there are multiple partnerships with the highest runs..
Here are some useful tips for answering:
When performing a UNION operation on many tables, ensure that all table names are explicitly listed. Union first and then add condition and selection. e.g. SELECT "col1", "col2" FROM (TABLE1 UNION ALL TABLE2) WHERE ...; Don't write sqls as (SELECT col1, col2 FROM TABLE1 WHERE ...) UNION ALL (SELECT col1, col2 FROM TABLE2 WHERE ...); Don't use ['-- Include all', '-- Omit', '-- Continue', '-- Union all', '-- ...', '-- List all', '-- Replace this', '-- Each table', '-- Add other'] to omit any table. Table names here: 

For string-matching scenarios, if the string is decided, don't use fuzzy query, and avoid using REGEXP. e.g. Get the object's title contains the word "book"
However, if the string is not decided, you may use fuzzy query and ignore upper or lower case. e.g. Get articles that mention "education".
When using ORDER BY, if there are duplicate values in the primary sort column, sort by an additional column as a secondary criterion.If the task description does not specify the number of decimal places, retain all decimals to four places.
Be careful of information in nested columns. e.g. When it comes to completed purchase, `hits.eCommerceAction.action_type` Indicates the type of ecommerce action and '6' represents completed purchases.
Be careful one country may have different country_name and country_region in different columns in a database.
Don't be misled by examples. For instance, a question related to Android development on StackOverflow might include tags like 'android-layout,' 'android-activity,' or 'android-intent.' However, you should not limit your analysis to just these three tags; instead, consider all tags related to Android: "tags" LIKE '%android%'.

2025-01-27 00:14:03 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 00:14:03 - root - INFO - ```sql
WITH ordered_deliveries AS (
    SELECT
        b.match_id,
        b.innings_no,
        b.over_id,
        b.ball_id,
        b.striker,
        b.non_striker,
        -- Batsman IDs in sorted order
        CASE WHEN b.striker < b.non_striker THEN b.striker ELSE b.non_striker END AS batsman1_id,
        CASE WHEN b.striker >= b.non_striker THEN b.striker ELSE b.non_striker END AS batsman2_id,
        ROW_NUMBER() OVER (PARTITION BY b.match_id, b.innings_no ORDER BY b.over_id, b.ball_id) AS delivery_no,
        w.player_out
    FROM
        ball_by_ball b
    LEFT JOIN wicket_taken w ON
        b.match_id = w.match_id AND
        b.innings_no = w.innings_no AND
        b.over_id = w.over_id AND
        b.ball_id = w.ball_id
),
partnerships AS (
    SELECT
        od.*,
        od.batsman1_id || '_' || od.batsman2_id AS batsmen_set,
        LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
            PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
        ) AS prev_batsmen_set,
        CASE
            WHEN LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
                PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
            ) IS NULL THEN 1
            WHEN (od.batsman1_id || '_' || od.batsman2_id) != LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
                PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
            ) THEN 1
            WHEN od.player_out IS NOT NULL THEN 1
            ELSE 0
        END AS partnership_change
    FROM
        ordered_deliveries od
),
partnerships_with_id AS (
    SELECT
        p.*,
        SUM(partnership_change) OVER (
            PARTITION BY p.match_id, p.innings_no ORDER BY p.delivery_no
        ) AS partnership_id
    FROM
        partnerships p
),
partnership_runs AS (
    SELECT
        p.match_id,
        p.partnership_id,
        p.batsman1_id,
        p.batsman2_id,
        -- Sum runs scored by batsman1
        SUM(CASE WHEN b.striker = p.batsman1_id THEN s.runs_scored ELSE 0 END) AS batsman1_runs,
        -- Sum runs scored by batsman2
        SUM(CASE WHEN b.striker = p.batsman2_id THEN s.runs_scored ELSE 0 END) AS batsman2_runs,
        -- Total partnership runs (sum of both)
        SUM(s.runs_scored) AS partnership_runs
    FROM
        partnerships_with_id p
    JOIN ball_by_ball b ON
        p.match_id = b.match_id AND
        p.innings_no = b.innings_no AND
        p.over_id = b.over_id AND
        p.ball_id = b.ball_id
    JOIN batsman_scored s ON
        b.match_id = s.match_id AND
        b.innings_no = s.innings_no AND
        b.over_id = s.over_id AND
        b.ball_id = s.ball_id
    GROUP BY
        p.match_id,
        p.partnership_id,
        p.batsman1_id,
        p.batsman2_id
),
max_partnerships AS (
    SELECT
        pr.match_id,
        MAX(pr.partnership_runs) AS max_partnership_runs
    FROM
        partnership_runs pr
    GROUP BY
        pr.match_id
)
SELECT
    pr.match_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman1_id
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman2_id
        WHEN pr.batsman1_id > pr.batsman2_id THEN pr.batsman1_id
        ELSE pr.batsman2_id
    END AS player1_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman1_runs
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman2_runs
        ELSE pr.batsman1_runs
    END AS player1_runs,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman2_id
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman1_id
        WHEN pr.batsman1_id <= pr.batsman2_id THEN pr.batsman1_id
        ELSE pr.batsman2_id
    END AS player2_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman2_runs
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman1_runs
        ELSE pr.batsman2_runs
    END AS player2_runs,
    pr.partnership_runs
FROM
    partnership_runs pr
JOIN
    max_partnerships mp ON pr.match_id = mp.match_id AND pr.partnership_runs = mp.max_partnership_runs
ORDER BY
    pr.match_id;
```
2025-01-27 00:14:05 - root - INFO - itercount: 1
2025-01-27 00:14:05 - root - INFO - 0
2025-01-27 00:14:05 - root - INFO - results: 
match_id,player1_id,player1_runs,player2_id,player2_runs,partnership_runs
335987,2,45,4,12,57
335988,19,42,23,31,73
335989,42,52,40,50,102
335990,11,38,9,16,54
335991,56,22,59,9,31
335992,35,36,32,30,66
335993,41,75,42,25,100
335994,21,53,18,41,94
335995,56,73,57,36,109
335996,26,54,24,16,70
335997,32,57,74,44,101
335998,20,43,18,36,79
335999,53,109,55,37,146
336000,28,40,64,15,55
336001,20,65,19,29,94
336002,71,64,46,37,101
336003,42,50,40,48,98
336004,64,45,100,31,76
336005,1,34,4,31,65
336006,41,71,40,39,110
336007,97,47,53,45,92
336008,4,58,62,46,104
336009,45,24,46,22,46
336010,101,32,74,27,59
336011,6,30,8,22,52
336012,53,41,58,11,52
336013,32,32,101,15,47
336014,40,60,42,52,112
336015,10,30,11,14,44
336016,31,68,74,35,103
336017,44,54,133,30,84
336018,23,44,20,44,88
336019,4,52,1,48,100
336020,32,41,74,21,62
336021,100,61,139,34,95
336022,103,28,4,9,37
336023,23,51,20,38,89
336024,100,80,25,51,131
336025,40,72,42,55,127
336026,44,31,46,9,40
336027,40,40,41,29,69
336028,101,50,74,40,90
336029,54,41,112,31,72
336030,103,53,95,27,80
336031,41,47,40,33,80
336032,31,48,33,29,77
336033,100,80,139,48,128
336034,107,29,17,24,53
336036,26,50,100,33,83
336037,44,47,133,18,65
336038,74,79,101,41,120
336039,57,57,55,37,94
336040,26,45,100,35,80
336041,44,38,133,27,65
336042,112,40,54,29,69
336043,101,39,74,25,64
336044,21,55,17,44,99
336045,31,34,32,27,61
392186,48,35,133,10,45
392187,158,19,6,16,35
392188,24,38,161,22,60
392189,57,36,97,31,67
392190,18,65,17,30,95
392191,162,32,2,21,53
392193,57,29,53,29,58
392194,110,65,87,9,74
392196,161,48,27,17,65
392197,154,39,133,34,73
392199,158,30,52,27,57
392200,29,39,26,33,72
392201,53,44,97,21,65
392202,133,68,44,51,119
392203,31,62,74,17,79
392204,132,43,9,20,63
392205,154,29,48,15,44
392206,88,41,135,31,72
392207,21,38,23,29,67
392207,21,46,20,21,67
392208,104,51,176,32,83
392209,27,50,24,19,69
392210,57,32,178,24,56
392211,88,47,187,26,73
392212,104,26,1,22,48
392213,46,66,9,55,121
392214,147,48,57,21,69
392215,74,77,183,56,133
392216,40,49,135,42,91
392217,47,29,154,22,51
392218,31,22,183,19,41
392219,20,49,18,46,95
392220,110,44,135,15,59
392221,56,58,54,31,89
392222,23,45,18,36,81
392223,154,59,85,44,103
392224,110,35,88,17,52
392225,60,20,147,17,37
392226,4,43,2,22,65
392227,133,41,71,37,78
392228,56,41,112,18,59
392229,8,38,52,18,56
392230,35,36,168,25,61
392231,26,33,27,18,51
392232,18,44,20,23,67
392233,53,43,97,23,66
392234,26,40,68,12,52
392235,110,52,135,33,85
392236,2,52,104,34,86
392237,6,38,9,32,70
392238,63,40,82,13,53
392239,17,25,197,15,40
392240,41,36,40,26,62
392241,97,45,53,15,60
392242,135,40,41,39,79
392243,96,37,6,32,69
392244,97,25,57,24,49
419111,191,65,204,58,123
419112,208,55,79,51,106
419113,40,35,171,26,61
419114,87,50,104,48,98
419115,97,45,56,41,86
419116,212,29,211,29,58
419117,214,75,161,45,120
419118,20,66,23,42,108
419119,208,34,79,34,68
419120,9,44,96,42,86
419121,18,52,21,21,73
419122,56,33,97,22,55
419123,203,29,104,21,50
419124,9,43,96,40,83
419125,57,35,178,25,60
419127,162,46,204,31,77
419128,46,41,11,11,52
419129,230,34,229,23,57
419130,21,78,23,55,133
419131,224,37,183,14,51
419132,87,41,1,30,71
419133,96,38,9,27,65
419134,183,36,229,17,53
419135,50,49,210,2,51
419136,187,74,241,53,127
419137,100,22,64,19,41
419138,8,34,9,28,62
419139,88,47,40,29,76
419140,1,54,4,19,73
419141,8,42,158,31,73
419142,185,85,109,62,147
419143,79,37,208,26,63
419144,64,58,26,38,96
419145,241,36,175,19,55
419146,229,36,32,35,71
419147,20,31,18,17,48
419148,224,83,183,21,104
419149,40,47,41,46,93
419150,56,53,178,36,89
419151,227,24,26,21,45
419152,178,34,56,10,44
419153,6,38,249,24,62
419154,27,21,26,21,42
419155,154,31,133,26,57
419156,231,41,57,36,77
419157,221,45,154,5,50
419158,21,78,185,49,127
419159,158,33,46,26,59
419160,40,43,171,25,68
419161,64,63,27,20,83
419162,208,46,210,14,60
419163,1,62,203,45,107
419164,100,53,29,44,97
419165,56,41,253,9,50
419166,2,46,1,42,88
419167,79,46,208,17,63
419168,20,30,23,17,47
419169,158,29,6,20,49
419170,21,47,20,22,69
501203,125,39,21,33,72
501204,192,35,52,21,56
501205,2,41,55,36,77
501206,133,35,57,27,62
501207,171,35,157,23,58
501208,9,30,214,19,49
501209,54,42,187,39,81
501210,208,63,133,46,109
501211,185,74,23,46,120
501212,35,46,104,38,84
501213,8,35,203,25,60
501214,9,76,40,75,151
501215,2,62,64,56,118
501216,185,31,19,19,50
501217,167,63,53,61,124
501218,187,45,41,22,67
501219,87,30,40,18,48
501220,17,25,2,25,50
501221,26,49,65,40,89
501223,133,34,208,33,67
501224,64,24,2,23,47
501225,100,45,88,21,66
501226,57,54,56,30,84
501227,162,84,135,38,122
501228,41,77,187,59,136
501229,57,56,56,44,100
501230,6,39,32,25,64
501231,19,32,185,31,63
501232,8,48,162,26,74
501233,21,34,23,30,64
501234,26,58,10,31,89
501235,87,27,40,10,37
501236,192,25,32,14,39
501237,8,40,110,26,66
501238,41,30,199,21,51
501239,40,39,87,34,73
501240,52,33,85,15,48
501241,65,56,42,10,66
501242,208,51,133,42,93
501243,2,37,288,14,51
501243,17,27,104,24,51
501244,31,42,87,33,75
501245,19,72,21,61,133
501246,96,25,46,14,39
501247,9,45,216,22,67
501248,41,55,29,11,66
501249,162,83,8,27,110
501250,23,31,109,30,61
501251,25,49,54,36,85
501252,162,44,135,21,65
501253,46,22,96,9,31
501254,19,46,185,28,74
501255,157,35,96,19,54
501256,100,30,53,22,52
501257,162,43,8,39,82
501258,20,50,23,41,91
501259,88,69,100,41,110
501260,31,36,87,15,51
501261,221,23,50,16,39
501262,167,51,100,46,97
501263,104,33,17,15,48
501264,65,31,42,28,59
501265,53,105,100,79,184
501266,19,20,62,16,36
501267,40,32,31,29,61
501268,32,89,6,43,132
501269,112,60,42,55,115
501271,162,44,8,31,75
501272,31,36,9,21,57
501273,23,34,21,26,60
501274,289,51,133,28,79
501275,162,62,260,41,103
501276,185,89,19,63,152
548311,304,50,133,14,64
548312,254,30,41,16,46
548313,88,32,275,15,47
548314,85,41,6,28,69
548315,110,34,81,18,52
548316,71,39,109,2,41
548317,104,44,266,20,64
548318,307,45,46,30,75
548319,57,27,208,19,46
548320,214,46,40,18,64
548321,158,40,64,20,60
548322,221,64,208,29,93
548323,162,62,8,38,100
548324,100,29,53,21,50
548325,204,30,132,23,53
548326,42,35,17,34,69
548327,306,44,157,21,65
548328,236,27,4,25,52
548329,204,60,85,55,115
548330,50,25,318,8,33
548331,26,44,42,42,86
548332,157,34,46,26,60
548333,9,30,40,22,52
548334,187,109,183,64,173
548335,303,58,23,57,115
548336,162,73,110,52,125
548337,204,43,266,36,79
548338,157,41,1,41,82
548339,275,40,88,34,74
548340,17,22,42,19,41
548341,110,59,135,47,106
548342,96,80,46,60,140
548344,4,48,320,34,82
548346,10,53,154,18,71
548347,41,72,64,55,127
548348,236,32,100,32,64
548349,40,49,2,43,92
548350,85,55,6,40,95
548351,17,19,42,16,35
548352,40,34,9,26,60
548353,26,82,10,65,147
548354,41,55,158,36,91
548355,162,71,8,45,116
548356,275,25,133,23,48
548357,10,39,42,28,67
548358,40,56,2,42,98
548359,32,36,6,31,67
548360,133,67,57,57,124
548361,135,62,162,26,88
548362,40,36,2,31,67
548363,32,38,266,18,56
548364,236,30,100,22,52
548365,162,55,8,36,91
548366,125,18,109,18,36
548367,162,57,135,17,74
548368,57,109,97,53,162
548369,19,38,185,36,74
548370,32,58,85,36,94
548371,10,47,42,44,91
548372,208,64,221,52,116
548373,40,61,2,36,97
548374,183,34,64,23,57
548375,87,27,276,13,40
548376,236,24,53,23,47
548377,162,127,8,73,200
548378,331,33,42,26,59
548379,187,58,262,18,76
548380,276,37,2,25,62
548381,154,53,17,15,68
548382,147,87,133,58,145
548383,31,31,63,24,55
548384,23,47,19,43,90
548385,185,42,21,27,69
548386,214,88,9,41,129
598003,40,23,9,23,46
598004,162,48,239,19,67
598005,46,24,96,10,34
598006,187,43,338,20,63
598007,221,41,50,21,62
598008,345,32,236,26,58
598010,104,25,85,12,37
598011,88,86,57,38,124
598012,19,86,185,50,136
598013,162,54,110,22,76
598014,6,48,85,30,78
598015,26,25,17,19,44
598016,57,47,221,19,66
598017,110,41,8,37,78
598018,216,47,9,16,63
598019,351,27,85,20,47
598020,254,67,46,24,91
598021,40,60,216,40,100
598023,46,22,254,16,38
598024,32,31,85,25,56
598025,20,44,19,28,72
598026,340,29,331,19,48
598027,40,25,31,18,43
598028,162,26,79,25,51
598029,41,90,64,59,149
598030,320,80,236,47,127
598031,21,51,19,36,87
598032,162,127,135,33,160
598033,53,42,100,14,56
598034,216,31,87,20,51
598035,19,44,185,18,62
598036,216,42,214,24,66
598037,32,42,6,30,72
598038,147,46,88,17,63
598039,19,63,62,39,102
598040,46,37,254,35,72
598041,351,41,32,25,66
598042,57,63,221,20,83
598043,21,39,23,34,73
598044,42,47,340,25,72
598045,187,61,262,33,94
598046,320,48,100,46,94
598047,110,41,163,27,68
598048,31,49,9,28,77
598049,42,22,17,11,33
598050,162,74,8,55,129
598051,57,31,50,25,56
598052,6,58,85,37,95
598053,280,40,10,36,76
598054,6,53,85,44,97
598055,133,48,147,41,89
598056,21,75,19,52,127
598057,100,54,53,42,96
598058,40,31,214,12,43
598059,8,61,110,32,93
598060,27,32,96,26,58
598061,280,26,17,21,47
598062,87,18,9,15,33
598063,32,57,255,35,92
598064,236,24,139,18,42
598065,221,66,57,17,83
598066,31,56,284,42,98
598067,20,31,35,24,55
598068,207,51,88,21,72
598069,320,93,209,27,120
598070,327,25,362,23,48
598071,321,79,100,63,142
598072,358,44,191,25,69
598073,8,35,162,28,63
598074,17,45,42,42,87
598075,21,82,19,58,140
598076,10,31,42,19,50
598077,207,35,147,33,68
598078,221,32,208,15,47
729284,96,64,9,61,125
729286,154,61,52,43,104
729288,2,67,147,44,111
729290,85,41,255,34,75
729292,17,52,110,45,97
729294,96,45,46,15,60
729296,305,89,203,21,110
729298,21,35,147,16,51
729300,305,56,320,10,66
729302,147,28,2,6,34
729304,336,45,9,33,78
729306,254,69,187,58,127
729308,57,46,372,38,84
729310,32,24,48,8,32
729312,305,15,41,12,27
729312,46,14,336,13,27
729312,41,16,197,11,27
729314,185,30,154,14,44
729316,147,42,2,40,82
729318,27,24,110,17,41
729322,187,65,354,34,99
733976,2,38,21,31,69
733978,305,45,62,18,63
733980,351,34,339,15,49
733982,187,31,42,27,58
733984,46,65,40,54,119
733986,21,46,147,37,83
733988,57,50,221,43,93
733990,46,47,40,47,94
733992,305,84,320,47,131
733994,42,33,254,3,36
733996,320,39,62,13,52
733998,88,35,63,17,52
734000,147,37,303,25,62
734002,40,45,96,36,81
734004,27,83,110,43,126
734006,383,67,208,63,130
734008,314,30,32,21,51
734010,27,59,301,15,74
734012,62,54,345,36,90
734014,46,33,40,14,47
734016,351,39,85,32,71
734018,21,47,4,25,72
734020,46,38,96,12,50
734022,383,62,19,55,117
734024,158,42,88,26,68
734026,42,50,187,46,96
734028,46,42,40,21,63
734030,383,55,19,6,61
734032,276,60,46,58,118
734034,187,90,42,22,112
734036,154,41,87,40,81
734038,100,31,62,25,56
734040,20,49,303,22,71
734042,183,26,42,24,50
734044,345,42,320,41,83
734046,339,50,351,49,99
734048,46,41,96,21,62
734050,21,46,4,40,86
734052,41,69,345,34,103
734054,62,77,345,46,123
829710,57,75,372,55,130
829712,109,27,237,20,47
829714,394,30,310,17,47
829716,2,35,147,27,62
829716,20,53,2,9,62
829718,40,44,46,35,79
829720,394,37,85,13,50
829722,50,64,398,32,96
829724,187,57,42,24,81
829726,221,70,372,32,102
829728,334,55,46,52,107
829730,27,54,260,46,100
829732,85,33,351,26,59
829734,147,56,2,46,102
829736,393,47,154,26,73
829738,334,66,31,28,94
829740,32,73,85,70,143
829742,262,34,383,32,66
829744,31,40,40,25,65
829748,187,91,42,36,127
829750,147,35,21,21,56
829752,393,82,154,66,148
829754,8,51,110,47,98
829756,383,29,57,22,51
829758,2,42,21,15,57
829762,162,62,8,35,97
829764,187,36,340,9,45
829764,183,28,163,17,45
829766,393,35,87,25,60
829770,46,38,96,12,50
829772,393,54,260,45,99
829774,208,34,221,24,58
829776,8,24,162,21,45
829778,187,61,42,22,83
829780,17,59,383,50,109
829782,339,61,85,50,111
829784,8,39,88,23,62
829786,40,31,46,21,52
829788,57,32,208,24,56
829790,162,80,8,32,112
829792,216,46,161,6,52
829794,17,45,383,38,83
829796,305,43,62,19,62
829798,237,62,79,26,88
829800,110,133,8,76,209
829802,2,64,303,29,93
829804,187,35,163,28,63
829806,393,37,27,32,69
829808,8,19,162,13,32
829808,62,31,345,1,32
829810,400,61,221,24,85
829812,163,57,187,40,97
829814,303,52,21,34,86
829816,32,38,85,36,74
829820,17,50,383,48,98
829822,383,52,17,35,87
829824,110,65,236,42,107
829826,19,36,20,11,47
829828,383,67,57,50,117
980906,85,40,303,34,74
980908,46,35,40,24,59
980910,345,38,185,37,75
980912,110,82,8,71,153
980914,96,52,40,44,96
980916,303,48,158,37,85
980918,355,48,351,33,81
980920,40,50,46,38,88
980922,21,27,254,22,49
980924,345,51,185,44,95
980926,355,74,339,54,128
980928,413,35,208,26,61
980930,46,53,40,22,75
980932,57,43,208,31,74
980934,187,74,42,53,127
980936,110,83,8,61,144
980938,351,43,154,25,68
980940,187,59,42,28,87
980942,8,67,354,51,118
980944,306,31,85,25,56
980946,17,68,208,65,133
980948,306,38,303,30,68
980950,2,58,147,53,111
980952,221,51,57,18,69
980954,306,65,85,42,107
980956,339,53,421,45,98
980958,187,76,396,45,121
980960,185,36,409,27,63
980962,306,45,79,36,81
980964,31,45,334,39,84
980966,420,69,355,44,113
980968,40,54,46,46,100
980970,426,30,85,29,59
980972,254,24,71,18,42
980974,79,52,85,49,101
980976,355,52,351,15,67
980978,42,44,27,39,83
980980,276,66,31,63,129
980982,110,61,369,27,88
980984,197,27,201,22,49
980986,208,31,57,24,55
980988,420,39,351,31,70
980990,62,56,185,50,106
980992,110,129,8,97,226
980994,31,37,96,12,49
980996,187,39,42,25,64
980998,413,60,415,33,93
981000,110,59,8,54,113
981002,85,33,197,8,41
981004,162,73,8,69,142
981006,254,26,21,21,47
981008,339,39,420,31,70
981010,185,31,329,27,58
981012,2,48,21,45,93
981014,96,44,31,41,85
981016,354,38,8,28,66
981018,110,51,140,33,84
981020,163,31,187,26,57
981022,254,35,35,16,51
981024,162,76,8,32,108


2025-01-27 00:14:05 - root - INFO - Please check the answer again by reviewing Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match., reviewing Relevant Tables and Columns and Possible Conditions and then give the final SQL query. Don't output other queries. If you think the answer is right, just output the current SQL.
If the task description does not specify the number of decimal places, retain all decimals to four places.
The answer format should be like: ```csv
match_id,player1_id,player1_runs,player2_id,player2_runs,partnership_runs
match_id:int,player1_id:int,player1_runs:int,player2_id:int,player2_runs:int,partnership_runs:int
...
```

The output includes the match ID, the IDs of the two players who together scored the highest number of partnership runs in each match, their individual run totals, and the total partnership runs they scored together. Player 1 is the player with the higher individual score; if both players have the same score, Player 1 is the one with the higher player ID. There can be multiple rows for a single match if there are multiple partnerships with the highest runs. The answer should match the number of rows, the column name of the format and the filled values in the format (e.g. filled year or month). Don't output extra rows or nested rows!
Current snswer: 
Too long, hard cut:
match_id,player1_id,player1_runs,player2_id,player2_runs,partnership_runs
335987,2,45,4,12,57
335988,19,42,23,31,73
335989,42,52,40,50,102
335990,11,38,9,16,54
335991,56,22,59,9,31
335992,35,36,32,30,66
335993,41,75,42,25,100
335994,21,53,18,41,94
335995,56,73,57,36,109
335996,26,54,24,16,70
335997,32,57,74,44,101
335998,20,43,18,36,79
335999,53,109,55,37,146
336000,28,40,64,15,55
336001,20,65,19,29,94
336002,71,64,46,37,101
336003,42,50,40,48,98
336004,64,45,100,31,76
336005,1,34,4,31,65
336006,41,71,40,39,110
336007,97,47,53,45,92
336008,4,58,62,46,104
336009,45,24,46,22,46
336010,101,32,74,27,59
336011,6,30,8,22,52
336012,53,41,58,11,52
336013,32,32,101,15,47
336014,40,60,42,52,112
336015,10,30,11,14,44
336016,31,68,74,35,103
336017,44,54,133,30,84
336018,23,44,20,44,88
336019,4,52,1,48,100
336020,32,41,74,21,62
336021,100,61,139,34,95
336022,103,28,4,9,37
336023,23,51,20,38,89
336024,100,80,25,51,131
336025,40,72,42,55,127
336026,44,31,46,9,40
336027,40,40,41,29,69
336028,101,50,74,40,90
336029,54,41,112,31,72
336030,103,53,95,27,80
336031,41,47,40,33,80
336032,31,48,33,29,77
336033,100,80,139,48,128
336034,107,29,17,24,53
336036,26,50,100,33,83
336037,44,47,133,18,65
336038,74,79,101,41,120
336039,57,57,55,37,94
336040,26,45,100,35,80
336041,44,38,133,27,65
336042,112,40,54,29,69
336043,101,39,74,25,64
336044,21,55,17,44,99
336045,31,34,32,27,61
392186,48,35,133,10,45
392187,158,19,6,16,35
392188,24,38,161,22,60
392189,57,36,97,31,67
392190,18,65,17,30,95
392191,162,32,2,21,53
392193,57,29,53,29,58
392194,110,65,87,9,74
392196,161,48,27,17,65
392197,154,39,133,34,73
392199,158,30,52,27,57
392200,29,39,26,33,72
392201,53,44,97,21,65
392202,133,68,44,51,119
392203,31,62,74,17,79
392204,132,43,9,20,63
392205,154,29,48,15,44
392206,88,41,135,31,72
392207,21,38,23,29,67
392207,21,46,20,21,67
392208,104,51,176,32,83
392209,27,50,24,19,69
392210,57,32,178,24,56
392211,88,47,187,26,73
392212,104,26,1,22,48
392213,46,66,9,55,121
392214,147,48,57,21,69
392215,74,77,183,56,133
392216,40,49,135,42,91
392217,47,29,154,22,51
392218,31,22,183,19,41
392219,20,49,18,46,95
392220,110,44,135,15,59
392221,56,58,54,31,89
392222,23,45,18,36,81
392223,154,59,85,44,103
392224,110,35,88,17,52
392225,60,20,147,17,37
392226,4,43,2,22,65
392227,133,41,71,37,78
392228,56,41,112,18,59
392229,8,38,52,18,56
392230,35,36,168,25,61
392231,26,33,27,18,51
392232,18,44,20,23,67
392233,53,43,97,23,66
392234,26,40,68,12,52
392235,110,52,135,33,85
392236,2,52,104,34,86
392237,6,38,9,32,70
392238,63,40,82,13,53
392239,17,25,197,15,40
392240,41,36,40,26,62
392241,97,45,53,15,60
392242,135,40,41,39,79
392243,96,37,6,32,69
392244,97,25,57,24,49
419111,191,65,204,58,123
419112,208,55,79,51,106
419113,40,35,171,26,61
419114,87,50,104,48,98
419115,97,45,56,41,86
419116,212,29,211,29,58
419117,214,75,161,45,120
419118,20,66,23,42,108
419119,208,34,79,34,68
419120,9,44,96,42,86
419121,18,52,21,21,73
419122,56,33,97,22,55
419123,203,29,104,21,50
419124,9,43,96,40,83
419125,57,35,178,25,60
419127,162,46,204,31,77
419128,46,41,11,11,52
419129,230,34,229,23,57
419130,21,78,23,55,133
419131,224,37,183,14,51
419132,87,41,1,30,71
419133,96,38,9,27,65
419134,183,36,229,17,53
419135,50,49,210,2,51
419136,187,74,241,53,127
419137,100,22,64,19,41
419138,8,34,9,28,62
419139,88,47,40,29,76
419140,1,54,4,19,73
419141,8,42,158,31,73
419142,185,85,109,62,147
419143,79,37,208,26,63
419144,64,58,26,38,96
419145,241,36,175,19,55
419146,229,36,32,35,71
419147,20,31,18,17,48
419148,224,83,183,21,104
419149,40,47,41,46,93
419150,56,53,178,36,89
419151,227,24,26,21,45
419152,178,34,56,10,44
419153,6,38,249,24,62
419154,27,21,26,21,42
419155,154,31,133,26,57
419156,231,41,57,36,77
419157,221,45,154,5,50
419158,21,78,185,49,127
419159,158,33,46,26,59
419160,40,43,171,25,68
419161,64,63,27,20,83
419162,208,46,210,14,60
419163,1,62,203,45,107
419164,100,53,29,44,97
419165,56,41,253,9,50
419166,2,46,1,42,88
419167,79,46,208,17,63
419168,20,30,23,17,47
419169,158,29,6,20,49
419170,21,47,20,22,69
501203,125,39,21,33,72
501204,192,35,52,21,56
501205,2,41,55,36,77
501206,133,35,57,27,62
501207,171,35,157,23,58
501208,9,30,214,19,49
501209,54,42,187,39,81
501210,208,63,133,46,109
501211,185,74,23,46,120
501212,35,46,104,38,84
501213,8,35,203,25,60
501214,9,76,40,75,151
501215,2,62,64,56,118
501216,185,31,19,19,50
501217,167,63,53,61,124
501218,187,45,41,22,67
501219,87,30,40,18,48
501220,17,25,2,25,50
501221,26,49,65,40,89
501223,133,34,208,33,67
501224,64,24,2,23,47
501225,100,45,88,21,66
501226,57,54,56,30,84
501227,162,84,135,38,122
501228,41,77,187,59,136
501229,57,56,56,44,100
501230,6,39,32,25,64
501231,19,32,185,31,63
501232,8,48,162,26,74
501233,21,34,23,30,64
501234,26,58,10,31,89
501235,87,27,40,10,37
501236,192,25,32,14,39
501237,8,40,110,26,66
501238,41,30,199,21,51
501239,40,39,87,34,73
501240,52,33,85,15,48
501241,65,56,42,10,66
501242,208,51,133,42,93
501243,2,37,288,14,51
501243,17,27,104,24,51
501244,31,42,87,33,75
501245,19,72,21,61,133
501246,96,25,46,14,39
501247,9,45,216,22,67
501248,41,55,29,11,66
501249,162,83,8,27,110
501250,23,31,109,30,61
501251,25,49,54,36,85
501252,162,44,135,21,65
501253,46,22,96,9,31
501254,19,46,185,28,74
501255,157,35,96,19,54
501256,100,30,53,22,52
501257,162,43,8,39,82
501258,20,50,23,41,91
501259,88,69,100,41,110
501260,31,36,87,15,51
501261,221,23,50,16,39
501262,167,51,100,46,97
501263,104,33,17,15,48
501264,65,31,42,28,59
501265,53,105,100,79,184
501266,19,20,62,16,36
501267,40,32,31,29,61
501268,32,89,6,43,132
501269,112,60,42,55,115
501271,162,44,8,31,75
501272,31,36,9,21,57
501273,23,34,21,26,60
501274,289,51,133,28,79
501275,162,62,260,41,103
501276,185,89,19,63,152
548311,304,50,133,14,64
548312,254,30,41,16,46
548313,88,32,275,15,47
548314,85,41,6,28,69
548315,110,34,81,18,52
548316,71,39,109,2,41
548317,104,44,266,20,64
548318,307,45,46,30,75
548319,57,27,208,19,46
548320,214,46,40,18,64
548321,158,40,64,20,60
548322,221,64,208,29,93
548323,162,62,8,38,100
548324,100,29,53,21,50
548325,204,30,132,23,53
548326,42,35,17,34,69
548327,306,44,157,21,65
548328,236,27,4,25,52
548329,204,60,85,55,115
548330,50,25,318,8,33
548331,26,44,42,42,86
548332,157,34,46,26,60
548333,9,30,40,22,52
548334,187,109,183,64,173
548335,303,58,23,57,115
548336,162,73,110,52,125
548337,204,43,266,36,79
548338,157,41,1,41,82
548339,275,40,88,34,74
548340,17,22,42,19,41
548341,110,59,135,47,106
548342,96,80,46,60,140
548344,4,48,320,34,82
548346,10,53,154,18,71
548347,41,72,64,55,127
548348,236,32,100,32,64
548349,40,49,2,43,92
548350,85,55,6,40,95
548351,17,19,42,16,35
548352,40,34,9,26,60
548353,26,82,10,65,147
548354,41,55,158,36,91
548355,162,71,8,45,116
548356,275,25,133,23,48
548357,10,39,42,28,67
548358,40,56,2,42,98
548359,32,36,6,31,67
548360,133,67,57,57,124
548361,135,62,162,26,88
548362,40,36,2,31,67
548363,32,38,266,18,56
548364,236,30,100,22,52
548365,162,55,8,36,91
548366,125,18,109,18,36
548367,162,57,135,17,74
548368,57,109,97,53,162
548369,19,38,185,36,74
548370,32,58,85,36,94
548371,10,47,42,44,91
548372,208,64,221,52,116
548373,40,61,2,36,97
548374,183,34,64,23,57
548375,87,27,276,13,40
548376,236,24,53,23,47
548377,162,127,8,73,200
548378,331,33,42,26,59
548379,187,58,262,18,76
548380,276,37,2,25,62
548381,154,53,17,15,68
548382,147,87,133,58,145
548383,31,31,63,24,55
548384,23,47,19,43,90
548385,185,42,21,27,69
548386,214,88,9,41,129
598003,40,23,9,23,46
598004,162,48,239,19,67
598005,46,24,96,10,34
598006,187,43,338,20,63
598007,221,41,50,21,62
598008,345,32,236,26,58
598010,104,25,85,12,37
598011,88,86,57,38,124
598012,19,86,185,50,136
598013,162,54,110,22,76
598014,6,48,85,30,78
598015,26,25,17,19,44
598016,57,47,221,19,66
598017,110,41,8,37,78
598018,216,47,9,16,63
598019,351,27,85,20,47
598020,254,67,46,24,91
598021,40,60,216,40,100
598023,46,22,254,16,38
598024,32,31,85,25,56
598025,20,44,19,28,72
598026,340,29,331,19,48
598027,40,25,31,18,43
598028,162,26,79,25,51
598029,41,90,64,59,149
598030,320,80,236,47,127
598031,21,51,19,36,87
598032,162,127,135,33,160
598033,53,42,100,14,56
598034,216,31,87,20,51
598035,19,44,185,18,62
598036,216,42,214,24,66
598037,32,42,6,30,72
598038,147,46,88,17,63
598039,19,63,62,39,102
598040,46,37,254,35,72
598041,351,41,32,25,66
598042,57,63,221,20,83
598043,21,39,23,34,73
598044,42,47,340,25,72
598045,187,61,262,33,94
598046,320,48,100,46,94
598047,110,41,163,27,68
598048,31,49,9,28,77
598049,42,22,17,11,33
598050,162,74,8,55,129
598051,57,31,50,25,56
598052,6,58,85,37,95
598053,280,40,10,36,76
598054,6,53,85,44,97
598055,133,48,147,41,89
598056,21,75,19,52,127
598057,100,54,53,42,96
598058,40,31,214,12,43
598059,8,61,110,32,93
598060,27,32,96,26,58
598061,280,26,17,21,47
598062,87,18,9,15,33
598063,32,57,255,35,92
598064,236,24,139,18,42
598065,221,66,57,17,83
598066,31,56,284,42,98
598067,20,31,35,24,55
598068,207,51,88,21,72
598069,320,93,209,27,120
598070,327,25,362,23,48
598071,321,79,100,63,142
598072,358,44,191,25,69
598073,8,35,162,28,63
598074,17,45,42,42,87
598075,21,82,19,58,140
598076,10,31,42,19,50
598077,207,35,147,33,68
598078,221,32,208,15,47
729284,96,64,9,61,125
729286,154,61,52,43,104
729288,2,67,147,44,111
729290,85,41,255,34,75
729292,17,52,110,45,97
729294,96,45,46,15,60
729296,305,89,203,21,110
729298,21,35,147,16,51
729300,305,56,320,10,66
729302,147,28,2,6,34
729304,336,45,9,33,78
729306,254,69,187,58,127
729308,57,46,372,38,84
729310,32,24,48,8,32
729312,305,15,41,12,27
729312,46,14,336,13,27
729312,41,16,197,11,27
729314,185,30,154,14,44
729316,147,42,2,40,82
729318,27,24,110,17,41
729322,187,65,354,34,99
733976,2,38,21,31,69
733978,305,45,62,18,63
733980,351,34,339,15,49
733982,187,31,42,27,58
733984,46,65,40,54,119
733986,21,46,147,37,83
733988,57,50,221,43,93
733990,46,47,40,47,94
733992,305,84,320,47,131
733994,42,33,254,3,36
733996,320,39,62,13,52
733998,88,35,63,17,52
734000,147,37,303,25,62
734002,40,45,96,36,81
734004,27,83,110,43,126
734006,383,67,208,63,130
734008,314,30,32,21,51
734010,27,59,301,15,74
734012,62,54,345,36,90
734014,46,33,40,14,47
734016,3
Current sql:
WITH ordered_deliveries AS (
    SELECT
        b.match_id,
        b.innings_no,
        b.over_id,
        b.ball_id,
        b.striker,
        b.non_striker,
        -- Batsman IDs in sorted order
        CASE WHEN b.striker < b.non_striker THEN b.striker ELSE b.non_striker END AS batsman1_id,
        CASE WHEN b.striker >= b.non_striker THEN b.striker ELSE b.non_striker END AS batsman2_id,
        ROW_NUMBER() OVER (PARTITION BY b.match_id, b.innings_no ORDER BY b.over_id, b.ball_id) AS delivery_no,
        w.player_out
    FROM
        ball_by_ball b
    LEFT JOIN wicket_taken w ON
        b.match_id = w.match_id AND
        b.innings_no = w.innings_no AND
        b.over_id = w.over_id AND
        b.ball_id = w.ball_id
),
partnerships AS (
    SELECT
        od.*,
        od.batsman1_id || '_' || od.batsman2_id AS batsmen_set,
        LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
            PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
        ) AS prev_batsmen_set,
        CASE
            WHEN LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
                PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
            ) IS NULL THEN 1
            WHEN (od.batsman1_id || '_' || od.batsman2_id) != LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
                PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
            ) THEN 1
            WHEN od.player_out IS NOT NULL THEN 1
            ELSE 0
        END AS partnership_change
    FROM
        ordered_deliveries od
),
partnerships_with_id AS (
    SELECT
        p.*,
        SUM(partnership_change) OVER (
            PARTITION BY p.match_id, p.innings_no ORDER BY p.delivery_no
        ) AS partnership_id
    FROM
        partnerships p
),
partnership_runs AS (
    SELECT
        p.match_id,
        p.partnership_id,
        p.batsman1_id,
        p.batsman2_id,
        -- Sum runs scored by batsman1
        SUM(CASE WHEN b.striker = p.batsman1_id THEN s.runs_scored ELSE 0 END) AS batsman1_runs,
        -- Sum runs scored by batsman2
        SUM(CASE WHEN b.striker = p.batsman2_id THEN s.runs_scored ELSE 0 END) AS batsman2_runs,
        -- Total partnership runs (sum of both)
        SUM(s.runs_scored) AS partnership_runs
    FROM
        partnerships_with_id p
    JOIN ball_by_ball b ON
        p.match_id = b.match_id AND
        p.innings_no = b.innings_no AND
        p.over_id = b.over_id AND
        p.ball_id = b.ball_id
    JOIN batsman_scored s ON
        b.match_id = s.match_id AND
        b.innings_no = s.innings_no AND
        b.over_id = s.over_id AND
        b.ball_id = s.ball_id
    GROUP BY
        p.match_id,
        p.partnership_id,
        p.batsman1_id,
        p.batsman2_id
),
max_partnerships AS (
    SELECT
        pr.match_id,
        MAX(pr.partnership_runs) AS max_partnership_runs
    FROM
        partnership_runs pr
    GROUP BY
        pr.match_id
)
SELECT
    pr.match_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman1_id
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman2_id
        WHEN pr.batsman1_id > pr.batsman2_id THEN pr.batsman1_id
        ELSE pr.batsman2_id
    END AS player1_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman1_runs
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman2_runs
        ELSE pr.batsman1_runs
    END AS player1_runs,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman2_id
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman1_id
        WHEN pr.batsman1_id <= pr.batsman2_id THEN pr.batsman1_id
        ELSE pr.batsman2_id
    END AS player2_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman2_runs
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman1_runs
        ELSE pr.batsman2_runs
    END AS player2_runs,
    pr.partnership_runs
FROM
    partnership_runs pr
JOIN
    max_partnerships mp ON pr.match_id = mp.match_id AND pr.partnership_runs = mp.max_partnership_runs
ORDER BY
    pr.match_id;
2025-01-27 00:14:40 - httpx - INFO - HTTP Request: POST https://sfc-ml-sweden.openai.azure.com/openai/deployments/o1-preview/chat/completions?api-version=2024-12-01-preview "HTTP/1.1 200 OK"
2025-01-27 00:14:40 - root - INFO - ```sql
WITH ordered_deliveries AS (
    SELECT
        b.match_id,
        b.innings_no,
        b.over_id,
        b.ball_id,
        b.striker,
        b.non_striker,
        -- Batsman IDs in sorted order
        CASE WHEN b.striker < b.non_striker THEN b.striker ELSE b.non_striker END AS batsman1_id,
        CASE WHEN b.striker >= b.non_striker THEN b.striker ELSE b.non_striker END AS batsman2_id,
        ROW_NUMBER() OVER (PARTITION BY b.match_id, b.innings_no ORDER BY b.over_id, b.ball_id) AS delivery_no,
        w.player_out
    FROM
        "ball_by_ball" b
    LEFT JOIN "wicket_taken" w ON
        b.match_id = w.match_id AND
        b.innings_no = w.innings_no AND
        b.over_id = w.over_id AND
        b.ball_id = w.ball_id
),
partnerships AS (
    SELECT
        od.*,
        od.batsman1_id || '_' || od.batsman2_id AS batsmen_set,
        LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
            PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
        ) AS prev_batsmen_set,
        CASE
            WHEN LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
                PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
            ) IS NULL THEN 1
            WHEN (od.batsman1_id || '_' || od.batsman2_id) != LAG(od.batsman1_id || '_' || od.batsman2_id) OVER (
                PARTITION BY od.match_id, od.innings_no ORDER BY od.delivery_no
            ) THEN 1
            WHEN od.player_out IS NOT NULL THEN 1
            ELSE 0
        END AS partnership_change
    FROM
        ordered_deliveries od
),
partnerships_with_id AS (
    SELECT
        p.*,
        SUM(partnership_change) OVER (
            PARTITION BY p.match_id, p.innings_no ORDER BY p.delivery_no
        ) AS partnership_id
    FROM
        partnerships p
),
partnership_runs AS (
    SELECT
        p.match_id,
        p.partnership_id,
        p.batsman1_id,
        p.batsman2_id,
        -- Sum runs scored by batsman1
        SUM(CASE WHEN b.striker = p.batsman1_id THEN s.runs_scored ELSE 0 END) AS batsman1_runs,
        -- Sum runs scored by batsman2
        SUM(CASE WHEN b.striker = p.batsman2_id THEN s.runs_scored ELSE 0 END) AS batsman2_runs,
        -- Total partnership runs (sum of both)
        SUM(s.runs_scored) AS partnership_runs
    FROM
        partnerships_with_id p
    JOIN "ball_by_ball" b ON
        p.match_id = b.match_id AND
        p.innings_no = b.innings_no AND
        p.over_id = b.over_id AND
        p.ball_id = b.ball_id
    JOIN "batsman_scored" s ON
        b.match_id = s.match_id AND
        b.innings_no = s.innings_no AND
        b.over_id = s.over_id AND
        b.ball_id = s.ball_id
    GROUP BY
        p.match_id,
        p.partnership_id,
        p.batsman1_id,
        p.batsman2_id
),
max_partnerships AS (
    SELECT
        pr.match_id,
        MAX(pr.partnership_runs) AS max_partnership_runs
    FROM
        partnership_runs pr
    GROUP BY
        pr.match_id
)
SELECT
    pr.match_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman1_id
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman2_id
        WHEN pr.batsman1_id > pr.batsman2_id THEN pr.batsman1_id
        ELSE pr.batsman2_id
    END AS player1_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman1_runs
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman2_runs
        ELSE pr.batsman1_runs
    END AS player1_runs,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman2_id
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman1_id
        WHEN pr.batsman1_id <= pr.batsman2_id THEN pr.batsman1_id
        ELSE pr.batsman2_id
    END AS player2_id,
    CASE
        WHEN pr.batsman1_runs > pr.batsman2_runs THEN pr.batsman2_runs
        WHEN pr.batsman1_runs < pr.batsman2_runs THEN pr.batsman1_runs
        ELSE pr.batsman2_runs
    END AS player2_runs,
    pr.partnership_runs
FROM
    partnership_runs pr
JOIN
    max_partnerships mp ON pr.match_id = mp.match_id AND pr.partnership_runs = mp.max_partnership_runs
ORDER BY
    pr.match_id;
```
2025-01-27 00:14:44 - root - INFO - itercount: 2
2025-01-27 00:14:44 - root - INFO - 0
2025-01-27 00:14:44 - root - INFO - Total iteration counts: 2
